00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 12/3/2015 9:38:35 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * 
00000000                            33  * Display buffer thingy
00000000                            34  *
00000000                            35  * 
00000000                            36  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            37  * MOVEA                 3846
00000000                            38  * MULS                  CFC6
00000000                            39  * DIVS                  85C3
00000000                            40  * NEG                   4443
00000000                            41  * LSL                   E76A
00000000                            42  * LSR                   E66A
00000000                            43  * ROL
00000000                            44  * ROR
00000000                            45  * BTST     EXTRA TAB    IMMEDIATE DATA 0702
00000000                            46  ****************************************************************************
00000000                            47  
00000000                            48  
00000000                            49  * sets start and end address
00000000                            50  * temp hard code
00000000                            51  * make UI later for input
00000000  =00007000                 52  addr1       EQU     $7000
00000000                            53  *addr2   EQU     $703C
00000000  =0000726C                 54  addr2       EQU     $726C
00000000  =0000001E                 55  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            56  
00000000                            57  
00001000                            58      ORG    $1000
00001000                            59  START:                  ; first instruction of program
00001000                            60  
00001000                            61          
00001000                            62  
00001000                            63  
00001000                            64          *   this stores some test EA into memory
00001000                            65          *LEA     addr1,A1
00001000                            66          *MOVE.W  #$0440,(A1)+        *917C
00001000                            67          *MOVE.W  #$917C,(A1)+       
00001000                            68          *MOVE.L  #$5555A7FF,(A1)+
00001000                            69          *MOVE.W  #$9078,(A1)+
00001000                            70          *MOVE.W  #$5555,(A1)+
00001000                            71          
00001000                            72  
00001000                            73          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            74          
00001000                            75          *MOVE.L  #$6700F0D8,$7000
00001000                            76          *MOVE.W  #$4E71,$7000         NOP
00001000                            77  
00001000                            78          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            79          
00001000                            80         * MOVE.W  #$31FC,$7000
00001000                            81         * MOVE.W  #$1806,$7002
00001000                            82         * MOVE.W  #$7000,$7004
00001000  31FC 0713 7000            83           MOVE.W  #$0713,$7000
00001006                            84  ******************************************** displays address location***********************************************
00001006                            85  * This displays the address location of the op-code being worked on
00001006                            86  * A6 is used as current address
00001006                            87  
00001006  2C7C 00007000             88          MOVEA.L #addr1,A6           Moves starting addr into A6 register
0000100C  13FC 001E 00002A37        89          MOVE.B  #dispnum,dispcount  Sets display line counter
00001014                            90  
00001014                            91  NEWADDR
00001014  2E0E                      92          MOVE.L  A6,D7               Loads the current address into D7
00001016  BEBC 0000726C             93          CMP.L   #addr2,D7           Compares current address to end address
0000101C  6E00 18EA                 94          BGT     DONE                Branches to done if current address > end address
00001020  45F9 000010B4             95          LEA     DISPADDREND,A2
00001026                            96  
00001026                            97  ************************************************
00001026                            98  * Displays address as HEX
00001026                            99  * INPUT: address stored into D7
00001026                           100  * OUTPUT: prints hex address to output window
00001026                           101  DISPADDRSTART
00001026  1C3C 0002                102          MOVE.B  #2,D6               D6 is a counter, used for looping
0000102A  2407                     103          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
0000102C  4842                     104          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
0000102E  6000 0004                105          BRA     DISPADDR2           Skips the second part to do later
00001032                           106  
00001032                           107  DISPADDR1
00001032  3407                     108          MOVE.W  D7,D2
00001034                           109  DISPADDR2
00001034  3202                     110          MOVE.W  D2,D1               D1 will be the first byte of the word
00001036  3602                     111          MOVE.W  D2,D3               D3 will be the second byte of the word
00001038  3802                     112          MOVE.W  D2,D4               D4 will be the third byte of the word
0000103A  3A02                     113          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000103C                           114  
0000103C  E049                     115          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000103E  E849                     116          LSR.W   #4,D1
00001040  E94B                     117          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001042  E04B                     118          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001044  E84B                     119          LSR.W   #4,D3
00001046  E14C                     120          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001048  E04C                     121          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
0000104A  E84C                     122          LSR.W   #4,D4
0000104C  E14D                     123          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000104E  E94D                     124          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001050  E04D                     125          LSR.W   #8,D5
00001052  E84D                     126          LSR.W   #4,D5
00001054                           127          
00001054                           128          
00001054  47F9 00001068            129          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
0000105A  B23C 0009                130          CMP.B   #9,D1               Compares digit to 9
0000105E  6E00 1824                131          BGT     CONV                Print out letter representation if greater than 9
00001062                           132  
00001062  103C 0003                133          MOVE.B  #3,D0               Displays digit if it is less than A
00001066  4E4F                     134          TRAP    #15
00001068                           135          
00001068                           136  DISPADDR3   
00001068  1203                     137          MOVE.B  D3,D1               Displays digit in 1's place second
0000106A                           138  
0000106A                           139          *   converts digits 10+ into letters
0000106A  47F9 0000107E            140          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001070  B23C 0009                141          CMP.B   #9,D1               Compares digit to 9
00001074  6E00 180E                142          BGT     CONV                Print out letter representation if greater than 9
00001078                           143          
00001078  103C 0003                144          MOVE.B  #3,D0               Displays digit if it is less than A
0000107C  4E4F                     145          TRAP    #15
0000107E                           146  
0000107E                           147  DISPADDR4
0000107E  1204                     148          MOVE.B  D4,D1               Displays digit in 1's place second
00001080                           149  
00001080                           150          *   converts digits 10+ into letters
00001080  47F9 00001094            151          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001086  B23C 0009                152          CMP.B   #9,D1               Compares digit to 9
0000108A  6E00 17F8                153          BGT     CONV                Print out letter representation if greater than 9
0000108E                           154          
0000108E  103C 0003                155          MOVE.B  #3,D0               Displays digit if it is less than A
00001092  4E4F                     156          TRAP    #15
00001094                           157  
00001094                           158  DISPADDR5
00001094  1205                     159          MOVE.B  D5,D1               Displays digit in 1's place second
00001096                           160  
00001096                           161          *   converts digits 10+ into letters
00001096  47F9 000010AA            162          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000109C  B23C 0009                163          CMP.B   #9,D1               Compares digit to 9
000010A0  6E00 17E2                164          BGT     CONV                Print out letter representation if greater than 9
000010A4                           165          
000010A4  103C 0003                166          MOVE.B  #3,D0               Displays digit if it is less than A
000010A8  4E4F                     167          TRAP    #15
000010AA                           168          
000010AA                           169  DISPADDR6
000010AA                           170  * Display counter -- creates new line every 8 bytes
000010AA                           171          * D6 is used as counter
000010AA                           172          
000010AA  5306                     173          SUB.B   #1,D6
000010AC  BC3C 0000                174          CMP.B   #0,D6
000010B0  6680                     175          BNE     DISPADDR1
000010B2                           176  
000010B2  4ED2                     177          JMP     (A2)                Jumps to address stored in A2 when complete
000010B4                           178  
000010B4                           179  DISPADDREND
000010B4  43F9 0000291F            180          LEA     TAB,A1
000010BA  103C 000E                181          MOVE.B  #14,D0
000010BE  4E4F                     182          TRAP    #15
000010C0                           183          
000010C0                           184  *********************************************************************************************************************
000010C0                           185  * Splits the first byte of the op code into nibbles
000010C0                           186  * then sends it to the branch-table to jump to the appropiate section to be decoded
000010C0                           187  
000010C0  4281                     188          CLR.L   D1                  Clears the data registers
000010C2  4282                     189          CLR.L   D2
000010C4  4283                     190          CLR.L   D3
000010C6  4284                     191          CLR.L   D4
000010C8  4285                     192          CLR.L   D5
000010CA  4286                     193          CLR.L   D6
000010CC  3C16                     194          MOVE.W  (A6),D6
000010CE  141E                     195          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000010D0                           196    
000010D0  1E02                     197          MOVE.B  D2,D7
000010D2  E14F                     198          LSL.W   #8,D7
000010D4                           199          
000010D4  1602                     200          MOVE.B  D2,D3               Copies data at D2 to D3
000010D6                           201          *   this gets digit in 10's place
000010D6  E80B                     202          LSR.B   #4,D3               Shifts right to get rid of 1's place
000010D8                           203          *   this gets digit in 1's place
000010D8  E90A                     204          LSL.B   #4,D2               Shifts left to get rid of 10's place
000010DA  E80A                     205          LSR.B   #4,D2               Shifts back right into 1's place
000010DC                           206          
000010DC                           207          *   D3 holds digit in 10's place
000010DC                           208          *   D2 holds digit in 1's place
000010DC                           209  
000010DC                           210          *   Moves second nibble to D5 to be used later
000010DC  1A02                     211          MOVE.B  D2,D5
000010DE  13C3 00002A38            212          MOVE.B  D3,bit0
000010E4                           213          *   Goes to a branch-table to figure out which op code it is
000010E4  6000 0002                214          BRA     CODE
000010E8                           215  
000010E8                           216  ******************************************************************************************************
000010E8                           217  *   This is where the table goes to detirmine which op-code to use
000010E8                           218  CODE    
000010E8  B63C 0000                219          CMP.B   #$0,D3              Goes to immediate operation section
000010EC  6700 0E2A                220          BEQ     IMD
000010F0  B63C 0004                221          CMP.B   #$4,D3              Goes to miscellaneous section
000010F4  6700 0F2A                222          BEQ     MISC
000010F8  B63C 0006                223          CMP.B   #$6,D3
000010FC  6700 0D66                224          BEQ     BCC
00001100  B63C 0009                225          CMP.B   #$9,D3              Goes to sub section
00001104  6700 1056                226          BEQ     SUB
00001108  B63C 000C                227          CMP.B   #$C,D3              Goes to sub but displays as AND
0000110C  6700 104E                228          BEQ     SUB
00001110  B63C 000D                229          CMP.B   #$D,D3              Goes to sub but displays as ADD
00001114  6700 1046                230          BEQ     SUB
00001118  B63C 0001                231          CMP.B   #$1,D3
0000111C  6700 02D4                232          BEQ     MOVB                Goes to movb
00001120  B63C 0003                233          CMP.B   #$3,D3
00001124  6700 010C                234          BEQ     MOVW                Goes to movb
00001128  B63C 0002                235          CMP.B   #$2,D3
0000112C  6700 01E4                236          BEQ     MOVL                Goes to movb
00001130  B63C 0008                237          CMP.B   #$8,D3
00001134  6700 08EA                238          BEQ     DIVSW               Goes to divsw
00001138  B63C 000E                239          CMP.B   #$E,D3
0000113C  6700 0AC6                240          BEQ     LSLR                Goes to divsw
00001140                           241  
00001140  6000 1684                242          BRA     INVOPCODE
00001144                           243          
00001144                           244  JSR
00001144  43F9 0000294C            245          LEA MJSR,A1
0000114A  103C 000E                246          MOVE.B  #14,D0
0000114E  4E4F                     247          TRAP    #15 
00001150                           248          
00001150  1406                     249          MOVE.B  D6,D2
00001152  EB0A                     250          LSL.B   #5,D2
00001154  EA0A                     251          LSR.B   #5,D2
00001156  13C2 00002A3C            252          MOVE.B  D2,bit4
0000115C                           253          
0000115C  1406                     254          MOVE.B  D6,D2
0000115E  E50A                     255          LSL.B   #2,D2
00001160  EA0A                     256          LSR.B   #5,D2
00001162  13C2 00002A3B            257          MOVE.B  D2,bit3
00001168                           258  
00001168  183C 0003                259          MOVE.B  #$3,D4
0000116C                           260  
0000116C  0C39 0002 00002A3B       261          CMP.B   #$2,bit3
00001174  6700 0484                262          BEQ     MOVEIAN1
00001178  0C39 0007 00002A3B       263          CMP.B   #$7,bit3
00001180  6700 02F4                264          BEQ     ADDIMD
00001184                           265          
00001184                           266  BTST 
00001184  43F9 00002950            267          LEA MBTST,A1
0000118A  103C 000E                268          MOVE.B  #14,D0
0000118E  4E4F                     269          TRAP    #15 
00001190                           270          
00001190  1406                     271          MOVE.B  D6,D2
00001192  EB0A                     272          LSL.B   #5,D2
00001194  EA0A                     273          LSR.B   #5,D2
00001196  13C2 00002A3C            274          MOVE.B  D2,bit4
0000119C                           275          
0000119C  1406                     276          MOVE.B  D6,D2
0000119E  E50A                     277          LSL.B   #2,D2
000011A0  EA0A                     278          LSR.B   #5,D2
000011A2  13C2 00002A3B            279          MOVE.B  D2,bit3
000011A8                           280          
000011A8  3406                     281          MOVE.W  D6,D2
000011AA  E94A                     282          LSL.W   #4,D2
000011AC  E04A                     283          LSR.W   #8,D2
000011AE  EA4A                     284          LSR.W   #5,D2
000011B0  13C2 00002A39            285          MOVE.B  D2,bit1
000011B6                           286          
000011B6  43F9 0000291F            287          LEA TAB,A1
000011BC  103C 000E                288          MOVE.B  #14,D0
000011C0  4E4F                     289          TRAP    #15
000011C2                           290  
000011C2  43F9 00002935            291          LEA DISPD,A1
000011C8  103C 000E                292          MOVE.B  #14,D0
000011CC  4E4F                     293          TRAP    #15
000011CE                           294          
000011CE  1A3C 0004                295          MOVE.B   #$4,D5
000011D2                           296          
000011D2  1239 00002A39            297          MOVE.B  bit1,D1
000011D8  103C 0003                298          MOVE.B  #3,D0
000011DC  4E4F                     299          TRAP    #15
000011DE                           300          
000011DE  43F9 00002923            301          LEA COMMA,A1
000011E4  103C 000E                302          MOVE.B  #14,D0
000011E8  4E4F                     303          TRAP    #15
000011EA                           304          
000011EA  0C39 0000 00002A3B       305          CMP.B   #$0,bit3           
000011F2  6700 05DA                306          BEQ     MOVBDN1
000011F6  0C39 0001 00002A3B       307          CMP.B   #$1,bit3
000011FE  6700 0386                308          BEQ     MOVEAN1
00001202  0C39 0002 00002A3B       309          CMP.B   #$2,bit3
0000120A  6700 03EE                310          BEQ     MOVEIAN1
0000120E  0C39 0003 00002A3B       311          CMP.B   #$3,bit3
00001216  6700 0476                312          BEQ     MOVEIANI1
0000121A  0C39 0004 00002A3B       313          CMP.B   #$4,bit3
00001222  6700 050A                314          BEQ     MOVEIAND1
00001226  0C39 0007 00002A3B       315          CMP.B   #$7,bit3
0000122E  6700 0246                316          BEQ     ADDIMD
00001232                           317  MOVW
00001232  E20A                     318          LSR.B   #1,D2
00001234  13C2 00002A39            319          MOVE.B  D2,bit1
0000123A                           320          
0000123A  1416                     321          MOVE.B  (A6),D2
0000123C  EB0A                     322          LSL.B   #5,D2
0000123E  EA0A                     323          LSR.B   #5,D2
00001240  13C2 00002A3C            324          MOVE.B  D2,bit4
00001246                           325          
00001246  141E                     326          MOVE.B  (A6)+,D2
00001248  E50A                     327          LSL.B   #2,D2
0000124A  EA0A                     328          LSR.B   #5,D2
0000124C  13C2 00002A3B            329          MOVE.B  D2,bit3
00001252                           330          
00001252  EF4E                     331          LSL.W   #7,D6
00001254  E04E                     332          LSR.W   #8,D6 
00001256  EA4E                     333          LSR.W   #5,D6 
00001258  13C6 00002A3A            334          MOVE.B  D6,bit2
0000125E                           335  
0000125E  0C39 0001 00002A3A       336          CMP.B   #$1,bit2
00001266  6700 0056                337          BEQ     MOVEAW
0000126A                           338  
0000126A  43F9 0000297F            339          LEA MMOVEW,A1
00001270  103C 000E                340          MOVE.B  #14,D0
00001274  4E4F                     341          TRAP    #15 
00001276                           342  
00001276  0C39 0000 00002A3B       343          CMP.B   #$0,bit3           
0000127E  6700 054E                344          BEQ     MOVBDN1
00001282  0C39 0001 00002A3B       345          CMP.B   #$1,bit3
0000128A  6700 02FA                346          BEQ     MOVEAN1
0000128E  0C39 0002 00002A3B       347          CMP.B   #$2,bit3
00001296  6700 0362                348          BEQ     MOVEIAN1
0000129A  0C39 0003 00002A3B       349          CMP.B   #$3,bit3
000012A2  6700 03EA                350          BEQ     MOVEIANI1
000012A6  0C39 0004 00002A3B       351          CMP.B   #$4,bit3
000012AE  6700 047E                352          BEQ     MOVEIAND1
000012B2  0C39 0007 00002A3B       353          CMP.B   #$7,bit3
000012BA  6700 01BA                354          BEQ     ADDIMD
000012BE                           355  
000012BE                           356  MOVEAW
000012BE  43F9 0000298D            357          LEA MMOVEAW,A1
000012C4  103C 000E                358          MOVE.B  #14,D0
000012C8  4E4F                     359          TRAP    #15 
000012CA                           360          
000012CA  0C39 0000 00002A3B       361          CMP.B   #$0,bit3           
000012D2  6700 04FA                362          BEQ     MOVBDN1
000012D6  0C39 0001 00002A3B       363          CMP.B   #$1,bit3
000012DE  6700 02A6                364          BEQ     MOVEAN1
000012E2  0C39 0002 00002A3B       365          CMP.B   #$2,bit3
000012EA  6700 030E                366          BEQ     MOVEIAN1
000012EE  0C39 0003 00002A3B       367          CMP.B   #$3,bit3
000012F6  6700 0396                368          BEQ     MOVEIANI1
000012FA  0C39 0004 00002A3B       369          CMP.B   #$4,bit3
00001302  6700 042A                370          BEQ     MOVEIAND1
00001306  0C39 0007 00002A3B       371          CMP.B   #$7,bit3
0000130E  6700 0166                372          BEQ     ADDIMD
00001312                           373  
00001312                           374  MOVL
00001312  E20A                     375          LSR.B   #1,D2
00001314  13C2 00002A39            376          MOVE.B  D2,bit1
0000131A                           377          
0000131A  1416                     378          MOVE.B  (A6),D2
0000131C  EB0A                     379          LSL.B   #5,D2
0000131E  EA0A                     380          LSR.B   #5,D2
00001320  13C2 00002A3C            381          MOVE.B  D2,bit4
00001326                           382          
00001326  141E                     383          MOVE.B  (A6)+,D2
00001328  E50A                     384          LSL.B   #2,D2
0000132A  EA0A                     385          LSR.B   #5,D2
0000132C  13C2 00002A3B            386          MOVE.B  D2,bit3
00001332                           387          
00001332  EF4E                     388          LSL.W   #7,D6
00001334  E04E                     389          LSR.W   #8,D6 
00001336  EA4E                     390          LSR.W   #5,D6 
00001338  13C6 00002A3A            391          MOVE.B  D6,bit2
0000133E                           392          
0000133E  0C39 0001 00002A3A       393          CMP.B   #$1,bit2
00001346  6700 0056                394          BEQ     MOVEAL
0000134A                           395  
0000134A  43F9 00002986            396          LEA MMOVEL,A1
00001350  103C 000E                397          MOVE.B  #14,D0
00001354  4E4F                     398          TRAP    #15 
00001356                           399          
00001356  0C39 0000 00002A3B       400          CMP.B   #$0,bit3           
0000135E  6700 046E                401          BEQ     MOVBDN1
00001362  0C39 0001 00002A3B       402          CMP.B   #$1,bit3
0000136A  6700 021A                403          BEQ     MOVEAN1
0000136E  0C39 0002 00002A3B       404          CMP.B   #$2,bit3
00001376  6700 0282                405          BEQ     MOVEIAN1
0000137A  0C39 0003 00002A3B       406          CMP.B   #$3,bit3
00001382  6700 030A                407          BEQ     MOVEIANI1
00001386  0C39 0004 00002A3B       408          CMP.B   #$4,bit3
0000138E  6700 039E                409          BEQ     MOVEIAND1
00001392  0C39 0007 00002A3B       410          CMP.B   #$7,bit3
0000139A  6700 00DA                411          BEQ     ADDIMD
0000139E                           412  
0000139E                           413  MOVEAL
0000139E  43F9 00002995            414          LEA MMOVEAL,A1
000013A4  103C 000E                415          MOVE.B  #14,D0
000013A8  4E4F                     416          TRAP    #15 
000013AA                           417          
000013AA  0C39 0000 00002A3B       418          CMP.B   #$0,bit3           
000013B2  6700 041A                419          BEQ     MOVBDN1
000013B6  0C39 0001 00002A3B       420          CMP.B   #$1,bit3
000013BE  6700 01C6                421          BEQ     MOVEAN1
000013C2  0C39 0002 00002A3B       422          CMP.B   #$2,bit3
000013CA  6700 022E                423          BEQ     MOVEIAN1
000013CE  0C39 0003 00002A3B       424          CMP.B   #$3,bit3
000013D6  6700 02B6                425          BEQ     MOVEIANI1
000013DA  0C39 0004 00002A3B       426          CMP.B   #$4,bit3
000013E2  6700 034A                427          BEQ     MOVEIAND1
000013E6  0C39 0007 00002A3B       428          CMP.B   #$7,bit3
000013EE  6700 0086                429          BEQ     ADDIMD        
000013F2                           430  
000013F2                           431  MOVB
000013F2  43F9 00002978            432          LEA MMOVEB,A1
000013F8  103C 000E                433          MOVE.B  #14,D0
000013FC  4E4F                     434          TRAP    #15 
000013FE                           435          
000013FE  E20A                     436          LSR.B   #1,D2
00001400  13C2 00002A39            437          MOVE.B  D2,bit1
00001406                           438          
00001406  1416                     439          MOVE.B  (A6),D2
00001408  EB0A                     440          LSL.B   #5,D2
0000140A  EA0A                     441          LSR.B   #5,D2
0000140C  13C2 00002A3C            442          MOVE.B  D2,bit4
00001412                           443          
00001412  141E                     444          MOVE.B  (A6)+,D2
00001414  E50A                     445          LSL.B   #2,D2
00001416  EA0A                     446          LSR.B   #5,D2
00001418  13C2 00002A3B            447          MOVE.B  D2,bit3
0000141E                           448          
0000141E  EF4E                     449          LSL.W   #7,D6
00001420  E04E                     450          LSR.W   #8,D6 
00001422  EA4E                     451          LSR.W   #5,D6 
00001424  13C6 00002A3A            452          MOVE.B  D6,bit2
0000142A                           453          
0000142A                           454          *MOVE.B  #$1,D4
0000142A                           455          
0000142A  0C39 0000 00002A3B       456          CMP.B   #$0,bit3           
00001432  6700 039A                457          BEQ     MOVBDN1
00001436  0C39 0001 00002A3B       458          CMP.B   #$1,bit3
0000143E  6700 0146                459          BEQ     MOVEAN1
00001442  0C39 0002 00002A3B       460          CMP.B   #$2,bit3
0000144A  6700 01AE                461          BEQ     MOVEIAN1
0000144E  0C39 0003 00002A3B       462          CMP.B   #$3,bit3
00001456  6700 0236                463          BEQ     MOVEIANI1
0000145A  0C39 0004 00002A3B       464          CMP.B   #$4,bit3
00001462  6700 02CA                465          BEQ     MOVEIAND1
00001466  0C39 0007 00002A3B       466          CMP.B   #$7,bit3
0000146E  6700 0006                467          BEQ     ADDIMD
00001472                           468          
00001472  6000 1354                469          BRA     INVOP
00001476                           470  
00001476                           471  ADDIMD
00001476  43F9 0000291F            472      LEA     TAB,A1
0000147C  103C 000E                473      MOVE.B  #14,D0
00001480  4E4F                     474      TRAP    #15
00001482                           475      
00001482  0C39 0000 00002A3C       476      CMP.B   #$0,bit4
0000148A  6700 001A                477      BEQ     ADDIMD0
0000148E  0C39 0001 00002A3C       478      CMP.B   #$1,bit4
00001496  6700 001C                479      BEQ     ADDIMD1
0000149A  0C39 0004 00002A3C       480      CMP.B   #$4,bit4
000014A2  6700 001E                481      BEQ     ADDIMD4
000014A6                           482  
000014A6                           483  ADDIMD0
000014A6  183C 0001                484      MOVE.B  #$1,D4
000014AA  45F9 000014D8            485      LEA     HANDLEDES,A2
000014B0  6000 12AE                486      BRA     DISPEA
000014B4                           487  ADDIMD1 
000014B4  183C 0002                488      MOVE.B  #$2,D4
000014B8  45F9 000014D8            489      LEA     HANDLEDES,A2
000014BE  6000 12A0                490      BRA     DISPEA
000014C2                           491  ADDIMD4
000014C2  43F9 0000292D            492      LEA     HASH,A1
000014C8  103C 000E                493      MOVE.B  #14,D0
000014CC  4E4F                     494      TRAP    #15
000014CE                           495      
000014CE  45F9 000014D8            496      LEA     HANDLEDES,A2
000014D4  6000 128A                497      BRA     DISPEA 
000014D8                           498      
000014D8                           499  HANDLEDES
000014D8  43F9 00002923            500      LEA     COMMA,A1
000014DE  103C 000E                501      MOVE.B  #14,D0
000014E2  4E4F                     502      TRAP    #15
000014E4                           503      
000014E4  0C39 0000 00002A3A       504      CMP.B   #$0,bit2
000014EC  6700 0480                505      BEQ     MOVBDN2
000014F0  0C39 0001 00002A3A       506      CMP.B   #$1,bit2
000014F8  6700 03A4                507      BEQ     MOVEAN2
000014FC  0C39 0002 00002A3A       508      CMP.B   #$2,bit2 
00001504  6700 03B4                509      BEQ     MOVIAN2
00001508  0C39 0003 00002A3A       510      CMP.B   #$3,bit2 
00001510  6700 03DC                511      BEQ     MOVIANI2
00001514  0C39 0004 00002A3A       512      CMP.B   #$4,bit2 
0000151C  6700 0410                513      BEQ     MOVIAND2
00001520  BA3C 0005                514      CMP.B   #$5,D5
00001524  6700 0448                515      BEQ     MOVBDN2
00001528  BA3C 0007                516      CMP.B   #$7,D5
0000152C  6700 0002                517      BEQ     ADDIMDDES
00001530                           518  
00001530                           519  ADDIMDDES
00001530  0C39 0000 00002A3C       520      CMP.B   #$0,bit4
00001538  6700 001A                521      BEQ     ADDIMDDES0
0000153C  0C39 0001 00002A3C       522      CMP.B   #$1,bit4
00001544  6700 001C                523      BEQ     ADDIMDDES1
00001548  0C39 0004 00002A3C       524      CMP.B   #$4,bit4
00001550  6700 001E                525      BEQ     ADDIMDDES4
00001554                           526      
00001554                           527  ADDIMDDES0
00001554  183C 0001                528      MOVE.B  #$1,D4
00001558  45F9 0000283A            529      LEA     ENDNEWLINE,A2
0000155E  6000 1200                530      BRA     DISPEA
00001562                           531      
00001562                           532  ADDIMDDES1
00001562  183C 0002                533      MOVE.B  #$2,D4
00001566  45F9 0000283A            534      LEA     ENDNEWLINE,A2
0000156C  6000 11F2                535      BRA     DISPEA
00001570                           536      
00001570                           537  ADDIMDDES4    
00001570  43F9 0000292D            538      LEA     HASH,A1
00001576  103C 000E                539      MOVE.B  #14,D0
0000157A  4E4F                     540      TRAP    #15
0000157C                           541      
0000157C  45F9 0000283A            542      LEA     ENDNEWLINE,A2
00001582  6000 11DC                543      BRA     DISPEA 
00001586                           544          
00001586                           545  MOVEAN1
00001586  43F9 0000291F            546      LEA TAB,A1
0000158C  103C 000E                547      MOVE.B  #14,D0
00001590  4E4F                     548      TRAP    #15
00001592                           549  
00001592  43F9 0000292F            550      LEA DISPA,A1
00001598  103C 000E                551      MOVE.B  #14,D0
0000159C  4E4F                     552      TRAP    #15
0000159E                           553      
0000159E  1239 00002A3C            554      MOVE.B  bit4,D1
000015A4  103C 0003                555      MOVE.B  #3,D0
000015A8  4E4F                     556      TRAP    #15
000015AA                           557      
000015AA  43F9 00002923            558      LEA COMMA,A1
000015B0  103C 000E                559      MOVE.B  #14,D0
000015B4  4E4F                     560      TRAP    #15
000015B6                           561      
000015B6  0C39 0000 00002A3A       562      CMP.B   #$0,bit2
000015BE  6700 03AE                563      BEQ     MOVBDN2
000015C2  0C39 0001 00002A3A       564      CMP.B   #$1,bit2
000015CA  6700 02D2                565      BEQ     MOVEAN2
000015CE  0C39 0002 00002A3A       566      CMP.B   #$2,bit2 
000015D6  6700 02E2                567      BEQ     MOVIAN2
000015DA  0C39 0003 00002A3A       568      CMP.B   #$3,bit2 
000015E2  6700 030A                569      BEQ     MOVIANI2
000015E6  0C39 0004 00002A3A       570      CMP.B   #$4,bit2 
000015EE  6700 033E                571      BEQ     MOVIAND2
000015F2  BA3C 0005                572      CMP.B   #$5,D5
000015F6  6700 0376                573      BEQ     MOVBDN2
000015FA                           574      
000015FA                           575  MOVEIAN1
000015FA  43F9 0000291F            576      LEA TAB,A1
00001600  103C 000E                577      MOVE.B  #14,D0
00001604  4E4F                     578      TRAP    #15
00001606                           579      
00001606  43F9 00002925            580      LEA OPENBRA,A1
0000160C  103C 000E                581      MOVE.B  #14,D0
00001610  4E4F                     582      TRAP    #15
00001612                           583  
00001612  43F9 0000292F            584      LEA DISPA,A1
00001618  103C 000E                585      MOVE.B  #14,D0
0000161C  4E4F                     586      TRAP    #15
0000161E                           587      
0000161E  1239 00002A3C            588      MOVE.B  bit4,D1
00001624  103C 0003                589      MOVE.B  #3,D0
00001628  4E4F                     590      TRAP    #15
0000162A                           591      
0000162A  43F9 00002927            592      LEA CLOSEBRA,A1
00001630  103C 000E                593      MOVE.B  #14,D0
00001634  4E4F                     594      TRAP    #15
00001636                           595      
00001636  B83C 0003                596      CMP.B   #$3,D4
0000163A  6700 11FE                597      BEQ     ENDNEWLINE
0000163E                           598      
0000163E  43F9 00002923            599      LEA COMMA,A1
00001644  103C 000E                600      MOVE.B  #14,D0
00001648  4E4F                     601      TRAP    #15
0000164A                           602      
0000164A  0C39 0000 00002A3A       603      CMP.B   #$0,bit2
00001652  6700 031A                604      BEQ     MOVBDN2
00001656  0C39 0001 00002A3A       605      CMP.B   #$1,bit2
0000165E  6700 023E                606      BEQ     MOVEAN2
00001662  0C39 0002 00002A3A       607      CMP.B   #$2,bit2 
0000166A  6700 024E                608      BEQ     MOVIAN2
0000166E  0C39 0003 00002A3A       609      CMP.B   #$3,bit2 
00001676  6700 0276                610      BEQ     MOVIANI2
0000167A  0C39 0004 00002A3A       611      CMP.B   #$4,bit2 
00001682  6700 02AA                612      BEQ     MOVIAND2
00001686  BA3C 0005                613      CMP.B   #$5,D5
0000168A  6700 02E2                614      BEQ     MOVBDN2
0000168E                           615  
0000168E                           616  MOVEIANI1
0000168E  43F9 0000291F            617      LEA TAB,A1
00001694  103C 000E                618      MOVE.B  #14,D0
00001698  4E4F                     619      TRAP    #15
0000169A                           620      
0000169A  43F9 00002925            621      LEA OPENBRA,A1
000016A0  103C 000E                622      MOVE.B  #14,D0
000016A4  4E4F                     623      TRAP    #15
000016A6                           624  
000016A6  43F9 0000292F            625      LEA DISPA,A1
000016AC  103C 000E                626      MOVE.B  #14,D0
000016B0  4E4F                     627      TRAP    #15
000016B2                           628      
000016B2  1239 00002A3C            629      MOVE.B  bit4,D1
000016B8  103C 0003                630      MOVE.B  #3,D0
000016BC  4E4F                     631      TRAP    #15
000016BE                           632      
000016BE  43F9 00002927            633      LEA CLOSEBRA,A1
000016C4  103C 000E                634      MOVE.B  #14,D0
000016C8  4E4F                     635      TRAP    #15
000016CA                           636      
000016CA  43F9 00002929            637      LEA POS,A1
000016D0  103C 000E                638      MOVE.B  #14,D0
000016D4  4E4F                     639      TRAP    #15
000016D6                           640      
000016D6  BA3C 0003                641      CMP.B   #$3,D5
000016DA  6700 115E                642      BEQ     ENDNEWLINE
000016DE                           643          
000016DE  43F9 00002923            644      LEA COMMA,A1
000016E4  103C 000E                645      MOVE.B  #14,D0
000016E8  4E4F                     646      TRAP    #15
000016EA                           647      
000016EA  0C39 0000 00002A3A       648      CMP.B   #$0,bit2
000016F2  6700 027A                649      BEQ     MOVBDN2
000016F6  0C39 0001 00002A3A       650      CMP.B   #$1,bit2
000016FE  6700 019E                651      BEQ     MOVEAN2
00001702  0C39 0002 00002A3A       652      CMP.B   #$2,bit2 
0000170A  6700 01AE                653      BEQ     MOVIAN2
0000170E  0C39 0003 00002A3A       654      CMP.B   #$3,bit2 
00001716  6700 01D6                655      BEQ     MOVIANI2
0000171A  0C39 0004 00002A3A       656      CMP.B   #$4,bit2 
00001722  6700 020A                657      BEQ     MOVIAND2
00001726  BA3C 0005                658      CMP.B   #$5,D5
0000172A  6700 0242                659      BEQ     MOVBDN2
0000172E                           660  
0000172E                           661  MOVEIAND1
0000172E  43F9 0000291F            662      LEA TAB,A1
00001734  103C 000E                663      MOVE.B  #14,D0
00001738  4E4F                     664      TRAP    #15
0000173A                           665      
0000173A  43F9 0000292B            666      LEA NEG,A1
00001740  103C 000E                667      MOVE.B  #14,D0
00001744  4E4F                     668      TRAP    #15
00001746                           669      
00001746  43F9 00002925            670      LEA OPENBRA,A1
0000174C  103C 000E                671      MOVE.B  #14,D0
00001750  4E4F                     672      TRAP    #15
00001752                           673  
00001752  43F9 0000292F            674      LEA DISPA,A1
00001758  103C 000E                675      MOVE.B  #14,D0
0000175C  4E4F                     676      TRAP    #15
0000175E                           677      
0000175E  1239 00002A3C            678      MOVE.B  bit4,D1
00001764  103C 0003                679      MOVE.B  #3,D0
00001768  4E4F                     680      TRAP    #15
0000176A                           681      
0000176A  43F9 00002927            682      LEA CLOSEBRA,A1
00001770  103C 000E                683      MOVE.B  #14,D0
00001774  4E4F                     684      TRAP    #15
00001776                           685      
00001776  BA3C 0004                686      CMP.B   #$4,D5
0000177A  6700 10BE                687      BEQ     ENDNEWLINE
0000177E                           688      
0000177E  43F9 00002923            689      LEA COMMA,A1
00001784  103C 000E                690      MOVE.B  #14,D0
00001788  4E4F                     691      TRAP    #15
0000178A                           692      
0000178A  0C39 0000 00002A3A       693      CMP.B   #$0,bit2
00001792  6700 01DA                694      BEQ     MOVBDN2
00001796  0C39 0001 00002A3A       695      CMP.B   #$1,bit2
0000179E  6700 00FE                696      BEQ     MOVEAN2
000017A2  0C39 0002 00002A3A       697      CMP.B   #$2,bit2 
000017AA  6700 010E                698      BEQ     MOVIAN2
000017AE  0C39 0003 00002A3A       699      CMP.B   #$3,bit2 
000017B6  6700 0136                700      BEQ     MOVIANI2
000017BA  0C39 0004 00002A3A       701      CMP.B   #$4,bit2 
000017C2  6700 016A                702      BEQ     MOVIAND2
000017C6  BA3C 0005                703      CMP.B   #$5,D5
000017CA  6700 01A2                704      BEQ     MOVBDN2
000017CE                           705  
000017CE                           706  MOVBDN1
000017CE  43F9 0000291F            707      LEA TAB,A1
000017D4  103C 000E                708      MOVE.B  #14,D0
000017D8  4E4F                     709      TRAP    #15
000017DA                           710  
000017DA  BA3C 0006                711      CMP.B   #$6,D5             * Data Reg for LSLR
000017DE  6700 007A                712      BEQ     LSLRSRCD
000017E2                           713  
000017E2  43F9 00002935            714      LEA DISPD,A1
000017E8  103C 000E                715      MOVE.B  #14,D0
000017EC  4E4F                     716      TRAP    #15
000017EE                           717      
000017EE  1239 00002A3C            718      MOVE.B  bit4,D1
000017F4  103C 0003                719      MOVE.B  #3,D0
000017F8  4E4F                     720      TRAP    #15
000017FA                           721  
000017FA  BA3C 0004                722      CMP.B   #$4,D5
000017FE  6700 0192                723      BEQ     ENDNLINC
00001802                           724  
00001802  43F9 00002923            725      LEA COMMA,A1
00001808  103C 000E                726      MOVE.B  #14,D0
0000180C  4E4F                     727      TRAP    #15
0000180E                           728  
0000180E  BA3C 0006                729      CMP.B   #$6,D5             * Data Reg for LSLR
00001812  6700 006E                730      BEQ     LSLRDESD
00001816  0C39 0000 00002A3A       731      CMP.B   #$0,bit2
0000181E  6700 014E                732      BEQ     MOVBDN2
00001822  0C39 0001 00002A3A       733      CMP.B   #$1,bit2
0000182A  6700 0072                734      BEQ     MOVEAN2
0000182E  0C39 0002 00002A3A       735      CMP.B   #$2,bit2 
00001836  6700 0082                736      BEQ     MOVIAN2
0000183A  0C39 0003 00002A3A       737      CMP.B   #$3,bit2 
00001842  6700 00AA                738      BEQ     MOVIANI2
00001846  0C39 0004 00002A3A       739      CMP.B   #$4,bit2 
0000184E  6700 00DE                740      BEQ     MOVIAND2
00001852  BA3C 0005                741      CMP.B   #$5,D5
00001856  6700 0116                742      BEQ     MOVBDN2
0000185A                           743      
0000185A                           744  LSLRSRCD
0000185A  43F9 00002935            745      LEA DISPD,A1
00001860  103C 000E                746      MOVE.B  #14,D0
00001864  4E4F                     747      TRAP    #15
00001866                           748          
00001866  1239 00002A38            749      MOVE.B  bit0,D1
0000186C  103C 0003                750      MOVE.B  #3,D0
00001870  4E4F                     751      TRAP    #15    
00001872                           752  
00001872  43F9 00002923            753      LEA COMMA,A1
00001878  103C 000E                754      MOVE.B  #14,D0
0000187C  4E4F                     755      TRAP    #15  
0000187E                           756      
0000187E  6000 0002                757      BRA     LSLRDESD
00001882                           758      
00001882                           759  LSLRDESD
00001882  43F9 00002935            760      LEA DISPD,A1
00001888  103C 000E                761      MOVE.B  #14,D0
0000188C  4E4F                     762      TRAP    #15
0000188E                           763          
0000188E  1239 00002A3C            764      MOVE.B  bit4,D1
00001894  103C 0003                765      MOVE.B  #3,D0
00001898  4E4F                     766      TRAP    #15      
0000189A                           767      
0000189A                           768      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000189A  6000 0F9E                769      BRA     ENDNEWLINE       
0000189E                           770  
0000189E                           771  MOVEAN2
0000189E  43F9 0000292F            772      LEA DISPA,A1
000018A4  103C 000E                773      MOVE.B  #14,D0
000018A8  4E4F                     774      TRAP    #15
000018AA                           775      
000018AA  1239 00002A39            776      MOVE.B  bit1,D1
000018B0  103C 0003                777      MOVE.B  #3,D0
000018B4  4E4F                     778      TRAP    #15
000018B6                           779  
000018B6                           780      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000018B6  6000 0F82                781      BRA     ENDNEWLINE    
000018BA                           782  
000018BA                           783  MOVIAN2
000018BA  43F9 00002925            784      LEA OPENBRA,A1
000018C0  103C 000E                785      MOVE.B  #14,D0
000018C4  4E4F                     786      TRAP    #15
000018C6                           787  
000018C6  43F9 0000292F            788      LEA DISPA,A1
000018CC  103C 000E                789      MOVE.B  #14,D0
000018D0  4E4F                     790      TRAP    #15
000018D2                           791      
000018D2  1239 00002A39            792      MOVE.B  bit1,D1
000018D8  103C 0003                793      MOVE.B  #3,D0
000018DC  4E4F                     794      TRAP    #15
000018DE                           795      
000018DE  43F9 00002927            796      LEA CLOSEBRA,A1
000018E4  103C 000E                797      MOVE.B  #14,D0
000018E8  4E4F                     798      TRAP    #15
000018EA                           799      
000018EA                           800      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000018EA  6000 0F4E                801      BRA     ENDNEWLINE
000018EE                           802  
000018EE                           803  MOVIANI2
000018EE  43F9 00002925            804      LEA OPENBRA,A1
000018F4  103C 000E                805      MOVE.B  #14,D0
000018F8  4E4F                     806      TRAP    #15
000018FA                           807  
000018FA  43F9 0000292F            808      LEA DISPA,A1
00001900  103C 000E                809      MOVE.B  #14,D0
00001904  4E4F                     810      TRAP    #15
00001906                           811      
00001906  1239 00002A39            812      MOVE.B  bit1,D1
0000190C  103C 0003                813      MOVE.B  #3,D0
00001910  4E4F                     814      TRAP    #15
00001912                           815      
00001912  43F9 00002927            816      LEA CLOSEBRA,A1
00001918  103C 000E                817      MOVE.B  #14,D0
0000191C  4E4F                     818      TRAP    #15
0000191E                           819      
0000191E  43F9 00002929            820      LEA POS,A1
00001924  103C 000E                821      MOVE.B  #14,D0
00001928  4E4F                     822      TRAP    #15
0000192A                           823      
0000192A                           824      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000192A  6000 0F0E                825      BRA     ENDNEWLINE
0000192E                           826  
0000192E                           827  MOVIAND2
0000192E  43F9 0000292B            828      LEA NEG,A1
00001934  103C 000E                829      MOVE.B  #14,D0
00001938  4E4F                     830      TRAP    #15
0000193A                           831      
0000193A  43F9 00002925            832      LEA OPENBRA,A1
00001940  103C 000E                833      MOVE.B  #14,D0
00001944  4E4F                     834      TRAP    #15
00001946                           835  
00001946  43F9 0000292F            836      LEA DISPA,A1
0000194C  103C 000E                837      MOVE.B  #14,D0
00001950  4E4F                     838      TRAP    #15
00001952                           839      
00001952  1239 00002A39            840      MOVE.B  bit1,D1
00001958  103C 0003                841      MOVE.B  #3,D0
0000195C  4E4F                     842      TRAP    #15
0000195E                           843      
0000195E  43F9 00002927            844      LEA CLOSEBRA,A1
00001964  103C 000E                845      MOVE.B  #14,D0
00001968  4E4F                     846      TRAP    #15
0000196A                           847  
0000196A                           848      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000196A  6000 0ECE                849      BRA     ENDNEWLINE
0000196E                           850  
0000196E                           851  MOVBDN2
0000196E  43F9 00002935            852      LEA DISPD,A1
00001974  103C 000E                853      MOVE.B  #14,D0
00001978  4E4F                     854      TRAP    #15
0000197A                           855          
0000197A  1239 00002A39            856      MOVE.B  bit1,D1
00001980  103C 0003                857      MOVE.B  #3,D0
00001984  4E4F                     858      TRAP    #15   
00001986                           859      
00001986  B83C 0000                860      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
0000198A  6700 0EAE                861      BEQ     ENDNEWLINE
0000198E                           862      
0000198E                           863      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000198E  6000 0EAA                864      BRA     ENDNEWLINE
00001992                           865      
00001992                           866      
00001992                           867  ENDNLINC
00001992                           868      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001992  6000 0EA6                869      BRA     ENDNEWLINE    
00001996                           870      
00001996                           871  MULSW
00001996  1407                     872          MOVE.B  D7,D2
00001998  EB0A                     873          LSL.B   #5,D2
0000199A  EA0A                     874          LSR.B   #5,D2
0000199C  13C2 00002A3C            875          MOVE.B  D2,bit4
000019A2                           876          
000019A2  1407                     877          MOVE.B  D7,D2
000019A4  E50A                     878          LSL.B   #2,D2
000019A6  EA0A                     879          LSR.B   #5,D2
000019A8  13C2 00002A3B            880          MOVE.B  D2,bit3
000019AE                           881          
000019AE  3C07                     882          MOVE.W  D7,D6
000019B0  EF4E                     883          LSL.W   #7,D6
000019B2  E04E                     884          LSR.W   #8,D6 
000019B4  EA4E                     885          LSR.W   #5,D6 
000019B6  13C6 00002A3A            886          MOVE.B  D6,bit2
000019BC                           887          
000019BC  E94F                     888          LSL.W   #4,D7
000019BE  E04F                     889          LSR.W   #8,D7 
000019C0  EA4F                     890          LSR.W   #5,D7 
000019C2  13C7 00002A39            891          MOVE.B  D7,bit1
000019C8                           892          
000019C8  43F9 00002971            893          LEA MMULSW,A1
000019CE  323C 000E                894          MOVE    #14,D1
000019D2  4E4F                     895          TRAP    #15
000019D4                           896          
000019D4  1A3C 0005                897          MOVE.B  #$5,D5 
000019D8                           898          
000019D8  0C39 0000 00002A3B       899          CMP.B   #$0,bit3           
000019E0  6700 FDEC                900          BEQ     MOVBDN1
000019E4  0C39 0001 00002A3B       901          CMP.B   #$1,bit3
000019EC  6700 FB98                902          BEQ     MOVEAN1
000019F0  0C39 0002 00002A3B       903          CMP.B   #$2,bit3
000019F8  6700 FC00                904          BEQ     MOVEIAN1
000019FC  0C39 0003 00002A3B       905          CMP.B   #$3,bit3
00001A04  6700 FC88                906          BEQ     MOVEIANI1
00001A08  0C39 0004 00002A3B       907          CMP.B   #$4,bit3
00001A10  6700 FD1C                908          BEQ     MOVEIAND1
00001A14  0C39 0007 00002A3B       909          CMP.B   #$7,bit3
00001A1C  6700 FA58                910          BEQ     ADDIMD
00001A20                           911  
00001A20                           912           
00001A20                           913  DIVSW               
00001A20                           914          *MOVE.B  D6,D2
00001A20  141E                     915          MOVE.B  (A6)+,D2
00001A22  EB0A                     916          LSL.B   #5,D2
00001A24  EA0A                     917          LSR.B   #5,D2
00001A26  13C2 00002A3C            918          MOVE.B  D2,bit4
00001A2C                           919          
00001A2C  1406                     920          MOVE.B  D6,D2
00001A2E  E50A                     921          LSL.B   #2,D2
00001A30  EA0A                     922          LSR.B   #5,D2
00001A32  13C2 00002A3B            923          MOVE.B  D2,bit3
00001A38                           924          
00001A38  3E06                     925          MOVE.W  D6,D7
00001A3A  EF4F                     926          LSL.W   #7,D7
00001A3C  E04F                     927          LSR.W   #8,D7 
00001A3E  EA4F                     928          LSR.W   #5,D7 
00001A40  13C7 00002A3A            929          MOVE.B  D7,bit2
00001A46                           930          
00001A46  E94E                     931          LSL.W   #4,D6
00001A48  E04E                     932          LSR.W   #8,D6 
00001A4A  EA4E                     933          LSR.W   #5,D6 
00001A4C  13C6 00002A39            934          MOVE.B  D6,bit1
00001A52                           935          
00001A52  43F9 0000296A            936          LEA MMDIVSW,A1
00001A58  323C 000E                937          MOVE    #14,D1
00001A5C  4E4F                     938          TRAP    #15
00001A5E                           939          
00001A5E  1A3C 0005                940          MOVE.B  #$5,D5 
00001A62  183C 0004                941          MOVE.B  #$4,D4
00001A66                           942          
00001A66  0C39 0000 00002A3B       943          CMP.B   #$0,bit3           
00001A6E  6700 FD5E                944          BEQ     MOVBDN1
00001A72  0C39 0001 00002A3B       945          CMP.B   #$1,bit3
00001A7A  6700 FB0A                946          BEQ     MOVEAN1
00001A7E  0C39 0002 00002A3B       947          CMP.B   #$2,bit3
00001A86  6700 FB72                948          BEQ     MOVEIAN1
00001A8A  0C39 0003 00002A3B       949          CMP.B   #$3,bit3
00001A92  6700 FBFA                950          BEQ     MOVEIANI1
00001A96  0C39 0004 00002A3B       951          CMP.B   #$4,bit3
00001A9E  6700 FC8E                952          BEQ     MOVEIAND1
00001AA2  0C39 0007 00002A3B       953          CMP.B   #$7,bit3
00001AAA  6700 F9CA                954          BEQ     ADDIMD
00001AAE                           955  
00001AAE                           956  NEGW
00001AAE  1406                     957          MOVE.B  D6,D2
00001AB0  EB0A                     958          LSL.B   #5,D2
00001AB2  EA0A                     959          LSR.B   #5,D2
00001AB4  13C2 00002A3C            960          MOVE.B  D2,bit4
00001ABA                           961          
00001ABA  1406                     962          MOVE.B  D6,D2
00001ABC  E50A                     963          LSL.B   #2,D2
00001ABE  EA0A                     964          LSR.B   #5,D2
00001AC0  13C2 00002A3B            965          MOVE.B  D2,bit3
00001AC6                           966          
00001AC6  3E06                     967          MOVE.W  D6,D7
00001AC8  E14F                     968          LSL.W   #8,D7
00001ACA  E04F                     969          LSR.W   #8,D7 
00001ACC  EC4F                     970          LSR.W   #6,D7 
00001ACE  13C7 00002A3A            971          MOVE.B  D7,bit2
00001AD4                           972          
00001AD4  43F9 00002965            973          LEA MMNEGW,A1
00001ADA  323C 000E                974          MOVE    #14,D1
00001ADE  4E4F                     975          TRAP    #15
00001AE0                           976          
00001AE0  183C 0003                977          MOVE.B  #$3,D4
00001AE4                           978          
00001AE4  0C39 0000 00002A3A       979          CMP.B   #$0,bit2
00001AEC  6700 001A                980          BEQ     PRINTBYTE
00001AF0  0C39 0001 00002A3A       981          CMP.B   #$1,bit2
00001AF8  6700 0062                982          BEQ     PRINTWORD
00001AFC  0C39 0002 00002A3A       983          CMP.B   #$2,bit2
00001B04  6700 00AA                984          BEQ     PRINTLONG
00001B08                           985          
00001B08                           986  PRINTBYTE
00001B08  43F9 0000293F            987      LEA MBYTE,A1
00001B0E  323C 000E                988      MOVE    #14,D1
00001B12  4E4F                     989      TRAP    #15
00001B14                           990  
00001B14  0C39 0000 00002A3B       991      CMP.B   #$0,bit3           
00001B1C  6700 FCB0                992          BEQ     MOVBDN1
00001B20  0C39 0001 00002A3B       993          CMP.B   #$1,bit3
00001B28  6700 FA5C                994          BEQ     MOVEAN1
00001B2C  0C39 0002 00002A3B       995          CMP.B   #$2,bit3
00001B34  6700 FAC4                996          BEQ     MOVEIAN1
00001B38  0C39 0003 00002A3B       997          CMP.B   #$3,bit3
00001B40  6700 FB4C                998          BEQ     MOVEIANI1
00001B44  0C39 0004 00002A3B       999          CMP.B   #$4,bit3
00001B4C  6700 FBE0               1000          BEQ     MOVEIAND1
00001B50  0C39 0007 00002A3B      1001          CMP.B   #$7,bit3
00001B58  6700 F91C               1002          BEQ     ADDIMD
00001B5C                          1003      
00001B5C                          1004  PRINTWORD
00001B5C  43F9 00002942           1005      LEA MWORD,A1
00001B62  323C 000E               1006      MOVE    #14,D1
00001B66  4E4F                    1007      TRAP    #15
00001B68                          1008  
00001B68  0C39 0000 00002A3B      1009      CMP.B   #$0,bit3           
00001B70  6700 FC5C               1010          BEQ     MOVBDN1
00001B74  0C39 0001 00002A3B      1011          CMP.B   #$1,bit3
00001B7C  6700 FA08               1012          BEQ     MOVEAN1
00001B80  0C39 0002 00002A3B      1013          CMP.B   #$2,bit3
00001B88  6700 FA70               1014          BEQ     MOVEIAN1
00001B8C  0C39 0003 00002A3B      1015          CMP.B   #$3,bit3
00001B94  6700 FAF8               1016          BEQ     MOVEIANI1
00001B98  0C39 0004 00002A3B      1017          CMP.B   #$4,bit3
00001BA0  6700 FB8C               1018          BEQ     MOVEIAND1
00001BA4  0C39 0007 00002A3B      1019          CMP.B   #$7,bit3
00001BAC  6700 F8C8               1020          BEQ     ADDIMD
00001BB0                          1021      
00001BB0                          1022  PRINTLONG
00001BB0  43F9 00002945           1023      LEA MLONG,A1
00001BB6  323C 000E               1024      MOVE    #14,D1
00001BBA  4E4F                    1025      TRAP    #15
00001BBC                          1026   
00001BBC  0C39 0000 00002A3B      1027      CMP.B   #$0,bit3           
00001BC4  6700 FC08               1028          BEQ     MOVBDN1
00001BC8  0C39 0001 00002A3B      1029          CMP.B   #$1,bit3
00001BD0  6700 F9B4               1030          BEQ     MOVEAN1
00001BD4  0C39 0002 00002A3B      1031          CMP.B   #$2,bit3
00001BDC  6700 FA1C               1032          BEQ     MOVEIAN1
00001BE0  0C39 0003 00002A3B      1033          CMP.B   #$3,bit3
00001BE8  6700 FAA4               1034          BEQ     MOVEIANI1
00001BEC  0C39 0004 00002A3B      1035          CMP.B   #$4,bit3
00001BF4  6700 FB38               1036          BEQ     MOVEIAND1
00001BF8  0C39 0007 00002A3B      1037          CMP.B   #$7,bit3
00001C00  6700 F874               1038          BEQ     ADDIMD
00001C04                          1039          
00001C04                          1040  LSLR
00001C04                          1041          *MOVE.B  D6,D2
00001C04  141E                    1042          MOVE.B  (A6)+,D2
00001C06  EB0A                    1043          LSL.B   #5,D2
00001C08  EA0A                    1044          LSR.B   #5,D2
00001C0A  13C2 00002A3C           1045          MOVE.B  D2,bit4
00001C10                          1046          
00001C10                          1047          
00001C10                          1048          
00001C10  1406                    1049          MOVE.B  D6,D2
00001C12  E50A                    1050          LSL.B   #2,D2
00001C14  EE0A                    1051          LSR.B   #7,D2
00001C16  13C2 00002A3B           1052          MOVE.B  D2,bit3
00001C1C                          1053          
00001C1C  3E06                    1054          MOVE.W  D6,D7
00001C1E  E14F                    1055          LSL.W   #8,D7
00001C20  E04F                    1056          LSR.W   #8,D7 
00001C22  EC4F                    1057          LSR.W   #6,D7 
00001C24  13C7 00002A3A           1058          MOVE.B  D7,bit2
00001C2A                          1059          
00001C2A  3E06                    1060          MOVE.W  D6,D7
00001C2C  EF4F                    1061          LSL.W   #7,D7
00001C2E  E04F                    1062          LSR.W   #8,D7 
00001C30  EE4F                    1063          LSR.W   #7,D7
00001C32  13C7 00002A39           1064          MOVE.B  D7,bit1   
00001C38                          1065      
00001C38  1806                    1066          MOVE.B  D6,D4
00001C3A                          1067          
00001C3A  3E06                    1068          MOVE.W  D6,D7
00001C3C  E94F                    1069          LSL.W   #4,D7
00001C3E  E04F                    1070          LSR.W   #8,D7 
00001C40  EA4F                    1071          LSR.W   #5,D7
00001C42  13C7 00002A38           1072          MOVE.B  D7,bit0 
00001C48                          1073          
00001C48  1606                    1074          MOVE.B  D6,D3
00001C4A  E70B                    1075          LSL.B   #3,D3
00001C4C  EC0B                    1076          LSR.B   #6,D3
00001C4E  B63C 0003               1077          CMP.B   #3,D3
00001C52  6700 001A               1078          BEQ     RORL
00001C56                          1079          
00001C56  0C39 0001 00002A39      1080          CMP.B   #$1,bit1
00001C5E  6700 008E               1081          BEQ     PRINTLSL
00001C62  0C39 0000 00002A39      1082          CMP.B   #$0,bit1
00001C6A  6700 01C4               1083          BEQ     PRINTLSR
00001C6E                          1084          
00001C6E                          1085  RORL
00001C6E  0C39 0001 00002A39      1086          CMP.B   #$1,bit1
00001C76  6700 000E               1087          BEQ     PRINTROL
00001C7A  0C39 0000 00002A39      1088          CMP.B   #$0,bit1
00001C82  6700 0036               1089          BEQ     PRINTROR
00001C86                          1090  PRINTROL
00001C86  43F9 00002955           1091          LEA MROL,A1
00001C8C  303C 000E               1092          MOVE    #14,D0
00001C90  4E4F                    1093          TRAP    #15
00001C92                          1094          
00001C92  0C39 0000 00002A3A      1095          CMP.B   #$0,bit2
00001C9A  6700 00C4               1096          BEQ     PRINTB
00001C9E  0C39 0001 00002A3A      1097          CMP.B   #$1,bit2
00001CA6  6700 00EC               1098          BEQ     PRINTW
00001CAA  0C39 0002 00002A3A      1099          CMP.B   #$2,bit2
00001CB2  6700 0114               1100          BEQ     PRINTL
00001CB6  6000 006A               1101          BRA     LSLRMEM
00001CBA                          1102  PRINTROR
00001CBA  43F9 00002959           1103          LEA MROR,A1
00001CC0  323C 000E               1104          MOVE    #14,D1
00001CC4  4E4F                    1105          TRAP    #15
00001CC6                          1106          
00001CC6  0C39 0000 00002A3A      1107          CMP.B   #$0,bit2
00001CCE  6700 0090               1108          BEQ     PRINTB
00001CD2  0C39 0001 00002A3A      1109          CMP.B   #$1,bit2
00001CDA  6700 00B8               1110          BEQ     PRINTW
00001CDE  0C39 0002 00002A3A      1111          CMP.B   #$2,bit2
00001CE6  6700 00E0               1112          BEQ     PRINTL
00001CEA  6000 0036               1113          BRA     LSLRMEM
00001CEE                          1114  PRINTLSL
00001CEE  43F9 0000295D           1115          LEA MLSL,A1
00001CF4  303C 000E               1116          MOVE    #14,D0
00001CF8  4E4F                    1117          TRAP    #15
00001CFA                          1118          
00001CFA  0C39 0000 00002A3A      1119          CMP.B   #$0,bit2
00001D02  6700 005C               1120          BEQ     PRINTB
00001D06  0C39 0001 00002A3A      1121          CMP.B   #$1,bit2
00001D0E  6700 0084               1122          BEQ     PRINTW
00001D12  0C39 0002 00002A3A      1123          CMP.B   #$2,bit2
00001D1A  6700 00AC               1124          BEQ     PRINTL
00001D1E  6000 0002               1125          BRA     LSLRMEM
00001D22                          1126          
00001D22                          1127  LSLRMEM
00001D22                          1128          
00001D22  E50C                    1129          LSL.B   #2,D4
00001D24  EA0C                    1130          LSR.B   #5,D4
00001D26  13C4 00002A3B           1131          MOVE.B  D4,bit3
00001D2C                          1132          
00001D2C  183C 0003               1133          MOVE.B  #$3,D4
00001D30                          1134          
00001D30  0C39 0002 00002A3B      1135          CMP.B   #$2,bit3
00001D38  6700 F8C0               1136          BEQ     MOVEIAN1
00001D3C  0C39 0003 00002A3B      1137          CMP.B   #$3,bit3
00001D44  6700 F948               1138          BEQ     MOVEIANI1
00001D48  0C39 0004 00002A3B      1139          CMP.B   #$4,bit3
00001D50  6700 F9DC               1140          BEQ     MOVEIAND1
00001D54  0C39 0007 00002A3B      1141          CMP.B   #$7,bit3
00001D5C  6700 F718               1142          BEQ     ADDIMD
00001D60                          1143  PRINTB
00001D60  43F9 0000293B           1144          LEA MDOT,A1
00001D66  303C 000E               1145          MOVE    #14,D0
00001D6A  4E4F                    1146          TRAP    #15
00001D6C                          1147  
00001D6C  43F9 0000293F           1148          LEA MBYTE,A1
00001D72  303C 000E               1149          MOVE    #14,D0
00001D76  4E4F                    1150          TRAP    #15
00001D78                          1151          
00001D78  3A3C 0006               1152          MOVE #$6,D5
00001D7C                          1153          
00001D7C  0C39 0000 00002A3B      1154          CMP.B   #0,bit3
00001D84  6700 0076               1155          BEQ     PRINTLSLRCOUNT
00001D88  0C39 0001 00002A3B      1156          CMP.B   #1,bit3
00001D90  6700 FA3C               1157          BEQ     MOVBDN1
00001D94                          1158  
00001D94                          1159  PRINTW 
00001D94  43F9 0000293B           1160          LEA MDOT,A1
00001D9A  303C 000E               1161          MOVE    #14,D0
00001D9E  4E4F                    1162          TRAP    #15
00001DA0                          1163  
00001DA0  43F9 00002942           1164          LEA MWORD,A1
00001DA6  303C 000E               1165          MOVE    #14,D0
00001DAA  4E4F                    1166          TRAP    #15
00001DAC                          1167          
00001DAC  3A3C 0006               1168          MOVE #$6,D5
00001DB0                          1169          
00001DB0  0C39 0000 00002A3B      1170          CMP.B   #0,bit3
00001DB8  6700 0042               1171          BEQ     PRINTLSLRCOUNT
00001DBC  0C39 0001 00002A3B      1172          CMP.B   #1,bit3
00001DC4  6700 FA08               1173          BEQ     MOVBDN1
00001DC8                          1174  
00001DC8                          1175  PRINTL
00001DC8  43F9 0000293B           1176          LEA MDOT,A1
00001DCE  303C 000E               1177          MOVE    #14,D0
00001DD2  4E4F                    1178          TRAP    #15
00001DD4                          1179  
00001DD4  43F9 00002945           1180          LEA MLONG,A1
00001DDA  303C 000E               1181          MOVE    #14,D0
00001DDE  4E4F                    1182          TRAP    #15
00001DE0                          1183  
00001DE0  3A3C 0006               1184          MOVE #$6,D5
00001DE4                          1185          
00001DE4  0C39 0000 00002A3B      1186          CMP.B   #0,bit3
00001DEC  6700 000E               1187          BEQ     PRINTLSLRCOUNT
00001DF0  0C39 0001 00002A3B      1188          CMP.B   #1,bit3
00001DF8  6700 F9D4               1189          BEQ     MOVBDN1    
00001DFC                          1190  
00001DFC                          1191  PRINTLSLRCOUNT
00001DFC  43F9 0000291F           1192          LEA TAB,A1
00001E02  303C 000E               1193          MOVE    #14,D0
00001E06  4E4F                    1194          TRAP    #15
00001E08                          1195          
00001E08  43F9 0000292D           1196          LEA HASH,A1
00001E0E  303C 000E               1197          MOVE    #14,D0
00001E12  4E4F                    1198          TRAP    #15
00001E14                          1199          
00001E14  1239 00002A38           1200          MOVE.B  bit0,D1
00001E1A  303C 0003               1201          MOVE    #3,D0
00001E1E  4E4F                    1202          TRAP    #15
00001E20                          1203          
00001E20  43F9 00002923           1204          LEA COMMA,A1
00001E26  303C 000E               1205          MOVE    #14,D0
00001E2A  4E4F                    1206          TRAP    #15
00001E2C                          1207          
00001E2C  6000 FA54               1208          BRA LSLRDESD
00001E30                          1209    
00001E30                          1210  PRINTLSR
00001E30  43F9 00002961           1211          LEA MLSR,A1
00001E36  323C 000E               1212          MOVE    #14,D1
00001E3A  4E4F                    1213          TRAP    #15
00001E3C                          1214          
00001E3C  0C39 0000 00002A3A      1215          CMP.B   #$0,bit2
00001E44  6700 FF1A               1216          BEQ     PRINTB
00001E48  0C39 0001 00002A3A      1217          CMP.B   #$1,bit2
00001E50  6700 FF42               1218          BEQ     PRINTW
00001E54  0C39 0002 00002A3A      1219          CMP.B   #$2,bit2
00001E5C  6700 FF6A               1220          BEQ     PRINTL
00001E60  6000 FEC0               1221          BRA     LSLRMEM
00001E64                          1222  
00001E64                          1223  ******************************************************************************************************
00001E64                          1224  *   Branch, branch to subroutine, and branch conditionally
00001E64                          1225  *   BRA, BSR, Bcc
00001E64                          1226  
00001E64                          1227  BCC
00001E64  13C5 00002A39           1228          MOVE.B  D5,bit1             Moves condition code to bit1
00001E6A  1A1E                    1229          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001E6C  13C5 00002A3A           1230          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001E72  280E                    1231          MOVE.L  A6,D4               Moves current address to D4 register
00001E74                          1232  
00001E74  BA3C 0000               1233          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001E78  6700 0010               1234          BEQ     BCCWORD
00001E7C  BA3C 00FF               1235          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001E80  6700 0010               1236          BEQ     BCCLONG             Else, displacement is 8-bits
00001E84                          1237  
00001E84                          1238          * Calculates 8-bit displacement
00001E84                          1239          * 8-bit displacement is already in D5
00001E84                          1240          * Adds displacement to current address
00001E84  D805                    1241          ADD.B   D5,D4               Adds the displacement to current address
00001E86  6000 0012               1242          BRA     BCCNEXT
00001E8A                          1243  
00001E8A                          1244  * Calculates 16-bit displacement
00001E8A                          1245  BCCWORD
00001E8A  3A1E                    1246          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001E8C  D845                    1247          ADD.W   D5,D4               Adds the displacement to current address
00001E8E  6000 000A               1248          BRA     BCCNEXT
00001E92                          1249  
00001E92                          1250  * Calculates 32-bit displacement
00001E92                          1251  BCCLONG
00001E92  2A1E                    1252          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001E94  D885                    1253          ADD.L   D5,D4               Adds the displacement to current address
00001E96  6000 0002               1254          BRA     BCCNEXT
00001E9A                          1255  
00001E9A                          1256  * Does the actual calculation
00001E9A                          1257  * Adds the displacement to the current address
00001E9A                          1258  BCCNEXT
00001E9A  6100 000E               1259          BSR     BCCDISP             Displays branch op-code
00001E9E  45F9 0000283A           1260          LEA     ENDNEWLINE,A2
00001EA4  2E04                    1261          MOVE.L  D4,D7
00001EA6  6000 F17E               1262          BRA     DISPADDRSTART
00001EAA                          1263  
00001EAA                          1264  BCCDISP
00001EAA  B43C 0000               1265          CMP.B   #$0,D2
00001EAE  6700 0026               1266          BEQ     BCCBRA
00001EB2  B43C 0007               1267          CMP.B   #$7,D2
00001EB6  6700 0028               1268          BEQ     BCCBEQ
00001EBA  B43C 0006               1269          CMP.B   #$6,D2
00001EBE  6700 002A               1270          BEQ     BCCBNE
00001EC2  B43C 000D               1271          CMP.B   #$D,D2
00001EC6  6700 002C               1272          BEQ     BCCBLT
00001ECA  B43C 0002               1273          CMP.B   #$2,D2
00001ECE  6700 002E               1274          BEQ     BCCBHI
00001ED2                          1275  
00001ED2  6000 08F4               1276          BRA     INVOP
00001ED6                          1277  
00001ED6                          1278  BCCBRA
00001ED6  43F9 000029E1           1279          LEA     MBRA,A1
00001EDC  6000 002A               1280          BRA     BCCPRINT
00001EE0                          1281  BCCBEQ
00001EE0  43F9 000029D1           1282          LEA     MBEQ,A1
00001EE6  6000 0020               1283          BRA     BCCPRINT
00001EEA                          1284  BCCBNE
00001EEA  43F9 000029D5           1285          LEA     MBNE,A1
00001EF0  6000 0016               1286          BRA     BCCPRINT
00001EF4                          1287  BCCBLT
00001EF4  43F9 000029D9           1288          LEA     MBLT,A1
00001EFA  6000 000C               1289          BRA     BCCPRINT
00001EFE                          1290  BCCBHI
00001EFE  43F9 000029DD           1291          LEA     MBHI,A1
00001F04  6000 0002               1292          BRA     BCCPRINT
00001F08                          1293  BCCPRINT
00001F08  103C 000E               1294          MOVE.B  #14,D0
00001F0C  4E4F                    1295          TRAP    #15
00001F0E  43F9 0000291F           1296          LEA     TAB,A1
00001F14  4E4F                    1297          TRAP    #15
00001F16  4E75                    1298          RTS
00001F18                          1299  
00001F18                          1300  ******************************************************************************************************
00001F18                          1301  *   Immediate data arithmetic operations
00001F18                          1302  *   SUBI
00001F18                          1303  
00001F18  13C5 00002A39           1304  IMD     MOVE.B  D5,bit1
00001F1E  141E                    1305          MOVE.B  (A6)+,D2
00001F20                          1306          
00001F20  3805                    1307          MOVE    D5,D4
00001F22  C83C 0001               1308          AND.B   #$0001,D4
00001F26  B83C 0001               1309          CMP.B   #$1,D4
00001F2A  6700 F258               1310          BEQ     BTST
00001F2E                          1311  
00001F2E  DE02                    1312          ADD.B   D2,D7
00001F30                          1313  
00001F30  1602                    1314          MOVE.B  D2,D3               Copies data at D2 to D3
00001F32                          1315          *   this gets digit in 10's place
00001F32  E80B                    1316          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001F34                          1317          *   this gets digit in 1's place
00001F34  E90A                    1318          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001F36  E80A                    1319          LSR.B   #4,D2               Shifts back right into 1's place
00001F38                          1320  
00001F38                          1321          *   D3 holds digit in 10's place
00001F38                          1322          *   D2 holds digit in 1's place
00001F38                          1323  
00001F38  E20B                    1324          LSR.B   #1,D3
00001F3A  6400 0004               1325          BCC     IMD2
00001F3E  5404                    1326          ADD.B   #$2,D4
00001F40  E20B                    1327  IMD2    LSR.B   #1,D3
00001F42  6400 0004               1328          BCC     IMD3
00001F46  5804                    1329          ADD.B   #$4,D4
00001F48  B43C 0007               1330  IMD3    CMP.B   #$7,D2
00001F4C  6D00 0006               1331          BLT     IMD4
00001F50  5204                    1332          ADD.B   #$1,D4
00001F52  5102                    1333          SUB.B   #$8,D2
00001F54                          1334  
00001F54                          1335          *   Stores them into addr
00001F54  13C3 00002A3A           1336  IMD4    MOVE.B  D3,bit2
00001F5A  13C4 00002A3B           1337          MOVE.B  D4,bit3
00001F60  13C2 00002A3C           1338          MOVE.B  D2,bit4
00001F66                          1339  
00001F66                          1340  **************************
00001F66                          1341  * This finds the size of the operation
00001F66                          1342  
00001F66  0C39 0000 00002A3A      1343          CMP.B   #$0,bit2
00001F6E  6700 0052               1344          BEQ     IMDBYTE
00001F72  0C39 0001 00002A3A      1345          CMP.B   #$1,bit2
00001F7A  6700 0056               1346          BEQ     IMDWORD
00001F7E  0C39 0002 00002A3A      1347          CMP.B   #$2,bit2
00001F86  6700 0058               1348          BEQ     IMDLONG
00001F8A  6000 083C               1349          BRA     INVOP
00001F8E                          1350  
00001F8E                          1351  *************************************************************
00001F8E                          1352  * Display IMD op-code
00001F8E                          1353  IMDPRINT
00001F8E  0C39 0000 00002A39      1354          CMP.B   #$0,bit1
00001F96  6700 000E               1355          BEQ     IMDPRINTORI
00001F9A  0C39 0004 00002A39      1356          CMP.B   #$4,bit1
00001FA2  6700 000C               1357          BEQ     IMDPRINTSUBI
00001FA6                          1358  
00001FA6                          1359  IMDPRINTORI
00001FA6  43F9 000029BD           1360          LEA     MORI,A1
00001FAC  6000 000C               1361          BRA     IMDPRINTEND
00001FB0                          1362  
00001FB0                          1363  IMDPRINTSUBI
00001FB0  43F9 000029B7           1364          LEA     MSUBI,A1
00001FB6  6000 0002               1365          BRA     IMDPRINTEND
00001FBA                          1366  
00001FBA                          1367  IMDPRINTEND
00001FBA  103C 000E               1368          MOVE.B  #14,D0
00001FBE  4E4F                    1369          TRAP    #15
00001FC0  4E75                    1370          RTS
00001FC2                          1371  
00001FC2                          1372  *************************************************************
00001FC2                          1373  * Immediate data operation size BYTE
00001FC2                          1374  IMDBYTE
00001FC2  61CA                    1375          BSR     IMDPRINT
00001FC4  43F9 0000293F           1376          LEA     MBYTE,A1
00001FCA                          1377  
00001FCA                          1378          * Moves size to D4, needed to use DISPEA
00001FCA  183C 0001               1379          MOVE.B  #$1,D4
00001FCE  6000 001A               1380          BRA     IMDEA
00001FD2                          1381  
00001FD2                          1382  *************************************************************
00001FD2                          1383  * Immediate data operation size WORD
00001FD2                          1384  IMDWORD
00001FD2  61BA                    1385          BSR     IMDPRINT
00001FD4  43F9 00002942           1386          LEA     MWORD,A1
00001FDA                          1387  
00001FDA  1803                    1388          MOVE.B  D3,D4
00001FDC  6000 000C               1389          BRA     IMDEA
00001FE0                          1390  
00001FE0                          1391  
00001FE0                          1392  *************************************************************
00001FE0                          1393  * Immediate data operation size LONG
00001FE0                          1394  IMDLONG
00001FE0  61AC                    1395          BSR     IMDPRINT
00001FE2  43F9 00002945           1396          LEA     MLONG,A1
00001FE8                          1397          
00001FE8                          1398  
00001FE8                          1399          * Moves size to D4, needed to use DISPEA
00001FE8  1803                    1400          MOVE.B  D3,D4
00001FEA                          1401  
00001FEA                          1402  IMDEA
00001FEA                          1403          * This prints out the size and creates tab
00001FEA  103C 000E               1404          MOVE.B  #14,D0
00001FEE  4E4F                    1405          TRAP    #15
00001FF0  43F9 0000291F           1406          LEA     TAB,A1
00001FF6  103C 000E               1407          MOVE.B  #14,D0
00001FFA  4E4F                    1408          TRAP    #15
00001FFC                          1409          * Loads return address into A2
00001FFC  45F9 00002006           1410          LEA     IMDEA2,A2
00002002  6000 075C               1411          BRA     DISPEA
00002006                          1412  IMDEA2
00002006  43F9 00002923           1413          LEA     COMMA,A1
0000200C  103C 000E               1414          MOVE.B  #14,D0
00002010  4E4F                    1415          TRAP    #15
00002012                          1416  
00002012  45F9 0000201C           1417          LEA     IMDEA3,A2
00002018  6000 05F6               1418          BRA     SUBEA
0000201C                          1419  IMDEA3
0000201C  6000 081C               1420          BRA     ENDNEWLINE
00002020                          1421  
00002020                          1422  ******************************************************************************************************
00002020                          1423  * Miscellaneous section
00002020                          1424  *   Not goes here
00002020                          1425  
00002020                          1426  MISC
00002020  13C5 00002A39           1427          MOVE.B  D5,bit1
00002026  141E                    1428          MOVE.B  (A6)+,D2
00002028                          1429  
00002028  DE02                    1430          ADD.B   D2,D7
0000202A                          1431  
0000202A  1602                    1432          MOVE.B  D2,D3               Copies data at D2 to D3
0000202C                          1433          *   this gets digit in 10's place
0000202C  E80B                    1434          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000202E                          1435          *   this gets digit in 1's place
0000202E  E90A                    1436          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002030  E80A                    1437          LSR.B   #4,D2               Shifts back right into 1's place
00002032                          1438  
00002032                          1439  
00002032  3806                    1440          MOVE.W  D6,D4
00002034  E94C                    1441          LSL.W   #$4,D4
00002036  E04C                    1442          LSR.W   #$8,D4
00002038  E44C                    1443          LSR.W   #$2,D4
0000203A  13C4 00002A3A           1444          MOVE.B  D4,bit2
00002040  0C39 003A 00002A3A      1445          CMP.B   #$3A,bit2
00002048  6700 F0FA               1446          BEQ     JSR
0000204C                          1447          *   D5 is bit1
0000204C                          1448          *   D3 is bit2
0000204C                          1449          *   D2 is bit3
0000204C                          1450  
0000204C                          1451  **************************
0000204C                          1452  * This finds the size of the operation
0000204C                          1453          * D5 is bit1
0000204C  BA3C 0004               1454          CMP.B   #$4,D5
00002050  6700 FA5C               1455          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00002054  BA3C 0006               1456          CMP.B   #$6,D5              Branches to NOT section
00002058  6700 0036               1457          BEQ     MISCNOT
0000205C  BA3C 000E               1458          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00002060  6700 0006               1459          BEQ     MISCBIT2
00002064  6000 0762               1460          BRA     INVOP
00002068                          1461  
00002068                          1462  MISCBIT2
00002068                          1463          * D3 is bit2
00002068  B63C 0007               1464          CMP.B   #$7,D3              Branches to NOP
0000206C  6700 0006               1465          BEQ     MISCBIT3
00002070  6000 0756               1466          BRA     INVOP
00002074                          1467  
00002074                          1468  MISCBIT3
00002074                          1469          * D2 is bit3
00002074  B43C 0001               1470          CMP.B   #$1,D2              Branches to NOP
00002078  6700 0006               1471          BEQ     MISCNOP
0000207C  6000 074A               1472          BRA     INVOP
00002080                          1473  
00002080                          1474  ******************************************************
00002080                          1475  * NOP
00002080                          1476  * No operation
00002080                          1477  MISCNOP
00002080  43F9 000029E5           1478          LEA     MNOP,A1
00002086  103C 000E               1479          MOVE.B  #14,D0
0000208A  4E4F                    1480          TRAP    #15
0000208C                          1481  
0000208C  6000 07AC               1482          BRA     ENDNEWLINE          Goes to next opcode
00002090                          1483  
00002090                          1484  ******************************************************
00002090                          1485  * NOT
00002090                          1486  * Reuses some of IMD section to display because they have similar format
00002090                          1487  *  (I was kinda lazy too)
00002090                          1488  MISCNOT
00002090  E20B                    1489          LSR.B   #1,D3
00002092  6400 0004               1490          BCC     MISCNOT2
00002096  5404                    1491          ADD.B   #$2,D4
00002098                          1492  MISCNOT2   
00002098  E20B                    1493          LSR.B   #1,D3
0000209A  6400 0004               1494          BCC     MISCNOT3
0000209E  5804                    1495          ADD.B   #$4,D4
000020A0                          1496  MISCNOT3   
000020A0  B43C 0007               1497          CMP.B   #$7,D2
000020A4  6D00 0006               1498          BLT     MISCNOT4
000020A8  5204                    1499          ADD.B   #$1,D4
000020AA  5102                    1500          SUB.B   #$8,D2
000020AC                          1501  
000020AC                          1502          *   Stores them into addr
000020AC                          1503  MISCNOT4
000020AC  13C3 00002A3A           1504          MOVE.B  D3,bit2
000020B2  13C4 00002A3B           1505          MOVE.B  D4,bit3
000020B8  13C2 00002A3C           1506          MOVE.B  D2,bit4
000020BE                          1507  
000020BE  B63C 0000               1508          CMP.B   #$0,D3
000020C2  6700 0016               1509          BEQ     MISCBYTE
000020C6  B63C 0001               1510          CMP.B   #$1,D3
000020CA  6700 0020               1511          BEQ     MISCWORD
000020CE  B63C 0002               1512          CMP.B   #$2,D3
000020D2  6700 0028               1513          BEQ     MISCLONG
000020D6  6000 06F0               1514          BRA     INVOP
000020DA                          1515  *************************************************************
000020DA                          1516  * Immediate data operation size BYTE
000020DA                          1517  MISCBYTE
000020DA  6100 004C               1518          BSR     MISCPRINT
000020DE  43F9 0000293F           1519          LEA     MBYTE,A1
000020E4                          1520  
000020E4                          1521          * Moves size to D4, needed to use DISPEA
000020E4  183C 0001               1522          MOVE.B  #$1,D4
000020E8  6000 001E               1523          BRA     MISCEA
000020EC                          1524  
000020EC                          1525  *************************************************************
000020EC                          1526  * Immediate data operation size WORD
000020EC                          1527  MISCWORD
000020EC  6100 003A               1528          BSR     MISCPRINT
000020F0  43F9 00002942           1529          LEA     MWORD,A1
000020F6                          1530  
000020F6  1803                    1531          MOVE.B  D3,D4
000020F8  6000 000E               1532          BRA     MISCEA
000020FC                          1533  
000020FC                          1534  
000020FC                          1535  *************************************************************
000020FC                          1536  * Immediate data operation size LONG
000020FC                          1537  MISCLONG
000020FC  6100 002A               1538          BSR     MISCPRINT
00002100  43F9 00002945           1539          LEA     MLONG,A1
00002106                          1540  
00002106                          1541          * Moves size to D4, needed to use DISPEA
00002106  1803                    1542          MOVE.B  D3,D4
00002108                          1543  
00002108                          1544  MISCEA
00002108  103C 000E               1545          MOVE.B  #14,D0
0000210C  4E4F                    1546          TRAP    #15
0000210E  43F9 0000291F           1547          LEA     TAB,A1
00002114  103C 000E               1548          MOVE.B  #14,D0
00002118  4E4F                    1549          TRAP    #15
0000211A                          1550  
0000211A  45F9 00002124           1551          LEA     MISCEA2,A2
00002120  6000 04EE               1552          BRA     SUBEA
00002124                          1553  MISCEA2
00002124  6000 0714               1554          BRA     ENDNEWLINE
00002128                          1555  
00002128                          1556  *************************************************************
00002128                          1557  * Display IMD op-code
00002128                          1558  MISCPRINT
00002128  0C39 0004 00002A39      1559          CMP.B   #$4,bit1
00002130  6700 0018               1560          BEQ     MISCPRINTNEG
00002134  0C39 0006 00002A39      1561          CMP.B   #$6,bit1
0000213C  6700 0002               1562          BEQ     MISCPRINTNOT
00002140                          1563  
00002140                          1564  MISCPRINTNOT
00002140  43F9 000029C2           1565          LEA     MNOT,A1
00002146  6000 000C               1566          BRA     MISCPRINTEND
0000214A                          1567  
0000214A                          1568  MISCPRINTNEG
0000214A  43F9 000029CD           1569          LEA     MNEG,A1
00002150  6000 0002               1570          BRA     MISCPRINTEND
00002154                          1571  
00002154                          1572  MISCPRINTEND
00002154  103C 000E               1573          MOVE.B  #14,D0
00002158  4E4F                    1574          TRAP    #15
0000215A  4E75                    1575          RTS
0000215C                          1576  
0000215C                          1577  
0000215C                          1578  ******************************************************************************************************
0000215C                          1579  * SUB section
0000215C                          1580  
0000215C                          1581          *   Grabs next two nibbles
0000215C  141E                    1582  SUB     MOVE.B  (A6)+,D2
0000215E                          1583  
0000215E  DE02                    1584          ADD.B   D2,D7
00002160                          1585  
00002160  1602                    1586          MOVE.B  D2,D3               Copies data at D2 to D3
00002162                          1587          *   this gets digit in 10's place
00002162  E80B                    1588          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002164                          1589          *   this gets digit in 1's place
00002164  E90A                    1590          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002166  E80A                    1591          LSR.B   #4,D2               Shifts back right into 1's place
00002168                          1592  
00002168                          1593          *   D3 holds digit in 10's place
00002168                          1594          *   D2 holds digit in 1's place
00002168                          1595  
00002168                          1596          
00002168                          1597          *   Converts nibble into 3-bit parts
00002168  E20B                    1598          LSR.B   #1,D3
0000216A  6400 0004               1599          BCC     SUB2
0000216E  5404                    1600          ADD.B   #$2,D4
00002170                          1601          
00002170  E20B                    1602  SUB2    LSR.B   #1,D3
00002172  6400 0004               1603          BCC     SUB3
00002176  5804                    1604          ADD.B   #$4,D4
00002178                          1605          
00002178  1205                    1606  SUB3    MOVE.B  D5,D1
0000217A  E209                    1607          LSR.B   #1,D1
0000217C  6400 0004               1608          BCC     SUB4
00002180  5803                    1609          ADD.B   #$4,D3
00002182                          1610  
00002182  B43C 0007               1611  SUB4    CMP.B   #$7,D2
00002186  6D00 0006               1612          BLT     SUB1
0000218A  5204                    1613          ADD.B   #$1,D4
0000218C  5102                    1614          SUB.B   #$8,D2
0000218E                          1615  
0000218E                          1616          *   Stores them into addr
0000218E  13C1 00002A39           1617  SUB1    MOVE.B  D1,bit1
00002194  13C3 00002A3A           1618          MOVE.B  D3,bit2
0000219A  13C4 00002A3B           1619          MOVE.B  D4,bit3
000021A0  13C2 00002A3C           1620          MOVE.B  D2,bit4
000021A6                          1621  
000021A6                          1622          * do this later
000021A6  4241                    1623          CLR     D1
000021A8  7400                    1624          MOVE.L  #0,D2
000021AA  7600                    1625          MOVE.L  #0,D3
000021AC  7800                    1626          MOVE.L  #0,D4
000021AE  7A00                    1627          MOVE.L  #0,D5
000021B0  7C00                    1628          MOVE.L  #0,D6
000021B2                          1629  
000021B2                          1630          
000021B2                          1631  ******************************************************************************************************
000021B2                          1632  * After spliting the op-code into SUB's defined groupings
000021B2                          1633  *   This figures out which operation it is and goes to that sub-routine
000021B2                          1634  
000021B2                          1635          * This checks if bit0 is C which is either AND or MULS
000021B2  0C39 000C 00002A38      1636          CMP.B   #$C,bit0
000021BA  6600 000E               1637          BNE     SUBACHECK
000021BE  0C39 0007 00002A3A      1638          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
000021C6  6700 F7CE               1639          BEQ     MULSW                       AND will use SUB's routine
000021CA                          1640  
000021CA                          1641  SUBACHECK
000021CA                          1642          * This will display SUBA instead  -- check this later
000021CA  0C39 0003 00002A3A      1643          CMP.B   #$3,bit2
000021D2  6700 01E6               1644          BEQ     SUBA
000021D6  0C39 0007 00002A3A      1645          CMP.B   #$7,bit2
000021DE  6700 01DA               1646          BEQ     SUBA
000021E2                          1647  
000021E2                          1648          * This will find the size and stuff
000021E2  0C39 0000 00002A3A      1649          CMP.B   #$0,bit2
000021EA  6700 003E               1650          BEQ     SUBSIZE1
000021EE  0C39 0001 00002A3A      1651          CMP.B   #$1,bit2
000021F6  6700 0072               1652          BEQ     SUBSIZE2
000021FA  0C39 0002 00002A3A      1653          CMP.B   #$2,bit2
00002202  6700 00A6               1654          BEQ     SUBSIZE3
00002206  0C39 0004 00002A3A      1655          CMP.B   #$4,bit2
0000220E  6700 00DA               1656          BEQ     SUBSIZE4
00002212  0C39 0005 00002A3A      1657          CMP.B   #$5,bit2
0000221A  6700 0112               1658          BEQ     SUBSIZE5
0000221E  0C39 0006 00002A3A      1659          CMP.B   #$6,bit2
00002226  6700 014A               1660          BEQ     SUBSIZE6
0000222A                          1661     
0000222A                          1662  ******************************************************************************************************
0000222A                          1663  *   Displays size, then does operation order
0000222A                          1664  
0000222A                          1665  *   000 byte    EA,DN
0000222A                          1666  SUBSIZE1
0000222A  6100 0228               1667          BSR     SUBPRINT
0000222E  43F9 0000293F           1668          LEA     MBYTE,A1
00002234  103C 000E               1669          MOVE.B  #14,D0
00002238  4E4F                    1670          TRAP    #15
0000223A  43F9 0000291F           1671          LEA     TAB,A1
00002240  103C 000E               1672          MOVE.B  #14,D0
00002244  4E4F                    1673          TRAP    #15
00002246                          1674  
00002246  45F9 00002250           1675          LEA     SUBSIZE11,A2
0000224C  6000 03C2               1676          BRA     SUBEA
00002250                          1677  SUBSIZE11
00002250  45F9 00002266           1678          LEA     SUBSIZE12,A2
00002256  43F9 00002923           1679          LEA     COMMA,A1
0000225C  103C 000E               1680          MOVE.B  #14,D0
00002260  4E4F                    1681          TRAP    #15
00002262  6000 0288               1682          BRA     SUBDN
00002266                          1683  SUBSIZE12
00002266  6000 05D2               1684          BRA     ENDNEWLINE
0000226A                          1685  
0000226A                          1686  *************************************************
0000226A                          1687  *   001 word    EA,DN
0000226A                          1688  SUBSIZE2
0000226A  6100 01E8               1689          BSR     SUBPRINT
0000226E  43F9 00002942           1690          LEA     MWORD,A1
00002274  103C 000E               1691          MOVE.B  #14,D0
00002278  4E4F                    1692          TRAP    #15
0000227A  43F9 0000291F           1693          LEA     TAB,A1
00002280  103C 000E               1694          MOVE.B  #14,D0
00002284  4E4F                    1695          TRAP    #15
00002286                          1696  
00002286  45F9 00002290           1697          LEA     SUBSIZE21,A2
0000228C  6000 0382               1698          BRA     SUBEA
00002290                          1699  SUBSIZE21
00002290  45F9 000022A6           1700          LEA     SUBSIZE22,A2
00002296  43F9 00002923           1701          LEA     COMMA,A1
0000229C  103C 000E               1702          MOVE.B  #14,D0
000022A0  4E4F                    1703          TRAP    #15
000022A2  6000 0248               1704          BRA     SUBDN
000022A6                          1705  SUBSIZE22
000022A6  6000 0592               1706          BRA     ENDNEWLINE
000022AA                          1707  
000022AA                          1708  *************************************************
000022AA                          1709  *   010 long    EA,DN
000022AA                          1710  SUBSIZE3
000022AA  6100 01A8               1711          BSR     SUBPRINT
000022AE  43F9 00002945           1712          LEA     MLONG,A1
000022B4  103C 000E               1713          MOVE.B  #14,D0
000022B8  4E4F                    1714          TRAP    #15
000022BA  43F9 0000291F           1715          LEA     TAB,A1
000022C0  103C 000E               1716          MOVE.B  #14,D0
000022C4  4E4F                    1717          TRAP    #15
000022C6                          1718  
000022C6  45F9 000022D0           1719          LEA     SUBSIZE31,A2
000022CC  6000 0342               1720          BRA     SUBEA
000022D0                          1721  SUBSIZE31
000022D0  45F9 000022E6           1722          LEA     SUBSIZE32,A2
000022D6  43F9 00002923           1723          LEA     COMMA,A1
000022DC  103C 000E               1724          MOVE.B  #14,D0
000022E0  4E4F                    1725          TRAP    #15
000022E2  6000 0208               1726          BRA     SUBDN
000022E6                          1727  SUBSIZE32
000022E6  6000 0552               1728          BRA     ENDNEWLINE
000022EA                          1729  
000022EA                          1730  *************************************************
000022EA                          1731  *   100 byte    DN,EA
000022EA                          1732  SUBSIZE4
000022EA  6100 0168               1733          BSR     SUBPRINT
000022EE  43F9 0000293F           1734          LEA     MBYTE,A1
000022F4  103C 000E               1735          MOVE.B  #14,D0
000022F8  4E4F                    1736          TRAP    #15
000022FA  43F9 0000291F           1737          LEA     TAB,A1
00002300  103C 000E               1738          MOVE.B  #14,D0
00002304  4E4F                    1739          TRAP    #15
00002306                          1740  
00002306  6100 01A2               1741          BSR     SUBERRORTEST1
0000230A                          1742  
0000230A  45F9 00002314           1743          LEA     SUBSIZE41,A2
00002310  6000 01DA               1744          BRA     SUBDN
00002314                          1745  SUBSIZE41
00002314  45F9 0000232A           1746          LEA     SUBSIZE42,A2
0000231A  43F9 00002923           1747          LEA     COMMA,A1
00002320  103C 000E               1748          MOVE.B  #14,D0
00002324  4E4F                    1749          TRAP    #15
00002326  6000 02E8               1750          BRA     SUBEA
0000232A                          1751  SUBSIZE42
0000232A  6000 050E               1752          BRA     ENDNEWLINE
0000232E                          1753  
0000232E                          1754  *************************************************
0000232E                          1755  *   101 word    DN,EA
0000232E                          1756  SUBSIZE5
0000232E  6100 017A               1757          BSR     SUBERRORTEST1               * This does error testing
00002332  6100 0120               1758          BSR     SUBPRINT                    * Prints out 'SUB.'
00002336  43F9 00002942           1759          LEA     MWORD,A1
0000233C  103C 000E               1760          MOVE.B  #14,D0
00002340  4E4F                    1761          TRAP    #15
00002342  43F9 0000291F           1762          LEA     TAB,A1
00002348  103C 000E               1763          MOVE.B  #14,D0
0000234C  4E4F                    1764          TRAP    #15
0000234E                          1765  
0000234E  45F9 00002358           1766          LEA     SUBSIZE51,A2
00002354  6000 0196               1767          BRA     SUBDN
00002358                          1768  SUBSIZE51
00002358  45F9 0000236E           1769          LEA     SUBSIZE52,A2
0000235E  43F9 00002923           1770          LEA     COMMA,A1
00002364  103C 000E               1771          MOVE.B  #14,D0
00002368  4E4F                    1772          TRAP    #15
0000236A  6000 02A4               1773          BRA     SUBEA
0000236E                          1774  SUBSIZE52
0000236E  6000 04CA               1775          BRA     ENDNEWLINE
00002372                          1776  
00002372                          1777  *************************************************
00002372                          1778  *   110 long    DN,EA
00002372                          1779  SUBSIZE6
00002372  6100 0136               1780          BSR     SUBERRORTEST1               * This does error testing
00002376  6100 00DC               1781          BSR     SUBPRINT                    * Prints out 'SUB.'
0000237A  43F9 00002945           1782          LEA     MLONG,A1
00002380  103C 000E               1783          MOVE.B  #14,D0
00002384  4E4F                    1784          TRAP    #15
00002386  43F9 0000291F           1785          LEA     TAB,A1
0000238C  103C 000E               1786          MOVE.B  #14,D0
00002390  4E4F                    1787          TRAP    #15
00002392                          1788  
00002392  6100 0116               1789          BSR     SUBERRORTEST1
00002396                          1790  
00002396  45F9 000023A0           1791          LEA     SUBSIZE61,A2
0000239C  6000 014E               1792          BRA     SUBDN
000023A0                          1793  SUBSIZE61
000023A0  45F9 000023B6           1794          LEA     SUBSIZE62,A2
000023A6  43F9 00002923           1795          LEA     COMMA,A1
000023AC  103C 000E               1796          MOVE.B  #14,D0
000023B0  4E4F                    1797          TRAP    #15
000023B2  6000 025C               1798          BRA     SUBEA
000023B6                          1799  SUBSIZE62
000023B6  6000 0482               1800          BRA     ENDNEWLINE
000023BA                          1801  
000023BA                          1802  ****************************************************************************
000023BA                          1803  *   This section is for SUBA
000023BA                          1804  *   Displays 'SUBA.' then decodes the op-code as SUBA
000023BA                          1805  SUBA
000023BA  43F9 000029A7           1806          LEA     MSUBA,A1                    Displays 'SUBA.'
000023C0  103C 000E               1807          MOVE.B  #14,D0
000023C4  4E4F                    1808          TRAP    #15
000023C6                          1809          
000023C6                          1810          * Does the rest of SUBA
000023C6  0C39 0003 00002A3A      1811          CMP.B   #$3,bit2
000023CE  6700 000E               1812          BEQ     SUBSIZE7
000023D2  0C39 0007 00002A3A      1813          CMP.B   #$7,bit2
000023DA  6700 003E               1814          BEQ     SUBSIZE8
000023DE                          1815  
000023DE                          1816  *************************************************
000023DE                          1817  *   SUBA Word   ea,An
000023DE                          1818  SUBSIZE7
000023DE  43F9 00002942           1819          LEA     MWORD,A1
000023E4  103C 000E               1820          MOVE.B  #14,D0
000023E8  4E4F                    1821          TRAP    #15
000023EA  43F9 0000291F           1822          LEA     TAB,A1
000023F0  103C 000E               1823          MOVE.B  #14,D0
000023F4  4E4F                    1824          TRAP    #15
000023F6                          1825  
000023F6  45F9 00002400           1826          LEA     SUBSIZE71,A2
000023FC  6000 0212               1827          BRA     SUBEA
00002400                          1828  SUBSIZE71
00002400  45F9 00002416           1829          LEA     SUBSIZE72,A2
00002406  43F9 00002923           1830          LEA     COMMA,A1
0000240C  103C 000E               1831          MOVE.B  #14,D0
00002410  4E4F                    1832          TRAP    #15
00002412  6000 012C               1833          BRA     SUBAN2
00002416                          1834  SUBSIZE72
00002416  6000 0422               1835          BRA     ENDNEWLINE
0000241A                          1836  
0000241A                          1837  *************************************************
0000241A                          1838  *   SUBA longword   ea,An
0000241A                          1839  SUBSIZE8
0000241A  43F9 00002945           1840          LEA     MLONG,A1
00002420  103C 000E               1841          MOVE.B  #14,D0
00002424  4E4F                    1842          TRAP    #15
00002426  43F9 0000291F           1843          LEA     TAB,A1
0000242C  103C 000E               1844          MOVE.B  #14,D0
00002430  4E4F                    1845          TRAP    #15
00002432                          1846  
00002432  45F8 2400               1847          LEA     SUBSIZE71,A2
00002436  6000 01D8               1848          BRA     SUBEA
0000243A                          1849  SUBSIZE81
0000243A  45F8 2416               1850          LEA     SUBSIZE72,A2
0000243E  43F9 00002923           1851          LEA     COMMA,A1
00002444  103C 000E               1852          MOVE.B  #14,D0
00002448  4E4F                    1853          TRAP    #15
0000244A  6000 00F4               1854          BRA     SUBAN2
0000244E                          1855  SUBSIZE82
0000244E  6000 03EA               1856          BRA     ENDNEWLINE
00002452                          1857  
00002452                          1858  *************************************************
00002452                          1859  * Jumps to memory location at A2
00002452                          1860  SUBJMPA2
00002452  4ED2                    1861          JMP     (A2)
00002454                          1862  
00002454                          1863  *************************************************
00002454                          1864  * Prints out opcode name
00002454                          1865  SUBPRINT
00002454  0C39 0009 00002A38      1866          CMP.B   #$9,bit0                Prints SUB
0000245C  6700 001A               1867          BEQ     SUBPRINTSUB
00002460  0C39 000C 00002A38      1868          CMP.B   #$C,bit0                Prints AND
00002468  6700 001E               1869          BEQ     SUBPRINTAND
0000246C  0C39 000D 00002A38      1870          CMP.B   #$D,bit0                Prints ADD
00002474  6700 0022               1871          BEQ     SUBPRINTADD
00002478                          1872  
00002478                          1873  SUBPRINTSUB   * Displays 'SUB.' 
00002478  43F9 000029A2           1874          LEA     MSUB,A1
0000247E  103C 000E               1875          MOVE.B  #14,D0
00002482  4E4F                    1876          TRAP    #15
00002484  6000 0022               1877          BRA     SUBPRINTEND
00002488                          1878  
00002488                          1879  SUBPRINTAND   * Displays 'AND.' 
00002488  43F9 000029AD           1880          LEA     MAND,A1
0000248E  103C 000E               1881          MOVE.B  #14,D0
00002492  4E4F                    1882          TRAP    #15
00002494  6000 0012               1883          BRA     SUBPRINTEND
00002498                          1884  
00002498                          1885  SUBPRINTADD   * Displays 'ADD.' 
00002498  43F9 000029B2           1886          LEA     MADD,A1
0000249E  103C 000E               1887          MOVE.B  #14,D0
000024A2  4E4F                    1888          TRAP    #15
000024A4  6000 0002               1889          BRA     SUBPRINTEND
000024A8                          1890  
000024A8                          1891  SUBPRINTEND
000024A8  4E75                    1892          RTS
000024AA                          1893  
000024AA                          1894  
000024AA                          1895  *******************************************************************
000024AA                          1896  * Error testing for DN->EA operations
000024AA                          1897  *  Data register, address register, and immediate data cannot be destinations
000024AA                          1898  SUBERRORTEST1
000024AA                          1899          * test for DN or AN register, branches to invalid op code if true
000024AA  0C39 0000 00002A3B      1900          CMP.B   #0,bit3
000024B2  6700 0314               1901          BEQ     INVOP
000024B6  0C39 0001 00002A3B      1902          CMP.B   #1,bit3
000024BE  6700 0308               1903          BEQ     INVOP
000024C2                          1904          
000024C2                          1905          * check if destination is immediate data
000024C2  0C39 0007 00002A3B      1906          CMP.B   #7,bit3
000024CA  6600 001E               1907          BNE     SUBERRORTEST11
000024CE  0C39 0000 00002A3C      1908          CMP.B   #0,bit4
000024D6  6700 0012               1909          BEQ     SUBERRORTEST11
000024DA  0C39 0001 00002A3C      1910          CMP.B   #1,bit4
000024E2  6700 0006               1911          BEQ     SUBERRORTEST11
000024E6  6000 02E0               1912          BRA     INVOP
000024EA                          1913          
000024EA                          1914  SUBERRORTEST11
000024EA  4E75                    1915          RTS
000024EC                          1916  
000024EC                          1917  
000024EC                          1918  ******************************************************************************************************
000024EC                          1919  *   Displays data register
000024EC                          1920  SUBDN
000024EC  43F9 00002948           1921          LEA     MDN,A1
000024F2  103C 000E               1922          MOVE.B  #14,D0
000024F6  4E4F                    1923          TRAP    #15
000024F8                          1924  
000024F8  1239 00002A39           1925          MOVE.B  bit1,D1
000024FE  103C 0003               1926          MOVE.B  #3,D0
00002502  4E4F                    1927          TRAP    #15
00002504                          1928          
00002504  6000 FF4C               1929          BRA     SUBJMPA2
00002508                          1930  
00002508                          1931  *   Displays data register
00002508                          1932  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002508                          1933  SUBDN2
00002508  43F9 00002948           1934          LEA     MDN,A1
0000250E  103C 000E               1935          MOVE.B  #14,D0
00002512  4E4F                    1936          TRAP    #15
00002514                          1937  
00002514  1239 00002A3C           1938          MOVE.B  bit4,D1
0000251A  103C 0003               1939          MOVE.B  #3,D0
0000251E  4E4F                    1940          TRAP    #15
00002520                          1941          
00002520  6000 FF30               1942          BRA     SUBJMPA2
00002524                          1943  
00002524                          1944  *   Displays address register
00002524                          1945  SUBAN
00002524  43F9 0000294A           1946          LEA     MAN,A1
0000252A  103C 000E               1947          MOVE.B  #14,D0
0000252E  4E4F                    1948          TRAP    #15
00002530                          1949  
00002530  1239 00002A3C           1950          MOVE.B  bit4,D1
00002536  103C 0003               1951          MOVE.B  #3,D0
0000253A  4E4F                    1952          TRAP    #15
0000253C                          1953          
0000253C  6000 FF14               1954          BRA     SUBJMPA2
00002540                          1955  
00002540                          1956  *   Displays address register
00002540                          1957  *   This is for SUBA, SUBA puts An into bit1
00002540                          1958  SUBAN2
00002540  43F9 0000294A           1959          LEA     MAN,A1
00002546  103C 000E               1960          MOVE.B  #14,D0
0000254A  4E4F                    1961          TRAP    #15
0000254C                          1962  
0000254C  1239 00002A39           1963          MOVE.B  bit1,D1
00002552  103C 0003               1964          MOVE.B  #3,D0
00002556  4E4F                    1965          TRAP    #15
00002558                          1966          
00002558  6000 FEF8               1967          BRA     SUBJMPA2
0000255C                          1968  
0000255C                          1969  
0000255C                          1970  *   Displays indirect address register
0000255C                          1971  SUBANID
0000255C  43F9 00002925           1972          LEA     OPENBRA,A1
00002562  103C 000E               1973          MOVE.B  #14,D0
00002566  4E4F                    1974          TRAP    #15
00002568                          1975  
00002568  43F9 0000294A           1976          LEA     MAN,A1
0000256E  103C 000E               1977          MOVE.B  #14,D0
00002572  4E4F                    1978          TRAP    #15
00002574                          1979  
00002574  1239 00002A3C           1980          MOVE.B  bit4,D1
0000257A  103C 0003               1981          MOVE.B  #3,D0
0000257E  4E4F                    1982          TRAP    #15
00002580                          1983  
00002580  43F9 00002927           1984          LEA     CLOSEBRA,A1
00002586  103C 000E               1985          MOVE.B  #14,D0
0000258A  4E4F                    1986          TRAP    #15
0000258C                          1987  
0000258C  6000 FEC4               1988          BRA     SUBJMPA2
00002590                          1989  
00002590                          1990  *   Displays indirect address register with post increment
00002590                          1991  SUBANIDPOS
00002590  43F9 00002925           1992          LEA     OPENBRA,A1
00002596  103C 000E               1993          MOVE.B  #14,D0
0000259A  4E4F                    1994          TRAP    #15
0000259C                          1995  
0000259C  43F9 0000294A           1996          LEA     MAN,A1
000025A2  103C 000E               1997          MOVE.B  #14,D0
000025A6  4E4F                    1998          TRAP    #15
000025A8                          1999  
000025A8  1239 00002A3C           2000          MOVE.B  bit4,D1
000025AE  103C 0003               2001          MOVE.B  #3,D0
000025B2  4E4F                    2002          TRAP    #15
000025B4                          2003  
000025B4  43F9 00002927           2004          LEA     CLOSEBRA,A1
000025BA  103C 000E               2005          MOVE.B  #14,D0
000025BE  4E4F                    2006          TRAP    #15
000025C0                          2007  
000025C0  43F9 00002929           2008          LEA     POS,A1
000025C6  103C 000E               2009          MOVE.B  #14,D0
000025CA  4E4F                    2010          TRAP    #15
000025CC                          2011  
000025CC  6000 FE84               2012          BRA     SUBJMPA2
000025D0                          2013  
000025D0                          2014  *   Displays indirect address register with pre decrement
000025D0                          2015  SUBANIDNEG
000025D0  43F9 0000292B           2016          LEA     NEG,A1
000025D6  103C 000E               2017          MOVE.B  #14,D0
000025DA  4E4F                    2018          TRAP    #15
000025DC                          2019  
000025DC  43F9 00002925           2020          LEA     OPENBRA,A1
000025E2  103C 000E               2021          MOVE.B  #14,D0
000025E6  4E4F                    2022          TRAP    #15
000025E8                          2023  
000025E8  43F9 0000294A           2024          LEA     MAN,A1
000025EE  103C 000E               2025          MOVE.B  #14,D0
000025F2  4E4F                    2026          TRAP    #15
000025F4                          2027  
000025F4  1239 00002A3C           2028          MOVE.B  bit4,D1
000025FA  103C 0003               2029          MOVE.B  #3,D0
000025FE  4E4F                    2030          TRAP    #15
00002600                          2031  
00002600  43F9 00002927           2032          LEA     CLOSEBRA,A1
00002606  103C 000E               2033          MOVE.B  #14,D0
0000260A  4E4F                    2034          TRAP    #15
0000260C                          2035  
0000260C  6000 FE44               2036          BRA     SUBJMPA2
00002610                          2037  
00002610                          2038  
00002610                          2039  
00002610                          2040  
00002610                          2041  ******************************************************************************************************
00002610                          2042  * Displays the EA as hex numbers
00002610                          2043  * 
00002610                          2044  SUBEA
00002610                          2045          *   This finds which mode to use
00002610  0C39 0000 00002A3B      2046          CMP.B   #$0,bit3
00002618  6700 FEEE               2047          BEQ     SUBDN2
0000261C  0C39 0001 00002A3B      2048          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002624  6700 FEFE               2049          BEQ     SUBAN
00002628  0C39 0002 00002A3B      2050          CMP.B   #$2,bit3
00002630  6700 FF2A               2051          BEQ     SUBANID
00002634  0C39 0003 00002A3B      2052          CMP.B   #$3,bit3
0000263C  6700 FF52               2053          BEQ     SUBANIDPOS
00002640  0C39 0004 00002A3B      2054          CMP.B   #$4,bit3
00002648  6786                    2055          BEQ     SUBANIDNEG
0000264A  0C39 0005 00002A3B      2056          CMP.B   #$5,bit3
00002652  6700 02A4               2057          BEQ     ERROR
00002656  0C39 0006 00002A3B      2058          CMP.B   #$6,bit3
0000265E  6700 0298               2059          BEQ     ERROR
00002662  0C39 0007 00002A3B      2060          CMP.B   #$7,bit3
0000266A  6700 0002               2061          BEQ     SUBEAHEX
0000266E                          2062  
0000266E                          2063  SUBEAHEX
0000266E  0C39 0004 00002A3C      2064          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002676  6700 0086               2065          BEQ     SUBEAID
0000267A                          2066  SUBEAID2
0000267A                          2067          *   Else it will assume it is absolute addressing mode
0000267A  43F9 0000293D           2068          LEA     MHEX,A1
00002680  103C 000E               2069          MOVE.B  #14,D0
00002684  4E4F                    2070          TRAP    #15
00002686                          2071  
00002686  0C39 0000 00002A3C      2072          CMP.B   #$0,bit4
0000268E  6700 007E               2073          BEQ     SUBEAHEX1
00002692  0C39 0001 00002A3C      2074          CMP.B   #$1,bit4
0000269A  6700 007A               2075          BEQ     SUBEAHEX2
0000269E                          2076  
0000269E  0C39 0000 00002A3A      2077          CMP.B   #$0,bit2            * SUB byte displays as word
000026A6  6700 0066               2078          BEQ     SUBEAHEX1
000026AA  0C39 0004 00002A3A      2079          CMP.B   #$4,bit2            * SUB byte displays as word
000026B2  6700 005A               2080          BEQ     SUBEAHEX1
000026B6  0C39 0001 00002A3A      2081          CMP.B   #$1,bit2            * SUB word
000026BE  6700 004E               2082          BEQ     SUBEAHEX1
000026C2  0C39 0005 00002A3A      2083          CMP.B   #$5,bit2            * SUB word
000026CA  6700 0042               2084          BEQ     SUBEAHEX1
000026CE  0C39 0003 00002A3A      2085          CMP.B   #$3,bit2            * SUBA word
000026D6  6700 0036               2086          BEQ     SUBEAHEX1
000026DA  0C39 0002 00002A3A      2087          CMP.B   #$2,bit2            * SUB longword
000026E2  6700 0032               2088          BEQ     SUBEAHEX2
000026E6  0C39 0006 00002A3A      2089          CMP.B   #$6,bit2            * SUB longword
000026EE  6700 0026               2090          BEQ     SUBEAHEX2
000026F2  0C39 0007 00002A3A      2091          CMP.B   #$7,bit2            * SUBA longword
000026FA  6700 001A               2092          BEQ     SUBEAHEX2
000026FE                          2093  
000026FE                          2094  SUBEAID
000026FE  43F9 0000292D           2095          LEA     HASH,A1
00002704  103C 000E               2096          MOVE.B  #14,D0
00002708  4E4F                    2097          TRAP    #15
0000270A  6000 FF6E               2098          BRA     SUBEAID2
0000270E                          2099  
0000270E                          2100  SUBEAHEX1  
0000270E                          2101          *absolute address word
0000270E  1E3C 0002               2102          MOVE.B  #2,D7
00002712  6000 000A               2103          BRA     SUBEAHEX3
00002716                          2104  
00002716                          2105  SUBEAHEX2  *absolute address long
00002716  1E3C 0004               2106          MOVE.B  #4,D7
0000271A  6000 0002               2107          BRA     SUBEAHEX3
0000271E                          2108  
0000271E                          2109  SUBEAHEX3
0000271E  BE3C 0000               2110          CMP.B   #0,D7               Compares current addr to ending addr
00002722  6700 FD2E               2111          BEQ     SUBJMPA2            Branches to done if they are equal
00002726                          2112  
00002726                          2113      
00002726  141E                    2114          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002728                          2115          
00002728  1602                    2116          MOVE.B  D2,D3               Copies data at D2 to D3
0000272A                          2117          *   this gets digit in 10's place
0000272A  E80B                    2118          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000272C                          2119          *   this gets digit in 1's place
0000272C  E90A                    2120          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000272E  E80A                    2121          LSR.B   #4,D2               Shifts back right into 1's place
00002730                          2122  
00002730                          2123          
00002730                          2124          *   D3 holds digit in 10's place
00002730                          2125          *   D2 holds digit in 1's place
00002730                          2126          
00002730  1203                    2127          MOVE.B  D3,D1               Displays digit in 10's place first
00002732                          2128  
00002732                          2129          *   converts digits 10+ into letters
00002732                          2130  
00002732  47F9 00002746           2131          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002738  B23C 0009               2132          CMP.B   #9,D1               Compares digit to 9
0000273C  6E00 0146               2133          BGT     CONV                Print out letter representation if greater than 9
00002740                          2134  
00002740  103C 0003               2135          MOVE.B  #3,D0               Displays digit if it is less than A
00002744  4E4F                    2136          TRAP    #15
00002746                          2137          
00002746                          2138  SUBEAHEX4    
00002746  1202                    2139          MOVE.B  D2,D1               Displays digit in 1's place second
00002748                          2140  
00002748                          2141          *   converts digits 10+ into letters
00002748  47F9 0000275C           2142          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
0000274E  B23C 0009               2143          CMP.B   #9,D1               Compares digit to 9
00002752  6E00 0130               2144          BGT     CONV                Print out letter representation if greater than 9
00002756                          2145          
00002756  103C 0003               2146          MOVE.B  #3,D0               Displays digit if it is less than A
0000275A  4E4F                    2147          TRAP    #15
0000275C                          2148          
0000275C                          2149  SUBEAHEX5         
0000275C                          2150  * Display counter -- creates new line every 8 bytes
0000275C                          2151          * D7 is used as counter
0000275C                          2152          
0000275C  5307                    2153          SUB.B   #1,D7                       
0000275E  60BE                    2154          BRA     SUBEAHEX3              Loops back to display next address
00002760                          2155  
00002760                          2156  ***   display EA ends here
00002760                          2157  
00002760                          2158  ******************************************************************************************************
00002760                          2159  * Displays the EA as hex numbers
00002760                          2160  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002760                          2161  * OUTPUT: Displays size of EA reading from A6
00002760                          2162  * Jumps to location stored in A2 when finished
00002760                          2163  DISPEA
00002760  43F9 0000293D           2164          LEA     MHEX,A1
00002766  103C 000E               2165          MOVE.B  #14,D0
0000276A  4E4F                    2166          TRAP    #15
0000276C                          2167  
0000276C  B83C 0002               2168          CMP.B   #$2,D4              Branches to longword display if size is 2
00002770  6700 000A               2169          BEQ     DISPEALONG          Else it will assume word length
00002774                          2170  
00002774                          2171  DISPEAWORD
00002774                          2172          *absolute address word
00002774  1E3C 0002               2173          MOVE.B  #2,D7
00002778  6000 000A               2174          BRA     DISPEA3
0000277C                          2175   
0000277C                          2176  DISPEALONG
0000277C                          2177          *absolute address long
0000277C  1E3C 0004               2178          MOVE.B  #4,D7
00002780  6000 0002               2179          BRA     DISPEA3
00002784                          2180  
00002784                          2181  DISPEA3
00002784  BE3C 0000               2182          CMP.B   #0,D7               Compares current addr to ending addr
00002788  6700 FCC8               2183          BEQ     SUBJMPA2            Branches to done if they are equal
0000278C                          2184  
0000278C                          2185      
0000278C  141E                    2186          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000278E                          2187          
0000278E  1602                    2188          MOVE.B  D2,D3               Copies data at D2 to D3
00002790                          2189          *   this gets digit in 10's place
00002790  E80B                    2190          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002792                          2191          *   this gets digit in 1's place
00002792  E90A                    2192          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002794  E80A                    2193          LSR.B   #4,D2               Shifts back right into 1's place
00002796                          2194  
00002796                          2195          
00002796                          2196          *   D3 holds digit in 10's place
00002796                          2197          *   D2 holds digit in 1's place
00002796                          2198          
00002796  1203                    2199          MOVE.B  D3,D1               Displays digit in 10's place first
00002798                          2200  
00002798                          2201          *   converts digits 10+ into letters
00002798                          2202  
00002798  47F9 000027AC           2203          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
0000279E  B23C 0009               2204          CMP.B   #9,D1               Compares digit to 9
000027A2  6E00 00E0               2205          BGT     CONV                Print out letter representation if greater than 9
000027A6                          2206  
000027A6  103C 0003               2207          MOVE.B  #3,D0               Displays digit if it is less than A
000027AA  4E4F                    2208          TRAP    #15
000027AC                          2209    
000027AC                          2210  DISPEA4
000027AC  1202                    2211          MOVE.B  D2,D1               Displays digit in 1's place second
000027AE                          2212  
000027AE                          2213          *   converts digits 10+ into letters
000027AE  47F9 000027C2           2214          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
000027B4  B23C 0009               2215          CMP.B   #9,D1               Compares digit to 9
000027B8  6E00 00CA               2216          BGT     CONV                Print out letter representation if greater than 9
000027BC                          2217          
000027BC  103C 0003               2218          MOVE.B  #3,D0               Displays digit if it is less than A
000027C0  4E4F                    2219          TRAP    #15
000027C2                          2220        
000027C2                          2221  DISPEA5
000027C2                          2222  * Display counter -- creates new line every 8 bytes
000027C2                          2223          * D7 is used as counter
000027C2                          2224          
000027C2  5307                    2225          SUB.B   #1,D7                       
000027C4  60BE                    2226          BRA     DISPEA3              Loops back to display next address
000027C6                          2227  
000027C6                          2228  ***   display EA ends here
000027C6                          2229  
000027C6                          2230  
000027C6                          2231  ********************************************************************
000027C6                          2232  * Invalid op-code handling
000027C6                          2233  * Displays DATA YYYY
000027C6                          2234  *  YYYY represents the op-code that failed
000027C6                          2235  INVOPCODE
000027C6  DE1E                    2236          ADD.B   (A6)+,D7
000027C8                          2237  
000027C8                          2238  INVOP
000027C8  43F9 0000299D           2239          LEA     MDATA,A1
000027CE  103C 000E               2240          MOVE.B  #14,D0
000027D2  4E4F                    2241          TRAP    #15
000027D4  43F9 0000291F           2242          LEA     TAB,A1
000027DA  103C 000E               2243          MOVE.B  #14,D0
000027DE  4E4F                    2244          TRAP    #15
000027E0  43F9 0000293D           2245          LEA     MHEX,A1
000027E6  103C 000E               2246          MOVE.B  #14,D0
000027EA  4E4F                    2247          TRAP    #15
000027EC                          2248          
000027EC  1C3C 0002               2249          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
000027F0                          2250          
000027F0  3407                    2251          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
000027F2  E04A                    2252          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
000027F4  6000 0004               2253          BRA     INVOP2              Skips the second part to do later
000027F8                          2254  
000027F8                          2255  INVOP1
000027F8  1407                    2256          MOVE.B  D7,D2
000027FA                          2257  INVOP2
000027FA  1602                    2258          MOVE.B  D2,D3               Copies data at D2 to D3
000027FC                          2259          *   this gets digit in 10's place
000027FC  E80B                    2260          LSR.B   #4,D3               Shifts right to get rid of 1's place
000027FE                          2261          *   this gets digit in 1's place
000027FE  E90A                    2262          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002800  E80A                    2263          LSR.B   #4,D2               Shifts back right into 1's place
00002802                          2264  
00002802                          2265          
00002802                          2266          *   D3 holds digit in 10's place
00002802                          2267          *   D2 holds digit in 1's place
00002802                          2268          
00002802  1203                    2269          MOVE.B  D3,D1               Displays digit in 10's place first
00002804                          2270  
00002804                          2271          *   converts digits 10+ into letters
00002804                          2272  
00002804  47F9 00002818           2273          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
0000280A  B23C 0009               2274          CMP.B   #9,D1               Compares digit to 9
0000280E  6E00 0074               2275          BGT     CONV                Print out letter representation if greater than 9
00002812                          2276  
00002812  103C 0003               2277          MOVE.B  #3,D0               Displays digit if it is less than A
00002816  4E4F                    2278          TRAP    #15
00002818                          2279          
00002818                          2280  INVOP3   
00002818  1202                    2281          MOVE.B  D2,D1               Displays digit in 1's place second
0000281A                          2282  
0000281A                          2283          *   converts digits 10+ into letters
0000281A  47F9 0000282E           2284          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002820  B23C 0009               2285          CMP.B   #9,D1               Compares digit to 9
00002824  6E00 005E               2286          BGT     CONV                Print out letter representation if greater than 9
00002828                          2287          
00002828  103C 0003               2288          MOVE.B  #3,D0               Displays digit if it is less than A
0000282C  4E4F                    2289          TRAP    #15
0000282E                          2290          
0000282E                          2291  INVOP4
0000282E                          2292  * Display counter -- creates new line every 8 bytes
0000282E                          2293          * D6 is used as counter
0000282E                          2294          
0000282E  5306                    2295          SUB.B   #1,D6
00002830  BC3C 0000               2296          CMP.B   #0,D6
00002834  6700 0004               2297          BEQ     ENDNEWLINE
00002838  60BE                    2298          BRA     INVOP1              Loops back to display next address
0000283A                          2299  
0000283A                          2300  
0000283A                          2301  ******************************************************************************************************
0000283A                          2302  * Creates a new line after an op-code is displayed, loops back to start to display next code
0000283A                          2303  ENDNEWLINE
0000283A  43F9 0000291C           2304          LEA     NEWLINE,A1          Creates a new line in output window
00002840  103C 000E               2305          MOVE.B  #14,D0
00002844  4E4F                    2306          TRAP    #15
00002846                          2307  
00002846  5339 00002A37           2308          SUB.B   #1,dispcount
0000284C  0C39 0000 00002A37      2309          CMP.B   #0,dispcount               Checks if display counter is zero
00002854  6600 E7BE               2310          BNE     NEWADDR
00002858                          2311  
00002858                          2312  * Asks user to press enter to continue
00002858                          2313  * Resets counter
00002858  43F9 0000291C           2314          LEA     NEWLINE,A1          Creates a new line in output window
0000285E  103C 000E               2315          MOVE.B  #14,D0
00002862  4E4F                    2316          TRAP    #15
00002864                          2317          
00002864  43F9 00002A1B           2318          LEA     MCONT,A1            Asks user to press enter to continue
0000286A  103C 000E               2319          MOVE.B  #14,D0
0000286E  4E4F                    2320          TRAP    #15
00002870                          2321  
00002870  103C 0004               2322          MOVE.B  #4,D0               Takes in user input
00002874  4E4F                    2323          TRAP    #15
00002876  4281                    2324          CLR.L   D1                  Clears D1 incase user decides to input something
00002878                          2325  
00002878  13FC 001E 00002A37      2326          MOVE.B  #dispnum,dispcount  Resets display counter
00002880  6000 E792               2327          BRA     NEWADDR             Loops back to beginning
00002884                          2328  
00002884                          2329  
00002884                          2330  ******************************************************************************************************
00002884                          2331  * Converts decimal number into hex and displays it
00002884                          2332  *   converts number 10-15 to A-F
00002884                          2333  *   INPUT: decimal number in D1
00002884                          2334  *   OUTPUT: HEX number to output
00002884  B23C 000A               2335  CONV    CMP.B   #10,D1              Displays 10 as A
00002888  6700 002A               2336          BEQ     HEXA
0000288C  B23C 000B               2337          CMP.B   #11,D1              Displays 11 as B
00002890  6700 002C               2338          BEQ     HEXB
00002894  B23C 000C               2339          CMP.B   #12,D1              Displays 12 as C
00002898  6700 002E               2340          BEQ     HEXC
0000289C  B23C 000D               2341          CMP.B   #13,D1              Displays 13 as D
000028A0  6700 0030               2342          BEQ     HEXD
000028A4  B23C 000E               2343          CMP.B   #14,D1              Displays 14 as E
000028A8  6700 0032               2344          BEQ     HEXE
000028AC  B23C 000F               2345          CMP.B   #15,D1              Displays 15 as F
000028B0  6700 0034               2346          BEQ     HEXF
000028B4                          2347  
000028B4  43F9 0000292F           2348  HEXA    LEA     DISPA,A1            Loads A character
000028BA  6000 0034               2349          BRA     PRINT
000028BE                          2350    
000028BE  43F9 00002931           2351  HEXB    LEA     DISPB,A1            Loads B character
000028C4  6000 002A               2352          BRA     PRINT
000028C8                          2353  
000028C8  43F9 00002933           2354  HEXC    LEA     DISPC,A1            Loads C character
000028CE  6000 0020               2355          BRA     PRINT
000028D2                          2356  
000028D2  43F9 00002935           2357  HEXD    LEA     DISPD,A1            Loads D character
000028D8  6000 0016               2358          BRA     PRINT
000028DC                          2359  
000028DC  43F9 00002937           2360  HEXE    LEA     DISPE,A1            Loads E character
000028E2  6000 000C               2361          BRA     PRINT
000028E6                          2362  
000028E6  43F9 00002939           2363  HEXF    LEA     DISPF,A1            Loads F character
000028EC  6000 0002               2364          BRA     PRINT
000028F0                          2365  
000028F0  103C 000E               2366  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000028F4  4E4F                    2367          TRAP    #15                 Prints out message in A1
000028F6  4ED3                    2368          JMP     (A3)
000028F8                          2369  
000028F8  43F9 000029E9           2370  ERROR   LEA     MERROR,A1
000028FE  103C 000E               2371          MOVE.B  #14,D0
00002902  4E4F                    2372          TRAP    #15
00002904  6000 000E               2373          BRA     EXIT
00002908                          2374  
00002908  43F9 00002A00           2375  DONE    LEA     MDONE,A1
0000290E  103C 000E               2376          MOVE.B  #14,D0
00002912  4E4F                    2377          TRAP    #15
00002914                          2378  
00002914  103C 0009               2379  EXIT    MOVE.B  #9,D0
00002918  4E4F                    2380          TRAP    #15
0000291A                          2381  
0000291A                          2382  ************************************ Output stuff **************************************
0000291A                          2383  * Stuff for output
0000291A                          2384  
0000291A  =0000000D               2385  CR      EQU     $0D
0000291A  =0000000A               2386  LF      EQU     $0A
0000291A                          2387  
0000291A= 20 00                   2388  SPACE       DC.B    ' ',0
0000291C= 0D 0A 00                2389  NEWLINE     DC.B    '',CR,LF,0
0000291F= 20 20 20 00             2390  TAB         DC.B    '   ',0
00002923= 2C 00                   2391  COMMA       DC.B    ',',0
00002925= 28 00                   2392  OPENBRA     DC.B    '(',0
00002927= 29 00                   2393  CLOSEBRA    DC.B    ')',0
00002929= 2B 00                   2394  POS         DC.B    '+',0
0000292B= 2D 00                   2395  NEG         DC.B    '-',0
0000292D= 23 00                   2396  HASH        DC.B    '#',0
0000292F                          2397  
0000292F                          2398  
0000292F= 41 00                   2399  DISPA       DC.B    'A',0
00002931= 42 00                   2400  DISPB       DC.B    'B',0
00002933= 43 00                   2401  DISPC       DC.B    'C',0
00002935= 44 00                   2402  DISPD       DC.B    'D',0
00002937= 45 00                   2403  DISPE       DC.B    'E',0
00002939= 46 00                   2404  DISPF       DC.B    'F',0
0000293B                          2405  
0000293B= 2E 00                   2406  MDOT        DC.B    '.',0
0000293D= 24 00                   2407  MHEX        DC.B    '$',0
0000293F= 42 20 00                2408  MBYTE       DC.B    'B ',0
00002942= 57 20 00                2409  MWORD       DC.B    'W ',0
00002945= 4C 20 00                2410  MLONG       DC.B    'L ',0
00002948= 44 00                   2411  MDN         DC.B    'D',0
0000294A= 41 00                   2412  MAN         DC.B    'A',0
0000294C                          2413  
0000294C= 4A 53 52 00             2414  MJSR        DC.B    'JSR',0
00002950= 42 54 53 54 00          2415  MBTST       DC.B    'BTST',0
00002955= 52 4F 4C 00             2416  MROL        DC.B    'ROL',0
00002959= 52 4F 52 00             2417  MROR        DC.B    'ROR',0
0000295D= 4C 53 4C 00             2418  MLSL        DC.B    'LSL',0
00002961= 4C 53 52 00             2419  MLSR        DC.B    'LSR',0
00002965= 4E 45 47 2E 00          2420  MMNEGW      DC.B    'NEG.',0
0000296A= 44 49 56 53 2E 57 00    2421  MMDIVSW     DC.B    'DIVS.W',0
00002971= 4D 55 4C 53 2E 57 00    2422  MMULSW      DC.B    'MULS.W',0
00002978= 4D 4F 56 45 2E 42 00    2423  MMOVEB      DC.B    'MOVE.B',0
0000297F= 4D 4F 56 45 2E 57 00    2424  MMOVEW      DC.B    'MOVE.W',0
00002986= 4D 4F 56 45 2E 4C 00    2425  MMOVEL      DC.B    'MOVE.L',0
0000298D= 4D 4F 56 45 41 2E ...   2426  MMOVEAW     DC.B    'MOVEA.W',0
00002995= 4D 4F 56 45 41 2E ...   2427  MMOVEAL     DC.B    'MOVEA.L',0
0000299D                          2428  
0000299D= 44 41 54 41 00          2429  MDATA       DC.B    'DATA',0
000029A2= 53 55 42 2E 00          2430  MSUB        DC.B    'SUB.',0
000029A7= 53 55 42 41 2E 00       2431  MSUBA       DC.B    'SUBA.',0
000029AD= 41 4E 44 2E 00          2432  MAND        DC.B    'AND.',0
000029B2= 41 44 44 2E 00          2433  MADD        DC.B    'ADD.',0
000029B7= 53 55 42 49 2E 00       2434  MSUBI       DC.B    'SUBI.',0
000029BD= 4F 52 49 2E 00          2435  MORI        DC.B    'ORI.',0
000029C2= 4E 4F 54 2E 00          2436  MNOT        DC.B    'NOT.',0
000029C7= 4D 55 4C 53 2E 00       2437  MMUL        DC.B    'MULS.',0
000029CD= 4E 45 47 00             2438  MNEG        DC.B    'NEG',0
000029D1                          2439  
000029D1= 42 45 51 00             2440  MBEQ        DC.B    'BEQ',0
000029D5= 42 4E 45 00             2441  MBNE        DC.B    'BNE',0
000029D9= 42 4C 54 00             2442  MBLT        DC.B    'BLT',0
000029DD= 42 48 49 00             2443  MBHI        DC.B    'BHI',0
000029E1= 42 52 41 00             2444  MBRA        DC.B    'BRA',0
000029E5= 4E 4F 50 00             2445  MNOP        DC.B    'NOP',0
000029E9                          2446  
000029E9= 45 52 52 4F 52 3A ...   2447  MERROR      DC.B    'ERROR: Something broke',0
00002A00= 43 4F 4D 50 4C 45 ...   2448  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00002A1B= 2A 2A 50 52 45 53 ...   2449  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00002A37                          2450  
00002A37                          2451  
00002A37                          2452  ********************************** MEMORY STORAGE **********************************************
00002A37                          2453  * Stores memory locations at the end of the program
00002A37                          2454  * How DS works: Give it a variable name.
00002A37                          2455  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00002A37                          2456  *   Last is the number of storage you want. 
00002A37                          2457  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00002A37                          2458  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00002A37                          2459  *            
00002A37                          2460  
00002A37                          2461  dispcount   DS.B    1           Used to count display lines
00002A38                          2462  
00002A38                          2463  bit0        DS.B    1           SEE NOTE UP TOP
00002A39                          2464  bit1        DS.B    1           SEE NOTE UP TOP
00002A3A                          2465  bit2        DS.B    1           SEE NOTE UP TOP
00002A3B                          2466  bit3        DS.B    1           SEE NOTE UP TOP
00002A3C                          2467  bit4        DS.B    1           SEE NOTE UP TOP
00002A3D                          2468  
00002A3D                          2469  
00002A3D                          2470      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1476
ADDIMD0             14A6
ADDIMD1             14B4
ADDIMD4             14C2
ADDIMDDES           1530
ADDIMDDES0          1554
ADDIMDDES1          1562
ADDIMDDES4          1570
ADDR1               7000
ADDR2               726C
BCC                 1E64
BCCBEQ              1EE0
BCCBHI              1EFE
BCCBLT              1EF4
BCCBNE              1EEA
BCCBRA              1ED6
BCCDISP             1EAA
BCCLONG             1E92
BCCNEXT             1E9A
BCCPRINT            1F08
BCCWORD             1E8A
BIT0                2A38
BIT1                2A39
BIT2                2A3A
BIT3                2A3B
BIT4                2A3C
BTST                1184
CLOSEBRA            2927
CODE                10E8
COMMA               2923
CONV                2884
CR                  D
DISPA               292F
DISPADDR1           1032
DISPADDR2           1034
DISPADDR3           1068
DISPADDR4           107E
DISPADDR5           1094
DISPADDR6           10AA
DISPADDREND         10B4
DISPADDRSTART       1026
DISPB               2931
DISPC               2933
DISPCOUNT           2A37
DISPD               2935
DISPE               2937
DISPEA              2760
DISPEA3             2784
DISPEA4             27AC
DISPEA5             27C2
DISPEALONG          277C
DISPEAWORD          2774
DISPF               2939
DISPNUM             1E
DIVSW               1A20
DONE                2908
ENDNEWLINE          283A
ENDNLINC            1992
ERROR               28F8
EXIT                2914
HANDLEDES           14D8
HASH                292D
HEXA                28B4
HEXB                28BE
HEXC                28C8
HEXD                28D2
HEXE                28DC
HEXF                28E6
IMD                 1F18
IMD2                1F40
IMD3                1F48
IMD4                1F54
IMDBYTE             1FC2
IMDEA               1FEA
IMDEA2              2006
IMDEA3              201C
IMDLONG             1FE0
IMDPRINT            1F8E
IMDPRINTEND         1FBA
IMDPRINTORI         1FA6
IMDPRINTSUBI        1FB0
IMDWORD             1FD2
INVOP               27C8
INVOP1              27F8
INVOP2              27FA
INVOP3              2818
INVOP4              282E
INVOPCODE           27C6
JSR                 1144
LF                  A
LSLR                1C04
LSLRDESD            1882
LSLRMEM             1D22
LSLRSRCD            185A
MADD                29B2
MAN                 294A
MAND                29AD
MBEQ                29D1
MBHI                29DD
MBLT                29D9
MBNE                29D5
MBRA                29E1
MBTST               2950
MBYTE               293F
MCONT               2A1B
MDATA               299D
MDN                 2948
MDONE               2A00
MDOT                293B
MERROR              29E9
MHEX                293D
MISC                2020
MISCBIT2            2068
MISCBIT3            2074
MISCBYTE            20DA
MISCEA              2108
MISCEA2             2124
MISCLONG            20FC
MISCNOP             2080
MISCNOT             2090
MISCNOT2            2098
MISCNOT3            20A0
MISCNOT4            20AC
MISCPRINT           2128
MISCPRINTEND        2154
MISCPRINTNEG        214A
MISCPRINTNOT        2140
MISCWORD            20EC
MJSR                294C
MLONG               2945
MLSL                295D
MLSR                2961
MMDIVSW             296A
MMNEGW              2965
MMOVEAL             2995
MMOVEAW             298D
MMOVEB              2978
MMOVEL              2986
MMOVEW              297F
MMUL                29C7
MMULSW              2971
MNEG                29CD
MNOP                29E5
MNOT                29C2
MORI                29BD
MOVB                13F2
MOVBDN1             17CE
MOVBDN2             196E
MOVEAL              139E
MOVEAN1             1586
MOVEAN2             189E
MOVEAW              12BE
MOVEIAN1            15FA
MOVEIAND1           172E
MOVEIANI1           168E
MOVIAN2             18BA
MOVIAND2            192E
MOVIANI2            18EE
MOVL                1312
MOVW                1232
MROL                2955
MROR                2959
MSUB                29A2
MSUBA               29A7
MSUBI               29B7
MULSW               1996
MWORD               2942
NEG                 292B
NEGW                1AAE
NEWADDR             1014
NEWLINE             291C
OPENBRA             2925
POS                 2929
PRINT               28F0
PRINTB              1D60
PRINTBYTE           1B08
PRINTL              1DC8
PRINTLONG           1BB0
PRINTLSL            1CEE
PRINTLSLRCOUNT      1DFC
PRINTLSR            1E30
PRINTROL            1C86
PRINTROR            1CBA
PRINTW              1D94
PRINTWORD           1B5C
RORL                1C6E
SPACE               291A
START               1000
SUB                 215C
SUB1                218E
SUB2                2170
SUB3                2178
SUB4                2182
SUBA                23BA
SUBACHECK           21CA
SUBAN               2524
SUBAN2              2540
SUBANID             255C
SUBANIDNEG          25D0
SUBANIDPOS          2590
SUBDN               24EC
SUBDN2              2508
SUBEA               2610
SUBEAHEX            266E
SUBEAHEX1           270E
SUBEAHEX2           2716
SUBEAHEX3           271E
SUBEAHEX4           2746
SUBEAHEX5           275C
SUBEAID             26FE
SUBEAID2            267A
SUBERRORTEST1       24AA
SUBERRORTEST11      24EA
SUBJMPA2            2452
SUBPRINT            2454
SUBPRINTADD         2498
SUBPRINTAND         2488
SUBPRINTEND         24A8
SUBPRINTSUB         2478
SUBSIZE1            222A
SUBSIZE11           2250
SUBSIZE12           2266
SUBSIZE2            226A
SUBSIZE21           2290
SUBSIZE22           22A6
SUBSIZE3            22AA
SUBSIZE31           22D0
SUBSIZE32           22E6
SUBSIZE4            22EA
SUBSIZE41           2314
SUBSIZE42           232A
SUBSIZE5            232E
SUBSIZE51           2358
SUBSIZE52           236E
SUBSIZE6            2372
SUBSIZE61           23A0
SUBSIZE62           23B6
SUBSIZE7            23DE
SUBSIZE71           2400
SUBSIZE72           2416
SUBSIZE8            241A
SUBSIZE81           243A
SUBSIZE82           244E
TAB                 291F
