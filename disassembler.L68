00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/4/2015 4:05:27 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * 
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  *
00000000                            43  * 
00000000                            44  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            45  * MOVEA                 3846
00000000                            46  * MULS                  CFC6
00000000                            47  * DIVS                  85C3
00000000                            48  * NEG                   4443
00000000                            49  * LSL                   E76A
00000000                            50  * LSR                   E66A
00000000                            51  * ROL
00000000                            52  * ROR
00000000                            53  * BTST     EXTRA TAB    IMMEDIATE DATA 0702
00000000                            54  ****************************************************************************
00000000                            55  
00000000                            56  
00000000                            57  * sets start and end address
00000000                            58  * temp hard code
00000000                            59  * make UI later for input
00000000  =00007000                 60  addr1       EQU     $7000
00000000                            61  *addr2   EQU     $703C
00000000  =0000726C                 62  addr2       EQU     $726C
00000000  =0000001E                 63  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            64  
00000000                            65  
00001000                            66      ORG    $1000
00001000                            67  START:                  ; first instruction of program
00001000                            68  
00001000                            69          
00001000                            70  
00001000                            71  
00001000                            72          *   this stores some test EA into memory
00001000                            73          *LEA     addr1,A1
00001000                            74          *MOVE.W  #$0440,(A1)+        *917C
00001000                            75          *MOVE.W  #$917C,(A1)+       
00001000                            76          *MOVE.L  #$5555A7FF,(A1)+
00001000                            77          *MOVE.W  #$9078,(A1)+
00001000                            78          *MOVE.W  #$5555,(A1)+
00001000                            79          
00001000                            80  
00001000                            81          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            82          
00001000                            83          *MOVE.L  #$6700F0D8,$7000
00001000                            84          *MOVE.W  #$4E71,$7000         NOP
00001000                            85  
00001000                            86          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            87  
00001000  21FC 48E3F5FA 7000        88          MOVE.L  #$48E3F5FA,$7000
00001008                            89  
00001008                            90  *********************************************************************************************************************
00001008                            91  * Takes in user start and end address
00001008                            92  
00001008                            93  IOSTART
00001008                            94  *   Displays message asking for address
00001008  43F9 00002D19             95          LEA     MADDR1,A1           Loads message to retrieve first number
0000100E  6100 0020                 96          BSR     IOGETADDR
00001012                            97  
00001012  0804 0000                 98          BTST    #0,D4               Checks of the starting address is an odd number
00001016  6600 0090                 99          BNE     IOERROR4            Throws an error if it is because it will crash
0000101A                           100  
0000101A  2E04                     101          MOVE.L  D4,D7               Moves starting address to D7 for now
0000101C  43F9 00002D3C            102          LEA     MADDR2,A1           Then grabs the ending address
00001022  6100 000C                103          BSR     IOGETADDR
00001026  B887                     104          CMP.L   D7,D4               Compares the start address to end address
00001028  6E00 008E                105          BGT     DISPADDR            Continues if start < end
0000102C  6000 004C                106          BRA     IOERROR1            Error if not
00001030                           107  
00001030                           108  IOGETADDR
00001030  2649                     109          MOVEA.L A1,A3               Saves the message incase of an error
00001032  103C 000E                110          MOVE.B  #14,D0              Prepares to display message
00001036  4E4F                     111          TRAP    #15                 Displays message
00001038                           112  
00001038  4244                     113          CLR     D4                  Clears D4 register to prevent errors
0000103A                           114  
0000103A  43F9 00002E76            115          LEA     startaddr,A1        Uses this memory location to store the data
00001040  103C 0002                116          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001044  4E4F                     117          TRAP    #15
00001046                           118  
00001046  B23C 0008                119          CMP.B   #8,D1               Throws an error if the input is longer than a longword
0000104A  6E00 003C                120          BGT     IOERROR2
0000104E  1A01                     121          MOVE.B  D1,D5               Moves the length of the input to D5
00001050                           122  
00001050                           123  IOSTARTLOOP
00001050  45F9 00002E76            124          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
00001056                           125  
00001056                           126  IOLOOP
00001056  141A                     127          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001058  5305                     128          SUB.B   #1,D5               Subtract 1 from counter
0000105A  6100 1A44                129          BSR     DEC2HEX             Converts decimal to hex number
0000105E  B23C 000F                130          CMP.B   #$F,D1
00001062  6700 0034                131          BEQ     IOERROR3
00001066                           132  
00001066  1C05                     133          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001068  CDFC 0004                134          MULS    #4,D6               Multiply by 4 to find number of shifts left
0000106C                           135          
0000106C  EDAB                     136          LSL.L   D6,D3               Shifts hex left
0000106E  D883                     137          ADD.L   D3,D4               Adds number to new total
00001070                           138          
00001070  7600                     139          MOVE.L  #0,D3               Clears D3 to prevent errors
00001072                           140          
00001072  BA3C 0000                141          CMP.B   #0,D5               Compares counter to 0    
00001076  66DE                     142          BNE     IOLOOP              Otherwise will loop
00001078  4E75                     143          RTS
0000107A                           144  
0000107A                           145  * Error message for start address greater than end address
0000107A                           146  IOERROR1
0000107A  43F9 00002D7F            147          LEA     MIOERR1,A1
00001080  103C 000D                148          MOVE.B  #13,D0
00001084  4E4F                     149          TRAP    #15
00001086  6080                     150          BRA     IOSTART
00001088                           151  
00001088                           152  * Error message if user input address is longer than longword
00001088                           153  IOERROR2
00001088  43F9 00002DB7            154          LEA     MIOERR2,A1
0000108E  103C 000D                155          MOVE.B  #13,D0
00001092  4E4F                     156          TRAP    #15
00001094  224B                     157          MOVEA.L A3,A1
00001096  6098                     158          BRA     IOGETADDR
00001098                           159  
00001098                           160  * Error message if user enters non-valid hex numbers
00001098                           161  IOERROR3
00001098  43F9 00002DEA            162          LEA     MIOERR3,A1
0000109E  103C 000D                163          MOVE.B  #13,D0
000010A2  4E4F                     164          TRAP    #15
000010A4  224B                     165          MOVEA.L A3,A1
000010A6  6088                     166          BRA     IOGETADDR
000010A8                           167  
000010A8                           168  * Error message for odd numbered addresses
000010A8                           169  IOERROR4
000010A8  43F9 00002E06            170          LEA     MIOERR4,A1
000010AE  103C 000D                171          MOVE.B  #13,D0
000010B2  4E4F                     172          TRAP    #15
000010B4  6000 FF52                173          BRA     IOSTART
000010B8                           174  
000010B8                           175  ******************************************** displays address location***********************************************
000010B8                           176  * This displays the address location of the op-code being worked on
000010B8                           177  * A6 is used as current address
000010B8                           178  DISPADDR
000010B8  23C7 00002E76            179          MOVE.L  D7,startaddr
000010BE  23C4 00002E7A            180          MOVE.L  D4,endaddr
000010C4  6100 188A                181          BSR     CLRDN
000010C8  2C79 00002E76            182          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010CE  13FC 001E 00002E74       183          MOVE.B  #dispnum,dispcount  Sets display line counter
000010D6                           184  
000010D6  43F9 00002C26            185          LEA     NEWLINE,A1          Creates a new line in output window
000010DC  103C 000E                186          MOVE.B  #14,D0
000010E0  4E4F                     187          TRAP    #15
000010E2                           188  
000010E2                           189  NEWADDR
000010E2  2E0E                     190          MOVE.L  A6,D7               Loads the current address into D7
000010E4  BEB9 00002E7A            191          CMP.L   endaddr,D7          Compares current address to end address
000010EA  6E00 1ACA                192          BGT     ASK4REPEAT          Branches to done if current address > end address
000010EE  45F9 00001182            193          LEA     DISPADDREND,A2
000010F4                           194  
000010F4                           195  ************************************************
000010F4                           196  * Displays address as HEX
000010F4                           197  * INPUT: address stored into D7
000010F4                           198  * OUTPUT: prints hex address to output window
000010F4                           199  DISPADDRSTART
000010F4  1C3C 0002                200          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F8  2407                     201          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010FA  4842                     202          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010FC  6000 0004                203          BRA     DISPADDR2           Skips the second part to do later
00001100                           204  
00001100                           205  DISPADDR1
00001100  3407                     206          MOVE.W  D7,D2
00001102                           207  DISPADDR2
00001102  3202                     208          MOVE.W  D2,D1               D1 will be the first byte of the word
00001104  3602                     209          MOVE.W  D2,D3               D3 will be the second byte of the word
00001106  3802                     210          MOVE.W  D2,D4               D4 will be the third byte of the word
00001108  3A02                     211          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000110A                           212  
0000110A  E049                     213          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000110C  E849                     214          LSR.W   #4,D1
0000110E  E94B                     215          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001110  E04B                     216          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001112  E84B                     217          LSR.W   #4,D3
00001114  E14C                     218          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001116  E04C                     219          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001118  E84C                     220          LSR.W   #4,D4
0000111A  E14D                     221          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000111C  E94D                     222          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000111E  E04D                     223          LSR.W   #8,D5
00001120  E84D                     224          LSR.W   #4,D5
00001122                           225          
00001122                           226          
00001122  47F9 00001136            227          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001128  B23C 0009                228          CMP.B   #9,D1               Compares digit to 9
0000112C  6E00 18FE                229          BGT     CONV                Print out letter representation if greater than 9
00001130                           230  
00001130  103C 0003                231          MOVE.B  #3,D0               Displays digit if it is less than A
00001134  4E4F                     232          TRAP    #15
00001136                           233          
00001136                           234  DISPADDR3   
00001136  1203                     235          MOVE.B  D3,D1               Displays digit in 1's place second
00001138                           236  
00001138                           237          *   converts digits 10+ into letters
00001138  47F9 0000114C            238          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
0000113E  B23C 0009                239          CMP.B   #9,D1               Compares digit to 9
00001142  6E00 18E8                240          BGT     CONV                Print out letter representation if greater than 9
00001146                           241          
00001146  103C 0003                242          MOVE.B  #3,D0               Displays digit if it is less than A
0000114A  4E4F                     243          TRAP    #15
0000114C                           244  
0000114C                           245  DISPADDR4
0000114C  1204                     246          MOVE.B  D4,D1               Displays digit in 1's place second
0000114E                           247  
0000114E                           248          *   converts digits 10+ into letters
0000114E  47F9 00001162            249          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001154  B23C 0009                250          CMP.B   #9,D1               Compares digit to 9
00001158  6E00 18D2                251          BGT     CONV                Print out letter representation if greater than 9
0000115C                           252          
0000115C  103C 0003                253          MOVE.B  #3,D0               Displays digit if it is less than A
00001160  4E4F                     254          TRAP    #15
00001162                           255  
00001162                           256  DISPADDR5
00001162  1205                     257          MOVE.B  D5,D1               Displays digit in 1's place second
00001164                           258  
00001164                           259          *   converts digits 10+ into letters
00001164  47F9 00001178            260          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000116A  B23C 0009                261          CMP.B   #9,D1               Compares digit to 9
0000116E  6E00 18BC                262          BGT     CONV                Print out letter representation if greater than 9
00001172                           263          
00001172  103C 0003                264          MOVE.B  #3,D0               Displays digit if it is less than A
00001176  4E4F                     265          TRAP    #15
00001178                           266          
00001178                           267  DISPADDR6
00001178                           268  * Display counter -- creates new line every 8 bytes
00001178                           269          * D6 is used as counter
00001178                           270          
00001178  5306                     271          SUB.B   #1,D6
0000117A  BC3C 0000                272          CMP.B   #0,D6
0000117E  6680                     273          BNE     DISPADDR1
00001180                           274  
00001180  4ED2                     275          JMP     (A2)                Jumps to address stored in A2 when complete
00001182                           276  
00001182                           277  DISPADDREND
00001182  43F9 00002C29            278          LEA     TAB,A1
00001188  103C 000E                279          MOVE.B  #14,D0
0000118C  4E4F                     280          TRAP    #15
0000118E                           281          
0000118E                           282  *********************************************************************************************************************
0000118E                           283  * Splits the first byte of the op code into nibbles
0000118E                           284  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000118E                           285  
0000118E  4281                     286          CLR.L   D1                  Clears the data registers
00001190  4282                     287          CLR.L   D2
00001192  4283                     288          CLR.L   D3
00001194  4284                     289          CLR.L   D4
00001196  4285                     290          CLR.L   D5
00001198  4286                     291          CLR.L   D6
0000119A  3C16                     292          MOVE.W  (A6),D6
0000119C  141E                     293          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000119E                           294    
0000119E  1E02                     295          MOVE.B  D2,D7
000011A0  E14F                     296          LSL.W   #8,D7
000011A2                           297          
000011A2  1602                     298          MOVE.B  D2,D3               Copies data at D2 to D3
000011A4                           299          *   this gets digit in 10's place
000011A4  E80B                     300          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011A6                           301          *   this gets digit in 1's place
000011A6  E90A                     302          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A8  E80A                     303          LSR.B   #4,D2               Shifts back right into 1's place
000011AA                           304          
000011AA                           305          *   D3 holds digit in 10's place
000011AA                           306          *   D2 holds digit in 1's place
000011AA                           307  
000011AA                           308          *   Moves second nibble to D5 to be used later
000011AA  1A02                     309          MOVE.B  D2,D5
000011AC  13C3 00002E7E            310          MOVE.B  D3,bit0
000011B2                           311          *   Goes to a branch-table to figure out which op code it is
000011B2  6000 0002                312          BRA     CODE
000011B6                           313  
000011B6                           314  ******************************************************************************************************
000011B6                           315  *   This is where the table goes to detirmine which op-code to use
000011B6                           316  CODE    
000011B6  B63C 0000                317          CMP.B   #$0,D3              Goes to immediate operation section
000011BA  6700 0E32                318          BEQ     IMD
000011BE  B63C 0004                319          CMP.B   #$4,D3              Goes to miscellaneous section
000011C2  6700 0F5E                320          BEQ     MISC
000011C6  B63C 0006                321          CMP.B   #$6,D3
000011CA  6700 0D6E                322          BEQ     BCC
000011CE  B63C 0009                323          CMP.B   #$9,D3              Goes to sub section
000011D2  6700 10A2                324          BEQ     SUB
000011D6  B63C 000C                325          CMP.B   #$C,D3              Goes to sub but displays as AND
000011DA  6700 109A                326          BEQ     SUB
000011DE  B63C 000D                327          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011E2  6700 1092                328          BEQ     SUB
000011E6  B63C 000B                329          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011EA  6700 108A                330          BEQ     SUB
000011EE  B63C 0001                331          CMP.B   #$1,D3
000011F2  6700 02D4                332          BEQ     MOVB                Goes to movb
000011F6  B63C 0003                333          CMP.B   #$3,D3
000011FA  6700 010C                334          BEQ     MOVW                Goes to movb
000011FE  B63C 0002                335          CMP.B   #$2,D3
00001202  6700 01E4                336          BEQ     MOVL                Goes to movb
00001206  B63C 0008                337          CMP.B   #$8,D3
0000120A  6700 08EA                338          BEQ     DIVSW               Goes to divsw
0000120E  B63C 000E                339          CMP.B   #$E,D3
00001212  6700 0AC6                340          BEQ     LSLR                Goes to divsw
00001216                           341  
00001216  6000 174A                342          BRA     INVOPCODE
0000121A                           343          
0000121A                           344  JSR
0000121A  43F9 00002C56            345          LEA MJSR,A1
00001220  103C 000E                346          MOVE.B  #14,D0
00001224  4E4F                     347          TRAP    #15 
00001226                           348          
00001226  1406                     349          MOVE.B  D6,D2
00001228  EB0A                     350          LSL.B   #5,D2
0000122A  EA0A                     351          LSR.B   #5,D2
0000122C  13C2 00002E82            352          MOVE.B  D2,bit4
00001232                           353          
00001232  1406                     354          MOVE.B  D6,D2
00001234  E50A                     355          LSL.B   #2,D2
00001236  EA0A                     356          LSR.B   #5,D2
00001238  13C2 00002E81            357          MOVE.B  D2,bit3
0000123E                           358  
0000123E  183C 0003                359          MOVE.B  #$3,D4
00001242                           360  
00001242  0C39 0002 00002E81       361          CMP.B   #$2,bit3
0000124A  6700 0484                362          BEQ     MOVEIAN1
0000124E  0C39 0007 00002E81       363          CMP.B   #$7,bit3
00001256  6700 02F4                364          BEQ     ADDIMD
0000125A                           365          
0000125A                           366  BTST 
0000125A  43F9 00002C5A            367          LEA MBTST,A1
00001260  103C 000E                368          MOVE.B  #14,D0
00001264  4E4F                     369          TRAP    #15 
00001266                           370          
00001266  1406                     371          MOVE.B  D6,D2
00001268  EB0A                     372          LSL.B   #5,D2
0000126A  EA0A                     373          LSR.B   #5,D2
0000126C  13C2 00002E82            374          MOVE.B  D2,bit4
00001272                           375          
00001272  1406                     376          MOVE.B  D6,D2
00001274  E50A                     377          LSL.B   #2,D2
00001276  EA0A                     378          LSR.B   #5,D2
00001278  13C2 00002E81            379          MOVE.B  D2,bit3
0000127E                           380          
0000127E  3406                     381          MOVE.W  D6,D2
00001280  E94A                     382          LSL.W   #4,D2
00001282  E04A                     383          LSR.W   #8,D2
00001284  EA4A                     384          LSR.W   #5,D2
00001286  13C2 00002E7F            385          MOVE.B  D2,bit1
0000128C                           386          
0000128C  43F9 00002C29            387          LEA TAB,A1
00001292  103C 000E                388          MOVE.B  #14,D0
00001296  4E4F                     389          TRAP    #15
00001298                           390  
00001298  43F9 00002C3F            391          LEA DISPD,A1
0000129E  103C 000E                392          MOVE.B  #14,D0
000012A2  4E4F                     393          TRAP    #15
000012A4                           394          
000012A4  1A3C 0004                395          MOVE.B   #$4,D5
000012A8                           396          
000012A8  1239 00002E7F            397          MOVE.B  bit1,D1
000012AE  103C 0003                398          MOVE.B  #3,D0
000012B2  4E4F                     399          TRAP    #15
000012B4                           400          
000012B4  43F9 00002C2D            401          LEA COMMA,A1
000012BA  103C 000E                402          MOVE.B  #14,D0
000012BE  4E4F                     403          TRAP    #15
000012C0                           404          
000012C0  0C39 0000 00002E81       405          CMP.B   #$0,bit3           
000012C8  6700 05DA                406          BEQ     MOVBDN1
000012CC  0C39 0001 00002E81       407          CMP.B   #$1,bit3
000012D4  6700 0386                408          BEQ     MOVEAN1
000012D8  0C39 0002 00002E81       409          CMP.B   #$2,bit3
000012E0  6700 03EE                410          BEQ     MOVEIAN1
000012E4  0C39 0003 00002E81       411          CMP.B   #$3,bit3
000012EC  6700 0476                412          BEQ     MOVEIANI1
000012F0  0C39 0004 00002E81       413          CMP.B   #$4,bit3
000012F8  6700 050A                414          BEQ     MOVEIAND1
000012FC  0C39 0007 00002E81       415          CMP.B   #$7,bit3
00001304  6700 0246                416          BEQ     ADDIMD
00001308                           417  MOVW
00001308  E20A                     418          LSR.B   #1,D2
0000130A  13C2 00002E7F            419          MOVE.B  D2,bit1
00001310                           420          
00001310  1416                     421          MOVE.B  (A6),D2
00001312  EB0A                     422          LSL.B   #5,D2
00001314  EA0A                     423          LSR.B   #5,D2
00001316  13C2 00002E82            424          MOVE.B  D2,bit4
0000131C                           425          
0000131C  141E                     426          MOVE.B  (A6)+,D2
0000131E  E50A                     427          LSL.B   #2,D2
00001320  EA0A                     428          LSR.B   #5,D2
00001322  13C2 00002E81            429          MOVE.B  D2,bit3
00001328                           430          
00001328  EF4E                     431          LSL.W   #7,D6
0000132A  E04E                     432          LSR.W   #8,D6 
0000132C  EA4E                     433          LSR.W   #5,D6 
0000132E  13C6 00002E80            434          MOVE.B  D6,bit2
00001334                           435  
00001334  0C39 0001 00002E80       436          CMP.B   #$1,bit2
0000133C  6700 0056                437          BEQ     MOVEAW
00001340                           438  
00001340  43F9 00002C89            439          LEA MMOVEW,A1
00001346  103C 000E                440          MOVE.B  #14,D0
0000134A  4E4F                     441          TRAP    #15 
0000134C                           442  
0000134C  0C39 0000 00002E81       443          CMP.B   #$0,bit3           
00001354  6700 054E                444          BEQ     MOVBDN1
00001358  0C39 0001 00002E81       445          CMP.B   #$1,bit3
00001360  6700 02FA                446          BEQ     MOVEAN1
00001364  0C39 0002 00002E81       447          CMP.B   #$2,bit3
0000136C  6700 0362                448          BEQ     MOVEIAN1
00001370  0C39 0003 00002E81       449          CMP.B   #$3,bit3
00001378  6700 03EA                450          BEQ     MOVEIANI1
0000137C  0C39 0004 00002E81       451          CMP.B   #$4,bit3
00001384  6700 047E                452          BEQ     MOVEIAND1
00001388  0C39 0007 00002E81       453          CMP.B   #$7,bit3
00001390  6700 01BA                454          BEQ     ADDIMD
00001394                           455  
00001394                           456  MOVEAW
00001394  43F9 00002C97            457          LEA MMOVEAW,A1
0000139A  103C 000E                458          MOVE.B  #14,D0
0000139E  4E4F                     459          TRAP    #15 
000013A0                           460          
000013A0  0C39 0000 00002E81       461          CMP.B   #$0,bit3           
000013A8  6700 04FA                462          BEQ     MOVBDN1
000013AC  0C39 0001 00002E81       463          CMP.B   #$1,bit3
000013B4  6700 02A6                464          BEQ     MOVEAN1
000013B8  0C39 0002 00002E81       465          CMP.B   #$2,bit3
000013C0  6700 030E                466          BEQ     MOVEIAN1
000013C4  0C39 0003 00002E81       467          CMP.B   #$3,bit3
000013CC  6700 0396                468          BEQ     MOVEIANI1
000013D0  0C39 0004 00002E81       469          CMP.B   #$4,bit3
000013D8  6700 042A                470          BEQ     MOVEIAND1
000013DC  0C39 0007 00002E81       471          CMP.B   #$7,bit3
000013E4  6700 0166                472          BEQ     ADDIMD
000013E8                           473  
000013E8                           474  MOVL
000013E8  E20A                     475          LSR.B   #1,D2
000013EA  13C2 00002E7F            476          MOVE.B  D2,bit1
000013F0                           477          
000013F0  1416                     478          MOVE.B  (A6),D2
000013F2  EB0A                     479          LSL.B   #5,D2
000013F4  EA0A                     480          LSR.B   #5,D2
000013F6  13C2 00002E82            481          MOVE.B  D2,bit4
000013FC                           482          
000013FC  141E                     483          MOVE.B  (A6)+,D2
000013FE  E50A                     484          LSL.B   #2,D2
00001400  EA0A                     485          LSR.B   #5,D2
00001402  13C2 00002E81            486          MOVE.B  D2,bit3
00001408                           487          
00001408  EF4E                     488          LSL.W   #7,D6
0000140A  E04E                     489          LSR.W   #8,D6 
0000140C  EA4E                     490          LSR.W   #5,D6 
0000140E  13C6 00002E80            491          MOVE.B  D6,bit2
00001414                           492          
00001414  0C39 0001 00002E80       493          CMP.B   #$1,bit2
0000141C  6700 0056                494          BEQ     MOVEAL
00001420                           495  
00001420  43F9 00002C90            496          LEA MMOVEL,A1
00001426  103C 000E                497          MOVE.B  #14,D0
0000142A  4E4F                     498          TRAP    #15 
0000142C                           499          
0000142C  0C39 0000 00002E81       500          CMP.B   #$0,bit3           
00001434  6700 046E                501          BEQ     MOVBDN1
00001438  0C39 0001 00002E81       502          CMP.B   #$1,bit3
00001440  6700 021A                503          BEQ     MOVEAN1
00001444  0C39 0002 00002E81       504          CMP.B   #$2,bit3
0000144C  6700 0282                505          BEQ     MOVEIAN1
00001450  0C39 0003 00002E81       506          CMP.B   #$3,bit3
00001458  6700 030A                507          BEQ     MOVEIANI1
0000145C  0C39 0004 00002E81       508          CMP.B   #$4,bit3
00001464  6700 039E                509          BEQ     MOVEIAND1
00001468  0C39 0007 00002E81       510          CMP.B   #$7,bit3
00001470  6700 00DA                511          BEQ     ADDIMD
00001474                           512  
00001474                           513  MOVEAL
00001474  43F9 00002C9F            514          LEA MMOVEAL,A1
0000147A  103C 000E                515          MOVE.B  #14,D0
0000147E  4E4F                     516          TRAP    #15 
00001480                           517          
00001480  0C39 0000 00002E81       518          CMP.B   #$0,bit3           
00001488  6700 041A                519          BEQ     MOVBDN1
0000148C  0C39 0001 00002E81       520          CMP.B   #$1,bit3
00001494  6700 01C6                521          BEQ     MOVEAN1
00001498  0C39 0002 00002E81       522          CMP.B   #$2,bit3
000014A0  6700 022E                523          BEQ     MOVEIAN1
000014A4  0C39 0003 00002E81       524          CMP.B   #$3,bit3
000014AC  6700 02B6                525          BEQ     MOVEIANI1
000014B0  0C39 0004 00002E81       526          CMP.B   #$4,bit3
000014B8  6700 034A                527          BEQ     MOVEIAND1
000014BC  0C39 0007 00002E81       528          CMP.B   #$7,bit3
000014C4  6700 0086                529          BEQ     ADDIMD        
000014C8                           530  
000014C8                           531  MOVB
000014C8  43F9 00002C82            532          LEA MMOVEB,A1
000014CE  103C 000E                533          MOVE.B  #14,D0
000014D2  4E4F                     534          TRAP    #15 
000014D4                           535          
000014D4  E20A                     536          LSR.B   #1,D2
000014D6  13C2 00002E7F            537          MOVE.B  D2,bit1
000014DC                           538          
000014DC  1416                     539          MOVE.B  (A6),D2
000014DE  EB0A                     540          LSL.B   #5,D2
000014E0  EA0A                     541          LSR.B   #5,D2
000014E2  13C2 00002E82            542          MOVE.B  D2,bit4
000014E8                           543          
000014E8  141E                     544          MOVE.B  (A6)+,D2
000014EA  E50A                     545          LSL.B   #2,D2
000014EC  EA0A                     546          LSR.B   #5,D2
000014EE  13C2 00002E81            547          MOVE.B  D2,bit3
000014F4                           548          
000014F4  EF4E                     549          LSL.W   #7,D6
000014F6  E04E                     550          LSR.W   #8,D6 
000014F8  EA4E                     551          LSR.W   #5,D6 
000014FA  13C6 00002E80            552          MOVE.B  D6,bit2
00001500                           553          
00001500                           554          *MOVE.B  #$1,D4
00001500                           555          
00001500  0C39 0000 00002E81       556          CMP.B   #$0,bit3           
00001508  6700 039A                557          BEQ     MOVBDN1
0000150C  0C39 0001 00002E81       558          CMP.B   #$1,bit3
00001514  6700 0146                559          BEQ     MOVEAN1
00001518  0C39 0002 00002E81       560          CMP.B   #$2,bit3
00001520  6700 01AE                561          BEQ     MOVEIAN1
00001524  0C39 0003 00002E81       562          CMP.B   #$3,bit3
0000152C  6700 0236                563          BEQ     MOVEIANI1
00001530  0C39 0004 00002E81       564          CMP.B   #$4,bit3
00001538  6700 02CA                565          BEQ     MOVEIAND1
0000153C  0C39 0007 00002E81       566          CMP.B   #$7,bit3
00001544  6700 0006                567          BEQ     ADDIMD
00001548                           568          
00001548  6000 141A                569          BRA     INVOP
0000154C                           570  
0000154C                           571  ADDIMD
0000154C  43F9 00002C29            572      LEA     TAB,A1
00001552  103C 000E                573      MOVE.B  #14,D0
00001556  4E4F                     574      TRAP    #15
00001558                           575      
00001558  0C39 0000 00002E82       576      CMP.B   #$0,bit4
00001560  6700 001A                577      BEQ     ADDIMD0
00001564  0C39 0001 00002E82       578      CMP.B   #$1,bit4
0000156C  6700 001C                579      BEQ     ADDIMD1
00001570  0C39 0004 00002E82       580      CMP.B   #$4,bit4
00001578  6700 001E                581      BEQ     ADDIMD4
0000157C                           582  
0000157C                           583  ADDIMD0
0000157C  183C 0001                584      MOVE.B  #$1,D4
00001580  45F9 000015AE            585      LEA     HANDLEDES,A2
00001586  6000 1362                586      BRA     DISPEA
0000158A                           587  ADDIMD1 
0000158A  183C 0002                588      MOVE.B  #$2,D4
0000158E  45F9 000015AE            589      LEA     HANDLEDES,A2
00001594  6000 1354                590      BRA     DISPEA
00001598                           591  ADDIMD4
00001598  43F9 00002C37            592      LEA     HASH,A1
0000159E  103C 000E                593      MOVE.B  #14,D0
000015A2  4E4F                     594      TRAP    #15
000015A4                           595      
000015A4  45F9 000015AE            596      LEA     HANDLEDES,A2
000015AA  6000 133E                597      BRA     DISPEA 
000015AE                           598      
000015AE                           599  HANDLEDES
000015AE  43F9 00002C2D            600      LEA     COMMA,A1
000015B4  103C 000E                601      MOVE.B  #14,D0
000015B8  4E4F                     602      TRAP    #15
000015BA                           603      
000015BA  0C39 0000 00002E80       604      CMP.B   #$0,bit2
000015C2  6700 0480                605      BEQ     MOVBDN2
000015C6  0C39 0001 00002E80       606      CMP.B   #$1,bit2
000015CE  6700 03A4                607      BEQ     MOVEAN2
000015D2  0C39 0002 00002E80       608      CMP.B   #$2,bit2 
000015DA  6700 03B4                609      BEQ     MOVIAN2
000015DE  0C39 0003 00002E80       610      CMP.B   #$3,bit2 
000015E6  6700 03DC                611      BEQ     MOVIANI2
000015EA  0C39 0004 00002E80       612      CMP.B   #$4,bit2 
000015F2  6700 0410                613      BEQ     MOVIAND2
000015F6  BA3C 0005                614      CMP.B   #$5,D5
000015FA  6700 0448                615      BEQ     MOVBDN2
000015FE  BA3C 0007                616      CMP.B   #$7,D5
00001602  6700 0002                617      BEQ     ADDIMDDES
00001606                           618  
00001606                           619  ADDIMDDES
00001606  0C39 0000 00002E82       620      CMP.B   #$0,bit4
0000160E  6700 001A                621      BEQ     ADDIMDDES0
00001612  0C39 0001 00002E82       622      CMP.B   #$1,bit4
0000161A  6700 001C                623      BEQ     ADDIMDDES1
0000161E  0C39 0004 00002E82       624      CMP.B   #$4,bit4
00001626  6700 001E                625      BEQ     ADDIMDDES4
0000162A                           626      
0000162A                           627  ADDIMDDES0
0000162A  183C 0001                628      MOVE.B  #$1,D4
0000162E  45F9 000029D6            629      LEA     ENDNEWLINE,A2
00001634  6000 12B4                630      BRA     DISPEA
00001638                           631      
00001638                           632  ADDIMDDES1
00001638  183C 0002                633      MOVE.B  #$2,D4
0000163C  45F9 000029D6            634      LEA     ENDNEWLINE,A2
00001642  6000 12A6                635      BRA     DISPEA
00001646                           636      
00001646                           637  ADDIMDDES4    
00001646  43F9 00002C37            638      LEA     HASH,A1
0000164C  103C 000E                639      MOVE.B  #14,D0
00001650  4E4F                     640      TRAP    #15
00001652                           641      
00001652  45F9 000029D6            642      LEA     ENDNEWLINE,A2
00001658  6000 1290                643      BRA     DISPEA 
0000165C                           644          
0000165C                           645  MOVEAN1
0000165C  43F9 00002C29            646      LEA TAB,A1
00001662  103C 000E                647      MOVE.B  #14,D0
00001666  4E4F                     648      TRAP    #15
00001668                           649  
00001668  43F9 00002C39            650      LEA DISPA,A1
0000166E  103C 000E                651      MOVE.B  #14,D0
00001672  4E4F                     652      TRAP    #15
00001674                           653      
00001674  1239 00002E82            654      MOVE.B  bit4,D1
0000167A  103C 0003                655      MOVE.B  #3,D0
0000167E  4E4F                     656      TRAP    #15
00001680                           657      
00001680  43F9 00002C2D            658      LEA COMMA,A1
00001686  103C 000E                659      MOVE.B  #14,D0
0000168A  4E4F                     660      TRAP    #15
0000168C                           661      
0000168C  0C39 0000 00002E80       662      CMP.B   #$0,bit2
00001694  6700 03AE                663      BEQ     MOVBDN2
00001698  0C39 0001 00002E80       664      CMP.B   #$1,bit2
000016A0  6700 02D2                665      BEQ     MOVEAN2
000016A4  0C39 0002 00002E80       666      CMP.B   #$2,bit2 
000016AC  6700 02E2                667      BEQ     MOVIAN2
000016B0  0C39 0003 00002E80       668      CMP.B   #$3,bit2 
000016B8  6700 030A                669      BEQ     MOVIANI2
000016BC  0C39 0004 00002E80       670      CMP.B   #$4,bit2 
000016C4  6700 033E                671      BEQ     MOVIAND2
000016C8  BA3C 0005                672      CMP.B   #$5,D5
000016CC  6700 0376                673      BEQ     MOVBDN2
000016D0                           674      
000016D0                           675  MOVEIAN1
000016D0  43F9 00002C29            676      LEA TAB,A1
000016D6  103C 000E                677      MOVE.B  #14,D0
000016DA  4E4F                     678      TRAP    #15
000016DC                           679      
000016DC  43F9 00002C2F            680      LEA OPENBRA,A1
000016E2  103C 000E                681      MOVE.B  #14,D0
000016E6  4E4F                     682      TRAP    #15
000016E8                           683  
000016E8  43F9 00002C39            684      LEA DISPA,A1
000016EE  103C 000E                685      MOVE.B  #14,D0
000016F2  4E4F                     686      TRAP    #15
000016F4                           687      
000016F4  1239 00002E82            688      MOVE.B  bit4,D1
000016FA  103C 0003                689      MOVE.B  #3,D0
000016FE  4E4F                     690      TRAP    #15
00001700                           691      
00001700  43F9 00002C31            692      LEA CLOSEBRA,A1
00001706  103C 000E                693      MOVE.B  #14,D0
0000170A  4E4F                     694      TRAP    #15
0000170C                           695      
0000170C  B83C 0003                696      CMP.B   #$3,D4
00001710  6700 12C4                697      BEQ     ENDNEWLINE
00001714                           698      
00001714  43F9 00002C2D            699      LEA COMMA,A1
0000171A  103C 000E                700      MOVE.B  #14,D0
0000171E  4E4F                     701      TRAP    #15
00001720                           702      
00001720  0C39 0000 00002E80       703      CMP.B   #$0,bit2
00001728  6700 031A                704      BEQ     MOVBDN2
0000172C  0C39 0001 00002E80       705      CMP.B   #$1,bit2
00001734  6700 023E                706      BEQ     MOVEAN2
00001738  0C39 0002 00002E80       707      CMP.B   #$2,bit2 
00001740  6700 024E                708      BEQ     MOVIAN2
00001744  0C39 0003 00002E80       709      CMP.B   #$3,bit2 
0000174C  6700 0276                710      BEQ     MOVIANI2
00001750  0C39 0004 00002E80       711      CMP.B   #$4,bit2 
00001758  6700 02AA                712      BEQ     MOVIAND2
0000175C  BA3C 0005                713      CMP.B   #$5,D5
00001760  6700 02E2                714      BEQ     MOVBDN2
00001764                           715  
00001764                           716  MOVEIANI1
00001764  43F9 00002C29            717      LEA TAB,A1
0000176A  103C 000E                718      MOVE.B  #14,D0
0000176E  4E4F                     719      TRAP    #15
00001770                           720      
00001770  43F9 00002C2F            721      LEA OPENBRA,A1
00001776  103C 000E                722      MOVE.B  #14,D0
0000177A  4E4F                     723      TRAP    #15
0000177C                           724  
0000177C  43F9 00002C39            725      LEA DISPA,A1
00001782  103C 000E                726      MOVE.B  #14,D0
00001786  4E4F                     727      TRAP    #15
00001788                           728      
00001788  1239 00002E82            729      MOVE.B  bit4,D1
0000178E  103C 0003                730      MOVE.B  #3,D0
00001792  4E4F                     731      TRAP    #15
00001794                           732      
00001794  43F9 00002C31            733      LEA CLOSEBRA,A1
0000179A  103C 000E                734      MOVE.B  #14,D0
0000179E  4E4F                     735      TRAP    #15
000017A0                           736      
000017A0  43F9 00002C33            737      LEA POS,A1
000017A6  103C 000E                738      MOVE.B  #14,D0
000017AA  4E4F                     739      TRAP    #15
000017AC                           740      
000017AC  BA3C 0003                741      CMP.B   #$3,D5
000017B0  6700 1224                742      BEQ     ENDNEWLINE
000017B4                           743          
000017B4  43F9 00002C2D            744      LEA COMMA,A1
000017BA  103C 000E                745      MOVE.B  #14,D0
000017BE  4E4F                     746      TRAP    #15
000017C0                           747      
000017C0  0C39 0000 00002E80       748      CMP.B   #$0,bit2
000017C8  6700 027A                749      BEQ     MOVBDN2
000017CC  0C39 0001 00002E80       750      CMP.B   #$1,bit2
000017D4  6700 019E                751      BEQ     MOVEAN2
000017D8  0C39 0002 00002E80       752      CMP.B   #$2,bit2 
000017E0  6700 01AE                753      BEQ     MOVIAN2
000017E4  0C39 0003 00002E80       754      CMP.B   #$3,bit2 
000017EC  6700 01D6                755      BEQ     MOVIANI2
000017F0  0C39 0004 00002E80       756      CMP.B   #$4,bit2 
000017F8  6700 020A                757      BEQ     MOVIAND2
000017FC  BA3C 0005                758      CMP.B   #$5,D5
00001800  6700 0242                759      BEQ     MOVBDN2
00001804                           760  
00001804                           761  MOVEIAND1
00001804  43F9 00002C29            762      LEA TAB,A1
0000180A  103C 000E                763      MOVE.B  #14,D0
0000180E  4E4F                     764      TRAP    #15
00001810                           765      
00001810  43F9 00002C35            766      LEA NEG,A1
00001816  103C 000E                767      MOVE.B  #14,D0
0000181A  4E4F                     768      TRAP    #15
0000181C                           769      
0000181C  43F9 00002C2F            770      LEA OPENBRA,A1
00001822  103C 000E                771      MOVE.B  #14,D0
00001826  4E4F                     772      TRAP    #15
00001828                           773  
00001828  43F9 00002C39            774      LEA DISPA,A1
0000182E  103C 000E                775      MOVE.B  #14,D0
00001832  4E4F                     776      TRAP    #15
00001834                           777      
00001834  1239 00002E82            778      MOVE.B  bit4,D1
0000183A  103C 0003                779      MOVE.B  #3,D0
0000183E  4E4F                     780      TRAP    #15
00001840                           781      
00001840  43F9 00002C31            782      LEA CLOSEBRA,A1
00001846  103C 000E                783      MOVE.B  #14,D0
0000184A  4E4F                     784      TRAP    #15
0000184C                           785      
0000184C  BA3C 0004                786      CMP.B   #$4,D5
00001850  6700 1184                787      BEQ     ENDNEWLINE
00001854                           788      
00001854  43F9 00002C2D            789      LEA COMMA,A1
0000185A  103C 000E                790      MOVE.B  #14,D0
0000185E  4E4F                     791      TRAP    #15
00001860                           792      
00001860  0C39 0000 00002E80       793      CMP.B   #$0,bit2
00001868  6700 01DA                794      BEQ     MOVBDN2
0000186C  0C39 0001 00002E80       795      CMP.B   #$1,bit2
00001874  6700 00FE                796      BEQ     MOVEAN2
00001878  0C39 0002 00002E80       797      CMP.B   #$2,bit2 
00001880  6700 010E                798      BEQ     MOVIAN2
00001884  0C39 0003 00002E80       799      CMP.B   #$3,bit2 
0000188C  6700 0136                800      BEQ     MOVIANI2
00001890  0C39 0004 00002E80       801      CMP.B   #$4,bit2 
00001898  6700 016A                802      BEQ     MOVIAND2
0000189C  BA3C 0005                803      CMP.B   #$5,D5
000018A0  6700 01A2                804      BEQ     MOVBDN2
000018A4                           805  
000018A4                           806  MOVBDN1
000018A4  43F9 00002C29            807      LEA TAB,A1
000018AA  103C 000E                808      MOVE.B  #14,D0
000018AE  4E4F                     809      TRAP    #15
000018B0                           810  
000018B0  BA3C 0006                811      CMP.B   #$6,D5             * Data Reg for LSLR
000018B4  6700 007A                812      BEQ     LSLRSRCD
000018B8                           813  
000018B8  43F9 00002C3F            814      LEA DISPD,A1
000018BE  103C 000E                815      MOVE.B  #14,D0
000018C2  4E4F                     816      TRAP    #15
000018C4                           817      
000018C4  1239 00002E82            818      MOVE.B  bit4,D1
000018CA  103C 0003                819      MOVE.B  #3,D0
000018CE  4E4F                     820      TRAP    #15
000018D0                           821  
000018D0  BA3C 0004                822      CMP.B   #$4,D5
000018D4  6700 0192                823      BEQ     ENDNLINC
000018D8                           824  
000018D8  43F9 00002C2D            825      LEA COMMA,A1
000018DE  103C 000E                826      MOVE.B  #14,D0
000018E2  4E4F                     827      TRAP    #15
000018E4                           828  
000018E4  BA3C 0006                829      CMP.B   #$6,D5             * Data Reg for LSLR
000018E8  6700 006E                830      BEQ     LSLRDESD
000018EC  0C39 0000 00002E80       831      CMP.B   #$0,bit2
000018F4  6700 014E                832      BEQ     MOVBDN2
000018F8  0C39 0001 00002E80       833      CMP.B   #$1,bit2
00001900  6700 0072                834      BEQ     MOVEAN2
00001904  0C39 0002 00002E80       835      CMP.B   #$2,bit2 
0000190C  6700 0082                836      BEQ     MOVIAN2
00001910  0C39 0003 00002E80       837      CMP.B   #$3,bit2 
00001918  6700 00AA                838      BEQ     MOVIANI2
0000191C  0C39 0004 00002E80       839      CMP.B   #$4,bit2 
00001924  6700 00DE                840      BEQ     MOVIAND2
00001928  BA3C 0005                841      CMP.B   #$5,D5
0000192C  6700 0116                842      BEQ     MOVBDN2
00001930                           843      
00001930                           844  LSLRSRCD
00001930  43F9 00002C3F            845      LEA DISPD,A1
00001936  103C 000E                846      MOVE.B  #14,D0
0000193A  4E4F                     847      TRAP    #15
0000193C                           848          
0000193C  1239 00002E7E            849      MOVE.B  bit0,D1
00001942  103C 0003                850      MOVE.B  #3,D0
00001946  4E4F                     851      TRAP    #15    
00001948                           852  
00001948  43F9 00002C2D            853      LEA COMMA,A1
0000194E  103C 000E                854      MOVE.B  #14,D0
00001952  4E4F                     855      TRAP    #15  
00001954                           856      
00001954  6000 0002                857      BRA     LSLRDESD
00001958                           858      
00001958                           859  LSLRDESD
00001958  43F9 00002C3F            860      LEA DISPD,A1
0000195E  103C 000E                861      MOVE.B  #14,D0
00001962  4E4F                     862      TRAP    #15
00001964                           863          
00001964  1239 00002E82            864      MOVE.B  bit4,D1
0000196A  103C 0003                865      MOVE.B  #3,D0
0000196E  4E4F                     866      TRAP    #15      
00001970                           867      
00001970                           868      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001970  6000 1064                869      BRA     ENDNEWLINE       
00001974                           870  
00001974                           871  MOVEAN2
00001974  43F9 00002C39            872      LEA DISPA,A1
0000197A  103C 000E                873      MOVE.B  #14,D0
0000197E  4E4F                     874      TRAP    #15
00001980                           875      
00001980  1239 00002E7F            876      MOVE.B  bit1,D1
00001986  103C 0003                877      MOVE.B  #3,D0
0000198A  4E4F                     878      TRAP    #15
0000198C                           879  
0000198C                           880      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000198C  6000 1048                881      BRA     ENDNEWLINE    
00001990                           882  
00001990                           883  MOVIAN2
00001990  43F9 00002C2F            884      LEA OPENBRA,A1
00001996  103C 000E                885      MOVE.B  #14,D0
0000199A  4E4F                     886      TRAP    #15
0000199C                           887  
0000199C  43F9 00002C39            888      LEA DISPA,A1
000019A2  103C 000E                889      MOVE.B  #14,D0
000019A6  4E4F                     890      TRAP    #15
000019A8                           891      
000019A8  1239 00002E7F            892      MOVE.B  bit1,D1
000019AE  103C 0003                893      MOVE.B  #3,D0
000019B2  4E4F                     894      TRAP    #15
000019B4                           895      
000019B4  43F9 00002C31            896      LEA CLOSEBRA,A1
000019BA  103C 000E                897      MOVE.B  #14,D0
000019BE  4E4F                     898      TRAP    #15
000019C0                           899      
000019C0                           900      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019C0  6000 1014                901      BRA     ENDNEWLINE
000019C4                           902  
000019C4                           903  MOVIANI2
000019C4  43F9 00002C2F            904      LEA OPENBRA,A1
000019CA  103C 000E                905      MOVE.B  #14,D0
000019CE  4E4F                     906      TRAP    #15
000019D0                           907  
000019D0  43F9 00002C39            908      LEA DISPA,A1
000019D6  103C 000E                909      MOVE.B  #14,D0
000019DA  4E4F                     910      TRAP    #15
000019DC                           911      
000019DC  1239 00002E7F            912      MOVE.B  bit1,D1
000019E2  103C 0003                913      MOVE.B  #3,D0
000019E6  4E4F                     914      TRAP    #15
000019E8                           915      
000019E8  43F9 00002C31            916      LEA CLOSEBRA,A1
000019EE  103C 000E                917      MOVE.B  #14,D0
000019F2  4E4F                     918      TRAP    #15
000019F4                           919      
000019F4  43F9 00002C33            920      LEA POS,A1
000019FA  103C 000E                921      MOVE.B  #14,D0
000019FE  4E4F                     922      TRAP    #15
00001A00                           923      
00001A00                           924      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A00  6000 0FD4                925      BRA     ENDNEWLINE
00001A04                           926  
00001A04                           927  MOVIAND2
00001A04  43F9 00002C35            928      LEA NEG,A1
00001A0A  103C 000E                929      MOVE.B  #14,D0
00001A0E  4E4F                     930      TRAP    #15
00001A10                           931      
00001A10  43F9 00002C2F            932      LEA OPENBRA,A1
00001A16  103C 000E                933      MOVE.B  #14,D0
00001A1A  4E4F                     934      TRAP    #15
00001A1C                           935  
00001A1C  43F9 00002C39            936      LEA DISPA,A1
00001A22  103C 000E                937      MOVE.B  #14,D0
00001A26  4E4F                     938      TRAP    #15
00001A28                           939      
00001A28  1239 00002E7F            940      MOVE.B  bit1,D1
00001A2E  103C 0003                941      MOVE.B  #3,D0
00001A32  4E4F                     942      TRAP    #15
00001A34                           943      
00001A34  43F9 00002C31            944      LEA CLOSEBRA,A1
00001A3A  103C 000E                945      MOVE.B  #14,D0
00001A3E  4E4F                     946      TRAP    #15
00001A40                           947  
00001A40                           948      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A40  6000 0F94                949      BRA     ENDNEWLINE
00001A44                           950  
00001A44                           951  MOVBDN2
00001A44  43F9 00002C3F            952      LEA DISPD,A1
00001A4A  103C 000E                953      MOVE.B  #14,D0
00001A4E  4E4F                     954      TRAP    #15
00001A50                           955          
00001A50  1239 00002E7F            956      MOVE.B  bit1,D1
00001A56  103C 0003                957      MOVE.B  #3,D0
00001A5A  4E4F                     958      TRAP    #15   
00001A5C                           959      
00001A5C  B83C 0000                960      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A60  6700 0F74                961      BEQ     ENDNEWLINE
00001A64                           962      
00001A64                           963      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A64  6000 0F70                964      BRA     ENDNEWLINE
00001A68                           965      
00001A68                           966      
00001A68                           967  ENDNLINC
00001A68                           968      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A68  6000 0F6C                969      BRA     ENDNEWLINE    
00001A6C                           970      
00001A6C                           971  MULSW
00001A6C  1407                     972          MOVE.B  D7,D2
00001A6E  EB0A                     973          LSL.B   #5,D2
00001A70  EA0A                     974          LSR.B   #5,D2
00001A72  13C2 00002E82            975          MOVE.B  D2,bit4
00001A78                           976          
00001A78  1407                     977          MOVE.B  D7,D2
00001A7A  E50A                     978          LSL.B   #2,D2
00001A7C  EA0A                     979          LSR.B   #5,D2
00001A7E  13C2 00002E81            980          MOVE.B  D2,bit3
00001A84                           981          
00001A84  3C07                     982          MOVE.W  D7,D6
00001A86  EF4E                     983          LSL.W   #7,D6
00001A88  E04E                     984          LSR.W   #8,D6 
00001A8A  EA4E                     985          LSR.W   #5,D6 
00001A8C  13C6 00002E80            986          MOVE.B  D6,bit2
00001A92                           987          
00001A92  E94F                     988          LSL.W   #4,D7
00001A94  E04F                     989          LSR.W   #8,D7 
00001A96  EA4F                     990          LSR.W   #5,D7 
00001A98  13C7 00002E7F            991          MOVE.B  D7,bit1
00001A9E                           992          
00001A9E  43F9 00002C7B            993          LEA MMULSW,A1
00001AA4  323C 000E                994          MOVE    #14,D1
00001AA8  4E4F                     995          TRAP    #15
00001AAA                           996          
00001AAA  1A3C 0005                997          MOVE.B  #$5,D5 
00001AAE                           998          
00001AAE  0C39 0000 00002E81       999          CMP.B   #$0,bit3           
00001AB6  6700 FDEC               1000          BEQ     MOVBDN1
00001ABA  0C39 0001 00002E81      1001          CMP.B   #$1,bit3
00001AC2  6700 FB98               1002          BEQ     MOVEAN1
00001AC6  0C39 0002 00002E81      1003          CMP.B   #$2,bit3
00001ACE  6700 FC00               1004          BEQ     MOVEIAN1
00001AD2  0C39 0003 00002E81      1005          CMP.B   #$3,bit3
00001ADA  6700 FC88               1006          BEQ     MOVEIANI1
00001ADE  0C39 0004 00002E81      1007          CMP.B   #$4,bit3
00001AE6  6700 FD1C               1008          BEQ     MOVEIAND1
00001AEA  0C39 0007 00002E81      1009          CMP.B   #$7,bit3
00001AF2  6700 FA58               1010          BEQ     ADDIMD
00001AF6                          1011  
00001AF6                          1012           
00001AF6                          1013  DIVSW               
00001AF6                          1014          *MOVE.B  D6,D2
00001AF6  141E                    1015          MOVE.B  (A6)+,D2
00001AF8  EB0A                    1016          LSL.B   #5,D2
00001AFA  EA0A                    1017          LSR.B   #5,D2
00001AFC  13C2 00002E82           1018          MOVE.B  D2,bit4
00001B02                          1019          
00001B02  1406                    1020          MOVE.B  D6,D2
00001B04  E50A                    1021          LSL.B   #2,D2
00001B06  EA0A                    1022          LSR.B   #5,D2
00001B08  13C2 00002E81           1023          MOVE.B  D2,bit3
00001B0E                          1024          
00001B0E  3E06                    1025          MOVE.W  D6,D7
00001B10  EF4F                    1026          LSL.W   #7,D7
00001B12  E04F                    1027          LSR.W   #8,D7 
00001B14  EA4F                    1028          LSR.W   #5,D7 
00001B16  13C7 00002E80           1029          MOVE.B  D7,bit2
00001B1C                          1030          
00001B1C  E94E                    1031          LSL.W   #4,D6
00001B1E  E04E                    1032          LSR.W   #8,D6 
00001B20  EA4E                    1033          LSR.W   #5,D6 
00001B22  13C6 00002E7F           1034          MOVE.B  D6,bit1
00001B28                          1035          
00001B28  43F9 00002C74           1036          LEA MMDIVSW,A1
00001B2E  323C 000E               1037          MOVE    #14,D1
00001B32  4E4F                    1038          TRAP    #15
00001B34                          1039          
00001B34  1A3C 0005               1040          MOVE.B  #$5,D5 
00001B38  183C 0004               1041          MOVE.B  #$4,D4
00001B3C                          1042          
00001B3C  0C39 0000 00002E81      1043          CMP.B   #$0,bit3           
00001B44  6700 FD5E               1044          BEQ     MOVBDN1
00001B48  0C39 0001 00002E81      1045          CMP.B   #$1,bit3
00001B50  6700 FB0A               1046          BEQ     MOVEAN1
00001B54  0C39 0002 00002E81      1047          CMP.B   #$2,bit3
00001B5C  6700 FB72               1048          BEQ     MOVEIAN1
00001B60  0C39 0003 00002E81      1049          CMP.B   #$3,bit3
00001B68  6700 FBFA               1050          BEQ     MOVEIANI1
00001B6C  0C39 0004 00002E81      1051          CMP.B   #$4,bit3
00001B74  6700 FC8E               1052          BEQ     MOVEIAND1
00001B78  0C39 0007 00002E81      1053          CMP.B   #$7,bit3
00001B80  6700 F9CA               1054          BEQ     ADDIMD
00001B84                          1055  
00001B84                          1056  NEGW
00001B84  1406                    1057          MOVE.B  D6,D2
00001B86  EB0A                    1058          LSL.B   #5,D2
00001B88  EA0A                    1059          LSR.B   #5,D2
00001B8A  13C2 00002E82           1060          MOVE.B  D2,bit4
00001B90                          1061          
00001B90  1406                    1062          MOVE.B  D6,D2
00001B92  E50A                    1063          LSL.B   #2,D2
00001B94  EA0A                    1064          LSR.B   #5,D2
00001B96  13C2 00002E81           1065          MOVE.B  D2,bit3
00001B9C                          1066          
00001B9C  3E06                    1067          MOVE.W  D6,D7
00001B9E  E14F                    1068          LSL.W   #8,D7
00001BA0  E04F                    1069          LSR.W   #8,D7 
00001BA2  EC4F                    1070          LSR.W   #6,D7 
00001BA4  13C7 00002E80           1071          MOVE.B  D7,bit2
00001BAA                          1072          
00001BAA  43F9 00002C6F           1073          LEA MMNEGW,A1
00001BB0  323C 000E               1074          MOVE    #14,D1
00001BB4  4E4F                    1075          TRAP    #15
00001BB6                          1076          
00001BB6  183C 0003               1077          MOVE.B  #$3,D4
00001BBA                          1078          
00001BBA  0C39 0000 00002E80      1079          CMP.B   #$0,bit2
00001BC2  6700 001A               1080          BEQ     PRINTBYTE
00001BC6  0C39 0001 00002E80      1081          CMP.B   #$1,bit2
00001BCE  6700 0062               1082          BEQ     PRINTWORD
00001BD2  0C39 0002 00002E80      1083          CMP.B   #$2,bit2
00001BDA  6700 00AA               1084          BEQ     PRINTLONG
00001BDE                          1085          
00001BDE                          1086  PRINTBYTE
00001BDE  43F9 00002C49           1087      LEA MBYTE,A1
00001BE4  323C 000E               1088      MOVE    #14,D1
00001BE8  4E4F                    1089      TRAP    #15
00001BEA                          1090  
00001BEA  0C39 0000 00002E81      1091      CMP.B   #$0,bit3           
00001BF2  6700 FCB0               1092          BEQ     MOVBDN1
00001BF6  0C39 0001 00002E81      1093          CMP.B   #$1,bit3
00001BFE  6700 FA5C               1094          BEQ     MOVEAN1
00001C02  0C39 0002 00002E81      1095          CMP.B   #$2,bit3
00001C0A  6700 FAC4               1096          BEQ     MOVEIAN1
00001C0E  0C39 0003 00002E81      1097          CMP.B   #$3,bit3
00001C16  6700 FB4C               1098          BEQ     MOVEIANI1
00001C1A  0C39 0004 00002E81      1099          CMP.B   #$4,bit3
00001C22  6700 FBE0               1100          BEQ     MOVEIAND1
00001C26  0C39 0007 00002E81      1101          CMP.B   #$7,bit3
00001C2E  6700 F91C               1102          BEQ     ADDIMD
00001C32                          1103      
00001C32                          1104  PRINTWORD
00001C32  43F9 00002C4C           1105      LEA MWORD,A1
00001C38  323C 000E               1106      MOVE    #14,D1
00001C3C  4E4F                    1107      TRAP    #15
00001C3E                          1108  
00001C3E  0C39 0000 00002E81      1109      CMP.B   #$0,bit3           
00001C46  6700 FC5C               1110          BEQ     MOVBDN1
00001C4A  0C39 0001 00002E81      1111          CMP.B   #$1,bit3
00001C52  6700 FA08               1112          BEQ     MOVEAN1
00001C56  0C39 0002 00002E81      1113          CMP.B   #$2,bit3
00001C5E  6700 FA70               1114          BEQ     MOVEIAN1
00001C62  0C39 0003 00002E81      1115          CMP.B   #$3,bit3
00001C6A  6700 FAF8               1116          BEQ     MOVEIANI1
00001C6E  0C39 0004 00002E81      1117          CMP.B   #$4,bit3
00001C76  6700 FB8C               1118          BEQ     MOVEIAND1
00001C7A  0C39 0007 00002E81      1119          CMP.B   #$7,bit3
00001C82  6700 F8C8               1120          BEQ     ADDIMD
00001C86                          1121      
00001C86                          1122  PRINTLONG
00001C86  43F9 00002C4F           1123      LEA MLONG,A1
00001C8C  323C 000E               1124      MOVE    #14,D1
00001C90  4E4F                    1125      TRAP    #15
00001C92                          1126   
00001C92  0C39 0000 00002E81      1127      CMP.B   #$0,bit3           
00001C9A  6700 FC08               1128          BEQ     MOVBDN1
00001C9E  0C39 0001 00002E81      1129          CMP.B   #$1,bit3
00001CA6  6700 F9B4               1130          BEQ     MOVEAN1
00001CAA  0C39 0002 00002E81      1131          CMP.B   #$2,bit3
00001CB2  6700 FA1C               1132          BEQ     MOVEIAN1
00001CB6  0C39 0003 00002E81      1133          CMP.B   #$3,bit3
00001CBE  6700 FAA4               1134          BEQ     MOVEIANI1
00001CC2  0C39 0004 00002E81      1135          CMP.B   #$4,bit3
00001CCA  6700 FB38               1136          BEQ     MOVEIAND1
00001CCE  0C39 0007 00002E81      1137          CMP.B   #$7,bit3
00001CD6  6700 F874               1138          BEQ     ADDIMD
00001CDA                          1139          
00001CDA                          1140  LSLR
00001CDA                          1141          *MOVE.B  D6,D2
00001CDA  141E                    1142          MOVE.B  (A6)+,D2
00001CDC  EB0A                    1143          LSL.B   #5,D2
00001CDE  EA0A                    1144          LSR.B   #5,D2
00001CE0  13C2 00002E82           1145          MOVE.B  D2,bit4
00001CE6                          1146          
00001CE6                          1147          
00001CE6                          1148          
00001CE6  1406                    1149          MOVE.B  D6,D2
00001CE8  E50A                    1150          LSL.B   #2,D2
00001CEA  EE0A                    1151          LSR.B   #7,D2
00001CEC  13C2 00002E81           1152          MOVE.B  D2,bit3
00001CF2                          1153          
00001CF2  3E06                    1154          MOVE.W  D6,D7
00001CF4  E14F                    1155          LSL.W   #8,D7
00001CF6  E04F                    1156          LSR.W   #8,D7 
00001CF8  EC4F                    1157          LSR.W   #6,D7 
00001CFA  13C7 00002E80           1158          MOVE.B  D7,bit2
00001D00                          1159          
00001D00  3E06                    1160          MOVE.W  D6,D7
00001D02  EF4F                    1161          LSL.W   #7,D7
00001D04  E04F                    1162          LSR.W   #8,D7 
00001D06  EE4F                    1163          LSR.W   #7,D7
00001D08  13C7 00002E7F           1164          MOVE.B  D7,bit1   
00001D0E                          1165      
00001D0E  1806                    1166          MOVE.B  D6,D4
00001D10                          1167          
00001D10  3E06                    1168          MOVE.W  D6,D7
00001D12  E94F                    1169          LSL.W   #4,D7
00001D14  E04F                    1170          LSR.W   #8,D7 
00001D16  EA4F                    1171          LSR.W   #5,D7
00001D18  13C7 00002E7E           1172          MOVE.B  D7,bit0 
00001D1E                          1173          
00001D1E  1606                    1174          MOVE.B  D6,D3
00001D20  E70B                    1175          LSL.B   #3,D3
00001D22  EC0B                    1176          LSR.B   #6,D3
00001D24  B63C 0003               1177          CMP.B   #3,D3
00001D28  6700 001A               1178          BEQ     RORL
00001D2C                          1179          
00001D2C  0C39 0001 00002E7F      1180          CMP.B   #$1,bit1
00001D34  6700 008E               1181          BEQ     PRINTLSL
00001D38  0C39 0000 00002E7F      1182          CMP.B   #$0,bit1
00001D40  6700 01C4               1183          BEQ     PRINTLSR
00001D44                          1184          
00001D44                          1185  RORL
00001D44  0C39 0001 00002E7F      1186          CMP.B   #$1,bit1
00001D4C  6700 000E               1187          BEQ     PRINTROL
00001D50  0C39 0000 00002E7F      1188          CMP.B   #$0,bit1
00001D58  6700 0036               1189          BEQ     PRINTROR
00001D5C                          1190  PRINTROL
00001D5C  43F9 00002C5F           1191          LEA MROL,A1
00001D62  303C 000E               1192          MOVE    #14,D0
00001D66  4E4F                    1193          TRAP    #15
00001D68                          1194          
00001D68  0C39 0000 00002E80      1195          CMP.B   #$0,bit2
00001D70  6700 00C4               1196          BEQ     PRINTB
00001D74  0C39 0001 00002E80      1197          CMP.B   #$1,bit2
00001D7C  6700 00EC               1198          BEQ     PRINTW
00001D80  0C39 0002 00002E80      1199          CMP.B   #$2,bit2
00001D88  6700 0114               1200          BEQ     PRINTL
00001D8C  6000 006A               1201          BRA     LSLRMEM
00001D90                          1202  PRINTROR
00001D90  43F9 00002C63           1203          LEA MROR,A1
00001D96  323C 000E               1204          MOVE    #14,D1
00001D9A  4E4F                    1205          TRAP    #15
00001D9C                          1206          
00001D9C  0C39 0000 00002E80      1207          CMP.B   #$0,bit2
00001DA4  6700 0090               1208          BEQ     PRINTB
00001DA8  0C39 0001 00002E80      1209          CMP.B   #$1,bit2
00001DB0  6700 00B8               1210          BEQ     PRINTW
00001DB4  0C39 0002 00002E80      1211          CMP.B   #$2,bit2
00001DBC  6700 00E0               1212          BEQ     PRINTL
00001DC0  6000 0036               1213          BRA     LSLRMEM
00001DC4                          1214  PRINTLSL
00001DC4  43F9 00002C67           1215          LEA MLSL,A1
00001DCA  303C 000E               1216          MOVE    #14,D0
00001DCE  4E4F                    1217          TRAP    #15
00001DD0                          1218          
00001DD0  0C39 0000 00002E80      1219          CMP.B   #$0,bit2
00001DD8  6700 005C               1220          BEQ     PRINTB
00001DDC  0C39 0001 00002E80      1221          CMP.B   #$1,bit2
00001DE4  6700 0084               1222          BEQ     PRINTW
00001DE8  0C39 0002 00002E80      1223          CMP.B   #$2,bit2
00001DF0  6700 00AC               1224          BEQ     PRINTL
00001DF4  6000 0002               1225          BRA     LSLRMEM
00001DF8                          1226          
00001DF8                          1227  LSLRMEM
00001DF8                          1228          
00001DF8  E50C                    1229          LSL.B   #2,D4
00001DFA  EA0C                    1230          LSR.B   #5,D4
00001DFC  13C4 00002E81           1231          MOVE.B  D4,bit3
00001E02                          1232          
00001E02  183C 0003               1233          MOVE.B  #$3,D4
00001E06                          1234          
00001E06  0C39 0002 00002E81      1235          CMP.B   #$2,bit3
00001E0E  6700 F8C0               1236          BEQ     MOVEIAN1
00001E12  0C39 0003 00002E81      1237          CMP.B   #$3,bit3
00001E1A  6700 F948               1238          BEQ     MOVEIANI1
00001E1E  0C39 0004 00002E81      1239          CMP.B   #$4,bit3
00001E26  6700 F9DC               1240          BEQ     MOVEIAND1
00001E2A  0C39 0007 00002E81      1241          CMP.B   #$7,bit3
00001E32  6700 F718               1242          BEQ     ADDIMD
00001E36                          1243  PRINTB
00001E36  43F9 00002C45           1244          LEA MDOT,A1
00001E3C  303C 000E               1245          MOVE    #14,D0
00001E40  4E4F                    1246          TRAP    #15
00001E42                          1247  
00001E42  43F9 00002C49           1248          LEA MBYTE,A1
00001E48  303C 000E               1249          MOVE    #14,D0
00001E4C  4E4F                    1250          TRAP    #15
00001E4E                          1251          
00001E4E  3A3C 0006               1252          MOVE #$6,D5
00001E52                          1253          
00001E52  0C39 0000 00002E81      1254          CMP.B   #0,bit3
00001E5A  6700 0076               1255          BEQ     PRINTLSLRCOUNT
00001E5E  0C39 0001 00002E81      1256          CMP.B   #1,bit3
00001E66  6700 FA3C               1257          BEQ     MOVBDN1
00001E6A                          1258  
00001E6A                          1259  PRINTW 
00001E6A  43F9 00002C45           1260          LEA MDOT,A1
00001E70  303C 000E               1261          MOVE    #14,D0
00001E74  4E4F                    1262          TRAP    #15
00001E76                          1263  
00001E76  43F9 00002C4C           1264          LEA MWORD,A1
00001E7C  303C 000E               1265          MOVE    #14,D0
00001E80  4E4F                    1266          TRAP    #15
00001E82                          1267          
00001E82  3A3C 0006               1268          MOVE #$6,D5
00001E86                          1269          
00001E86  0C39 0000 00002E81      1270          CMP.B   #0,bit3
00001E8E  6700 0042               1271          BEQ     PRINTLSLRCOUNT
00001E92  0C39 0001 00002E81      1272          CMP.B   #1,bit3
00001E9A  6700 FA08               1273          BEQ     MOVBDN1
00001E9E                          1274  
00001E9E                          1275  PRINTL
00001E9E  43F9 00002C45           1276          LEA MDOT,A1
00001EA4  303C 000E               1277          MOVE    #14,D0
00001EA8  4E4F                    1278          TRAP    #15
00001EAA                          1279  
00001EAA  43F9 00002C4F           1280          LEA MLONG,A1
00001EB0  303C 000E               1281          MOVE    #14,D0
00001EB4  4E4F                    1282          TRAP    #15
00001EB6                          1283  
00001EB6  3A3C 0006               1284          MOVE #$6,D5
00001EBA                          1285          
00001EBA  0C39 0000 00002E81      1286          CMP.B   #0,bit3
00001EC2  6700 000E               1287          BEQ     PRINTLSLRCOUNT
00001EC6  0C39 0001 00002E81      1288          CMP.B   #1,bit3
00001ECE  6700 F9D4               1289          BEQ     MOVBDN1    
00001ED2                          1290  
00001ED2                          1291  PRINTLSLRCOUNT
00001ED2  43F9 00002C29           1292          LEA TAB,A1
00001ED8  303C 000E               1293          MOVE    #14,D0
00001EDC  4E4F                    1294          TRAP    #15
00001EDE                          1295          
00001EDE  43F9 00002C37           1296          LEA HASH,A1
00001EE4  303C 000E               1297          MOVE    #14,D0
00001EE8  4E4F                    1298          TRAP    #15
00001EEA                          1299          
00001EEA  1239 00002E7E           1300          MOVE.B  bit0,D1
00001EF0  303C 0003               1301          MOVE    #3,D0
00001EF4  4E4F                    1302          TRAP    #15
00001EF6                          1303          
00001EF6  43F9 00002C2D           1304          LEA COMMA,A1
00001EFC  303C 000E               1305          MOVE    #14,D0
00001F00  4E4F                    1306          TRAP    #15
00001F02                          1307          
00001F02  6000 FA54               1308          BRA LSLRDESD
00001F06                          1309    
00001F06                          1310  PRINTLSR
00001F06  43F9 00002C6B           1311          LEA MLSR,A1
00001F0C  323C 000E               1312          MOVE    #14,D1
00001F10  4E4F                    1313          TRAP    #15
00001F12                          1314          
00001F12  0C39 0000 00002E80      1315          CMP.B   #$0,bit2
00001F1A  6700 FF1A               1316          BEQ     PRINTB
00001F1E  0C39 0001 00002E80      1317          CMP.B   #$1,bit2
00001F26  6700 FF42               1318          BEQ     PRINTW
00001F2A  0C39 0002 00002E80      1319          CMP.B   #$2,bit2
00001F32  6700 FF6A               1320          BEQ     PRINTL
00001F36  6000 FEC0               1321          BRA     LSLRMEM
00001F3A                          1322  
00001F3A                          1323  ******************************************************************************************************
00001F3A                          1324  *   Branch, branch to subroutine, and branch conditionally
00001F3A                          1325  *   BRA, BSR, Bcc
00001F3A                          1326  
00001F3A                          1327  BCC
00001F3A  13C5 00002E7F           1328          MOVE.B  D5,bit1             Moves condition code to bit1
00001F40  1A1E                    1329          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001F42  13C5 00002E80           1330          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001F48  280E                    1331          MOVE.L  A6,D4               Moves current address to D4 register
00001F4A                          1332  
00001F4A  BA3C 0000               1333          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001F4E  6700 0010               1334          BEQ     BCCWORD
00001F52  BA3C 00FF               1335          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001F56  6700 0010               1336          BEQ     BCCLONG             Else, displacement is 8-bits
00001F5A                          1337  
00001F5A                          1338          * Calculates 8-bit displacement
00001F5A                          1339          * 8-bit displacement is already in D5
00001F5A                          1340          * Adds displacement to current address
00001F5A  D805                    1341          ADD.B   D5,D4               Adds the displacement to current address
00001F5C  6000 0012               1342          BRA     BCCNEXT
00001F60                          1343  
00001F60                          1344  * Calculates 16-bit displacement
00001F60                          1345  BCCWORD
00001F60  3A1E                    1346          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001F62  D845                    1347          ADD.W   D5,D4               Adds the displacement to current address
00001F64  6000 000A               1348          BRA     BCCNEXT
00001F68                          1349  
00001F68                          1350  * Calculates 32-bit displacement
00001F68                          1351  BCCLONG
00001F68  2A1E                    1352          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001F6A  D885                    1353          ADD.L   D5,D4               Adds the displacement to current address
00001F6C  6000 0002               1354          BRA     BCCNEXT
00001F70                          1355  
00001F70                          1356  * Does the actual calculation
00001F70                          1357  * Adds the displacement to the current address
00001F70                          1358  BCCNEXT
00001F70  6100 000E               1359          BSR     BCCDISP             Displays branch op-code
00001F74  45F9 000029D6           1360          LEA     ENDNEWLINE,A2
00001F7A  2E04                    1361          MOVE.L  D4,D7
00001F7C  6000 F176               1362          BRA     DISPADDRSTART
00001F80                          1363  
00001F80                          1364  BCCDISP
00001F80  B43C 0000               1365          CMP.B   #$0,D2
00001F84  6700 0026               1366          BEQ     BCCBRA
00001F88  B43C 0007               1367          CMP.B   #$7,D2
00001F8C  6700 0028               1368          BEQ     BCCBEQ
00001F90  B43C 0006               1369          CMP.B   #$6,D2
00001F94  6700 002A               1370          BEQ     BCCBNE
00001F98  B43C 000D               1371          CMP.B   #$D,D2
00001F9C  6700 002C               1372          BEQ     BCCBLT
00001FA0  B43C 0002               1373          CMP.B   #$2,D2
00001FA4  6700 002E               1374          BEQ     BCCBHI
00001FA8                          1375  
00001FA8  6000 09BA               1376          BRA     INVOP
00001FAC                          1377  
00001FAC                          1378  BCCBRA
00001FAC  43F9 00002D0D           1379          LEA     MBRA,A1
00001FB2  6000 002A               1380          BRA     BCCPRINT
00001FB6                          1381  BCCBEQ
00001FB6  43F9 00002CFD           1382          LEA     MBEQ,A1
00001FBC  6000 0020               1383          BRA     BCCPRINT
00001FC0                          1384  BCCBNE
00001FC0  43F9 00002D01           1385          LEA     MBNE,A1
00001FC6  6000 0016               1386          BRA     BCCPRINT
00001FCA                          1387  BCCBLT
00001FCA  43F9 00002D05           1388          LEA     MBLT,A1
00001FD0  6000 000C               1389          BRA     BCCPRINT
00001FD4                          1390  BCCBHI
00001FD4  43F9 00002D09           1391          LEA     MBHI,A1
00001FDA  6000 0002               1392          BRA     BCCPRINT
00001FDE                          1393  BCCPRINT
00001FDE  103C 000E               1394          MOVE.B  #14,D0
00001FE2  4E4F                    1395          TRAP    #15
00001FE4  43F9 00002C29           1396          LEA     TAB,A1
00001FEA  4E4F                    1397          TRAP    #15
00001FEC  4E75                    1398          RTS
00001FEE                          1399  
00001FEE                          1400  ******************************************************************************************************
00001FEE                          1401  *   Immediate data arithmetic operations
00001FEE                          1402  *   SUBI
00001FEE                          1403  
00001FEE  13C5 00002E7F           1404  IMD     MOVE.B  D5,bit1
00001FF4  141E                    1405          MOVE.B  (A6)+,D2
00001FF6                          1406          
00001FF6  3805                    1407          MOVE    D5,D4
00001FF8  C83C 0001               1408          AND.B   #$0001,D4
00001FFC  B83C 0001               1409          CMP.B   #$1,D4
00002000  6700 F258               1410          BEQ     BTST
00002004                          1411  
00002004  DE02                    1412          ADD.B   D2,D7
00002006                          1413  
00002006  1602                    1414          MOVE.B  D2,D3               Copies data at D2 to D3
00002008                          1415          *   this gets digit in 10's place
00002008  E80B                    1416          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000200A                          1417          *   this gets digit in 1's place
0000200A  E90A                    1418          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000200C  E80A                    1419          LSR.B   #4,D2               Shifts back right into 1's place
0000200E                          1420  
0000200E                          1421          *   D3 holds digit in 10's place
0000200E                          1422          *   D2 holds digit in 1's place
0000200E                          1423  
0000200E  E20B                    1424          LSR.B   #1,D3
00002010  6400 0004               1425          BCC     IMD2
00002014  5404                    1426          ADD.B   #$2,D4
00002016  E20B                    1427  IMD2    LSR.B   #1,D3
00002018  6400 0004               1428          BCC     IMD3
0000201C  5804                    1429          ADD.B   #$4,D4
0000201E  B43C 0007               1430  IMD3    CMP.B   #$7,D2
00002022  6D00 0006               1431          BLT     IMD4
00002026  5204                    1432          ADD.B   #$1,D4
00002028  5102                    1433          SUB.B   #$8,D2
0000202A                          1434  
0000202A                          1435          *   Stores them into addr
0000202A  13C3 00002E80           1436  IMD4    MOVE.B  D3,bit2
00002030  13C4 00002E81           1437          MOVE.B  D4,bit3
00002036  13C2 00002E82           1438          MOVE.B  D2,bit4
0000203C                          1439  
0000203C                          1440  **************************
0000203C                          1441  * This finds the size of the operation
0000203C                          1442  
0000203C  0C39 0000 00002E80      1443          CMP.B   #$0,bit2
00002044  6700 007E               1444          BEQ     IMDBYTE
00002048  0C39 0001 00002E80      1445          CMP.B   #$1,bit2
00002050  6700 0082               1446          BEQ     IMDWORD
00002054  0C39 0002 00002E80      1447          CMP.B   #$2,bit2
0000205C  6700 0084               1448          BEQ     IMDLONG
00002060  6000 0902               1449          BRA     INVOP
00002064                          1450  
00002064                          1451  *************************************************************
00002064                          1452  * Display IMD op-code
00002064                          1453  IMDPRINT
00002064  0C39 0000 00002E7F      1454          CMP.B   #$0,bit1
0000206C  6700 0026               1455          BEQ     IMDPRINTORI
00002070  0C39 0004 00002E7F      1456          CMP.B   #$4,bit1
00002078  6700 0024               1457          BEQ     IMDPRINTSUBI
0000207C  0C39 000A 00002E7F      1458          CMP.B   #$A,bit1
00002084  6700 0022               1459          BEQ     IMDPRINTEORI
00002088  0C39 000C 00002E7F      1460          CMP.B   #$C,bit1
00002090  6700 0020               1461          BEQ     IMDPRINTCMPI
00002094                          1462  
00002094                          1463  IMDPRINTORI
00002094  43F9 00002CC7           1464          LEA     MORI,A1
0000209A  6000 0020               1465          BRA     IMDPRINTEND
0000209E                          1466  
0000209E                          1467  IMDPRINTSUBI
0000209E  43F9 00002CC1           1468          LEA     MSUBI,A1
000020A4  6000 0016               1469          BRA     IMDPRINTEND
000020A8                          1470  
000020A8                          1471  IMDPRINTEORI
000020A8  43F9 00002CF1           1472          LEA     MEORI,A1
000020AE  6000 000C               1473          BRA     IMDPRINTEND
000020B2                          1474  
000020B2                          1475  IMDPRINTCMPI
000020B2  43F9 00002CE0           1476          LEA     MCMPI,A1
000020B8  6000 0002               1477          BRA     IMDPRINTEND
000020BC                          1478  
000020BC                          1479  IMDPRINTEND
000020BC  103C 000E               1480          MOVE.B  #14,D0
000020C0  4E4F                    1481          TRAP    #15
000020C2  4E75                    1482          RTS
000020C4                          1483  
000020C4                          1484  *************************************************************
000020C4                          1485  * Immediate data operation size BYTE
000020C4                          1486  IMDBYTE
000020C4  619E                    1487          BSR     IMDPRINT
000020C6  43F9 00002C49           1488          LEA     MBYTE,A1
000020CC                          1489  
000020CC                          1490          * Moves size to D4, needed to use DISPEA
000020CC  183C 0001               1491          MOVE.B  #$1,D4
000020D0  6000 001A               1492          BRA     IMDEA
000020D4                          1493  
000020D4                          1494  *************************************************************
000020D4                          1495  * Immediate data operation size WORD
000020D4                          1496  IMDWORD
000020D4  618E                    1497          BSR     IMDPRINT
000020D6  43F9 00002C4C           1498          LEA     MWORD,A1
000020DC                          1499  
000020DC  1803                    1500          MOVE.B  D3,D4
000020DE  6000 000C               1501          BRA     IMDEA
000020E2                          1502  
000020E2                          1503  
000020E2                          1504  *************************************************************
000020E2                          1505  * Immediate data operation size LONG
000020E2                          1506  IMDLONG
000020E2  6180                    1507          BSR     IMDPRINT
000020E4  43F9 00002C4F           1508          LEA     MLONG,A1
000020EA                          1509          
000020EA                          1510  
000020EA                          1511          * Moves size to D4, needed to use DISPEA
000020EA  1803                    1512          MOVE.B  D3,D4
000020EC                          1513  
000020EC                          1514  IMDEA
000020EC                          1515          * This prints out the size and creates tab
000020EC  103C 000E               1516          MOVE.B  #14,D0
000020F0  4E4F                    1517          TRAP    #15
000020F2  43F9 00002C29           1518          LEA     TAB,A1
000020F8  103C 000E               1519          MOVE.B  #14,D0
000020FC  4E4F                    1520          TRAP    #15
000020FE                          1521          * Loads return address into A2
000020FE  45F9 00002108           1522          LEA     IMDEA2,A2
00002104  6000 07E4               1523          BRA     DISPEA
00002108                          1524  IMDEA2
00002108  43F9 00002C2D           1525          LEA     COMMA,A1
0000210E  103C 000E               1526          MOVE.B  #14,D0
00002112  4E4F                    1527          TRAP    #15
00002114                          1528  
00002114  45F9 0000211E           1529          LEA     IMDEA3,A2
0000211A  6000 067E               1530          BRA     SUBEA
0000211E                          1531  IMDEA3
0000211E  6000 08B6               1532          BRA     ENDNEWLINE
00002122                          1533  
00002122                          1534  ******************************************************************************************************
00002122                          1535  * Miscellaneous section
00002122                          1536  *   Not goes here
00002122                          1537  
00002122                          1538  MISC
00002122  13C5 00002E7F           1539          MOVE.B  D5,bit1
00002128  141E                    1540          MOVE.B  (A6)+,D2
0000212A                          1541  
0000212A  DE02                    1542          ADD.B   D2,D7
0000212C                          1543  
0000212C  1602                    1544          MOVE.B  D2,D3               Copies data at D2 to D3
0000212E                          1545          *   this gets digit in 10's place
0000212E  E80B                    1546          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002130                          1547          *   this gets digit in 1's place
00002130  E90A                    1548          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002132  E80A                    1549          LSR.B   #4,D2               Shifts back right into 1's place
00002134                          1550  
00002134                          1551  
00002134  3806                    1552          MOVE.W  D6,D4
00002136  E94C                    1553          LSL.W   #$4,D4
00002138  E04C                    1554          LSR.W   #$8,D4
0000213A  E44C                    1555          LSR.W   #$2,D4
0000213C  13C4 00002E80           1556          MOVE.B  D4,bit2
00002142  0C39 003A 00002E80      1557          CMP.B   #$3A,bit2
0000214A  6700 F0CE               1558          BEQ     JSR
0000214E                          1559          *   D5 is bit1
0000214E                          1560          *   D3 is bit2
0000214E                          1561          *   D2 is bit3
0000214E                          1562  
0000214E                          1563  **************************
0000214E                          1564  * This finds the size of the operation
0000214E                          1565          * D5 is bit1
0000214E  BA3C 0004               1566          CMP.B   #$4,D5
00002152  6700 FA30               1567          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00002156  BA3C 0006               1568          CMP.B   #$6,D5              Branches to NOT section
0000215A  6700 004E               1569          BEQ     MISCNOT
0000215E  BA3C 000E               1570          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00002162  6700 0006               1571          BEQ     MISCBIT2
00002166  6000 07FC               1572          BRA     INVOP
0000216A                          1573  
0000216A                          1574  MISCBIT2
0000216A                          1575          * D3 is bit2
0000216A  B63C 0007               1576          CMP.B   #$7,D3              Branches to NOP
0000216E  6700 0006               1577          BEQ     MISCBIT3
00002172  6000 07F0               1578          BRA     INVOP
00002176                          1579  
00002176                          1580  MISCBIT3
00002176                          1581          * D2 is bit3
00002176  B43C 0001               1582          CMP.B   #$1,D2              Branches to NOP
0000217A  6700 000E               1583          BEQ     MISCNOP
0000217E  B43C 0005               1584          CMP.B   #$5,D2              Branches to NOP
00002182  6700 0016               1585          BEQ     MISCRTS
00002186  6000 07DC               1586          BRA     INVOP
0000218A                          1587  
0000218A                          1588  ******************************************************
0000218A                          1589  * NOP
0000218A                          1590  * No operation
0000218A                          1591  MISCNOP
0000218A  43F9 00002D11           1592          LEA     MNOP,A1
00002190  103C 000E               1593          MOVE.B  #14,D0
00002194  4E4F                    1594          TRAP    #15
00002196                          1595  
00002196  6000 083E               1596          BRA     ENDNEWLINE          Goes to next opcode
0000219A                          1597  
0000219A                          1598  ******************************************************
0000219A                          1599  * RTS
0000219A                          1600  * Return to sub routine
0000219A                          1601  MISCRTS
0000219A  43F9 00002D15           1602          LEA     MRTS,A1
000021A0  103C 000E               1603          MOVE.B  #14,D0
000021A4  4E4F                    1604          TRAP    #15
000021A6                          1605  
000021A6  6000 082E               1606          BRA     ENDNEWLINE          Goes to next opcode
000021AA                          1607  
000021AA                          1608  ******************************************************
000021AA                          1609  * NOT
000021AA                          1610  * Reuses some of IMD section to display because they have similar format
000021AA                          1611  *  (I was kinda lazy too)
000021AA                          1612  MISCNOT
000021AA  E20B                    1613          LSR.B   #1,D3
000021AC  6400 0004               1614          BCC     MISCNOT2
000021B0  5404                    1615          ADD.B   #$2,D4
000021B2                          1616  MISCNOT2   
000021B2  E20B                    1617          LSR.B   #1,D3
000021B4  6400 0004               1618          BCC     MISCNOT3
000021B8  5804                    1619          ADD.B   #$4,D4
000021BA                          1620  MISCNOT3   
000021BA  B43C 0007               1621          CMP.B   #$7,D2
000021BE  6D00 0006               1622          BLT     MISCNOT4
000021C2  5204                    1623          ADD.B   #$1,D4
000021C4  5102                    1624          SUB.B   #$8,D2
000021C6                          1625  
000021C6                          1626          *   Stores them into addr
000021C6                          1627  MISCNOT4
000021C6  13C3 00002E80           1628          MOVE.B  D3,bit2
000021CC  13C4 00002E81           1629          MOVE.B  D4,bit3
000021D2  13C2 00002E82           1630          MOVE.B  D2,bit4
000021D8                          1631  
000021D8  B63C 0000               1632          CMP.B   #$0,D3
000021DC  6700 0016               1633          BEQ     MISCBYTE
000021E0  B63C 0001               1634          CMP.B   #$1,D3
000021E4  6700 0020               1635          BEQ     MISCWORD
000021E8  B63C 0002               1636          CMP.B   #$2,D3
000021EC  6700 0028               1637          BEQ     MISCLONG
000021F0  6000 0772               1638          BRA     INVOP
000021F4                          1639  *************************************************************
000021F4                          1640  * Immediate data operation size BYTE
000021F4                          1641  MISCBYTE
000021F4  6100 004C               1642          BSR     MISCPRINT
000021F8  43F9 00002C49           1643          LEA     MBYTE,A1
000021FE                          1644  
000021FE                          1645          * Moves size to D4, needed to use DISPEA
000021FE  183C 0001               1646          MOVE.B  #$1,D4
00002202  6000 001E               1647          BRA     MISCEA
00002206                          1648  
00002206                          1649  *************************************************************
00002206                          1650  * Immediate data operation size WORD
00002206                          1651  MISCWORD
00002206  6100 003A               1652          BSR     MISCPRINT
0000220A  43F9 00002C4C           1653          LEA     MWORD,A1
00002210                          1654  
00002210  1803                    1655          MOVE.B  D3,D4
00002212  6000 000E               1656          BRA     MISCEA
00002216                          1657  
00002216                          1658  
00002216                          1659  *************************************************************
00002216                          1660  * Immediate data operation size LONG
00002216                          1661  MISCLONG
00002216  6100 002A               1662          BSR     MISCPRINT
0000221A  43F9 00002C4F           1663          LEA     MLONG,A1
00002220                          1664  
00002220                          1665          * Moves size to D4, needed to use DISPEA
00002220  1803                    1666          MOVE.B  D3,D4
00002222                          1667  
00002222                          1668  MISCEA
00002222  103C 000E               1669          MOVE.B  #14,D0
00002226  4E4F                    1670          TRAP    #15
00002228  43F9 00002C29           1671          LEA     TAB,A1
0000222E  103C 000E               1672          MOVE.B  #14,D0
00002232  4E4F                    1673          TRAP    #15
00002234                          1674  
00002234  45F9 0000223E           1675          LEA     MISCEA2,A2
0000223A  6000 055E               1676          BRA     SUBEA
0000223E                          1677  MISCEA2
0000223E  6000 0796               1678          BRA     ENDNEWLINE
00002242                          1679  
00002242                          1680  *************************************************************
00002242                          1681  * Display IMD op-code
00002242                          1682  MISCPRINT
00002242  0C39 0004 00002E7F      1683          CMP.B   #$4,bit1
0000224A  6700 0018               1684          BEQ     MISCPRINTNEG
0000224E  0C39 0006 00002E7F      1685          CMP.B   #$6,bit1
00002256  6700 0002               1686          BEQ     MISCPRINTNOT
0000225A                          1687  
0000225A                          1688  MISCPRINTNOT
0000225A  43F9 00002CCC           1689          LEA     MNOT,A1
00002260  6000 000C               1690          BRA     MISCPRINTEND
00002264                          1691  
00002264                          1692  MISCPRINTNEG
00002264  43F9 00002CD7           1693          LEA     MNEG,A1
0000226A  6000 0002               1694          BRA     MISCPRINTEND
0000226E                          1695  
0000226E                          1696  MISCPRINTEND
0000226E  103C 000E               1697          MOVE.B  #14,D0
00002272  4E4F                    1698          TRAP    #15
00002274  4E75                    1699          RTS
00002276                          1700  
00002276                          1701  
00002276                          1702  ******************************************************************************************************
00002276                          1703  * SUB section
00002276                          1704  
00002276                          1705          *   Grabs next two nibbles
00002276  141E                    1706  SUB     MOVE.B  (A6)+,D2
00002278                          1707  
00002278  DE02                    1708          ADD.B   D2,D7
0000227A                          1709  
0000227A  1602                    1710          MOVE.B  D2,D3               Copies data at D2 to D3
0000227C                          1711          *   this gets digit in 10's place
0000227C  E80B                    1712          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000227E                          1713          *   this gets digit in 1's place
0000227E  E90A                    1714          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002280  E80A                    1715          LSR.B   #4,D2               Shifts back right into 1's place
00002282                          1716  
00002282                          1717          *   D3 holds digit in 10's place
00002282                          1718          *   D2 holds digit in 1's place
00002282                          1719  
00002282                          1720          
00002282                          1721          *   Converts nibble into 3-bit parts
00002282  E20B                    1722          LSR.B   #1,D3
00002284  6400 0004               1723          BCC     SUB2
00002288  5404                    1724          ADD.B   #$2,D4
0000228A                          1725          
0000228A  E20B                    1726  SUB2    LSR.B   #1,D3
0000228C  6400 0004               1727          BCC     SUB3
00002290  5804                    1728          ADD.B   #$4,D4
00002292                          1729          
00002292  1205                    1730  SUB3    MOVE.B  D5,D1
00002294  E209                    1731          LSR.B   #1,D1
00002296  6400 0004               1732          BCC     SUB4
0000229A  5803                    1733          ADD.B   #$4,D3
0000229C                          1734  
0000229C  B43C 0007               1735  SUB4    CMP.B   #$7,D2
000022A0  6D00 0006               1736          BLT     SUB1
000022A4  5204                    1737          ADD.B   #$1,D4
000022A6  5102                    1738          SUB.B   #$8,D2
000022A8                          1739  
000022A8                          1740          *   Stores them into addr
000022A8  13C1 00002E7F           1741  SUB1    MOVE.B  D1,bit1
000022AE  13C3 00002E80           1742          MOVE.B  D3,bit2
000022B4  13C4 00002E81           1743          MOVE.B  D4,bit3
000022BA  13C2 00002E82           1744          MOVE.B  D2,bit4
000022C0                          1745  
000022C0                          1746          * do this later
000022C0  4241                    1747          CLR     D1
000022C2  7400                    1748          MOVE.L  #0,D2
000022C4  7600                    1749          MOVE.L  #0,D3
000022C6  7800                    1750          MOVE.L  #0,D4
000022C8  7A00                    1751          MOVE.L  #0,D5
000022CA  7C00                    1752          MOVE.L  #0,D6
000022CC                          1753  
000022CC                          1754          
000022CC                          1755  ******************************************************************************************************
000022CC                          1756  * After spliting the op-code into SUB's defined groupings
000022CC                          1757  *   This figures out which operation it is and goes to that sub-routine
000022CC                          1758  
000022CC                          1759          * This checks if bit0 is C which is either AND or MULS
000022CC  0C39 000C 00002E7E      1760          CMP.B   #$C,bit0
000022D4  6600 000E               1761          BNE     SUBACHECK
000022D8  0C39 0007 00002E80      1762          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
000022E0  6700 F78A               1763          BEQ     MULSW                       AND will use SUB's routine
000022E4                          1764  
000022E4                          1765  SUBACHECK
000022E4                          1766          * This will display SUBA instead  -- check this later
000022E4  0C39 0003 00002E80      1767          CMP.B   #$3,bit2
000022EC  6700 01D6               1768          BEQ     SUBA
000022F0  0C39 0007 00002E80      1769          CMP.B   #$7,bit2
000022F8  6700 01CA               1770          BEQ     SUBA
000022FC                          1771  
000022FC                          1772          * This will find the size and stuff
000022FC  0C39 0000 00002E80      1773          CMP.B   #$0,bit2
00002304  6700 003E               1774          BEQ     SUBSIZE1
00002308  0C39 0001 00002E80      1775          CMP.B   #$1,bit2
00002310  6700 0072               1776          BEQ     SUBSIZE2
00002314  0C39 0002 00002E80      1777          CMP.B   #$2,bit2
0000231C  6700 00A6               1778          BEQ     SUBSIZE3
00002320  0C39 0004 00002E80      1779          CMP.B   #$4,bit2
00002328  6700 00DA               1780          BEQ     SUBSIZE4
0000232C  0C39 0005 00002E80      1781          CMP.B   #$5,bit2
00002334  6700 010E               1782          BEQ     SUBSIZE5
00002338  0C39 0006 00002E80      1783          CMP.B   #$6,bit2
00002340  6700 0142               1784          BEQ     SUBSIZE6
00002344                          1785     
00002344                          1786  ******************************************************************************************************
00002344                          1787  *   Displays size, then does operation order
00002344                          1788  
00002344                          1789  *   000 byte    EA,DN
00002344                          1790  SUBSIZE1
00002344  6100 0260               1791          BSR     SUBPRINT
00002348  43F9 00002C49           1792          LEA     MBYTE,A1
0000234E  103C 000E               1793          MOVE.B  #14,D0
00002352  4E4F                    1794          TRAP    #15
00002354  43F9 00002C29           1795          LEA     TAB,A1
0000235A  103C 000E               1796          MOVE.B  #14,D0
0000235E  4E4F                    1797          TRAP    #15
00002360                          1798  
00002360  45F9 0000236A           1799          LEA     SUBSIZE11,A2
00002366  6000 0432               1800          BRA     SUBEA
0000236A                          1801  SUBSIZE11
0000236A  45F9 00002380           1802          LEA     SUBSIZE12,A2
00002370  43F9 00002C2D           1803          LEA     COMMA,A1
00002376  103C 000E               1804          MOVE.B  #14,D0
0000237A  4E4F                    1805          TRAP    #15
0000237C  6000 02F8               1806          BRA     SUBDN
00002380                          1807  SUBSIZE12
00002380  6000 0654               1808          BRA     ENDNEWLINE
00002384                          1809  
00002384                          1810  *************************************************
00002384                          1811  *   001 word    EA,DN
00002384                          1812  SUBSIZE2
00002384  6100 0220               1813          BSR     SUBPRINT
00002388  43F9 00002C4C           1814          LEA     MWORD,A1
0000238E  103C 000E               1815          MOVE.B  #14,D0
00002392  4E4F                    1816          TRAP    #15
00002394  43F9 00002C29           1817          LEA     TAB,A1
0000239A  103C 000E               1818          MOVE.B  #14,D0
0000239E  4E4F                    1819          TRAP    #15
000023A0                          1820  
000023A0  45F9 000023AA           1821          LEA     SUBSIZE21,A2
000023A6  6000 03F2               1822          BRA     SUBEA
000023AA                          1823  SUBSIZE21
000023AA  45F9 000023C0           1824          LEA     SUBSIZE22,A2
000023B0  43F9 00002C2D           1825          LEA     COMMA,A1
000023B6  103C 000E               1826          MOVE.B  #14,D0
000023BA  4E4F                    1827          TRAP    #15
000023BC  6000 02B8               1828          BRA     SUBDN
000023C0                          1829  SUBSIZE22
000023C0  6000 0614               1830          BRA     ENDNEWLINE
000023C4                          1831  
000023C4                          1832  *************************************************
000023C4                          1833  *   010 long    EA,DN
000023C4                          1834  SUBSIZE3
000023C4  6100 01E0               1835          BSR     SUBPRINT
000023C8  43F9 00002C4F           1836          LEA     MLONG,A1
000023CE  103C 000E               1837          MOVE.B  #14,D0
000023D2  4E4F                    1838          TRAP    #15
000023D4  43F9 00002C29           1839          LEA     TAB,A1
000023DA  103C 000E               1840          MOVE.B  #14,D0
000023DE  4E4F                    1841          TRAP    #15
000023E0                          1842  
000023E0  45F9 000023EA           1843          LEA     SUBSIZE31,A2
000023E6  6000 03B2               1844          BRA     SUBEA
000023EA                          1845  SUBSIZE31
000023EA  45F9 00002400           1846          LEA     SUBSIZE32,A2
000023F0  43F9 00002C2D           1847          LEA     COMMA,A1
000023F6  103C 000E               1848          MOVE.B  #14,D0
000023FA  4E4F                    1849          TRAP    #15
000023FC  6000 0278               1850          BRA     SUBDN
00002400                          1851  SUBSIZE32
00002400  6000 05D4               1852          BRA     ENDNEWLINE
00002404                          1853  
00002404                          1854  *************************************************
00002404                          1855  *   100 byte    DN,EA
00002404                          1856  SUBSIZE4
00002404  6100 01A0               1857          BSR     SUBPRINT
00002408  43F9 00002C49           1858          LEA     MBYTE,A1
0000240E  103C 000E               1859          MOVE.B  #14,D0
00002412  4E4F                    1860          TRAP    #15
00002414  43F9 00002C29           1861          LEA     TAB,A1
0000241A  103C 000E               1862          MOVE.B  #14,D0
0000241E  4E4F                    1863          TRAP    #15
00002420                          1864  
00002420                          1865          *BSR     SUBERRORTEST1
00002420                          1866  
00002420  45F9 0000242A           1867          LEA     SUBSIZE41,A2
00002426  6000 024E               1868          BRA     SUBDN
0000242A                          1869  SUBSIZE41
0000242A  45F9 00002440           1870          LEA     SUBSIZE42,A2
00002430  43F9 00002C2D           1871          LEA     COMMA,A1
00002436  103C 000E               1872          MOVE.B  #14,D0
0000243A  4E4F                    1873          TRAP    #15
0000243C  6000 035C               1874          BRA     SUBEA
00002440                          1875  SUBSIZE42
00002440  6000 0594               1876          BRA     ENDNEWLINE
00002444                          1877  
00002444                          1878  *************************************************
00002444                          1879  *   101 word    DN,EA
00002444                          1880  SUBSIZE5
00002444                          1881          *BSR     SUBERRORTEST1               * This does error testing
00002444  6100 0160               1882          BSR     SUBPRINT                    * Prints out 'SUB.'
00002448  43F9 00002C4C           1883          LEA     MWORD,A1
0000244E  103C 000E               1884          MOVE.B  #14,D0
00002452  4E4F                    1885          TRAP    #15
00002454  43F9 00002C29           1886          LEA     TAB,A1
0000245A  103C 000E               1887          MOVE.B  #14,D0
0000245E  4E4F                    1888          TRAP    #15
00002460                          1889  
00002460  45F9 0000246A           1890          LEA     SUBSIZE51,A2
00002466  6000 020E               1891          BRA     SUBDN
0000246A                          1892  SUBSIZE51
0000246A  45F9 00002480           1893          LEA     SUBSIZE52,A2
00002470  43F9 00002C2D           1894          LEA     COMMA,A1
00002476  103C 000E               1895          MOVE.B  #14,D0
0000247A  4E4F                    1896          TRAP    #15
0000247C  6000 031C               1897          BRA     SUBEA
00002480                          1898  SUBSIZE52
00002480  6000 0554               1899          BRA     ENDNEWLINE
00002484                          1900  
00002484                          1901  *************************************************
00002484                          1902  *   110 long    DN,EA
00002484                          1903  SUBSIZE6
00002484                          1904          *BSR     SUBERRORTEST1               * This does error testing
00002484  6100 0120               1905          BSR     SUBPRINT                    * Prints out 'SUB.'
00002488  43F9 00002C4F           1906          LEA     MLONG,A1
0000248E  103C 000E               1907          MOVE.B  #14,D0
00002492  4E4F                    1908          TRAP    #15
00002494  43F9 00002C29           1909          LEA     TAB,A1
0000249A  103C 000E               1910          MOVE.B  #14,D0
0000249E  4E4F                    1911          TRAP    #15
000024A0                          1912  
000024A0                          1913          *BSR     SUBERRORTEST1
000024A0                          1914  
000024A0  45F9 000024AA           1915          LEA     SUBSIZE61,A2
000024A6  6000 01CE               1916          BRA     SUBDN
000024AA                          1917  SUBSIZE61
000024AA  45F9 000024C0           1918          LEA     SUBSIZE62,A2
000024B0  43F9 00002C2D           1919          LEA     COMMA,A1
000024B6  103C 000E               1920          MOVE.B  #14,D0
000024BA  4E4F                    1921          TRAP    #15
000024BC  6000 02DC               1922          BRA     SUBEA
000024C0                          1923  SUBSIZE62
000024C0  6000 0514               1924          BRA     ENDNEWLINE
000024C4                          1925  
000024C4                          1926  ****************************************************************************
000024C4                          1927  *   This section is for SUBA
000024C4                          1928  *   Displays 'SUBA.' then decodes the op-code as SUBA
000024C4                          1929  SUBA
000024C4  0C39 0009 00002E7E      1930          CMP.B   #$9,bit0
000024CC  6700 001A               1931          BEQ     SUBPRINTSUBA
000024D0  0C39 000B 00002E7E      1932          CMP.B   #$B,bit0
000024D8  6700 001E               1933          BEQ     SUBPRINTCMPA
000024DC  0C39 000D 00002E7E      1934          CMP.B   #$D,bit0
000024E4  6700 0022               1935          BEQ     SUBPRINTADDA
000024E8                          1936  
000024E8                          1937  
000024E8                          1938  SUBPRINTSUBA
000024E8  43F9 00002CB1           1939          LEA     MSUBA,A1                    Displays 'SUBA.'
000024EE  103C 000E               1940          MOVE.B  #14,D0
000024F2  4E4F                    1941          TRAP    #15
000024F4  6000 0022               1942          BRA     SUBACONT
000024F8                          1943  
000024F8                          1944  SUBPRINTCMPA
000024F8  43F9 00002CE6           1945          LEA     MCMPA,A1                    Displays 'SUBA.'
000024FE  103C 000E               1946          MOVE.B  #14,D0
00002502  4E4F                    1947          TRAP    #15
00002504  6000 0012               1948          BRA     SUBACONT
00002508                          1949  
00002508                          1950  SUBPRINTADDA
00002508  43F9 00002CF7           1951          LEA     MADDA,A1                    Displays 'SUBA.'
0000250E  103C 000E               1952          MOVE.B  #14,D0
00002512  4E4F                    1953          TRAP    #15
00002514  6000 0002               1954          BRA     SUBACONT
00002518                          1955  
00002518                          1956  SUBACONT
00002518                          1957          * Does the rest of SUBA
00002518  0C39 0003 00002E80      1958          CMP.B   #$3,bit2
00002520  6700 000E               1959          BEQ     SUBSIZE7
00002524  0C39 0007 00002E80      1960          CMP.B   #$7,bit2
0000252C  6700 003E               1961          BEQ     SUBSIZE8
00002530                          1962  
00002530                          1963  *************************************************
00002530                          1964  *   SUBA Word   ea,An
00002530                          1965  SUBSIZE7
00002530  43F9 00002C4C           1966          LEA     MWORD,A1
00002536  103C 000E               1967          MOVE.B  #14,D0
0000253A  4E4F                    1968          TRAP    #15
0000253C  43F9 00002C29           1969          LEA     TAB,A1
00002542  103C 000E               1970          MOVE.B  #14,D0
00002546  4E4F                    1971          TRAP    #15
00002548                          1972  
00002548  45F9 00002552           1973          LEA     SUBSIZE71,A2
0000254E  6000 024A               1974          BRA     SUBEA
00002552                          1975  SUBSIZE71
00002552  45F9 00002568           1976          LEA     SUBSIZE72,A2
00002558  43F9 00002C2D           1977          LEA     COMMA,A1
0000255E  103C 000E               1978          MOVE.B  #14,D0
00002562  4E4F                    1979          TRAP    #15
00002564  6000 0164               1980          BRA     SUBAN2
00002568                          1981  SUBSIZE72
00002568  6000 046C               1982          BRA     ENDNEWLINE
0000256C                          1983  
0000256C                          1984  *************************************************
0000256C                          1985  *   SUBA longword   ea,An
0000256C                          1986  SUBSIZE8
0000256C  43F9 00002C4F           1987          LEA     MLONG,A1
00002572  103C 000E               1988          MOVE.B  #14,D0
00002576  4E4F                    1989          TRAP    #15
00002578  43F9 00002C29           1990          LEA     TAB,A1
0000257E  103C 000E               1991          MOVE.B  #14,D0
00002582  4E4F                    1992          TRAP    #15
00002584                          1993  
00002584  45F8 2552               1994          LEA     SUBSIZE71,A2
00002588  6000 0210               1995          BRA     SUBEA
0000258C                          1996  SUBSIZE81
0000258C  45F8 2568               1997          LEA     SUBSIZE72,A2
00002590  43F9 00002C2D           1998          LEA     COMMA,A1
00002596  103C 000E               1999          MOVE.B  #14,D0
0000259A  4E4F                    2000          TRAP    #15
0000259C  6000 012C               2001          BRA     SUBAN2
000025A0                          2002  SUBSIZE82
000025A0  6000 0434               2003          BRA     ENDNEWLINE
000025A4                          2004  
000025A4                          2005  *************************************************
000025A4                          2006  * Jumps to memory location at A2
000025A4                          2007  SUBJMPA2
000025A4  4ED2                    2008          JMP     (A2)
000025A6                          2009  
000025A6                          2010  *************************************************
000025A6                          2011  * Prints out opcode name
000025A6                          2012  SUBPRINT
000025A6  0C39 0009 00002E7E      2013          CMP.B   #$9,bit0                Prints SUB
000025AE  6700 0026               2014          BEQ     SUBPRINTSUB
000025B2  0C39 000B 00002E7E      2015          CMP.B   #$B,bit0                Prints CMP or EOR
000025BA  6700 004A               2016          BEQ     SUBPRINTB
000025BE  0C39 000C 00002E7E      2017          CMP.B   #$C,bit0                Prints AND
000025C6  6700 001E               2018          BEQ     SUBPRINTAND
000025CA  0C39 000D 00002E7E      2019          CMP.B   #$D,bit0                Prints ADD
000025D2  6700 0022               2020          BEQ     SUBPRINTADD
000025D6                          2021  
000025D6                          2022  SUBPRINTSUB   * Displays 'SUB.' 
000025D6  43F9 00002CAC           2023          LEA     MSUB,A1
000025DC  103C 000E               2024          MOVE.B  #14,D0
000025E0  4E4F                    2025          TRAP    #15
000025E2  6000 004E               2026          BRA     SUBPRINTEND
000025E6                          2027  
000025E6                          2028  SUBPRINTAND   * Displays 'AND.' 
000025E6  43F9 00002CB7           2029          LEA     MAND,A1
000025EC  103C 000E               2030          MOVE.B  #14,D0
000025F0  4E4F                    2031          TRAP    #15
000025F2  6000 003E               2032          BRA     SUBPRINTEND
000025F6                          2033  
000025F6                          2034  SUBPRINTADD   * Displays 'ADD.' 
000025F6  43F9 00002CBC           2035          LEA     MADD,A1
000025FC  103C 000E               2036          MOVE.B  #14,D0
00002600  4E4F                    2037          TRAP    #15
00002602  6000 002E               2038          BRA     SUBPRINTEND
00002606                          2039  
00002606                          2040  SUBPRINTB
00002606  0C39 0004 00002E80      2041          CMP.B   #$4,bit2
0000260E  6D00 0012               2042          BLT     SUBPRINTEOR
00002612                          2043  
00002612                          2044  SUBPRINTCMP   * Displays 'CMP.' 
00002612  43F9 00002CDB           2045          LEA     MCMP,A1
00002618  103C 000E               2046          MOVE.B  #14,D0
0000261C  4E4F                    2047          TRAP    #15
0000261E  6000 0012               2048          BRA     SUBPRINTEND
00002622                          2049  
00002622                          2050  SUBPRINTEOR   * Displays 'EOR.' 
00002622  43F9 00002CEC           2051          LEA     MEOR,A1
00002628  103C 000E               2052          MOVE.B  #14,D0
0000262C  4E4F                    2053          TRAP    #15
0000262E  6000 0002               2054          BRA     SUBPRINTEND
00002632                          2055  
00002632                          2056  SUBPRINTEND
00002632  4E75                    2057          RTS
00002634                          2058  
00002634                          2059  
00002634                          2060  *******************************************************************
00002634                          2061  * Error testing for DN->EA operations
00002634                          2062  *  Data register, address register, and immediate data cannot be destinations
00002634                          2063  SUBERRORTEST1
00002634                          2064          * test for DN or AN register, branches to invalid op code if true
00002634  0C39 0000 00002E81      2065          CMP.B   #0,bit3
0000263C  6700 0326               2066          BEQ     INVOP
00002640  0C39 0001 00002E81      2067          CMP.B   #1,bit3
00002648  6700 031A               2068          BEQ     INVOP
0000264C                          2069          
0000264C                          2070          * check if destination is immediate data
0000264C  0C39 0007 00002E81      2071          CMP.B   #7,bit3
00002654  6600 001E               2072          BNE     SUBERRORTEST11
00002658  0C39 0000 00002E82      2073          CMP.B   #0,bit4
00002660  6700 0012               2074          BEQ     SUBERRORTEST11
00002664  0C39 0001 00002E82      2075          CMP.B   #1,bit4
0000266C  6700 0006               2076          BEQ     SUBERRORTEST11
00002670  6000 02F2               2077          BRA     INVOP
00002674                          2078          
00002674                          2079  SUBERRORTEST11
00002674  4E75                    2080          RTS
00002676                          2081  
00002676                          2082  
00002676                          2083  ******************************************************************************************************
00002676                          2084  *   Displays data register
00002676                          2085  SUBDN
00002676  43F9 00002C52           2086          LEA     MDN,A1
0000267C  103C 000E               2087          MOVE.B  #14,D0
00002680  4E4F                    2088          TRAP    #15
00002682                          2089  
00002682  1239 00002E7F           2090          MOVE.B  bit1,D1
00002688  103C 0003               2091          MOVE.B  #3,D0
0000268C  4E4F                    2092          TRAP    #15
0000268E                          2093          
0000268E  6000 FF14               2094          BRA     SUBJMPA2
00002692                          2095  
00002692                          2096  *   Displays data register
00002692                          2097  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002692                          2098  SUBDN2
00002692  43F9 00002C52           2099          LEA     MDN,A1
00002698  103C 000E               2100          MOVE.B  #14,D0
0000269C  4E4F                    2101          TRAP    #15
0000269E                          2102  
0000269E  1239 00002E82           2103          MOVE.B  bit4,D1
000026A4  103C 0003               2104          MOVE.B  #3,D0
000026A8  4E4F                    2105          TRAP    #15
000026AA                          2106          
000026AA  6000 FEF8               2107          BRA     SUBJMPA2
000026AE                          2108  
000026AE                          2109  *   Displays address register
000026AE                          2110  SUBAN
000026AE  43F9 00002C54           2111          LEA     MAN,A1
000026B4  103C 000E               2112          MOVE.B  #14,D0
000026B8  4E4F                    2113          TRAP    #15
000026BA                          2114  
000026BA  1239 00002E82           2115          MOVE.B  bit4,D1
000026C0  103C 0003               2116          MOVE.B  #3,D0
000026C4  4E4F                    2117          TRAP    #15
000026C6                          2118          
000026C6  6000 FEDC               2119          BRA     SUBJMPA2
000026CA                          2120  
000026CA                          2121  *   Displays address register
000026CA                          2122  *   This is for SUBA, SUBA puts An into bit1
000026CA                          2123  SUBAN2
000026CA  43F9 00002C54           2124          LEA     MAN,A1
000026D0  103C 000E               2125          MOVE.B  #14,D0
000026D4  4E4F                    2126          TRAP    #15
000026D6                          2127  
000026D6  1239 00002E7F           2128          MOVE.B  bit1,D1
000026DC  103C 0003               2129          MOVE.B  #3,D0
000026E0  4E4F                    2130          TRAP    #15
000026E2                          2131          
000026E2  6000 FEC0               2132          BRA     SUBJMPA2
000026E6                          2133  
000026E6                          2134  
000026E6                          2135  *   Displays indirect address register
000026E6                          2136  SUBANID
000026E6  43F9 00002C2F           2137          LEA     OPENBRA,A1
000026EC  103C 000E               2138          MOVE.B  #14,D0
000026F0  4E4F                    2139          TRAP    #15
000026F2                          2140  
000026F2  43F9 00002C54           2141          LEA     MAN,A1
000026F8  103C 000E               2142          MOVE.B  #14,D0
000026FC  4E4F                    2143          TRAP    #15
000026FE                          2144  
000026FE  1239 00002E82           2145          MOVE.B  bit4,D1
00002704  103C 0003               2146          MOVE.B  #3,D0
00002708  4E4F                    2147          TRAP    #15
0000270A                          2148  
0000270A  43F9 00002C31           2149          LEA     CLOSEBRA,A1
00002710  103C 000E               2150          MOVE.B  #14,D0
00002714  4E4F                    2151          TRAP    #15
00002716                          2152  
00002716  6000 FE8C               2153          BRA     SUBJMPA2
0000271A                          2154  
0000271A                          2155  *   Displays indirect address register with post increment
0000271A                          2156  SUBANIDPOS
0000271A  43F9 00002C2F           2157          LEA     OPENBRA,A1
00002720  103C 000E               2158          MOVE.B  #14,D0
00002724  4E4F                    2159          TRAP    #15
00002726                          2160  
00002726  43F9 00002C54           2161          LEA     MAN,A1
0000272C  103C 000E               2162          MOVE.B  #14,D0
00002730  4E4F                    2163          TRAP    #15
00002732                          2164  
00002732  1239 00002E82           2165          MOVE.B  bit4,D1
00002738  103C 0003               2166          MOVE.B  #3,D0
0000273C  4E4F                    2167          TRAP    #15
0000273E                          2168  
0000273E  43F9 00002C31           2169          LEA     CLOSEBRA,A1
00002744  103C 000E               2170          MOVE.B  #14,D0
00002748  4E4F                    2171          TRAP    #15
0000274A                          2172  
0000274A  43F9 00002C33           2173          LEA     POS,A1
00002750  103C 000E               2174          MOVE.B  #14,D0
00002754  4E4F                    2175          TRAP    #15
00002756                          2176  
00002756  6000 FE4C               2177          BRA     SUBJMPA2
0000275A                          2178  
0000275A                          2179  *   Displays indirect address register with pre decrement
0000275A                          2180  SUBANIDNEG
0000275A  43F9 00002C35           2181          LEA     NEG,A1
00002760  103C 000E               2182          MOVE.B  #14,D0
00002764  4E4F                    2183          TRAP    #15
00002766                          2184  
00002766  43F9 00002C2F           2185          LEA     OPENBRA,A1
0000276C  103C 000E               2186          MOVE.B  #14,D0
00002770  4E4F                    2187          TRAP    #15
00002772                          2188  
00002772  43F9 00002C54           2189          LEA     MAN,A1
00002778  103C 000E               2190          MOVE.B  #14,D0
0000277C  4E4F                    2191          TRAP    #15
0000277E                          2192  
0000277E  1239 00002E82           2193          MOVE.B  bit4,D1
00002784  103C 0003               2194          MOVE.B  #3,D0
00002788  4E4F                    2195          TRAP    #15
0000278A                          2196  
0000278A  43F9 00002C31           2197          LEA     CLOSEBRA,A1
00002790  103C 000E               2198          MOVE.B  #14,D0
00002794  4E4F                    2199          TRAP    #15
00002796                          2200  
00002796  6000 FE0C               2201          BRA     SUBJMPA2
0000279A                          2202  
0000279A                          2203  
0000279A                          2204  
0000279A                          2205  
0000279A                          2206  ******************************************************************************************************
0000279A                          2207  * Displays the EA as hex numbers
0000279A                          2208  * 
0000279A                          2209  SUBEA
0000279A                          2210          *   This finds which mode to use
0000279A  0C39 0000 00002E81      2211          CMP.B   #$0,bit3
000027A2  6700 FEEE               2212          BEQ     SUBDN2
000027A6  0C39 0001 00002E81      2213          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
000027AE  6700 FEFE               2214          BEQ     SUBAN
000027B2  0C39 0002 00002E81      2215          CMP.B   #$2,bit3
000027BA  6700 FF2A               2216          BEQ     SUBANID
000027BE  0C39 0003 00002E81      2217          CMP.B   #$3,bit3
000027C6  6700 FF52               2218          BEQ     SUBANIDPOS
000027CA  0C39 0004 00002E81      2219          CMP.B   #$4,bit3
000027D2  6786                    2220          BEQ     SUBANIDNEG
000027D4  0C39 0005 00002E81      2221          CMP.B   #$5,bit3
000027DC  6700 0424               2222          BEQ     ERROR
000027E0  0C39 0006 00002E81      2223          CMP.B   #$6,bit3
000027E8  6700 0418               2224          BEQ     ERROR
000027EC  0C39 0007 00002E81      2225          CMP.B   #$7,bit3
000027F4  6700 0002               2226          BEQ     SUBEAHEX
000027F8                          2227  
000027F8                          2228  SUBEAHEX
000027F8  0C39 0004 00002E82      2229          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002800  6700 0086               2230          BEQ     SUBEAID
00002804                          2231  SUBEAID2
00002804                          2232          *   Else it will assume it is absolute addressing mode
00002804  43F9 00002C47           2233          LEA     MHEX,A1
0000280A  103C 000E               2234          MOVE.B  #14,D0
0000280E  4E4F                    2235          TRAP    #15
00002810                          2236  
00002810  0C39 0000 00002E82      2237          CMP.B   #$0,bit4
00002818  6700 007E               2238          BEQ     SUBEAHEX1
0000281C  0C39 0001 00002E82      2239          CMP.B   #$1,bit4
00002824  6700 007A               2240          BEQ     SUBEAHEX2
00002828                          2241  
00002828  0C39 0000 00002E80      2242          CMP.B   #$0,bit2            * SUB byte displays as word
00002830  6700 0066               2243          BEQ     SUBEAHEX1
00002834  0C39 0004 00002E80      2244          CMP.B   #$4,bit2            * SUB byte displays as word
0000283C  6700 005A               2245          BEQ     SUBEAHEX1
00002840  0C39 0001 00002E80      2246          CMP.B   #$1,bit2            * SUB word
00002848  6700 004E               2247          BEQ     SUBEAHEX1
0000284C  0C39 0005 00002E80      2248          CMP.B   #$5,bit2            * SUB word
00002854  6700 0042               2249          BEQ     SUBEAHEX1
00002858  0C39 0003 00002E80      2250          CMP.B   #$3,bit2            * SUBA word
00002860  6700 0036               2251          BEQ     SUBEAHEX1
00002864  0C39 0002 00002E80      2252          CMP.B   #$2,bit2            * SUB longword
0000286C  6700 0032               2253          BEQ     SUBEAHEX2
00002870  0C39 0006 00002E80      2254          CMP.B   #$6,bit2            * SUB longword
00002878  6700 0026               2255          BEQ     SUBEAHEX2
0000287C  0C39 0007 00002E80      2256          CMP.B   #$7,bit2            * SUBA longword
00002884  6700 001A               2257          BEQ     SUBEAHEX2
00002888                          2258  
00002888                          2259  SUBEAID
00002888  43F9 00002C37           2260          LEA     HASH,A1
0000288E  103C 000E               2261          MOVE.B  #14,D0
00002892  4E4F                    2262          TRAP    #15
00002894  6000 FF6E               2263          BRA     SUBEAID2
00002898                          2264  
00002898                          2265  SUBEAHEX1  
00002898                          2266          *absolute address word
00002898  1E3C 0002               2267          MOVE.B  #2,D7
0000289C  6000 000A               2268          BRA     SUBEAHEX3
000028A0                          2269  
000028A0                          2270  SUBEAHEX2  *absolute address long
000028A0  1E3C 0004               2271          MOVE.B  #4,D7
000028A4  6000 0002               2272          BRA     SUBEAHEX3
000028A8                          2273  
000028A8                          2274  SUBEAHEX3
000028A8  BE3C 0000               2275          CMP.B   #0,D7               Compares current addr to ending addr
000028AC  6700 FCF6               2276          BEQ     SUBJMPA2            Branches to done if they are equal
000028B0                          2277  
000028B0                          2278      
000028B0  141E                    2279          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000028B2                          2280          
000028B2  1602                    2281          MOVE.B  D2,D3               Copies data at D2 to D3
000028B4                          2282          *   this gets digit in 10's place
000028B4  E80B                    2283          LSR.B   #4,D3               Shifts right to get rid of 1's place
000028B6                          2284          *   this gets digit in 1's place
000028B6  E90A                    2285          LSL.B   #4,D2               Shifts left to get rid of 10's place
000028B8  E80A                    2286          LSR.B   #4,D2               Shifts back right into 1's place
000028BA                          2287  
000028BA                          2288          
000028BA                          2289          *   D3 holds digit in 10's place
000028BA                          2290          *   D2 holds digit in 1's place
000028BA                          2291          
000028BA  1203                    2292          MOVE.B  D3,D1               Displays digit in 10's place first
000028BC                          2293  
000028BC                          2294          *   converts digits 10+ into letters
000028BC                          2295  
000028BC  47F9 000028D0           2296          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
000028C2  B23C 0009               2297          CMP.B   #9,D1               Compares digit to 9
000028C6  6E00 0164               2298          BGT     CONV                Print out letter representation if greater than 9
000028CA                          2299  
000028CA  103C 0003               2300          MOVE.B  #3,D0               Displays digit if it is less than A
000028CE  4E4F                    2301          TRAP    #15
000028D0                          2302          
000028D0                          2303  SUBEAHEX4    
000028D0  1202                    2304          MOVE.B  D2,D1               Displays digit in 1's place second
000028D2                          2305  
000028D2                          2306          *   converts digits 10+ into letters
000028D2  47F9 000028E6           2307          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
000028D8  B23C 0009               2308          CMP.B   #9,D1               Compares digit to 9
000028DC  6E00 014E               2309          BGT     CONV                Print out letter representation if greater than 9
000028E0                          2310          
000028E0  103C 0003               2311          MOVE.B  #3,D0               Displays digit if it is less than A
000028E4  4E4F                    2312          TRAP    #15
000028E6                          2313          
000028E6                          2314  SUBEAHEX5         
000028E6                          2315  * Display counter -- creates new line every 8 bytes
000028E6                          2316          * D7 is used as counter
000028E6                          2317          
000028E6  5307                    2318          SUB.B   #1,D7                       
000028E8  60BE                    2319          BRA     SUBEAHEX3              Loops back to display next address
000028EA                          2320  
000028EA                          2321  ***   display EA ends here
000028EA                          2322  
000028EA                          2323  ******************************************************************************************************
000028EA                          2324  * Displays the EA as hex numbers
000028EA                          2325  * INPUT: Size of EA in D4; 1 = word, 2 = longword
000028EA                          2326  * OUTPUT: Displays size of EA reading from A6
000028EA                          2327  * Jumps to location stored in A2 when finished
000028EA                          2328  DISPEA
000028EA  43F9 00002C47           2329          LEA     MHEX,A1
000028F0  103C 000E               2330          MOVE.B  #14,D0
000028F4  4E4F                    2331          TRAP    #15
000028F6                          2332  
000028F6  B83C 0002               2333          CMP.B   #$2,D4              Branches to longword display if size is 2
000028FA  6700 000A               2334          BEQ     DISPEALONG          Else it will assume word length
000028FE                          2335  
000028FE                          2336  DISPEAWORD
000028FE                          2337          *absolute address word
000028FE  1E3C 0002               2338          MOVE.B  #2,D7
00002902  6000 000A               2339          BRA     DISPEA3
00002906                          2340   
00002906                          2341  DISPEALONG
00002906                          2342          *absolute address long
00002906  1E3C 0004               2343          MOVE.B  #4,D7
0000290A  6000 0002               2344          BRA     DISPEA3
0000290E                          2345  
0000290E                          2346  DISPEA3
0000290E  BE3C 0000               2347          CMP.B   #0,D7               Compares current addr to ending addr
00002912  6700 FC90               2348          BEQ     SUBJMPA2            Branches to done if they are equal
00002916                          2349  
00002916                          2350      
00002916  141E                    2351          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002918                          2352          
00002918  1602                    2353          MOVE.B  D2,D3               Copies data at D2 to D3
0000291A                          2354          *   this gets digit in 10's place
0000291A  E80B                    2355          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000291C                          2356          *   this gets digit in 1's place
0000291C  E90A                    2357          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000291E  E80A                    2358          LSR.B   #4,D2               Shifts back right into 1's place
00002920                          2359  
00002920                          2360          
00002920                          2361          *   D3 holds digit in 10's place
00002920                          2362          *   D2 holds digit in 1's place
00002920                          2363          
00002920  1203                    2364          MOVE.B  D3,D1               Displays digit in 10's place first
00002922                          2365  
00002922                          2366          *   converts digits 10+ into letters
00002922                          2367  
00002922  47F9 00002936           2368          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002928  B23C 0009               2369          CMP.B   #9,D1               Compares digit to 9
0000292C  6E00 00FE               2370          BGT     CONV                Print out letter representation if greater than 9
00002930                          2371  
00002930  103C 0003               2372          MOVE.B  #3,D0               Displays digit if it is less than A
00002934  4E4F                    2373          TRAP    #15
00002936                          2374    
00002936                          2375  DISPEA4
00002936  1202                    2376          MOVE.B  D2,D1               Displays digit in 1's place second
00002938                          2377  
00002938                          2378          *   converts digits 10+ into letters
00002938  47F9 0000294C           2379          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
0000293E  B23C 0009               2380          CMP.B   #9,D1               Compares digit to 9
00002942  6E00 00E8               2381          BGT     CONV                Print out letter representation if greater than 9
00002946                          2382          
00002946  103C 0003               2383          MOVE.B  #3,D0               Displays digit if it is less than A
0000294A  4E4F                    2384          TRAP    #15
0000294C                          2385        
0000294C                          2386  DISPEA5
0000294C                          2387  * Display counter -- creates new line every 8 bytes
0000294C                          2388          * D7 is used as counter
0000294C                          2389          
0000294C  5307                    2390          SUB.B   #1,D7                       
0000294E  60BE                    2391          BRA     DISPEA3              Loops back to display next address
00002950                          2392  
00002950                          2393  ***   display EA ends here
00002950                          2394  
00002950                          2395  *******************************************************************
00002950                          2396  * Clears all of the data registers
00002950                          2397  CLRDN
00002950  4280                    2398          CLR.L   D0
00002952  4281                    2399          CLR.L   D1
00002954  4282                    2400          CLR.L   D2
00002956  4283                    2401          CLR.L   D3
00002958  4284                    2402          CLR.L   D4
0000295A  4285                    2403          CLR.L   D5
0000295C  4286                    2404          CLR.L   D6
0000295E  4287                    2405          CLR.L   D7
00002960  4E75                    2406          RTS
00002962                          2407  
00002962                          2408  ********************************************************************
00002962                          2409  * Invalid op-code handling
00002962                          2410  * Displays DATA YYYY
00002962                          2411  *  YYYY represents the op-code that failed
00002962                          2412  INVOPCODE
00002962  DE1E                    2413          ADD.B   (A6)+,D7
00002964                          2414  
00002964                          2415  INVOP
00002964  43F9 00002CA7           2416          LEA     MDATA,A1
0000296A  103C 000E               2417          MOVE.B  #14,D0
0000296E  4E4F                    2418          TRAP    #15
00002970  43F9 00002C29           2419          LEA     TAB,A1
00002976  103C 000E               2420          MOVE.B  #14,D0
0000297A  4E4F                    2421          TRAP    #15
0000297C  43F9 00002C47           2422          LEA     MHEX,A1
00002982  103C 000E               2423          MOVE.B  #14,D0
00002986  4E4F                    2424          TRAP    #15
00002988                          2425          
00002988  1C3C 0002               2426          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
0000298C                          2427          
0000298C  3407                    2428          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
0000298E  E04A                    2429          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002990  6000 0004               2430          BRA     INVOP2              Skips the second part to do later
00002994                          2431  
00002994                          2432  INVOP1
00002994  1407                    2433          MOVE.B  D7,D2
00002996                          2434  INVOP2
00002996  1602                    2435          MOVE.B  D2,D3               Copies data at D2 to D3
00002998                          2436          *   this gets digit in 10's place
00002998  E80B                    2437          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000299A                          2438          *   this gets digit in 1's place
0000299A  E90A                    2439          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000299C  E80A                    2440          LSR.B   #4,D2               Shifts back right into 1's place
0000299E                          2441  
0000299E                          2442          
0000299E                          2443          *   D3 holds digit in 10's place
0000299E                          2444          *   D2 holds digit in 1's place
0000299E                          2445          
0000299E  1203                    2446          MOVE.B  D3,D1               Displays digit in 10's place first
000029A0                          2447  
000029A0                          2448          *   converts digits 10+ into letters
000029A0                          2449  
000029A0  47F9 000029B4           2450          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
000029A6  B23C 0009               2451          CMP.B   #9,D1               Compares digit to 9
000029AA  6E00 0080               2452          BGT     CONV                Print out letter representation if greater than 9
000029AE                          2453  
000029AE  103C 0003               2454          MOVE.B  #3,D0               Displays digit if it is less than A
000029B2  4E4F                    2455          TRAP    #15
000029B4                          2456          
000029B4                          2457  INVOP3   
000029B4  1202                    2458          MOVE.B  D2,D1               Displays digit in 1's place second
000029B6                          2459  
000029B6                          2460          *   converts digits 10+ into letters
000029B6  47F9 000029CA           2461          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
000029BC  B23C 0009               2462          CMP.B   #9,D1               Compares digit to 9
000029C0  6E00 006A               2463          BGT     CONV                Print out letter representation if greater than 9
000029C4                          2464          
000029C4  103C 0003               2465          MOVE.B  #3,D0               Displays digit if it is less than A
000029C8  4E4F                    2466          TRAP    #15
000029CA                          2467          
000029CA                          2468  INVOP4
000029CA                          2469  * Display counter -- creates new line every 8 bytes
000029CA                          2470          * D6 is used as counter
000029CA                          2471          
000029CA  5306                    2472          SUB.B   #1,D6
000029CC  BC3C 0000               2473          CMP.B   #0,D6
000029D0  6700 0004               2474          BEQ     ENDNEWLINE
000029D4  60BE                    2475          BRA     INVOP1              Loops back to display next address
000029D6                          2476  
000029D6                          2477  
000029D6                          2478  ******************************************************************************************************
000029D6                          2479  * Creates a new line after an op-code is displayed, loops back to start to display next code
000029D6                          2480  ENDNEWLINE
000029D6  43F9 00002C26           2481          LEA     NEWLINE,A1          Creates a new line in output window
000029DC  103C 000E               2482          MOVE.B  #14,D0
000029E0  4E4F                    2483          TRAP    #15
000029E2                          2484  
000029E2  5339 00002E74           2485          SUB.B   #1,dispcount
000029E8  0C39 0000 00002E74      2486          CMP.B   #0,dispcount               Checks if display counter is zero
000029F0  6600 E6F0               2487          BNE     NEWADDR
000029F4                          2488  
000029F4                          2489  * Asks user to press enter to continue
000029F4                          2490  * Resets counter
000029F4  43F9 00002C26           2491          LEA     NEWLINE,A1          Creates a new line in output window
000029FA  103C 000E               2492          MOVE.B  #14,D0
000029FE  4E4F                    2493          TRAP    #15
00002A00                          2494          
00002A00  43F9 00002E58           2495          LEA     MCONT,A1            Asks user to press enter to continue
00002A06  103C 000E               2496          MOVE.B  #14,D0
00002A0A  4E4F                    2497          TRAP    #15
00002A0C                          2498  
00002A0C  103C 0004               2499          MOVE.B  #4,D0               Takes in user input
00002A10  4E4F                    2500          TRAP    #15
00002A12  4281                    2501          CLR.L   D1                  Clears D1 incase user decides to input something
00002A14                          2502  
00002A14  43F9 00002C26           2503          LEA     NEWLINE,A1          Creates a new line in output window
00002A1A  103C 000E               2504          MOVE.B  #14,D0
00002A1E  4E4F                    2505          TRAP    #15
00002A20                          2506  
00002A20  13FC 001E 00002E74      2507          MOVE.B  #dispnum,dispcount  Resets display counter
00002A28  6000 E6B8               2508          BRA     NEWADDR             Loops back to beginning
00002A2C                          2509  
00002A2C                          2510  
00002A2C                          2511  ******************************************************************************************************
00002A2C                          2512  * Converts decimal number into hex and displays it
00002A2C                          2513  *   converts number 10-15 to A-F
00002A2C                          2514  *   INPUT: decimal number in D1
00002A2C                          2515  *   OUTPUT: HEX number to output
00002A2C  B23C 000A               2516  CONV    CMP.B   #10,D1              Displays 10 as A
00002A30  6700 002A               2517          BEQ     HEXA
00002A34  B23C 000B               2518          CMP.B   #11,D1              Displays 11 as B
00002A38  6700 002C               2519          BEQ     HEXB
00002A3C  B23C 000C               2520          CMP.B   #12,D1              Displays 12 as C
00002A40  6700 002E               2521          BEQ     HEXC
00002A44  B23C 000D               2522          CMP.B   #13,D1              Displays 13 as D
00002A48  6700 0030               2523          BEQ     HEXD
00002A4C  B23C 000E               2524          CMP.B   #14,D1              Displays 14 as E
00002A50  6700 0032               2525          BEQ     HEXE
00002A54  B23C 000F               2526          CMP.B   #15,D1              Displays 15 as F
00002A58  6700 0034               2527          BEQ     HEXF
00002A5C                          2528  
00002A5C  43F9 00002C39           2529  HEXA    LEA     DISPA,A1            Loads A character
00002A62  6000 0034               2530          BRA     PRINT
00002A66                          2531    
00002A66  43F9 00002C3B           2532  HEXB    LEA     DISPB,A1            Loads B character
00002A6C  6000 002A               2533          BRA     PRINT
00002A70                          2534  
00002A70  43F9 00002C3D           2535  HEXC    LEA     DISPC,A1            Loads C character
00002A76  6000 0020               2536          BRA     PRINT
00002A7A                          2537  
00002A7A  43F9 00002C3F           2538  HEXD    LEA     DISPD,A1            Loads D character
00002A80  6000 0016               2539          BRA     PRINT
00002A84                          2540  
00002A84  43F9 00002C41           2541  HEXE    LEA     DISPE,A1            Loads E character
00002A8A  6000 000C               2542          BRA     PRINT
00002A8E                          2543  
00002A8E  43F9 00002C43           2544  HEXF    LEA     DISPF,A1            Loads F character
00002A94  6000 0002               2545          BRA     PRINT
00002A98                          2546  
00002A98  103C 000E               2547  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002A9C  4E4F                    2548          TRAP    #15                 Prints out message in A1
00002A9E  4ED3                    2549          JMP     (A3)
00002AA0                          2550  
00002AA0                          2551  ******************************************************************************
00002AA0                          2552  * Converts decimal input to hex
00002AA0                          2553  * INPUT: Decimal inside D2
00002AA0                          2554  * OUTPUT: HEX into D3
00002AA0                          2555  *   Converts number in decimal to hex        
00002AA0                          2556  DEC2HEX
00002AA0  B43C 0030               2557          CMP.B   #$30,D2             0
00002AA4  6700 00B0               2558          BEQ     D2HZERO
00002AA8  B43C 0031               2559          CMP.B   #$31,D2             1
00002AAC  6700 00AE               2560          BEQ     D2HONE
00002AB0  B43C 0032               2561          CMP.B   #$32,D2             2
00002AB4  6700 00AC               2562          BEQ     D2HTWO
00002AB8  B43C 0033               2563          CMP.B   #$33,D2             3
00002ABC  6700 00AA               2564          BEQ     D2HTHREE
00002AC0  B43C 0034               2565          CMP.B   #$34,D2             4
00002AC4  6700 00A8               2566          BEQ     D2HFOUR
00002AC8  B43C 0035               2567          CMP.B   #$35,D2             5
00002ACC  6700 00A6               2568          BEQ     D2HFIVE
00002AD0  B43C 0036               2569          CMP.B   #$36,D2             6
00002AD4  6700 00A4               2570          BEQ     D2HSIX
00002AD8  B43C 0037               2571          CMP.B   #$37,D2             7
00002ADC  6700 00A2               2572          BEQ     D2HSEVEN
00002AE0  B43C 0038               2573          CMP.B   #$38,D2             8
00002AE4  6700 00A0               2574          BEQ     D2HEIGHT
00002AE8  B43C 0039               2575          CMP.B   #$39,D2             9
00002AEC  6700 009E               2576          BEQ     D2HNINE
00002AF0  B43C 0041               2577          CMP.B   #$41,D2             A
00002AF4  6700 009C               2578          BEQ     D2HHEXA
00002AF8  B43C 0042               2579          CMP.B   #$42,D2             B
00002AFC  6700 009A               2580          BEQ     D2HHEXB
00002B00  B43C 0043               2581          CMP.B   #$43,D2             C
00002B04  6700 0098               2582          BEQ     D2HHEXC
00002B08  B43C 0044               2583          CMP.B   #$44,D2             D
00002B0C  6700 0096               2584          BEQ     D2HHEXD
00002B10  B43C 0045               2585          CMP.B   #$45,D2             E
00002B14  6700 0094               2586          BEQ     D2HHEXE
00002B18  B43C 0046               2587          CMP.B   #$46,D2             F
00002B1C  6700 0092               2588          BEQ     D2HHEXF
00002B20  B43C 0061               2589          CMP.B   #$61,D2             A
00002B24  6700 006C               2590          BEQ     D2HHEXA
00002B28  B43C 0062               2591          CMP.B   #$62,D2             B
00002B2C  6700 006A               2592          BEQ     D2HHEXB
00002B30  B43C 0063               2593          CMP.B   #$63,D2             C
00002B34  6700 0068               2594          BEQ     D2HHEXC
00002B38  B43C 0064               2595          CMP.B   #$64,D2             D
00002B3C  6700 0066               2596          BEQ     D2HHEXD
00002B40  B43C 0065               2597          CMP.B   #$65,D2             E
00002B44  6700 0064               2598          BEQ     D2HHEXE
00002B48  B43C 0066               2599          CMP.B   #$66,D2             F
00002B4C  6700 0062               2600          BEQ     D2HHEXF
00002B50                          2601  
00002B50                          2602          * User entered a non-hex character
00002B50                          2603          * Moves F to D1 to indicate error before returning
00002B50  123C 000F               2604          MOVE.B  #$F,D1
00002B54  4E75                    2605          RTS
00002B56                          2606  
00002B56                          2607  *   Moves the appropiate hex number to D3
00002B56  163C 0000               2608  D2HZERO MOVE.B  #$0,D3
00002B5A  4E75                    2609          RTS
00002B5C                          2610  
00002B5C                          2611  D2HONE
00002B5C  163C 0001               2612          MOVE.B  #$1,D3
00002B60  4E75                    2613          RTS
00002B62                          2614  
00002B62                          2615  D2HTWO
00002B62  163C 0002               2616          MOVE.B  #$2,D3
00002B66  4E75                    2617          RTS
00002B68                          2618  
00002B68                          2619  D2HTHREE
00002B68  163C 0003               2620          MOVE.B  #$3,D3
00002B6C  4E75                    2621          RTS
00002B6E                          2622  
00002B6E                          2623  D2HFOUR
00002B6E  163C 0004               2624          MOVE.B  #$4,D3
00002B72  4E75                    2625          RTS
00002B74                          2626  
00002B74                          2627  D2HFIVE
00002B74  163C 0005               2628          MOVE.B  #$5,D3
00002B78  4E75                    2629          RTS
00002B7A                          2630  
00002B7A                          2631  D2HSIX
00002B7A  163C 0006               2632          MOVE.B  #$6,D3
00002B7E  4E75                    2633          RTS
00002B80                          2634  
00002B80                          2635  D2HSEVEN
00002B80  163C 0007               2636          MOVE.B  #$7,D3
00002B84  4E75                    2637          RTS
00002B86                          2638  
00002B86                          2639  D2HEIGHT
00002B86  163C 0008               2640          MOVE.B  #$8,D3
00002B8A  4E75                    2641          RTS
00002B8C                          2642  
00002B8C                          2643  D2HNINE
00002B8C  163C 0009               2644          MOVE.B  #$9,D3
00002B90  4E75                    2645          RTS
00002B92                          2646  
00002B92                          2647  D2HHEXA
00002B92  163C 000A               2648          MOVE.B  #$A,D3
00002B96  4E75                    2649          RTS
00002B98                          2650  
00002B98                          2651  D2HHEXB
00002B98  163C 000B               2652          MOVE.B  #$B,D3
00002B9C  4E75                    2653          RTS
00002B9E                          2654  
00002B9E                          2655  D2HHEXC
00002B9E  163C 000C               2656          MOVE.B  #$C,D3
00002BA2  4E75                    2657          RTS
00002BA4                          2658  
00002BA4                          2659  D2HHEXD
00002BA4  163C 000D               2660          MOVE.B  #$D,D3
00002BA8  4E75                    2661          RTS
00002BAA                          2662  
00002BAA                          2663  D2HHEXE
00002BAA  163C 000E               2664          MOVE.B  #$E,D3
00002BAE  4E75                    2665          RTS
00002BB0                          2666  
00002BB0                          2667  D2HHEXF
00002BB0  163C 000F               2668          MOVE.B  #$F,D3
00002BB4  4E75                    2669          RTS
00002BB6                          2670  
00002BB6                          2671  *************************************************************************************************
00002BB6                          2672  ASK4REPEAT
00002BB6  43F9 00002C26           2673          LEA     NEWLINE,A1          Creates a new line in output window
00002BBC  103C 000E               2674          MOVE.B  #14,D0
00002BC0  4E4F                    2675          TRAP    #15
00002BC2                          2676  ASK4REPEAT2
00002BC2  43F9 00002D5F           2677          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00002BC8  103C 000E               2678          MOVE.B  #14,D0
00002BCC  4E4F                    2679          TRAP    #15
00002BCE                          2680  
00002BCE  43F9 00002E82           2681          LEA     bit4,A1             User has to enter Y to start over
00002BD4  103C 0002               2682          MOVE.B  #2,D0               N to exit
00002BD8  4E4F                    2683          TRAP    #15
00002BDA                          2684  
00002BDA  1239 00002E82           2685          MOVE.B  bit4,D1             User input was stored in bit4
00002BE0  B23C 0059               2686          CMP.B   #$59,D1             Char Y
00002BE4  6700 E422               2687          BEQ     IOSTART
00002BE8  B23C 0079               2688          CMP.B   #$79,D1             Char y
00002BEC  6700 E41A               2689          BEQ     IOSTART
00002BF0  B23C 004E               2690          CMP.B   #$4E,D1             Char N
00002BF4  6700 001C               2691          BEQ     DONE
00002BF8  B23C 006E               2692          CMP.B   #$6E,D1             Char n
00002BFC  6700 0014               2693          BEQ     DONE
00002C00  60C0                    2694          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00002C02                          2695  
00002C02                          2696  
00002C02                          2697  **************************************************************************************************
00002C02  43F9 00002E26           2698  ERROR   LEA     MERROR,A1
00002C08  103C 000E               2699          MOVE.B  #14,D0
00002C0C  4E4F                    2700          TRAP    #15
00002C0E  6000 000E               2701          BRA     EXIT
00002C12                          2702  
00002C12  43F9 00002E3D           2703  DONE    LEA     MDONE,A1
00002C18  103C 000E               2704          MOVE.B  #14,D0
00002C1C  4E4F                    2705          TRAP    #15
00002C1E                          2706  
00002C1E  103C 0009               2707  EXIT    MOVE.B  #9,D0
00002C22  4E4F                    2708          TRAP    #15
00002C24                          2709  
00002C24                          2710  ************************************ Output stuff **************************************
00002C24                          2711  * Stuff for output
00002C24                          2712  
00002C24  =0000000D               2713  CR      EQU     $0D
00002C24  =0000000A               2714  LF      EQU     $0A
00002C24                          2715  
00002C24= 20 00                   2716  SPACE       DC.B    ' ',0
00002C26= 0D 0A 00                2717  NEWLINE     DC.B    '',CR,LF,0
00002C29= 20 20 20 00             2718  TAB         DC.B    '   ',0
00002C2D= 2C 00                   2719  COMMA       DC.B    ',',0
00002C2F= 28 00                   2720  OPENBRA     DC.B    '(',0
00002C31= 29 00                   2721  CLOSEBRA    DC.B    ')',0
00002C33= 2B 00                   2722  POS         DC.B    '+',0
00002C35= 2D 00                   2723  NEG         DC.B    '-',0
00002C37= 23 00                   2724  HASH        DC.B    '#',0
00002C39                          2725  
00002C39                          2726  
00002C39= 41 00                   2727  DISPA       DC.B    'A',0
00002C3B= 42 00                   2728  DISPB       DC.B    'B',0
00002C3D= 43 00                   2729  DISPC       DC.B    'C',0
00002C3F= 44 00                   2730  DISPD       DC.B    'D',0
00002C41= 45 00                   2731  DISPE       DC.B    'E',0
00002C43= 46 00                   2732  DISPF       DC.B    'F',0
00002C45                          2733  
00002C45= 2E 00                   2734  MDOT        DC.B    '.',0
00002C47= 24 00                   2735  MHEX        DC.B    '$',0
00002C49= 42 20 00                2736  MBYTE       DC.B    'B ',0
00002C4C= 57 20 00                2737  MWORD       DC.B    'W ',0
00002C4F= 4C 20 00                2738  MLONG       DC.B    'L ',0
00002C52= 44 00                   2739  MDN         DC.B    'D',0
00002C54= 41 00                   2740  MAN         DC.B    'A',0
00002C56                          2741  
00002C56= 4A 53 52 00             2742  MJSR        DC.B    'JSR',0
00002C5A= 42 54 53 54 00          2743  MBTST       DC.B    'BTST',0
00002C5F= 52 4F 4C 00             2744  MROL        DC.B    'ROL',0
00002C63= 52 4F 52 00             2745  MROR        DC.B    'ROR',0
00002C67= 4C 53 4C 00             2746  MLSL        DC.B    'LSL',0
00002C6B= 4C 53 52 00             2747  MLSR        DC.B    'LSR',0
00002C6F= 4E 45 47 2E 00          2748  MMNEGW      DC.B    'NEG.',0
00002C74= 44 49 56 53 2E 57 00    2749  MMDIVSW     DC.B    'DIVS.W',0
00002C7B= 4D 55 4C 53 2E 57 00    2750  MMULSW      DC.B    'MULS.W',0
00002C82= 4D 4F 56 45 2E 42 00    2751  MMOVEB      DC.B    'MOVE.B',0
00002C89= 4D 4F 56 45 2E 57 00    2752  MMOVEW      DC.B    'MOVE.W',0
00002C90= 4D 4F 56 45 2E 4C 00    2753  MMOVEL      DC.B    'MOVE.L',0
00002C97= 4D 4F 56 45 41 2E ...   2754  MMOVEAW     DC.B    'MOVEA.W',0
00002C9F= 4D 4F 56 45 41 2E ...   2755  MMOVEAL     DC.B    'MOVEA.L',0
00002CA7                          2756  
00002CA7= 44 41 54 41 00          2757  MDATA       DC.B    'DATA',0
00002CAC= 53 55 42 2E 00          2758  MSUB        DC.B    'SUB.',0
00002CB1= 53 55 42 41 2E 00       2759  MSUBA       DC.B    'SUBA.',0
00002CB7= 41 4E 44 2E 00          2760  MAND        DC.B    'AND.',0
00002CBC= 41 44 44 2E 00          2761  MADD        DC.B    'ADD.',0
00002CC1= 53 55 42 49 2E 00       2762  MSUBI       DC.B    'SUBI.',0
00002CC7= 4F 52 49 2E 00          2763  MORI        DC.B    'ORI.',0
00002CCC= 4E 4F 54 2E 00          2764  MNOT        DC.B    'NOT.',0
00002CD1= 4D 55 4C 53 2E 00       2765  MMUL        DC.B    'MULS.',0
00002CD7= 4E 45 47 00             2766  MNEG        DC.B    'NEG',0
00002CDB= 43 4D 50 2E 00          2767  MCMP        DC.B    'CMP.',0
00002CE0= 43 4D 50 49 2E 00       2768  MCMPI       DC.B    'CMPI.',0
00002CE6= 43 4D 50 41 2E 00       2769  MCMPA       DC.B    'CMPA.',0
00002CEC= 45 4F 52 2E 00          2770  MEOR        DC.B    'EOR.',0
00002CF1= 45 4F 52 49 2E 00       2771  MEORI       DC.B    'EORI.',0
00002CF7= 41 44 44 41 2E 00       2772  MADDA       DC.B    'ADDA.',0
00002CFD                          2773  
00002CFD= 42 45 51 00             2774  MBEQ        DC.B    'BEQ',0
00002D01= 42 4E 45 00             2775  MBNE        DC.B    'BNE',0
00002D05= 42 4C 54 00             2776  MBLT        DC.B    'BLT',0
00002D09= 42 48 49 00             2777  MBHI        DC.B    'BHI',0
00002D0D= 42 52 41 00             2778  MBRA        DC.B    'BRA',0
00002D11= 4E 4F 50 00             2779  MNOP        DC.B    'NOP',0
00002D15= 52 54 53 00             2780  MRTS        DC.B    'RTS',0
00002D19                          2781  
00002D19= 4C 65 6D 6D 65 20 ...   2782  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002D3C= 47 69 6D 6D 65 20 ...   2783  MADDR2      DC.B    'Gimme that end address too homie: ',0
00002D5F= 54 72 79 6E 61 20 ...   2784  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00002D7F= 45 6E 64 20 61 64 ...   2785  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00002DB7= 41 64 64 72 65 73 ...   2786  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00002DEA= 52 65 2D 65 6E 74 ...   2787  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00002E06= 41 64 64 72 65 73 ...   2788  MIOERR4     DC.B    'Address must be an even number.',0
00002E26= 45 52 52 4F 52 3A ...   2789  MERROR      DC.B    'ERROR: Something broke',0
00002E3D= 43 4F 4D 50 4C 45 ...   2790  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00002E58= 2A 2A 50 52 45 53 ...   2791  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00002E74                          2792  
00002E74                          2793  
00002E74                          2794  ********************************** MEMORY STORAGE **********************************************
00002E74                          2795  * Stores memory locations at the end of the program
00002E74                          2796  * How DS works: Give it a variable name.
00002E74                          2797  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00002E74                          2798  *   Last is the number of storage you want. 
00002E74                          2799  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00002E74                          2800  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00002E74                          2801  *            
00002E74                          2802  
00002E74                          2803  dispcount   DS.B    1           Used to count display lines
00002E75                          2804  
00002E76                          2805  startaddr   DS.L    1
00002E7A                          2806  endaddr     DS.L    1
00002E7E                          2807  
00002E7E                          2808  bit0        DS.B    1           SEE NOTE UP TOP
00002E7F                          2809  bit1        DS.B    1           SEE NOTE UP TOP
00002E80                          2810  bit2        DS.B    1           SEE NOTE UP TOP
00002E81                          2811  bit3        DS.B    1           SEE NOTE UP TOP
00002E82                          2812  bit4        DS.B    1           SEE NOTE UP TOP
00002E83                          2813  
00002E83                          2814  
00002E83                          2815      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              154C
ADDIMD0             157C
ADDIMD1             158A
ADDIMD4             1598
ADDIMDDES           1606
ADDIMDDES0          162A
ADDIMDDES1          1638
ADDIMDDES4          1646
ADDR1               7000
ADDR2               726C
ASK4REPEAT          2BB6
ASK4REPEAT2         2BC2
BCC                 1F3A
BCCBEQ              1FB6
BCCBHI              1FD4
BCCBLT              1FCA
BCCBNE              1FC0
BCCBRA              1FAC
BCCDISP             1F80
BCCLONG             1F68
BCCNEXT             1F70
BCCPRINT            1FDE
BCCWORD             1F60
BIT0                2E7E
BIT1                2E7F
BIT2                2E80
BIT3                2E81
BIT4                2E82
BTST                125A
CLOSEBRA            2C31
CLRDN               2950
CODE                11B6
COMMA               2C2D
CONV                2A2C
CR                  D
D2HEIGHT            2B86
D2HFIVE             2B74
D2HFOUR             2B6E
D2HHEXA             2B92
D2HHEXB             2B98
D2HHEXC             2B9E
D2HHEXD             2BA4
D2HHEXE             2BAA
D2HHEXF             2BB0
D2HNINE             2B8C
D2HONE              2B5C
D2HSEVEN            2B80
D2HSIX              2B7A
D2HTHREE            2B68
D2HTWO              2B62
D2HZERO             2B56
DEC2HEX             2AA0
DISPA               2C39
DISPADDR            10B8
DISPADDR1           1100
DISPADDR2           1102
DISPADDR3           1136
DISPADDR4           114C
DISPADDR5           1162
DISPADDR6           1178
DISPADDREND         1182
DISPADDRSTART       10F4
DISPB               2C3B
DISPC               2C3D
DISPCOUNT           2E74
DISPD               2C3F
DISPE               2C41
DISPEA              28EA
DISPEA3             290E
DISPEA4             2936
DISPEA5             294C
DISPEALONG          2906
DISPEAWORD          28FE
DISPF               2C43
DISPNUM             1E
DIVSW               1AF6
DONE                2C12
ENDADDR             2E7A
ENDNEWLINE          29D6
ENDNLINC            1A68
ERROR               2C02
EXIT                2C1E
HANDLEDES           15AE
HASH                2C37
HEXA                2A5C
HEXB                2A66
HEXC                2A70
HEXD                2A7A
HEXE                2A84
HEXF                2A8E
IMD                 1FEE
IMD2                2016
IMD3                201E
IMD4                202A
IMDBYTE             20C4
IMDEA               20EC
IMDEA2              2108
IMDEA3              211E
IMDLONG             20E2
IMDPRINT            2064
IMDPRINTCMPI        20B2
IMDPRINTEND         20BC
IMDPRINTEORI        20A8
IMDPRINTORI         2094
IMDPRINTSUBI        209E
IMDWORD             20D4
INVOP               2964
INVOP1              2994
INVOP2              2996
INVOP3              29B4
INVOP4              29CA
INVOPCODE           2962
IOERROR1            107A
IOERROR2            1088
IOERROR3            1098
IOERROR4            10A8
IOGETADDR           1030
IOLOOP              1056
IOSTART             1008
IOSTARTLOOP         1050
JSR                 121A
LF                  A
LSLR                1CDA
LSLRDESD            1958
LSLRMEM             1DF8
LSLRSRCD            1930
MADD                2CBC
MADDA               2CF7
MADDR1              2D19
MADDR2              2D3C
MAN                 2C54
MAND                2CB7
MBEQ                2CFD
MBHI                2D09
MBLT                2D05
MBNE                2D01
MBRA                2D0D
MBTST               2C5A
MBYTE               2C49
MCMP                2CDB
MCMPA               2CE6
MCMPI               2CE0
MCONT               2E58
MDATA               2CA7
MDN                 2C52
MDONE               2E3D
MDOT                2C45
MEOR                2CEC
MEORI               2CF1
MERROR              2E26
MHEX                2C47
MIOERR1             2D7F
MIOERR2             2DB7
MIOERR3             2DEA
MIOERR4             2E06
MISC                2122
MISCBIT2            216A
MISCBIT3            2176
MISCBYTE            21F4
MISCEA              2222
MISCEA2             223E
MISCLONG            2216
MISCNOP             218A
MISCNOT             21AA
MISCNOT2            21B2
MISCNOT3            21BA
MISCNOT4            21C6
MISCPRINT           2242
MISCPRINTEND        226E
MISCPRINTNEG        2264
MISCPRINTNOT        225A
MISCRTS             219A
MISCWORD            2206
MJSR                2C56
MLONG               2C4F
MLSL                2C67
MLSR                2C6B
MMDIVSW             2C74
MMNEGW              2C6F
MMOVEAL             2C9F
MMOVEAW             2C97
MMOVEB              2C82
MMOVEL              2C90
MMOVEW              2C89
MMUL                2CD1
MMULSW              2C7B
MNEG                2CD7
MNOP                2D11
MNOT                2CCC
MORI                2CC7
MOVB                14C8
MOVBDN1             18A4
MOVBDN2             1A44
MOVEAL              1474
MOVEAN1             165C
MOVEAN2             1974
MOVEAW              1394
MOVEIAN1            16D0
MOVEIAND1           1804
MOVEIANI1           1764
MOVIAN2             1990
MOVIAND2            1A04
MOVIANI2            19C4
MOVL                13E8
MOVW                1308
MREPEAT             2D5F
MROL                2C5F
MROR                2C63
MRTS                2D15
MSUB                2CAC
MSUBA               2CB1
MSUBI               2CC1
MULSW               1A6C
MWORD               2C4C
NEG                 2C35
NEGW                1B84
NEWADDR             10E2
NEWLINE             2C26
OPENBRA             2C2F
POS                 2C33
PRINT               2A98
PRINTB              1E36
PRINTBYTE           1BDE
PRINTL              1E9E
PRINTLONG           1C86
PRINTLSL            1DC4
PRINTLSLRCOUNT      1ED2
PRINTLSR            1F06
PRINTROL            1D5C
PRINTROR            1D90
PRINTW              1E6A
PRINTWORD           1C32
RORL                1D44
SPACE               2C24
START               1000
STARTADDR           2E76
SUB                 2276
SUB1                22A8
SUB2                228A
SUB3                2292
SUB4                229C
SUBA                24C4
SUBACHECK           22E4
SUBACONT            2518
SUBAN               26AE
SUBAN2              26CA
SUBANID             26E6
SUBANIDNEG          275A
SUBANIDPOS          271A
SUBDN               2676
SUBDN2              2692
SUBEA               279A
SUBEAHEX            27F8
SUBEAHEX1           2898
SUBEAHEX2           28A0
SUBEAHEX3           28A8
SUBEAHEX4           28D0
SUBEAHEX5           28E6
SUBEAID             2888
SUBEAID2            2804
SUBERRORTEST1       2634
SUBERRORTEST11      2674
SUBJMPA2            25A4
SUBPRINT            25A6
SUBPRINTADD         25F6
SUBPRINTADDA        2508
SUBPRINTAND         25E6
SUBPRINTB           2606
SUBPRINTCMP         2612
SUBPRINTCMPA        24F8
SUBPRINTEND         2632
SUBPRINTEOR         2622
SUBPRINTSUB         25D6
SUBPRINTSUBA        24E8
SUBSIZE1            2344
SUBSIZE11           236A
SUBSIZE12           2380
SUBSIZE2            2384
SUBSIZE21           23AA
SUBSIZE22           23C0
SUBSIZE3            23C4
SUBSIZE31           23EA
SUBSIZE32           2400
SUBSIZE4            2404
SUBSIZE41           242A
SUBSIZE42           2440
SUBSIZE5            2444
SUBSIZE51           246A
SUBSIZE52           2480
SUBSIZE6            2484
SUBSIZE61           24AA
SUBSIZE62           24C0
SUBSIZE7            2530
SUBSIZE71           2552
SUBSIZE72           2568
SUBSIZE8            256C
SUBSIZE81           258C
SUBSIZE82           25A0
TAB                 2C29
