00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/5/2015 7:07:45 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL
00000000                            53  * ROR
00000000                            54  * BTST     EXTRA TAB    IMMEDIATE DATA 0702
00000000                            55  ****************************************************************************
00000000                            56  
00000000                            57  
00000000                            58  * sets start and end address
00000000                            59  * temp hard code
00000000                            60  * make UI later for input
00000000  =0000001E                 61  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            62  
00000000                            63  
00001000                            64      ORG    $1000
00001000                            65  START:                  ; first instruction of program
00001000                            66  
00001000                            67          
00001000                            68  
00001000                            69  
00001000                            70          *   this stores some test EA into memory m,
00001000                            71          *LEA     addr1,A1
00001000                            72          *MOVE.W  #$0440,(A1)+        *917C
00001000                            73          *MOVE.W  #$917C,(A1)+       
00001000                            74          *MOVE.L  #$5555A7FF,(A1)+
00001000                            75          *MOVE.W  #$9078,(A1)+
00001000                            76          *MOVE.W  #$5555,(A1)+
00001000                            77          
00001000                            78  
00001000                            79          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            80          
00001000                            81          *MOVE.L  #$6700F0D8,$7000
00001000                            82          *MOVE.W  #$4E71,$7000         NOP
00001000                            83  
00001000                            84          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            85          *MOVE.L  #$48E3FAF5,$7000
00001000                            86          *MOVE.L  #$4CF8CDD9,$7004
00001000                            87          *MOVE.W  #$4000,$7008
00001000                            88  
00001000                            89          * start address: 7000
00001000                            90          * end address:   766C
00001000                            91  
00001000                            92  *********************************************************************************************************************
00001000                            93  * Takes in user start and end address
00001000                            94  
00001000                            95  IOSTART
00001000                            96  *   Displays message asking for address
00001000  43F9 00002F2C             97          LEA     MADDR1,A1           Loads message to retrieve first number
00001006  6100 0020                 98          BSR     IOGETADDR
0000100A                            99  
0000100A  0804 0000                100          BTST    #0,D4               Checks of the starting address is an odd number
0000100E  6600 0090                101          BNE     IOERROR4            Throws an error if it is because it will crash
00001012                           102  
00001012  2E04                     103          MOVE.L  D4,D7               Moves starting address to D7 for now
00001014  43F9 00002F4F            104          LEA     MADDR2,A1           Then grabs the ending address
0000101A  6100 000C                105          BSR     IOGETADDR
0000101E  B887                     106          CMP.L   D7,D4               Compares the start address to end address
00001020  6E00 008E                107          BGT     DISPADDR            Continues if start < end
00001024  6000 004C                108          BRA     IOERROR1            Error if not
00001028                           109  
00001028                           110  IOGETADDR
00001028  2649                     111          MOVEA.L A1,A3               Saves the message incase of an error
0000102A  103C 000E                112          MOVE.B  #14,D0              Prepares to display message
0000102E  4E4F                     113          TRAP    #15                 Displays message
00001030                           114  
00001030  4244                     115          CLR     D4                  Clears D4 register to prevent errors
00001032                           116  
00001032  43F9 00003088            117          LEA     startaddr,A1        Uses this memory location to store the data
00001038  103C 0002                118          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
0000103C  4E4F                     119          TRAP    #15
0000103E                           120  
0000103E  B23C 0008                121          CMP.B   #8,D1               Throws an error if the input is longer than a longword
00001042  6E00 003C                122          BGT     IOERROR2
00001046  1A01                     123          MOVE.B  D1,D5               Moves the length of the input to D5
00001048                           124  
00001048                           125  IOSTARTLOOP
00001048  45F9 00003088            126          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
0000104E                           127  
0000104E                           128  IOLOOP
0000104E  141A                     129          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001050  5305                     130          SUB.B   #1,D5               Subtract 1 from counter
00001052  6100 1C56                131          BSR     DEC2HEX             Converts decimal to hex number
00001056  B23C 000F                132          CMP.B   #$F,D1
0000105A  6700 0034                133          BEQ     IOERROR3
0000105E                           134  
0000105E  1C05                     135          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001060  CDFC 0004                136          MULS    #4,D6               Multiply by 4 to find number of shifts left
00001064                           137          
00001064  EDAB                     138          LSL.L   D6,D3               Shifts hex left
00001066  D883                     139          ADD.L   D3,D4               Adds number to new total
00001068                           140          
00001068  7600                     141          MOVE.L  #0,D3               Clears D3 to prevent errors
0000106A                           142          
0000106A  BA3C 0000                143          CMP.B   #0,D5               Compares counter to 0    
0000106E  66DE                     144          BNE     IOLOOP              Otherwise will loop
00001070  4E75                     145          RTS
00001072                           146  
00001072                           147  * Error message for start address greater than end address
00001072                           148  IOERROR1
00001072  43F9 00002F92            149          LEA     MIOERR1,A1
00001078  103C 000D                150          MOVE.B  #13,D0
0000107C  4E4F                     151          TRAP    #15
0000107E  6080                     152          BRA     IOSTART
00001080                           153  
00001080                           154  * Error message if user input address is longer than longword
00001080                           155  IOERROR2
00001080  43F9 00002FCA            156          LEA     MIOERR2,A1
00001086  103C 000D                157          MOVE.B  #13,D0
0000108A  4E4F                     158          TRAP    #15
0000108C  224B                     159          MOVEA.L A3,A1
0000108E  6098                     160          BRA     IOGETADDR
00001090                           161  
00001090                           162  * Error message if user enters non-valid hex numbers
00001090                           163  IOERROR3
00001090  43F9 00002FFD            164          LEA     MIOERR3,A1
00001096  103C 000D                165          MOVE.B  #13,D0
0000109A  4E4F                     166          TRAP    #15
0000109C  224B                     167          MOVEA.L A3,A1
0000109E  6088                     168          BRA     IOGETADDR
000010A0                           169  
000010A0                           170  * Error message for odd numbered addresses
000010A0                           171  IOERROR4
000010A0  43F9 00003019            172          LEA     MIOERR4,A1
000010A6  103C 000D                173          MOVE.B  #13,D0
000010AA  4E4F                     174          TRAP    #15
000010AC  6000 FF52                175          BRA     IOSTART
000010B0                           176  
000010B0                           177  ******************************************** displays address location***********************************************
000010B0                           178  * This displays the address location of the op-code being worked on
000010B0                           179  * A6 is used as current address
000010B0                           180  DISPADDR
000010B0  23C7 00003088            181          MOVE.L  D7,startaddr
000010B6  23C4 0000308C            182          MOVE.L  D4,endaddr
000010BC  6100 1A9C                183          BSR     CLRDN
000010C0  2C79 00003088            184          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010C6  13FC 001E 00003087       185          MOVE.B  #dispnum,dispcount  Sets display line counter
000010CE                           186  
000010CE  43F9 00002E30            187          LEA     NEWLINE,A1          Creates a new line in output window
000010D4  103C 000E                188          MOVE.B  #14,D0
000010D8  4E4F                     189          TRAP    #15
000010DA                           190  
000010DA                           191  NEWADDR
000010DA  2E0E                     192          MOVE.L  A6,D7               Loads the current address into D7
000010DC  BEB9 0000308C            193          CMP.L   endaddr,D7          Compares current address to end address
000010E2  6E00 1CDC                194          BGT     ASK4REPEAT          Branches to done if current address > end address
000010E6  45F9 0000117A            195          LEA     DISPADDREND,A2
000010EC                           196  
000010EC                           197  ************************************************
000010EC                           198  * Displays address as HEX
000010EC                           199  * INPUT: address stored into D7
000010EC                           200  * OUTPUT: prints hex address to output window
000010EC                           201  DISPADDRSTART
000010EC  1C3C 0002                202          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F0  2407                     203          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010F2  4842                     204          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010F4  6000 0004                205          BRA     DISPADDR2           Skips the second part to do later
000010F8                           206  
000010F8                           207  DISPADDR1
000010F8  3407                     208          MOVE.W  D7,D2
000010FA                           209  DISPADDR2
000010FA  3202                     210          MOVE.W  D2,D1               D1 will be the first byte of the word
000010FC  3602                     211          MOVE.W  D2,D3               D3 will be the second byte of the word
000010FE  3802                     212          MOVE.W  D2,D4               D4 will be the third byte of the word
00001100  3A02                     213          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001102                           214  
00001102  E049                     215          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
00001104  E849                     216          LSR.W   #4,D1
00001106  E94B                     217          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001108  E04B                     218          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
0000110A  E84B                     219          LSR.W   #4,D3
0000110C  E14C                     220          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
0000110E  E04C                     221          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001110  E84C                     222          LSR.W   #4,D4
00001112  E14D                     223          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
00001114  E94D                     224          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001116  E04D                     225          LSR.W   #8,D5
00001118  E84D                     226          LSR.W   #4,D5
0000111A                           227          
0000111A                           228          
0000111A  47F9 0000112E            229          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001120  B23C 0009                230          CMP.B   #9,D1               Compares digit to 9
00001124  6E00 1B10                231          BGT     CONV                Print out letter representation if greater than 9
00001128                           232  
00001128  103C 0003                233          MOVE.B  #3,D0               Displays digit if it is less than A
0000112C  4E4F                     234          TRAP    #15
0000112E                           235          
0000112E                           236  DISPADDR3   
0000112E  1203                     237          MOVE.B  D3,D1               Displays digit in 1's place second
00001130                           238  
00001130                           239          *   converts digits 10+ into letters
00001130  47F9 00001144            240          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001136  B23C 0009                241          CMP.B   #9,D1               Compares digit to 9
0000113A  6E00 1AFA                242          BGT     CONV                Print out letter representation if greater than 9
0000113E                           243          
0000113E  103C 0003                244          MOVE.B  #3,D0               Displays digit if it is less than A
00001142  4E4F                     245          TRAP    #15
00001144                           246  
00001144                           247  DISPADDR4
00001144  1204                     248          MOVE.B  D4,D1               Displays digit in 1's place second
00001146                           249  
00001146                           250          *   converts digits 10+ into letters
00001146  47F9 0000115A            251          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
0000114C  B23C 0009                252          CMP.B   #9,D1               Compares digit to 9
00001150  6E00 1AE4                253          BGT     CONV                Print out letter representation if greater than 9
00001154                           254          
00001154  103C 0003                255          MOVE.B  #3,D0               Displays digit if it is less than A
00001158  4E4F                     256          TRAP    #15
0000115A                           257  
0000115A                           258  DISPADDR5
0000115A  1205                     259          MOVE.B  D5,D1               Displays digit in 1's place second
0000115C                           260  
0000115C                           261          *   converts digits 10+ into letters
0000115C  47F9 00001170            262          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
00001162  B23C 0009                263          CMP.B   #9,D1               Compares digit to 9
00001166  6E00 1ACE                264          BGT     CONV                Print out letter representation if greater than 9
0000116A                           265          
0000116A  103C 0003                266          MOVE.B  #3,D0               Displays digit if it is less than A
0000116E  4E4F                     267          TRAP    #15
00001170                           268          
00001170                           269  DISPADDR6
00001170                           270  * Display counter -- creates new line every 8 bytes
00001170                           271          * D6 is used as counter
00001170                           272          
00001170  5306                     273          SUB.B   #1,D6
00001172  BC3C 0000                274          CMP.B   #0,D6
00001176  6680                     275          BNE     DISPADDR1
00001178                           276  
00001178  4ED2                     277          JMP     (A2)                Jumps to address stored in A2 when complete
0000117A                           278  
0000117A                           279  DISPADDREND
0000117A  43F9 00002E33            280          LEA     TAB,A1
00001180  103C 000E                281          MOVE.B  #14,D0
00001184  4E4F                     282          TRAP    #15
00001186                           283          
00001186                           284  *********************************************************************************************************************
00001186                           285  * Splits the first byte of the op code into nibbles
00001186                           286  * then sends it to the branch-table to jump to the appropiate section to be decoded
00001186                           287  
00001186  4281                     288          CLR.L   D1                  Clears the data registers
00001188  4282                     289          CLR.L   D2
0000118A  4283                     290          CLR.L   D3
0000118C  4284                     291          CLR.L   D4
0000118E  4285                     292          CLR.L   D5
00001190  4286                     293          CLR.L   D6
00001192  3C16                     294          MOVE.W  (A6),D6
00001194  141E                     295          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00001196                           296    
00001196  1E02                     297          MOVE.B  D2,D7
00001198  E14F                     298          LSL.W   #8,D7
0000119A                           299          
0000119A  1602                     300          MOVE.B  D2,D3               Copies data at D2 to D3
0000119C                           301          *   this gets digit in 10's place
0000119C  E80B                     302          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000119E                           303          *   this gets digit in 1's place
0000119E  E90A                     304          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A0  E80A                     305          LSR.B   #4,D2               Shifts back right into 1's place
000011A2                           306          
000011A2                           307          *   D3 holds digit in 10's place
000011A2                           308          *   D2 holds digit in 1's place
000011A2                           309  
000011A2                           310          *   Moves second nibble to D5 to be used later
000011A2  1A02                     311          MOVE.B  D2,D5
000011A4  13C3 00003090            312          MOVE.B  D3,bit0
000011AA                           313          *   Goes to a branch-table to figure out which op code it is
000011AA  6000 0002                314          BRA     CODE
000011AE                           315  
000011AE                           316  ******************************************************************************************************
000011AE                           317  *   This is where the table goes to detirmine which op-code to use
000011AE                           318  CODE    
000011AE  B63C 0000                319          CMP.B   #$0,D3              Goes to immediate operation section
000011B2  6700 0E32                320          BEQ     IMD
000011B6  B63C 0004                321          CMP.B   #$4,D3              Goes to miscellaneous section
000011BA  6700 0F5E                322          BEQ     MISC
000011BE  B63C 0006                323          CMP.B   #$6,D3
000011C2  6700 0D6E                324          BEQ     BCC
000011C6  B63C 0009                325          CMP.B   #$9,D3              Goes to sub section
000011CA  6700 12B4                326          BEQ     SUB
000011CE  B63C 000C                327          CMP.B   #$C,D3              Goes to sub but displays as AND
000011D2  6700 12AC                328          BEQ     SUB
000011D6  B63C 000D                329          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011DA  6700 12A4                330          BEQ     SUB
000011DE  B63C 000B                331          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011E2  6700 129C                332          BEQ     SUB
000011E6  B63C 0001                333          CMP.B   #$1,D3
000011EA  6700 02D4                334          BEQ     MOVB                Goes to movb
000011EE  B63C 0003                335          CMP.B   #$3,D3
000011F2  6700 010C                336          BEQ     MOVW                Goes to movb
000011F6  B63C 0002                337          CMP.B   #$2,D3
000011FA  6700 01E4                338          BEQ     MOVL                Goes to movb
000011FE  B63C 0008                339          CMP.B   #$8,D3
00001202  6700 08EA                340          BEQ     DIVSW               Goes to divsw
00001206  B63C 000E                341          CMP.B   #$E,D3
0000120A  6700 0AC6                342          BEQ     LSLR                Goes to divsw
0000120E                           343  
0000120E  6000 195C                344          BRA     INVOPCODE
00001212                           345          
00001212                           346  JSR
00001212  43F9 00002E62            347          LEA MJSR,A1
00001218  103C 000E                348          MOVE.B  #14,D0
0000121C  4E4F                     349          TRAP    #15 
0000121E                           350          
0000121E  1406                     351          MOVE.B  D6,D2
00001220  EB0A                     352          LSL.B   #5,D2
00001222  EA0A                     353          LSR.B   #5,D2
00001224  13C2 00003094            354          MOVE.B  D2,bit4
0000122A                           355          
0000122A  1406                     356          MOVE.B  D6,D2
0000122C  E50A                     357          LSL.B   #2,D2
0000122E  EA0A                     358          LSR.B   #5,D2
00001230  13C2 00003093            359          MOVE.B  D2,bit3
00001236                           360  
00001236  183C 0003                361          MOVE.B  #$3,D4
0000123A                           362  
0000123A  0C39 0002 00003093       363          CMP.B   #$2,bit3
00001242  6700 0484                364          BEQ     MOVEIAN1
00001246  0C39 0007 00003093       365          CMP.B   #$7,bit3
0000124E  6700 02F4                366          BEQ     ADDIMD
00001252                           367          
00001252                           368  BTST 
00001252  43F9 00002E66            369          LEA MBTST,A1
00001258  103C 000E                370          MOVE.B  #14,D0
0000125C  4E4F                     371          TRAP    #15 
0000125E                           372          
0000125E  1406                     373          MOVE.B  D6,D2
00001260  EB0A                     374          LSL.B   #5,D2
00001262  EA0A                     375          LSR.B   #5,D2
00001264  13C2 00003094            376          MOVE.B  D2,bit4
0000126A                           377          
0000126A  1406                     378          MOVE.B  D6,D2
0000126C  E50A                     379          LSL.B   #2,D2
0000126E  EA0A                     380          LSR.B   #5,D2
00001270  13C2 00003093            381          MOVE.B  D2,bit3
00001276                           382          
00001276  3406                     383          MOVE.W  D6,D2
00001278  E94A                     384          LSL.W   #4,D2
0000127A  E04A                     385          LSR.W   #8,D2
0000127C  EA4A                     386          LSR.W   #5,D2
0000127E  13C2 00003091            387          MOVE.B  D2,bit1
00001284                           388          
00001284  43F9 00002E33            389          LEA TAB,A1
0000128A  103C 000E                390          MOVE.B  #14,D0
0000128E  4E4F                     391          TRAP    #15
00001290                           392  
00001290  43F9 00002E4B            393          LEA DISPD,A1
00001296  103C 000E                394          MOVE.B  #14,D0
0000129A  4E4F                     395          TRAP    #15
0000129C                           396          
0000129C  1A3C 0004                397          MOVE.B   #$4,D5
000012A0                           398          
000012A0  1239 00003091            399          MOVE.B  bit1,D1
000012A6  103C 0003                400          MOVE.B  #3,D0
000012AA  4E4F                     401          TRAP    #15
000012AC                           402          
000012AC  43F9 00002E37            403          LEA COMMA,A1
000012B2  103C 000E                404          MOVE.B  #14,D0
000012B6  4E4F                     405          TRAP    #15
000012B8                           406          
000012B8  0C39 0000 00003093       407          CMP.B   #$0,bit3           
000012C0  6700 05DA                408          BEQ     MOVBDN1
000012C4  0C39 0001 00003093       409          CMP.B   #$1,bit3
000012CC  6700 0386                410          BEQ     MOVEAN1
000012D0  0C39 0002 00003093       411          CMP.B   #$2,bit3
000012D8  6700 03EE                412          BEQ     MOVEIAN1
000012DC  0C39 0003 00003093       413          CMP.B   #$3,bit3
000012E4  6700 0476                414          BEQ     MOVEIANI1
000012E8  0C39 0004 00003093       415          CMP.B   #$4,bit3
000012F0  6700 050A                416          BEQ     MOVEIAND1
000012F4  0C39 0007 00003093       417          CMP.B   #$7,bit3
000012FC  6700 0246                418          BEQ     ADDIMD
00001300                           419  MOVW
00001300  E20A                     420          LSR.B   #1,D2
00001302  13C2 00003091            421          MOVE.B  D2,bit1
00001308                           422          
00001308  1416                     423          MOVE.B  (A6),D2
0000130A  EB0A                     424          LSL.B   #5,D2
0000130C  EA0A                     425          LSR.B   #5,D2
0000130E  13C2 00003094            426          MOVE.B  D2,bit4
00001314                           427          
00001314  141E                     428          MOVE.B  (A6)+,D2
00001316  E50A                     429          LSL.B   #2,D2
00001318  EA0A                     430          LSR.B   #5,D2
0000131A  13C2 00003093            431          MOVE.B  D2,bit3
00001320                           432          
00001320  EF4E                     433          LSL.W   #7,D6
00001322  E04E                     434          LSR.W   #8,D6 
00001324  EA4E                     435          LSR.W   #5,D6 
00001326  13C6 00003092            436          MOVE.B  D6,bit2
0000132C                           437  
0000132C  0C39 0001 00003092       438          CMP.B   #$1,bit2
00001334  6700 0056                439          BEQ     MOVEAW
00001338                           440  
00001338  43F9 00002E95            441          LEA MMOVEW,A1
0000133E  103C 000E                442          MOVE.B  #14,D0
00001342  4E4F                     443          TRAP    #15 
00001344                           444  
00001344  0C39 0000 00003093       445          CMP.B   #$0,bit3           
0000134C  6700 054E                446          BEQ     MOVBDN1
00001350  0C39 0001 00003093       447          CMP.B   #$1,bit3
00001358  6700 02FA                448          BEQ     MOVEAN1
0000135C  0C39 0002 00003093       449          CMP.B   #$2,bit3
00001364  6700 0362                450          BEQ     MOVEIAN1
00001368  0C39 0003 00003093       451          CMP.B   #$3,bit3
00001370  6700 03EA                452          BEQ     MOVEIANI1
00001374  0C39 0004 00003093       453          CMP.B   #$4,bit3
0000137C  6700 047E                454          BEQ     MOVEIAND1
00001380  0C39 0007 00003093       455          CMP.B   #$7,bit3
00001388  6700 01BA                456          BEQ     ADDIMD
0000138C                           457  
0000138C                           458  MOVEAW
0000138C  43F9 00002EA3            459          LEA MMOVEAW,A1
00001392  103C 000E                460          MOVE.B  #14,D0
00001396  4E4F                     461          TRAP    #15 
00001398                           462          
00001398  0C39 0000 00003093       463          CMP.B   #$0,bit3           
000013A0  6700 04FA                464          BEQ     MOVBDN1
000013A4  0C39 0001 00003093       465          CMP.B   #$1,bit3
000013AC  6700 02A6                466          BEQ     MOVEAN1
000013B0  0C39 0002 00003093       467          CMP.B   #$2,bit3
000013B8  6700 030E                468          BEQ     MOVEIAN1
000013BC  0C39 0003 00003093       469          CMP.B   #$3,bit3
000013C4  6700 0396                470          BEQ     MOVEIANI1
000013C8  0C39 0004 00003093       471          CMP.B   #$4,bit3
000013D0  6700 042A                472          BEQ     MOVEIAND1
000013D4  0C39 0007 00003093       473          CMP.B   #$7,bit3
000013DC  6700 0166                474          BEQ     ADDIMD
000013E0                           475  
000013E0                           476  MOVL
000013E0  E20A                     477          LSR.B   #1,D2
000013E2  13C2 00003091            478          MOVE.B  D2,bit1
000013E8                           479          
000013E8  1416                     480          MOVE.B  (A6),D2
000013EA  EB0A                     481          LSL.B   #5,D2
000013EC  EA0A                     482          LSR.B   #5,D2
000013EE  13C2 00003094            483          MOVE.B  D2,bit4
000013F4                           484          
000013F4  141E                     485          MOVE.B  (A6)+,D2
000013F6  E50A                     486          LSL.B   #2,D2
000013F8  EA0A                     487          LSR.B   #5,D2
000013FA  13C2 00003093            488          MOVE.B  D2,bit3
00001400                           489          
00001400  EF4E                     490          LSL.W   #7,D6
00001402  E04E                     491          LSR.W   #8,D6 
00001404  EA4E                     492          LSR.W   #5,D6 
00001406  13C6 00003092            493          MOVE.B  D6,bit2
0000140C                           494          
0000140C  0C39 0001 00003092       495          CMP.B   #$1,bit2
00001414  6700 0056                496          BEQ     MOVEAL
00001418                           497  
00001418  43F9 00002E9C            498          LEA MMOVEL,A1
0000141E  103C 000E                499          MOVE.B  #14,D0
00001422  4E4F                     500          TRAP    #15 
00001424                           501          
00001424  0C39 0000 00003093       502          CMP.B   #$0,bit3           
0000142C  6700 046E                503          BEQ     MOVBDN1
00001430  0C39 0001 00003093       504          CMP.B   #$1,bit3
00001438  6700 021A                505          BEQ     MOVEAN1
0000143C  0C39 0002 00003093       506          CMP.B   #$2,bit3
00001444  6700 0282                507          BEQ     MOVEIAN1
00001448  0C39 0003 00003093       508          CMP.B   #$3,bit3
00001450  6700 030A                509          BEQ     MOVEIANI1
00001454  0C39 0004 00003093       510          CMP.B   #$4,bit3
0000145C  6700 039E                511          BEQ     MOVEIAND1
00001460  0C39 0007 00003093       512          CMP.B   #$7,bit3
00001468  6700 00DA                513          BEQ     ADDIMD
0000146C                           514  
0000146C                           515  MOVEAL
0000146C  43F9 00002EAB            516          LEA MMOVEAL,A1
00001472  103C 000E                517          MOVE.B  #14,D0
00001476  4E4F                     518          TRAP    #15 
00001478                           519          
00001478  0C39 0000 00003093       520          CMP.B   #$0,bit3           
00001480  6700 041A                521          BEQ     MOVBDN1
00001484  0C39 0001 00003093       522          CMP.B   #$1,bit3
0000148C  6700 01C6                523          BEQ     MOVEAN1
00001490  0C39 0002 00003093       524          CMP.B   #$2,bit3
00001498  6700 022E                525          BEQ     MOVEIAN1
0000149C  0C39 0003 00003093       526          CMP.B   #$3,bit3
000014A4  6700 02B6                527          BEQ     MOVEIANI1
000014A8  0C39 0004 00003093       528          CMP.B   #$4,bit3
000014B0  6700 034A                529          BEQ     MOVEIAND1
000014B4  0C39 0007 00003093       530          CMP.B   #$7,bit3
000014BC  6700 0086                531          BEQ     ADDIMD        
000014C0                           532  
000014C0                           533  MOVB
000014C0  43F9 00002E8E            534          LEA MMOVEB,A1
000014C6  103C 000E                535          MOVE.B  #14,D0
000014CA  4E4F                     536          TRAP    #15 
000014CC                           537          
000014CC  E20A                     538          LSR.B   #1,D2
000014CE  13C2 00003091            539          MOVE.B  D2,bit1
000014D4                           540          
000014D4  1416                     541          MOVE.B  (A6),D2
000014D6  EB0A                     542          LSL.B   #5,D2
000014D8  EA0A                     543          LSR.B   #5,D2
000014DA  13C2 00003094            544          MOVE.B  D2,bit4
000014E0                           545          
000014E0  141E                     546          MOVE.B  (A6)+,D2
000014E2  E50A                     547          LSL.B   #2,D2
000014E4  EA0A                     548          LSR.B   #5,D2
000014E6  13C2 00003093            549          MOVE.B  D2,bit3
000014EC                           550          
000014EC  EF4E                     551          LSL.W   #7,D6
000014EE  E04E                     552          LSR.W   #8,D6 
000014F0  EA4E                     553          LSR.W   #5,D6 
000014F2  13C6 00003092            554          MOVE.B  D6,bit2
000014F8                           555          
000014F8                           556          *MOVE.B  #$1,D4
000014F8                           557          
000014F8  0C39 0000 00003093       558          CMP.B   #$0,bit3           
00001500  6700 039A                559          BEQ     MOVBDN1
00001504  0C39 0001 00003093       560          CMP.B   #$1,bit3
0000150C  6700 0146                561          BEQ     MOVEAN1
00001510  0C39 0002 00003093       562          CMP.B   #$2,bit3
00001518  6700 01AE                563          BEQ     MOVEIAN1
0000151C  0C39 0003 00003093       564          CMP.B   #$3,bit3
00001524  6700 0236                565          BEQ     MOVEIANI1
00001528  0C39 0004 00003093       566          CMP.B   #$4,bit3
00001530  6700 02CA                567          BEQ     MOVEIAND1
00001534  0C39 0007 00003093       568          CMP.B   #$7,bit3
0000153C  6700 0006                569          BEQ     ADDIMD
00001540                           570          
00001540  6000 162C                571          BRA     INVOP
00001544                           572  
00001544                           573  ADDIMD
00001544  43F9 00002E33            574      LEA     TAB,A1
0000154A  103C 000E                575      MOVE.B  #14,D0
0000154E  4E4F                     576      TRAP    #15
00001550                           577      
00001550  0C39 0000 00003094       578      CMP.B   #$0,bit4
00001558  6700 001A                579      BEQ     ADDIMD0
0000155C  0C39 0001 00003094       580      CMP.B   #$1,bit4
00001564  6700 001C                581      BEQ     ADDIMD1
00001568  0C39 0004 00003094       582      CMP.B   #$4,bit4
00001570  6700 001E                583      BEQ     ADDIMD4
00001574                           584  
00001574                           585  ADDIMD0
00001574  183C 0001                586      MOVE.B  #$1,D4
00001578  45F9 000015A6            587      LEA     HANDLEDES,A2
0000157E  6000 1574                588      BRA     DISPEA
00001582                           589  ADDIMD1 
00001582  183C 0002                590      MOVE.B  #$2,D4
00001586  45F9 000015A6            591      LEA     HANDLEDES,A2
0000158C  6000 1566                592      BRA     DISPEA
00001590                           593  ADDIMD4
00001590  43F9 00002E41            594      LEA     HASH,A1
00001596  103C 000E                595      MOVE.B  #14,D0
0000159A  4E4F                     596      TRAP    #15
0000159C                           597      
0000159C  45F9 000015A6            598      LEA     HANDLEDES,A2
000015A2  6000 1550                599      BRA     DISPEA 
000015A6                           600      
000015A6                           601  HANDLEDES
000015A6  43F9 00002E37            602      LEA     COMMA,A1
000015AC  103C 000E                603      MOVE.B  #14,D0
000015B0  4E4F                     604      TRAP    #15
000015B2                           605      
000015B2  0C39 0000 00003092       606      CMP.B   #$0,bit2
000015BA  6700 0480                607      BEQ     MOVBDN2
000015BE  0C39 0001 00003092       608      CMP.B   #$1,bit2
000015C6  6700 03A4                609      BEQ     MOVEAN2
000015CA  0C39 0002 00003092       610      CMP.B   #$2,bit2 
000015D2  6700 03B4                611      BEQ     MOVIAN2
000015D6  0C39 0003 00003092       612      CMP.B   #$3,bit2 
000015DE  6700 03DC                613      BEQ     MOVIANI2
000015E2  0C39 0004 00003092       614      CMP.B   #$4,bit2 
000015EA  6700 0410                615      BEQ     MOVIAND2
000015EE  BA3C 0005                616      CMP.B   #$5,D5
000015F2  6700 0448                617      BEQ     MOVBDN2
000015F6  BA3C 0007                618      CMP.B   #$7,D5
000015FA  6700 0002                619      BEQ     ADDIMDDES
000015FE                           620  
000015FE                           621  ADDIMDDES
000015FE  0C39 0000 00003094       622      CMP.B   #$0,bit4
00001606  6700 001A                623      BEQ     ADDIMDDES0
0000160A  0C39 0001 00003094       624      CMP.B   #$1,bit4
00001612  6700 001C                625      BEQ     ADDIMDDES1
00001616  0C39 0004 00003094       626      CMP.B   #$4,bit4
0000161E  6700 001E                627      BEQ     ADDIMDDES4
00001622                           628      
00001622                           629  ADDIMDDES0
00001622  183C 0001                630      MOVE.B  #$1,D4
00001626  45F9 00002BE0            631      LEA     ENDNEWLINE,A2
0000162C  6000 14C6                632      BRA     DISPEA
00001630                           633      
00001630                           634  ADDIMDDES1
00001630  183C 0002                635      MOVE.B  #$2,D4
00001634  45F9 00002BE0            636      LEA     ENDNEWLINE,A2
0000163A  6000 14B8                637      BRA     DISPEA
0000163E                           638      
0000163E                           639  ADDIMDDES4    
0000163E  43F9 00002E41            640      LEA     HASH,A1
00001644  103C 000E                641      MOVE.B  #14,D0
00001648  4E4F                     642      TRAP    #15
0000164A                           643      
0000164A  45F9 00002BE0            644      LEA     ENDNEWLINE,A2
00001650  6000 14A2                645      BRA     DISPEA 
00001654                           646          
00001654                           647  MOVEAN1
00001654  43F9 00002E33            648      LEA TAB,A1
0000165A  103C 000E                649      MOVE.B  #14,D0
0000165E  4E4F                     650      TRAP    #15
00001660                           651  
00001660  43F9 00002E45            652      LEA DISPA,A1
00001666  103C 000E                653      MOVE.B  #14,D0
0000166A  4E4F                     654      TRAP    #15
0000166C                           655      
0000166C  1239 00003094            656      MOVE.B  bit4,D1
00001672  103C 0003                657      MOVE.B  #3,D0
00001676  4E4F                     658      TRAP    #15
00001678                           659      
00001678  43F9 00002E37            660      LEA COMMA,A1
0000167E  103C 000E                661      MOVE.B  #14,D0
00001682  4E4F                     662      TRAP    #15
00001684                           663      
00001684  0C39 0000 00003092       664      CMP.B   #$0,bit2
0000168C  6700 03AE                665      BEQ     MOVBDN2
00001690  0C39 0001 00003092       666      CMP.B   #$1,bit2
00001698  6700 02D2                667      BEQ     MOVEAN2
0000169C  0C39 0002 00003092       668      CMP.B   #$2,bit2 
000016A4  6700 02E2                669      BEQ     MOVIAN2
000016A8  0C39 0003 00003092       670      CMP.B   #$3,bit2 
000016B0  6700 030A                671      BEQ     MOVIANI2
000016B4  0C39 0004 00003092       672      CMP.B   #$4,bit2 
000016BC  6700 033E                673      BEQ     MOVIAND2
000016C0  BA3C 0005                674      CMP.B   #$5,D5
000016C4  6700 0376                675      BEQ     MOVBDN2
000016C8                           676      
000016C8                           677  MOVEIAN1
000016C8  43F9 00002E33            678      LEA TAB,A1
000016CE  103C 000E                679      MOVE.B  #14,D0
000016D2  4E4F                     680      TRAP    #15
000016D4                           681      
000016D4  43F9 00002E39            682      LEA OPENBRA,A1
000016DA  103C 000E                683      MOVE.B  #14,D0
000016DE  4E4F                     684      TRAP    #15
000016E0                           685  
000016E0  43F9 00002E45            686      LEA DISPA,A1
000016E6  103C 000E                687      MOVE.B  #14,D0
000016EA  4E4F                     688      TRAP    #15
000016EC                           689      
000016EC  1239 00003094            690      MOVE.B  bit4,D1
000016F2  103C 0003                691      MOVE.B  #3,D0
000016F6  4E4F                     692      TRAP    #15
000016F8                           693      
000016F8  43F9 00002E3B            694      LEA CLOSEBRA,A1
000016FE  103C 000E                695      MOVE.B  #14,D0
00001702  4E4F                     696      TRAP    #15
00001704                           697      
00001704  B83C 0003                698      CMP.B   #$3,D4
00001708  6700 14D6                699      BEQ     ENDNEWLINE
0000170C                           700      
0000170C  43F9 00002E37            701      LEA COMMA,A1
00001712  103C 000E                702      MOVE.B  #14,D0
00001716  4E4F                     703      TRAP    #15
00001718                           704      
00001718  0C39 0000 00003092       705      CMP.B   #$0,bit2
00001720  6700 031A                706      BEQ     MOVBDN2
00001724  0C39 0001 00003092       707      CMP.B   #$1,bit2
0000172C  6700 023E                708      BEQ     MOVEAN2
00001730  0C39 0002 00003092       709      CMP.B   #$2,bit2 
00001738  6700 024E                710      BEQ     MOVIAN2
0000173C  0C39 0003 00003092       711      CMP.B   #$3,bit2 
00001744  6700 0276                712      BEQ     MOVIANI2
00001748  0C39 0004 00003092       713      CMP.B   #$4,bit2 
00001750  6700 02AA                714      BEQ     MOVIAND2
00001754  BA3C 0005                715      CMP.B   #$5,D5
00001758  6700 02E2                716      BEQ     MOVBDN2
0000175C                           717  
0000175C                           718  MOVEIANI1
0000175C  43F9 00002E33            719      LEA TAB,A1
00001762  103C 000E                720      MOVE.B  #14,D0
00001766  4E4F                     721      TRAP    #15
00001768                           722      
00001768  43F9 00002E39            723      LEA OPENBRA,A1
0000176E  103C 000E                724      MOVE.B  #14,D0
00001772  4E4F                     725      TRAP    #15
00001774                           726  
00001774  43F9 00002E45            727      LEA DISPA,A1
0000177A  103C 000E                728      MOVE.B  #14,D0
0000177E  4E4F                     729      TRAP    #15
00001780                           730      
00001780  1239 00003094            731      MOVE.B  bit4,D1
00001786  103C 0003                732      MOVE.B  #3,D0
0000178A  4E4F                     733      TRAP    #15
0000178C                           734      
0000178C  43F9 00002E3B            735      LEA CLOSEBRA,A1
00001792  103C 000E                736      MOVE.B  #14,D0
00001796  4E4F                     737      TRAP    #15
00001798                           738      
00001798  43F9 00002E3D            739      LEA POS,A1
0000179E  103C 000E                740      MOVE.B  #14,D0
000017A2  4E4F                     741      TRAP    #15
000017A4                           742      
000017A4  BA3C 0003                743      CMP.B   #$3,D5
000017A8  6700 1436                744      BEQ     ENDNEWLINE
000017AC                           745          
000017AC  43F9 00002E37            746      LEA COMMA,A1
000017B2  103C 000E                747      MOVE.B  #14,D0
000017B6  4E4F                     748      TRAP    #15
000017B8                           749      
000017B8  0C39 0000 00003092       750      CMP.B   #$0,bit2
000017C0  6700 027A                751      BEQ     MOVBDN2
000017C4  0C39 0001 00003092       752      CMP.B   #$1,bit2
000017CC  6700 019E                753      BEQ     MOVEAN2
000017D0  0C39 0002 00003092       754      CMP.B   #$2,bit2 
000017D8  6700 01AE                755      BEQ     MOVIAN2
000017DC  0C39 0003 00003092       756      CMP.B   #$3,bit2 
000017E4  6700 01D6                757      BEQ     MOVIANI2
000017E8  0C39 0004 00003092       758      CMP.B   #$4,bit2 
000017F0  6700 020A                759      BEQ     MOVIAND2
000017F4  BA3C 0005                760      CMP.B   #$5,D5
000017F8  6700 0242                761      BEQ     MOVBDN2
000017FC                           762  
000017FC                           763  MOVEIAND1
000017FC  43F9 00002E33            764      LEA TAB,A1
00001802  103C 000E                765      MOVE.B  #14,D0
00001806  4E4F                     766      TRAP    #15
00001808                           767      
00001808  43F9 00002E3F            768      LEA NEG,A1
0000180E  103C 000E                769      MOVE.B  #14,D0
00001812  4E4F                     770      TRAP    #15
00001814                           771      
00001814  43F9 00002E39            772      LEA OPENBRA,A1
0000181A  103C 000E                773      MOVE.B  #14,D0
0000181E  4E4F                     774      TRAP    #15
00001820                           775  
00001820  43F9 00002E45            776      LEA DISPA,A1
00001826  103C 000E                777      MOVE.B  #14,D0
0000182A  4E4F                     778      TRAP    #15
0000182C                           779      
0000182C  1239 00003094            780      MOVE.B  bit4,D1
00001832  103C 0003                781      MOVE.B  #3,D0
00001836  4E4F                     782      TRAP    #15
00001838                           783      
00001838  43F9 00002E3B            784      LEA CLOSEBRA,A1
0000183E  103C 000E                785      MOVE.B  #14,D0
00001842  4E4F                     786      TRAP    #15
00001844                           787      
00001844  BA3C 0004                788      CMP.B   #$4,D5
00001848  6700 1396                789      BEQ     ENDNEWLINE
0000184C                           790      
0000184C  43F9 00002E37            791      LEA COMMA,A1
00001852  103C 000E                792      MOVE.B  #14,D0
00001856  4E4F                     793      TRAP    #15
00001858                           794      
00001858  0C39 0000 00003092       795      CMP.B   #$0,bit2
00001860  6700 01DA                796      BEQ     MOVBDN2
00001864  0C39 0001 00003092       797      CMP.B   #$1,bit2
0000186C  6700 00FE                798      BEQ     MOVEAN2
00001870  0C39 0002 00003092       799      CMP.B   #$2,bit2 
00001878  6700 010E                800      BEQ     MOVIAN2
0000187C  0C39 0003 00003092       801      CMP.B   #$3,bit2 
00001884  6700 0136                802      BEQ     MOVIANI2
00001888  0C39 0004 00003092       803      CMP.B   #$4,bit2 
00001890  6700 016A                804      BEQ     MOVIAND2
00001894  BA3C 0005                805      CMP.B   #$5,D5
00001898  6700 01A2                806      BEQ     MOVBDN2
0000189C                           807  
0000189C                           808  MOVBDN1
0000189C  43F9 00002E33            809      LEA TAB,A1
000018A2  103C 000E                810      MOVE.B  #14,D0
000018A6  4E4F                     811      TRAP    #15
000018A8                           812  
000018A8  BA3C 0006                813      CMP.B   #$6,D5             * Data Reg for LSLR
000018AC  6700 007A                814      BEQ     LSLRSRCD
000018B0                           815  
000018B0  43F9 00002E4B            816      LEA DISPD,A1
000018B6  103C 000E                817      MOVE.B  #14,D0
000018BA  4E4F                     818      TRAP    #15
000018BC                           819      
000018BC  1239 00003094            820      MOVE.B  bit4,D1
000018C2  103C 0003                821      MOVE.B  #3,D0
000018C6  4E4F                     822      TRAP    #15
000018C8                           823  
000018C8  BA3C 0004                824      CMP.B   #$4,D5
000018CC  6700 0192                825      BEQ     ENDNLINC
000018D0                           826  
000018D0  43F9 00002E37            827      LEA COMMA,A1
000018D6  103C 000E                828      MOVE.B  #14,D0
000018DA  4E4F                     829      TRAP    #15
000018DC                           830  
000018DC  BA3C 0006                831      CMP.B   #$6,D5             * Data Reg for LSLR
000018E0  6700 006E                832      BEQ     LSLRDESD
000018E4  0C39 0000 00003092       833      CMP.B   #$0,bit2
000018EC  6700 014E                834      BEQ     MOVBDN2
000018F0  0C39 0001 00003092       835      CMP.B   #$1,bit2
000018F8  6700 0072                836      BEQ     MOVEAN2
000018FC  0C39 0002 00003092       837      CMP.B   #$2,bit2 
00001904  6700 0082                838      BEQ     MOVIAN2
00001908  0C39 0003 00003092       839      CMP.B   #$3,bit2 
00001910  6700 00AA                840      BEQ     MOVIANI2
00001914  0C39 0004 00003092       841      CMP.B   #$4,bit2 
0000191C  6700 00DE                842      BEQ     MOVIAND2
00001920  BA3C 0005                843      CMP.B   #$5,D5
00001924  6700 0116                844      BEQ     MOVBDN2
00001928                           845      
00001928                           846  LSLRSRCD
00001928  43F9 00002E4B            847      LEA DISPD,A1
0000192E  103C 000E                848      MOVE.B  #14,D0
00001932  4E4F                     849      TRAP    #15
00001934                           850          
00001934  1239 00003090            851      MOVE.B  bit0,D1
0000193A  103C 0003                852      MOVE.B  #3,D0
0000193E  4E4F                     853      TRAP    #15    
00001940                           854  
00001940  43F9 00002E37            855      LEA COMMA,A1
00001946  103C 000E                856      MOVE.B  #14,D0
0000194A  4E4F                     857      TRAP    #15  
0000194C                           858      
0000194C  6000 0002                859      BRA     LSLRDESD
00001950                           860      
00001950                           861  LSLRDESD
00001950  43F9 00002E4B            862      LEA DISPD,A1
00001956  103C 000E                863      MOVE.B  #14,D0
0000195A  4E4F                     864      TRAP    #15
0000195C                           865          
0000195C  1239 00003094            866      MOVE.B  bit4,D1
00001962  103C 0003                867      MOVE.B  #3,D0
00001966  4E4F                     868      TRAP    #15      
00001968                           869      
00001968                           870      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001968  6000 1276                871      BRA     ENDNEWLINE       
0000196C                           872  
0000196C                           873  MOVEAN2
0000196C  43F9 00002E45            874      LEA DISPA,A1
00001972  103C 000E                875      MOVE.B  #14,D0
00001976  4E4F                     876      TRAP    #15
00001978                           877      
00001978  1239 00003091            878      MOVE.B  bit1,D1
0000197E  103C 0003                879      MOVE.B  #3,D0
00001982  4E4F                     880      TRAP    #15
00001984                           881  
00001984                           882      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001984  6000 125A                883      BRA     ENDNEWLINE    
00001988                           884  
00001988                           885  MOVIAN2
00001988  43F9 00002E39            886      LEA OPENBRA,A1
0000198E  103C 000E                887      MOVE.B  #14,D0
00001992  4E4F                     888      TRAP    #15
00001994                           889  
00001994  43F9 00002E45            890      LEA DISPA,A1
0000199A  103C 000E                891      MOVE.B  #14,D0
0000199E  4E4F                     892      TRAP    #15
000019A0                           893      
000019A0  1239 00003091            894      MOVE.B  bit1,D1
000019A6  103C 0003                895      MOVE.B  #3,D0
000019AA  4E4F                     896      TRAP    #15
000019AC                           897      
000019AC  43F9 00002E3B            898      LEA CLOSEBRA,A1
000019B2  103C 000E                899      MOVE.B  #14,D0
000019B6  4E4F                     900      TRAP    #15
000019B8                           901      
000019B8                           902      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019B8  6000 1226                903      BRA     ENDNEWLINE
000019BC                           904  
000019BC                           905  MOVIANI2
000019BC  43F9 00002E39            906      LEA OPENBRA,A1
000019C2  103C 000E                907      MOVE.B  #14,D0
000019C6  4E4F                     908      TRAP    #15
000019C8                           909  
000019C8  43F9 00002E45            910      LEA DISPA,A1
000019CE  103C 000E                911      MOVE.B  #14,D0
000019D2  4E4F                     912      TRAP    #15
000019D4                           913      
000019D4  1239 00003091            914      MOVE.B  bit1,D1
000019DA  103C 0003                915      MOVE.B  #3,D0
000019DE  4E4F                     916      TRAP    #15
000019E0                           917      
000019E0  43F9 00002E3B            918      LEA CLOSEBRA,A1
000019E6  103C 000E                919      MOVE.B  #14,D0
000019EA  4E4F                     920      TRAP    #15
000019EC                           921      
000019EC  43F9 00002E3D            922      LEA POS,A1
000019F2  103C 000E                923      MOVE.B  #14,D0
000019F6  4E4F                     924      TRAP    #15
000019F8                           925      
000019F8                           926      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019F8  6000 11E6                927      BRA     ENDNEWLINE
000019FC                           928  
000019FC                           929  MOVIAND2
000019FC  43F9 00002E3F            930      LEA NEG,A1
00001A02  103C 000E                931      MOVE.B  #14,D0
00001A06  4E4F                     932      TRAP    #15
00001A08                           933      
00001A08  43F9 00002E39            934      LEA OPENBRA,A1
00001A0E  103C 000E                935      MOVE.B  #14,D0
00001A12  4E4F                     936      TRAP    #15
00001A14                           937  
00001A14  43F9 00002E45            938      LEA DISPA,A1
00001A1A  103C 000E                939      MOVE.B  #14,D0
00001A1E  4E4F                     940      TRAP    #15
00001A20                           941      
00001A20  1239 00003091            942      MOVE.B  bit1,D1
00001A26  103C 0003                943      MOVE.B  #3,D0
00001A2A  4E4F                     944      TRAP    #15
00001A2C                           945      
00001A2C  43F9 00002E3B            946      LEA CLOSEBRA,A1
00001A32  103C 000E                947      MOVE.B  #14,D0
00001A36  4E4F                     948      TRAP    #15
00001A38                           949  
00001A38                           950      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A38  6000 11A6                951      BRA     ENDNEWLINE
00001A3C                           952  
00001A3C                           953  MOVBDN2
00001A3C  43F9 00002E4B            954      LEA DISPD,A1
00001A42  103C 000E                955      MOVE.B  #14,D0
00001A46  4E4F                     956      TRAP    #15
00001A48                           957          
00001A48  1239 00003091            958      MOVE.B  bit1,D1
00001A4E  103C 0003                959      MOVE.B  #3,D0
00001A52  4E4F                     960      TRAP    #15   
00001A54                           961      
00001A54  B83C 0000                962      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A58  6700 1186                963      BEQ     ENDNEWLINE
00001A5C                           964      
00001A5C                           965      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A5C  6000 1182                966      BRA     ENDNEWLINE
00001A60                           967      
00001A60                           968      
00001A60                           969  ENDNLINC
00001A60                           970      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A60  6000 117E                971      BRA     ENDNEWLINE    
00001A64                           972      
00001A64                           973  MULSW
00001A64  1407                     974          MOVE.B  D7,D2
00001A66  EB0A                     975          LSL.B   #5,D2
00001A68  EA0A                     976          LSR.B   #5,D2
00001A6A  13C2 00003094            977          MOVE.B  D2,bit4
00001A70                           978          
00001A70  1407                     979          MOVE.B  D7,D2
00001A72  E50A                     980          LSL.B   #2,D2
00001A74  EA0A                     981          LSR.B   #5,D2
00001A76  13C2 00003093            982          MOVE.B  D2,bit3
00001A7C                           983          
00001A7C  3C07                     984          MOVE.W  D7,D6
00001A7E  EF4E                     985          LSL.W   #7,D6
00001A80  E04E                     986          LSR.W   #8,D6 
00001A82  EA4E                     987          LSR.W   #5,D6 
00001A84  13C6 00003092            988          MOVE.B  D6,bit2
00001A8A                           989          
00001A8A  E94F                     990          LSL.W   #4,D7
00001A8C  E04F                     991          LSR.W   #8,D7 
00001A8E  EA4F                     992          LSR.W   #5,D7 
00001A90  13C7 00003091            993          MOVE.B  D7,bit1
00001A96                           994          
00001A96  43F9 00002E87            995          LEA MMULSW,A1
00001A9C  323C 000E                996          MOVE    #14,D1
00001AA0  4E4F                     997          TRAP    #15
00001AA2                           998          
00001AA2  1A3C 0005                999          MOVE.B  #$5,D5 
00001AA6                          1000          
00001AA6  0C39 0000 00003093      1001          CMP.B   #$0,bit3           
00001AAE  6700 FDEC               1002          BEQ     MOVBDN1
00001AB2  0C39 0001 00003093      1003          CMP.B   #$1,bit3
00001ABA  6700 FB98               1004          BEQ     MOVEAN1
00001ABE  0C39 0002 00003093      1005          CMP.B   #$2,bit3
00001AC6  6700 FC00               1006          BEQ     MOVEIAN1
00001ACA  0C39 0003 00003093      1007          CMP.B   #$3,bit3
00001AD2  6700 FC88               1008          BEQ     MOVEIANI1
00001AD6  0C39 0004 00003093      1009          CMP.B   #$4,bit3
00001ADE  6700 FD1C               1010          BEQ     MOVEIAND1
00001AE2  0C39 0007 00003093      1011          CMP.B   #$7,bit3
00001AEA  6700 FA58               1012          BEQ     ADDIMD
00001AEE                          1013  
00001AEE                          1014           
00001AEE                          1015  DIVSW               
00001AEE                          1016          *MOVE.B  D6,D2
00001AEE  141E                    1017          MOVE.B  (A6)+,D2
00001AF0  EB0A                    1018          LSL.B   #5,D2
00001AF2  EA0A                    1019          LSR.B   #5,D2
00001AF4  13C2 00003094           1020          MOVE.B  D2,bit4
00001AFA                          1021          
00001AFA  1406                    1022          MOVE.B  D6,D2
00001AFC  E50A                    1023          LSL.B   #2,D2
00001AFE  EA0A                    1024          LSR.B   #5,D2
00001B00  13C2 00003093           1025          MOVE.B  D2,bit3
00001B06                          1026          
00001B06  3E06                    1027          MOVE.W  D6,D7
00001B08  EF4F                    1028          LSL.W   #7,D7
00001B0A  E04F                    1029          LSR.W   #8,D7 
00001B0C  EA4F                    1030          LSR.W   #5,D7 
00001B0E  13C7 00003092           1031          MOVE.B  D7,bit2
00001B14                          1032          
00001B14  E94E                    1033          LSL.W   #4,D6
00001B16  E04E                    1034          LSR.W   #8,D6 
00001B18  EA4E                    1035          LSR.W   #5,D6 
00001B1A  13C6 00003091           1036          MOVE.B  D6,bit1
00001B20                          1037          
00001B20  43F9 00002E80           1038          LEA MMDIVSW,A1
00001B26  323C 000E               1039          MOVE    #14,D1
00001B2A  4E4F                    1040          TRAP    #15
00001B2C                          1041          
00001B2C  1A3C 0005               1042          MOVE.B  #$5,D5 
00001B30  183C 0004               1043          MOVE.B  #$4,D4
00001B34                          1044          
00001B34  0C39 0000 00003093      1045          CMP.B   #$0,bit3           
00001B3C  6700 FD5E               1046          BEQ     MOVBDN1
00001B40  0C39 0001 00003093      1047          CMP.B   #$1,bit3
00001B48  6700 FB0A               1048          BEQ     MOVEAN1
00001B4C  0C39 0002 00003093      1049          CMP.B   #$2,bit3
00001B54  6700 FB72               1050          BEQ     MOVEIAN1
00001B58  0C39 0003 00003093      1051          CMP.B   #$3,bit3
00001B60  6700 FBFA               1052          BEQ     MOVEIANI1
00001B64  0C39 0004 00003093      1053          CMP.B   #$4,bit3
00001B6C  6700 FC8E               1054          BEQ     MOVEIAND1
00001B70  0C39 0007 00003093      1055          CMP.B   #$7,bit3
00001B78  6700 F9CA               1056          BEQ     ADDIMD
00001B7C                          1057  
00001B7C                          1058  NEGW
00001B7C  1406                    1059          MOVE.B  D6,D2
00001B7E  EB0A                    1060          LSL.B   #5,D2
00001B80  EA0A                    1061          LSR.B   #5,D2
00001B82  13C2 00003094           1062          MOVE.B  D2,bit4
00001B88                          1063          
00001B88  1406                    1064          MOVE.B  D6,D2
00001B8A  E50A                    1065          LSL.B   #2,D2
00001B8C  EA0A                    1066          LSR.B   #5,D2
00001B8E  13C2 00003093           1067          MOVE.B  D2,bit3
00001B94                          1068          
00001B94  3E06                    1069          MOVE.W  D6,D7
00001B96  E14F                    1070          LSL.W   #8,D7
00001B98  E04F                    1071          LSR.W   #8,D7 
00001B9A  EC4F                    1072          LSR.W   #6,D7 
00001B9C  13C7 00003092           1073          MOVE.B  D7,bit2
00001BA2                          1074          
00001BA2  43F9 00002E7B           1075          LEA MMNEGW,A1
00001BA8  323C 000E               1076          MOVE    #14,D1
00001BAC  4E4F                    1077          TRAP    #15
00001BAE                          1078          
00001BAE  183C 0003               1079          MOVE.B  #$3,D4
00001BB2                          1080          
00001BB2  0C39 0000 00003092      1081          CMP.B   #$0,bit2
00001BBA  6700 001A               1082          BEQ     PRINTBYTE
00001BBE  0C39 0001 00003092      1083          CMP.B   #$1,bit2
00001BC6  6700 0062               1084          BEQ     PRINTWORD
00001BCA  0C39 0002 00003092      1085          CMP.B   #$2,bit2
00001BD2  6700 00AA               1086          BEQ     PRINTLONG
00001BD6                          1087          
00001BD6                          1088  PRINTBYTE
00001BD6  43F9 00002E55           1089      LEA MBYTE,A1
00001BDC  323C 000E               1090      MOVE    #14,D1
00001BE0  4E4F                    1091      TRAP    #15
00001BE2                          1092  
00001BE2  0C39 0000 00003093      1093      CMP.B   #$0,bit3           
00001BEA  6700 FCB0               1094          BEQ     MOVBDN1
00001BEE  0C39 0001 00003093      1095          CMP.B   #$1,bit3
00001BF6  6700 FA5C               1096          BEQ     MOVEAN1
00001BFA  0C39 0002 00003093      1097          CMP.B   #$2,bit3
00001C02  6700 FAC4               1098          BEQ     MOVEIAN1
00001C06  0C39 0003 00003093      1099          CMP.B   #$3,bit3
00001C0E  6700 FB4C               1100          BEQ     MOVEIANI1
00001C12  0C39 0004 00003093      1101          CMP.B   #$4,bit3
00001C1A  6700 FBE0               1102          BEQ     MOVEIAND1
00001C1E  0C39 0007 00003093      1103          CMP.B   #$7,bit3
00001C26  6700 F91C               1104          BEQ     ADDIMD
00001C2A                          1105      
00001C2A                          1106  PRINTWORD
00001C2A  43F9 00002E58           1107      LEA MWORD,A1
00001C30  323C 000E               1108      MOVE    #14,D1
00001C34  4E4F                    1109      TRAP    #15
00001C36                          1110  
00001C36  0C39 0000 00003093      1111      CMP.B   #$0,bit3           
00001C3E  6700 FC5C               1112          BEQ     MOVBDN1
00001C42  0C39 0001 00003093      1113          CMP.B   #$1,bit3
00001C4A  6700 FA08               1114          BEQ     MOVEAN1
00001C4E  0C39 0002 00003093      1115          CMP.B   #$2,bit3
00001C56  6700 FA70               1116          BEQ     MOVEIAN1
00001C5A  0C39 0003 00003093      1117          CMP.B   #$3,bit3
00001C62  6700 FAF8               1118          BEQ     MOVEIANI1
00001C66  0C39 0004 00003093      1119          CMP.B   #$4,bit3
00001C6E  6700 FB8C               1120          BEQ     MOVEIAND1
00001C72  0C39 0007 00003093      1121          CMP.B   #$7,bit3
00001C7A  6700 F8C8               1122          BEQ     ADDIMD
00001C7E                          1123      
00001C7E                          1124  PRINTLONG
00001C7E  43F9 00002E5B           1125      LEA MLONG,A1
00001C84  323C 000E               1126      MOVE    #14,D1
00001C88  4E4F                    1127      TRAP    #15
00001C8A                          1128   
00001C8A  0C39 0000 00003093      1129      CMP.B   #$0,bit3           
00001C92  6700 FC08               1130          BEQ     MOVBDN1
00001C96  0C39 0001 00003093      1131          CMP.B   #$1,bit3
00001C9E  6700 F9B4               1132          BEQ     MOVEAN1
00001CA2  0C39 0002 00003093      1133          CMP.B   #$2,bit3
00001CAA  6700 FA1C               1134          BEQ     MOVEIAN1
00001CAE  0C39 0003 00003093      1135          CMP.B   #$3,bit3
00001CB6  6700 FAA4               1136          BEQ     MOVEIANI1
00001CBA  0C39 0004 00003093      1137          CMP.B   #$4,bit3
00001CC2  6700 FB38               1138          BEQ     MOVEIAND1
00001CC6  0C39 0007 00003093      1139          CMP.B   #$7,bit3
00001CCE  6700 F874               1140          BEQ     ADDIMD
00001CD2                          1141          
00001CD2                          1142  LSLR
00001CD2                          1143          *MOVE.B  D6,D2
00001CD2  141E                    1144          MOVE.B  (A6)+,D2
00001CD4  EB0A                    1145          LSL.B   #5,D2
00001CD6  EA0A                    1146          LSR.B   #5,D2
00001CD8  13C2 00003094           1147          MOVE.B  D2,bit4
00001CDE                          1148          
00001CDE                          1149          
00001CDE                          1150          
00001CDE  1406                    1151          MOVE.B  D6,D2
00001CE0  E50A                    1152          LSL.B   #2,D2
00001CE2  EE0A                    1153          LSR.B   #7,D2
00001CE4  13C2 00003093           1154          MOVE.B  D2,bit3
00001CEA                          1155          
00001CEA  3E06                    1156          MOVE.W  D6,D7
00001CEC  E14F                    1157          LSL.W   #8,D7
00001CEE  E04F                    1158          LSR.W   #8,D7 
00001CF0  EC4F                    1159          LSR.W   #6,D7 
00001CF2  13C7 00003092           1160          MOVE.B  D7,bit2
00001CF8                          1161          
00001CF8  3E06                    1162          MOVE.W  D6,D7
00001CFA  EF4F                    1163          LSL.W   #7,D7
00001CFC  E04F                    1164          LSR.W   #8,D7 
00001CFE  EE4F                    1165          LSR.W   #7,D7
00001D00  13C7 00003091           1166          MOVE.B  D7,bit1   
00001D06                          1167      
00001D06  1806                    1168          MOVE.B  D6,D4
00001D08                          1169          
00001D08  3E06                    1170          MOVE.W  D6,D7
00001D0A  E94F                    1171          LSL.W   #4,D7
00001D0C  E04F                    1172          LSR.W   #8,D7 
00001D0E  EA4F                    1173          LSR.W   #5,D7
00001D10  13C7 00003090           1174          MOVE.B  D7,bit0 
00001D16                          1175          
00001D16  1606                    1176          MOVE.B  D6,D3
00001D18  E70B                    1177          LSL.B   #3,D3
00001D1A  EC0B                    1178          LSR.B   #6,D3
00001D1C  B63C 0003               1179          CMP.B   #3,D3
00001D20  6700 001A               1180          BEQ     RORL
00001D24                          1181          
00001D24  0C39 0001 00003091      1182          CMP.B   #$1,bit1
00001D2C  6700 008E               1183          BEQ     PRINTLSL
00001D30  0C39 0000 00003091      1184          CMP.B   #$0,bit1
00001D38  6700 01C4               1185          BEQ     PRINTLSR
00001D3C                          1186          
00001D3C                          1187  RORL
00001D3C  0C39 0001 00003091      1188          CMP.B   #$1,bit1
00001D44  6700 000E               1189          BEQ     PRINTROL
00001D48  0C39 0000 00003091      1190          CMP.B   #$0,bit1
00001D50  6700 0036               1191          BEQ     PRINTROR
00001D54                          1192  PRINTROL
00001D54  43F9 00002E6B           1193          LEA MROL,A1
00001D5A  303C 000E               1194          MOVE    #14,D0
00001D5E  4E4F                    1195          TRAP    #15
00001D60                          1196          
00001D60  0C39 0000 00003092      1197          CMP.B   #$0,bit2
00001D68  6700 00C4               1198          BEQ     PRINTB
00001D6C  0C39 0001 00003092      1199          CMP.B   #$1,bit2
00001D74  6700 00EC               1200          BEQ     PRINTW
00001D78  0C39 0002 00003092      1201          CMP.B   #$2,bit2
00001D80  6700 0114               1202          BEQ     PRINTL
00001D84  6000 006A               1203          BRA     LSLRMEM
00001D88                          1204  PRINTROR
00001D88  43F9 00002E6F           1205          LEA MROR,A1
00001D8E  323C 000E               1206          MOVE    #14,D1
00001D92  4E4F                    1207          TRAP    #15
00001D94                          1208          
00001D94  0C39 0000 00003092      1209          CMP.B   #$0,bit2
00001D9C  6700 0090               1210          BEQ     PRINTB
00001DA0  0C39 0001 00003092      1211          CMP.B   #$1,bit2
00001DA8  6700 00B8               1212          BEQ     PRINTW
00001DAC  0C39 0002 00003092      1213          CMP.B   #$2,bit2
00001DB4  6700 00E0               1214          BEQ     PRINTL
00001DB8  6000 0036               1215          BRA     LSLRMEM
00001DBC                          1216  PRINTLSL
00001DBC  43F9 00002E73           1217          LEA MLSL,A1
00001DC2  303C 000E               1218          MOVE    #14,D0
00001DC6  4E4F                    1219          TRAP    #15
00001DC8                          1220          
00001DC8  0C39 0000 00003092      1221          CMP.B   #$0,bit2
00001DD0  6700 005C               1222          BEQ     PRINTB
00001DD4  0C39 0001 00003092      1223          CMP.B   #$1,bit2
00001DDC  6700 0084               1224          BEQ     PRINTW
00001DE0  0C39 0002 00003092      1225          CMP.B   #$2,bit2
00001DE8  6700 00AC               1226          BEQ     PRINTL
00001DEC  6000 0002               1227          BRA     LSLRMEM
00001DF0                          1228          
00001DF0                          1229  LSLRMEM
00001DF0                          1230          
00001DF0  E50C                    1231          LSL.B   #2,D4
00001DF2  EA0C                    1232          LSR.B   #5,D4
00001DF4  13C4 00003093           1233          MOVE.B  D4,bit3
00001DFA                          1234          
00001DFA  183C 0003               1235          MOVE.B  #$3,D4
00001DFE                          1236          
00001DFE  0C39 0002 00003093      1237          CMP.B   #$2,bit3
00001E06  6700 F8C0               1238          BEQ     MOVEIAN1
00001E0A  0C39 0003 00003093      1239          CMP.B   #$3,bit3
00001E12  6700 F948               1240          BEQ     MOVEIANI1
00001E16  0C39 0004 00003093      1241          CMP.B   #$4,bit3
00001E1E  6700 F9DC               1242          BEQ     MOVEIAND1
00001E22  0C39 0007 00003093      1243          CMP.B   #$7,bit3
00001E2A  6700 F718               1244          BEQ     ADDIMD
00001E2E                          1245  PRINTB
00001E2E  43F9 00002E51           1246          LEA MDOT,A1
00001E34  303C 000E               1247          MOVE    #14,D0
00001E38  4E4F                    1248          TRAP    #15
00001E3A                          1249  
00001E3A  43F9 00002E55           1250          LEA MBYTE,A1
00001E40  303C 000E               1251          MOVE    #14,D0
00001E44  4E4F                    1252          TRAP    #15
00001E46                          1253          
00001E46  3A3C 0006               1254          MOVE #$6,D5
00001E4A                          1255          
00001E4A  0C39 0000 00003093      1256          CMP.B   #0,bit3
00001E52  6700 0076               1257          BEQ     PRINTLSLRCOUNT
00001E56  0C39 0001 00003093      1258          CMP.B   #1,bit3
00001E5E  6700 FA3C               1259          BEQ     MOVBDN1
00001E62                          1260  
00001E62                          1261  PRINTW 
00001E62  43F9 00002E51           1262          LEA MDOT,A1
00001E68  303C 000E               1263          MOVE    #14,D0
00001E6C  4E4F                    1264          TRAP    #15
00001E6E                          1265  
00001E6E  43F9 00002E58           1266          LEA MWORD,A1
00001E74  303C 000E               1267          MOVE    #14,D0
00001E78  4E4F                    1268          TRAP    #15
00001E7A                          1269          
00001E7A  3A3C 0006               1270          MOVE #$6,D5
00001E7E                          1271          
00001E7E  0C39 0000 00003093      1272          CMP.B   #0,bit3
00001E86  6700 0042               1273          BEQ     PRINTLSLRCOUNT
00001E8A  0C39 0001 00003093      1274          CMP.B   #1,bit3
00001E92  6700 FA08               1275          BEQ     MOVBDN1
00001E96                          1276  
00001E96                          1277  PRINTL
00001E96  43F9 00002E51           1278          LEA MDOT,A1
00001E9C  303C 000E               1279          MOVE    #14,D0
00001EA0  4E4F                    1280          TRAP    #15
00001EA2                          1281  
00001EA2  43F9 00002E5B           1282          LEA MLONG,A1
00001EA8  303C 000E               1283          MOVE    #14,D0
00001EAC  4E4F                    1284          TRAP    #15
00001EAE                          1285  
00001EAE  3A3C 0006               1286          MOVE #$6,D5
00001EB2                          1287          
00001EB2  0C39 0000 00003093      1288          CMP.B   #0,bit3
00001EBA  6700 000E               1289          BEQ     PRINTLSLRCOUNT
00001EBE  0C39 0001 00003093      1290          CMP.B   #1,bit3
00001EC6  6700 F9D4               1291          BEQ     MOVBDN1    
00001ECA                          1292  
00001ECA                          1293  PRINTLSLRCOUNT
00001ECA  43F9 00002E33           1294          LEA TAB,A1
00001ED0  303C 000E               1295          MOVE    #14,D0
00001ED4  4E4F                    1296          TRAP    #15
00001ED6                          1297          
00001ED6  43F9 00002E41           1298          LEA HASH,A1
00001EDC  303C 000E               1299          MOVE    #14,D0
00001EE0  4E4F                    1300          TRAP    #15
00001EE2                          1301          
00001EE2  1239 00003090           1302          MOVE.B  bit0,D1
00001EE8  303C 0003               1303          MOVE    #3,D0
00001EEC  4E4F                    1304          TRAP    #15
00001EEE                          1305          
00001EEE  43F9 00002E37           1306          LEA COMMA,A1
00001EF4  303C 000E               1307          MOVE    #14,D0
00001EF8  4E4F                    1308          TRAP    #15
00001EFA                          1309          
00001EFA  6000 FA54               1310          BRA LSLRDESD
00001EFE                          1311    
00001EFE                          1312  PRINTLSR
00001EFE  43F9 00002E77           1313          LEA MLSR,A1
00001F04  323C 000E               1314          MOVE    #14,D1
00001F08  4E4F                    1315          TRAP    #15
00001F0A                          1316          
00001F0A  0C39 0000 00003092      1317          CMP.B   #$0,bit2
00001F12  6700 FF1A               1318          BEQ     PRINTB
00001F16  0C39 0001 00003092      1319          CMP.B   #$1,bit2
00001F1E  6700 FF42               1320          BEQ     PRINTW
00001F22  0C39 0002 00003092      1321          CMP.B   #$2,bit2
00001F2A  6700 FF6A               1322          BEQ     PRINTL
00001F2E  6000 FEC0               1323          BRA     LSLRMEM
00001F32                          1324  
00001F32                          1325  ******************************************************************************************************
00001F32                          1326  *   Branch, branch to subroutine, and branch conditionally
00001F32                          1327  *   BRA, BSR, Bcc
00001F32                          1328  
00001F32                          1329  BCC
00001F32  13C5 00003091           1330          MOVE.B  D5,bit1             Moves condition code to bit1
00001F38  1A1E                    1331          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001F3A  13C5 00003092           1332          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001F40  280E                    1333          MOVE.L  A6,D4               Moves current address to D4 register
00001F42                          1334  
00001F42  BA3C 0000               1335          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001F46  6700 0010               1336          BEQ     BCCWORD
00001F4A  BA3C 00FF               1337          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001F4E  6700 0010               1338          BEQ     BCCLONG             Else, displacement is 8-bits
00001F52                          1339  
00001F52                          1340          * Calculates 8-bit displacement
00001F52                          1341          * 8-bit displacement is already in D5
00001F52                          1342          * Adds displacement to current address
00001F52  D805                    1343          ADD.B   D5,D4               Adds the displacement to current address
00001F54  6000 0012               1344          BRA     BCCNEXT
00001F58                          1345  
00001F58                          1346  * Calculates 16-bit displacement
00001F58                          1347  BCCWORD
00001F58  3A1E                    1348          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001F5A  D845                    1349          ADD.W   D5,D4               Adds the displacement to current address
00001F5C  6000 000A               1350          BRA     BCCNEXT
00001F60                          1351  
00001F60                          1352  * Calculates 32-bit displacement
00001F60                          1353  BCCLONG
00001F60  2A1E                    1354          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001F62  D885                    1355          ADD.L   D5,D4               Adds the displacement to current address
00001F64  6000 0002               1356          BRA     BCCNEXT
00001F68                          1357  
00001F68                          1358  * Does the actual calculation
00001F68                          1359  * Adds the displacement to the current address
00001F68                          1360  BCCNEXT
00001F68  6100 000E               1361          BSR     BCCDISP             Displays branch op-code
00001F6C  45F9 00002BE0           1362          LEA     ENDNEWLINE,A2
00001F72  2E04                    1363          MOVE.L  D4,D7
00001F74  6000 F176               1364          BRA     DISPADDRSTART
00001F78                          1365  
00001F78                          1366  BCCDISP
00001F78  B43C 0000               1367          CMP.B   #$0,D2
00001F7C  6700 0026               1368          BEQ     BCCBRA
00001F80  B43C 0007               1369          CMP.B   #$7,D2
00001F84  6700 0028               1370          BEQ     BCCBEQ
00001F88  B43C 0006               1371          CMP.B   #$6,D2
00001F8C  6700 002A               1372          BEQ     BCCBNE
00001F90  B43C 000D               1373          CMP.B   #$D,D2
00001F94  6700 002C               1374          BEQ     BCCBLT
00001F98  B43C 0002               1375          CMP.B   #$2,D2
00001F9C  6700 002E               1376          BEQ     BCCBHI
00001FA0                          1377  
00001FA0  6000 0BCC               1378          BRA     INVOP
00001FA4                          1379  
00001FA4                          1380  BCCBRA
00001FA4  43F9 00002F20           1381          LEA     MBRA,A1
00001FAA  6000 002A               1382          BRA     BCCPRINT
00001FAE                          1383  BCCBEQ
00001FAE  43F9 00002F10           1384          LEA     MBEQ,A1
00001FB4  6000 0020               1385          BRA     BCCPRINT
00001FB8                          1386  BCCBNE
00001FB8  43F9 00002F14           1387          LEA     MBNE,A1
00001FBE  6000 0016               1388          BRA     BCCPRINT
00001FC2                          1389  BCCBLT
00001FC2  43F9 00002F18           1390          LEA     MBLT,A1
00001FC8  6000 000C               1391          BRA     BCCPRINT
00001FCC                          1392  BCCBHI
00001FCC  43F9 00002F1C           1393          LEA     MBHI,A1
00001FD2  6000 0002               1394          BRA     BCCPRINT
00001FD6                          1395  BCCPRINT
00001FD6  103C 000E               1396          MOVE.B  #14,D0
00001FDA  4E4F                    1397          TRAP    #15
00001FDC  43F9 00002E33           1398          LEA     TAB,A1
00001FE2  4E4F                    1399          TRAP    #15
00001FE4  4E75                    1400          RTS
00001FE6                          1401  
00001FE6                          1402  ******************************************************************************************************
00001FE6                          1403  *   Immediate data arithmetic operations
00001FE6                          1404  *   SUBI
00001FE6                          1405  
00001FE6  13C5 00003091           1406  IMD     MOVE.B  D5,bit1
00001FEC  141E                    1407          MOVE.B  (A6)+,D2
00001FEE                          1408          
00001FEE  3805                    1409          MOVE    D5,D4
00001FF0  C83C 0001               1410          AND.B   #$0001,D4
00001FF4  B83C 0001               1411          CMP.B   #$1,D4
00001FF8  6700 F258               1412          BEQ     BTST
00001FFC                          1413  
00001FFC  DE02                    1414          ADD.B   D2,D7
00001FFE                          1415  
00001FFE  1602                    1416          MOVE.B  D2,D3               Copies data at D2 to D3
00002000                          1417          *   this gets digit in 10's place
00002000  E80B                    1418          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002002                          1419          *   this gets digit in 1's place
00002002  E90A                    1420          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002004  E80A                    1421          LSR.B   #4,D2               Shifts back right into 1's place
00002006                          1422  
00002006                          1423          *   D3 holds digit in 10's place
00002006                          1424          *   D2 holds digit in 1's place
00002006                          1425  
00002006  E20B                    1426          LSR.B   #1,D3
00002008  6400 0004               1427          BCC     IMD2
0000200C  5404                    1428          ADD.B   #$2,D4
0000200E  E20B                    1429  IMD2    LSR.B   #1,D3
00002010  6400 0004               1430          BCC     IMD3
00002014  5804                    1431          ADD.B   #$4,D4
00002016  B43C 0007               1432  IMD3    CMP.B   #$7,D2
0000201A  6D00 0006               1433          BLT     IMD4
0000201E  5204                    1434          ADD.B   #$1,D4
00002020  5102                    1435          SUB.B   #$8,D2
00002022                          1436  
00002022                          1437          *   Stores them into addr
00002022  13C3 00003092           1438  IMD4    MOVE.B  D3,bit2
00002028  13C4 00003093           1439          MOVE.B  D4,bit3
0000202E  13C2 00003094           1440          MOVE.B  D2,bit4
00002034                          1441  
00002034                          1442  **************************
00002034                          1443  * This finds the size of the operation
00002034                          1444  
00002034  0C39 0000 00003092      1445          CMP.B   #$0,bit2
0000203C  6700 007E               1446          BEQ     IMDBYTE
00002040  0C39 0001 00003092      1447          CMP.B   #$1,bit2
00002048  6700 0082               1448          BEQ     IMDWORD
0000204C  0C39 0002 00003092      1449          CMP.B   #$2,bit2
00002054  6700 0084               1450          BEQ     IMDLONG
00002058  6000 0B14               1451          BRA     INVOP
0000205C                          1452  
0000205C                          1453  *************************************************************
0000205C                          1454  * Display IMD op-code
0000205C                          1455  IMDPRINT
0000205C  0C39 0000 00003091      1456          CMP.B   #$0,bit1
00002064  6700 0026               1457          BEQ     IMDPRINTORI
00002068  0C39 0004 00003091      1458          CMP.B   #$4,bit1
00002070  6700 0024               1459          BEQ     IMDPRINTSUBI
00002074  0C39 000A 00003091      1460          CMP.B   #$A,bit1
0000207C  6700 0022               1461          BEQ     IMDPRINTEORI
00002080  0C39 000C 00003091      1462          CMP.B   #$C,bit1
00002088  6700 0020               1463          BEQ     IMDPRINTCMPI
0000208C                          1464  
0000208C                          1465  IMDPRINTORI
0000208C  43F9 00002EDA           1466          LEA     MORI,A1
00002092  6000 0020               1467          BRA     IMDPRINTEND
00002096                          1468  
00002096                          1469  IMDPRINTSUBI
00002096  43F9 00002ED4           1470          LEA     MSUBI,A1
0000209C  6000 0016               1471          BRA     IMDPRINTEND
000020A0                          1472  
000020A0                          1473  IMDPRINTEORI
000020A0  43F9 00002F04           1474          LEA     MEORI,A1
000020A6  6000 000C               1475          BRA     IMDPRINTEND
000020AA                          1476  
000020AA                          1477  IMDPRINTCMPI
000020AA  43F9 00002EF3           1478          LEA     MCMPI,A1
000020B0  6000 0002               1479          BRA     IMDPRINTEND
000020B4                          1480  
000020B4                          1481  IMDPRINTEND
000020B4  103C 000E               1482          MOVE.B  #14,D0
000020B8  4E4F                    1483          TRAP    #15
000020BA  4E75                    1484          RTS
000020BC                          1485  
000020BC                          1486  *************************************************************
000020BC                          1487  * Immediate data operation size BYTE
000020BC                          1488  IMDBYTE
000020BC  619E                    1489          BSR     IMDPRINT
000020BE  43F9 00002E55           1490          LEA     MBYTE,A1
000020C4                          1491  
000020C4                          1492          * Moves size to D4, needed to use DISPEA
000020C4  183C 0001               1493          MOVE.B  #$1,D4
000020C8  6000 001A               1494          BRA     IMDEA
000020CC                          1495  
000020CC                          1496  *************************************************************
000020CC                          1497  * Immediate data operation size WORD
000020CC                          1498  IMDWORD
000020CC  618E                    1499          BSR     IMDPRINT
000020CE  43F9 00002E58           1500          LEA     MWORD,A1
000020D4                          1501  
000020D4  1803                    1502          MOVE.B  D3,D4
000020D6  6000 000C               1503          BRA     IMDEA
000020DA                          1504  
000020DA                          1505  
000020DA                          1506  *************************************************************
000020DA                          1507  * Immediate data operation size LONG
000020DA                          1508  IMDLONG
000020DA  6180                    1509          BSR     IMDPRINT
000020DC  43F9 00002E5B           1510          LEA     MLONG,A1
000020E2                          1511          
000020E2                          1512  
000020E2                          1513          * Moves size to D4, needed to use DISPEA
000020E2  1803                    1514          MOVE.B  D3,D4
000020E4                          1515  
000020E4                          1516  IMDEA
000020E4                          1517          * This prints out the size and creates tab
000020E4  103C 000E               1518          MOVE.B  #14,D0
000020E8  4E4F                    1519          TRAP    #15
000020EA  43F9 00002E33           1520          LEA     TAB,A1
000020F0  103C 000E               1521          MOVE.B  #14,D0
000020F4  4E4F                    1522          TRAP    #15
000020F6                          1523          * Loads return address into A2
000020F6  45F9 00002100           1524          LEA     IMDEA2,A2
000020FC  6000 09F6               1525          BRA     DISPEA
00002100                          1526  IMDEA2
00002100  43F9 00002E37           1527          LEA     COMMA,A1
00002106  103C 000E               1528          MOVE.B  #14,D0
0000210A  4E4F                    1529          TRAP    #15
0000210C                          1530  
0000210C  45F9 00002116           1531          LEA     IMDEA3,A2
00002112  6000 0890               1532          BRA     SUBEA
00002116                          1533  IMDEA3
00002116  6000 0AC8               1534          BRA     ENDNEWLINE
0000211A                          1535  
0000211A                          1536  ******************************************************************************************************
0000211A                          1537  * Miscellaneous section
0000211A                          1538  *   Not goes here
0000211A                          1539  
0000211A                          1540  MISC
0000211A  13C5 00003091           1541          MOVE.B  D5,bit1
00002120  141E                    1542          MOVE.B  (A6)+,D2
00002122                          1543  
00002122  DE02                    1544          ADD.B   D2,D7
00002124                          1545  
00002124  1602                    1546          MOVE.B  D2,D3               Copies data at D2 to D3
00002126                          1547          *   this gets digit in 10's place
00002126  E80B                    1548          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002128                          1549          *   this gets digit in 1's place
00002128  E90A                    1550          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000212A  E80A                    1551          LSR.B   #4,D2               Shifts back right into 1's place
0000212C                          1552  
0000212C                          1553  
0000212C  3806                    1554          MOVE.W  D6,D4
0000212E  E94C                    1555          LSL.W   #$4,D4
00002130  E04C                    1556          LSR.W   #$8,D4
00002132  E44C                    1557          LSR.W   #$2,D4
00002134  13C4 00003092           1558          MOVE.B  D4,bit2
0000213A  0C39 003A 00003092      1559          CMP.B   #$3A,bit2
00002142  6700 F0CE               1560          BEQ     JSR
00002146                          1561          *   D5 is bit1
00002146                          1562          *   D3 is bit2
00002146                          1563          *   D2 is bit3
00002146                          1564  
00002146                          1565  **************************
00002146                          1566  * This finds the size of the operation
00002146                          1567          * D5 is bit1
00002146  BA3C 0004               1568          CMP.B   #$4,D5
0000214A  6700 FA30               1569          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
0000214E  BA3C 0006               1570          CMP.B   #$6,D5              Branches to NOT section
00002152  6700 006E               1571          BEQ     MISCNOT
00002156  BA3C 000E               1572          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
0000215A  6700 0006               1573          BEQ     MISCBIT2
0000215E  6000 0022               1574          BRA     MISCCHECKM
00002162                          1575  
00002162                          1576  MISCBIT2
00002162                          1577          * D3 is bit2
00002162  B63C 0007               1578          CMP.B   #$7,D3              Branches to NOP
00002166  6700 0006               1579          BEQ     MISCBIT3
0000216A  6000 0A02               1580          BRA     INVOP
0000216E                          1581  
0000216E                          1582  MISCBIT3
0000216E                          1583          * D2 is bit3
0000216E  B43C 0001               1584          CMP.B   #$1,D2              Branches to NOP
00002172  6700 002E               1585          BEQ     MISCNOP
00002176  B43C 0005               1586          CMP.B   #$5,D2              Branches to NOP
0000217A  6700 0036               1587          BEQ     MISCRTS
0000217E  6000 09EE               1588          BRA     INVOP
00002182                          1589  
00002182                          1590  
00002182                          1591  MISCCHECKM
00002182  1805                    1592          MOVE.B  D5,D4
00002184  C83C 0008               1593          AND.B   #$8,D4
00002188  B83C 0008               1594          CMP.B   #$8,D4
0000218C  6600 09E0               1595          BNE     INVOP
00002190  1803                    1596          MOVE.B  D3,D4
00002192  C83C 0008               1597          AND.B   #$8,D4
00002196  B83C 0008               1598          CMP.B   #$8,D4
0000219A  6600 09D2               1599          BNE     INVOP
0000219E  6000 00EE               1600          BRA     MISCMOVEM
000021A2                          1601  
000021A2                          1602  ******************************************************
000021A2                          1603  * NOP
000021A2                          1604  * No operation
000021A2                          1605  MISCNOP
000021A2  43F9 00002F24           1606          LEA     MNOP,A1
000021A8  103C 000E               1607          MOVE.B  #14,D0
000021AC  4E4F                    1608          TRAP    #15
000021AE                          1609  
000021AE  6000 0A30               1610          BRA     ENDNEWLINE          Goes to next opcode
000021B2                          1611  
000021B2                          1612  ******************************************************
000021B2                          1613  * RTS
000021B2                          1614  * Return to sub routine
000021B2                          1615  MISCRTS
000021B2  43F9 00002F28           1616          LEA     MRTS,A1
000021B8  103C 000E               1617          MOVE.B  #14,D0
000021BC  4E4F                    1618          TRAP    #15
000021BE                          1619  
000021BE  6000 0A20               1620          BRA     ENDNEWLINE          Goes to next opcode
000021C2                          1621  
000021C2                          1622  ******************************************************
000021C2                          1623  * NOT
000021C2                          1624  * Reuses some of IMD section to display because they have similar format
000021C2                          1625  *  (I was kinda lazy too)
000021C2                          1626  MISCNOT
000021C2  E20B                    1627          LSR.B   #1,D3
000021C4  6400 0004               1628          BCC     MISCNOT2
000021C8  5404                    1629          ADD.B   #$2,D4
000021CA                          1630  MISCNOT2   
000021CA  E20B                    1631          LSR.B   #1,D3
000021CC  6400 0004               1632          BCC     MISCNOT3
000021D0  5804                    1633          ADD.B   #$4,D4
000021D2                          1634  MISCNOT3   
000021D2  B43C 0007               1635          CMP.B   #$7,D2
000021D6  6D00 0006               1636          BLT     MISCNOT4
000021DA  5204                    1637          ADD.B   #$1,D4
000021DC  5102                    1638          SUB.B   #$8,D2
000021DE                          1639  
000021DE                          1640          *   Stores them into addr
000021DE                          1641  MISCNOT4
000021DE  13C3 00003092           1642          MOVE.B  D3,bit2
000021E4  13C4 00003093           1643          MOVE.B  D4,bit3
000021EA  13C2 00003094           1644          MOVE.B  D2,bit4
000021F0                          1645  
000021F0  B63C 0000               1646          CMP.B   #$0,D3
000021F4  6700 0016               1647          BEQ     MISCBYTE
000021F8  B63C 0001               1648          CMP.B   #$1,D3
000021FC  6700 0020               1649          BEQ     MISCWORD
00002200  B63C 0002               1650          CMP.B   #$2,D3
00002204  6700 0028               1651          BEQ     MISCLONG
00002208  6000 0964               1652          BRA     INVOP
0000220C                          1653  *************************************************************
0000220C                          1654  * Immediate data operation size BYTE
0000220C                          1655  MISCBYTE
0000220C  6100 004C               1656          BSR     MISCPRINT
00002210  43F9 00002E55           1657          LEA     MBYTE,A1
00002216                          1658  
00002216                          1659          * Moves size to D4, needed to use DISPEA
00002216  183C 0001               1660          MOVE.B  #$1,D4
0000221A  6000 001E               1661          BRA     MISCEA
0000221E                          1662  
0000221E                          1663  *************************************************************
0000221E                          1664  * Immediate data operation size WORD
0000221E                          1665  MISCWORD
0000221E  6100 003A               1666          BSR     MISCPRINT
00002222  43F9 00002E58           1667          LEA     MWORD,A1
00002228                          1668  
00002228  1803                    1669          MOVE.B  D3,D4
0000222A  6000 000E               1670          BRA     MISCEA
0000222E                          1671  
0000222E                          1672  
0000222E                          1673  *************************************************************
0000222E                          1674  * Immediate data operation size LONG
0000222E                          1675  MISCLONG
0000222E  6100 002A               1676          BSR     MISCPRINT
00002232  43F9 00002E5B           1677          LEA     MLONG,A1
00002238                          1678  
00002238                          1679          * Moves size to D4, needed to use DISPEA
00002238  1803                    1680          MOVE.B  D3,D4
0000223A                          1681  
0000223A                          1682  MISCEA
0000223A  103C 000E               1683          MOVE.B  #14,D0
0000223E  4E4F                    1684          TRAP    #15
00002240  43F9 00002E33           1685          LEA     TAB,A1
00002246  103C 000E               1686          MOVE.B  #14,D0
0000224A  4E4F                    1687          TRAP    #15
0000224C                          1688  
0000224C  45F9 00002256           1689          LEA     MISCEA2,A2
00002252  6000 0750               1690          BRA     SUBEA
00002256                          1691  MISCEA2
00002256  6000 0988               1692          BRA     ENDNEWLINE
0000225A                          1693  
0000225A                          1694  *************************************************************
0000225A                          1695  * Display IMD op-code
0000225A                          1696  MISCPRINT
0000225A  0C39 0004 00003091      1697          CMP.B   #$4,bit1
00002262  6700 0018               1698          BEQ     MISCPRINTNEG
00002266  0C39 0006 00003091      1699          CMP.B   #$6,bit1
0000226E  6700 0002               1700          BEQ     MISCPRINTNOT
00002272                          1701  
00002272                          1702  MISCPRINTNOT
00002272  43F9 00002EDF           1703          LEA     MNOT,A1
00002278  6000 000C               1704          BRA     MISCPRINTEND
0000227C                          1705  
0000227C                          1706  MISCPRINTNEG
0000227C  43F9 00002EEA           1707          LEA     MNEG,A1
00002282  6000 0002               1708          BRA     MISCPRINTEND
00002286                          1709  
00002286                          1710  MISCPRINTEND
00002286  103C 000E               1711          MOVE.B  #14,D0
0000228A  4E4F                    1712          TRAP    #15
0000228C  4E75                    1713          RTS
0000228E                          1714  
0000228E                          1715  
0000228E                          1716  *************************************************************************
0000228E                          1717  * MOVEM stuff
0000228E                          1718          *   D5 is bit1
0000228E                          1719          *   D3 is bit2
0000228E                          1720          *   D2 is bit3
0000228E                          1721  MISCMOVEM
0000228E  1805                    1722          MOVE.B  D5,D4               Gets the dr field and stores it into D5
00002290  4245                    1723          CLR     D5                  Moves 0 to D5
00002292  0804 0002               1724          BTST    #2,D4               Checks the bit at spot 2
00002296  6700 0006               1725          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
0000229A  1A3C 0001               1726          MOVE.B  #1,D5               Else, it will skip it
0000229E                          1727  
0000229E                          1728  MISCMOVEM2
0000229E  4246                    1729          CLR     D6                  Clears D6, setting it to 0
000022A0  1803                    1730          MOVE.B  D3,D4               Gets the size field and stores it into D6
000022A2  0804 0002               1731          BTST    #2,D4               Checks the bit at spot 2
000022A6  6700 0006               1732          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
000022AA  1C3C 0001               1733          MOVE.B  #1,D6               Else, it will skip it. 
000022AE                          1734  
000022AE                          1735  MISCMOVEM3
000022AE  C63C 0003               1736          AND.B   #$3,D3              Gets ride of the first 2 bits
000022B2  E30B                    1737          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
000022B4  0882 0003               1738          BCLR    #3,D2               Checks furthest left bit and set it to 0
000022B8  6700 0006               1739          BEQ     MISCMOVEM4
000022BC  08C3 0000               1740          BSET    #0,D3               If bit was 1, adds 1 to mode
000022C0                          1741  
000022C0                          1742      * bit1 is in D5 dr field
000022C0                          1743      * bit2 is in D6 size
000022C0                          1744      * bit3 is in D3 mode
000022C0                          1745      * bit4 is in D2 reg
000022C0                          1746  MISCMOVEM4
000022C0  13C5 00003091           1747          MOVE.B  D5,bit1
000022C6  13C6 00003092           1748          MOVE.B  D6,bit2
000022CC  13C3 00003093           1749          MOVE.B  D3,bit3
000022D2  13C2 00003094           1750          MOVE.B  D2,bit4
000022D8                          1751  
000022D8                          1752      * Prints out MOVEM and size + tab
000022D8  43F9 00002EB3           1753          LEA     MMOVEM,A1
000022DE  103C 000E               1754          MOVE.B  #14,D0
000022E2  4E4F                    1755          TRAP    #15
000022E4                          1756  
000022E4  BC3C 0001               1757          CMP.B   #1,D6
000022E8  6700 000C               1758          BEQ     MISCMMSIZEL
000022EC  43F9 00002E58           1759          LEA     MWORD,A1
000022F2  6000 0008               1760          BRA     MISCMMPRINTSIZE
000022F6                          1761  
000022F6                          1762  MISCMMSIZEL
000022F6  43F9 00002E5B           1763          LEA     MLONG,A1
000022FC                          1764  
000022FC                          1765  MISCMMPRINTSIZE
000022FC  4E4F                    1766          TRAP    #15
000022FE  43F9 00002E33           1767          LEA     TAB,A1
00002304  4E4F                    1768          TRAP    #15
00002306                          1769  
00002306  3C1E                    1770          MOVE.W  (A6)+,D6
00002308  BA3C 0000               1771          CMP.B   #0,D5
0000230C  6700 0006               1772          BEQ     MISCMMPREDECCHECK
00002310  6000 007C               1773          BRA     MISCMMPOSTINC
00002314                          1774  
00002314                          1775  MISCMMPREDECCHECK
00002314  B63C 0004               1776          CMP.B   #$4,D3
00002318  6700 0006               1777          BEQ     MISCMMPREDEC
0000231C  6000 00DE               1778          BRA     MISCMMREGMEM
00002320                          1779  
00002320                          1780  ******************************************************************
00002320                          1781  * MOVEM Post-decrement
00002320                          1782  * Prints out registers from post-decrement
00002320                          1783  * D6 holds the reg list
00002320                          1784  MISCMMPREDEC
00002320  1806                    1785          MOVE.B  D6,D4
00002322  3E3C 0008               1786          MOVE.W  #8,D7               Counter
00002326  123C 000F               1787          MOVE.B  #$F,D1
0000232A                          1788  
0000232A  49F9 00002E45           1789          LEA     DISPA,A4
00002330  6100 0032               1790          BSR     MISCMMPREDECPRINT
00002334                          1791  
00002334  3806                    1792          MOVE.W  D6,D4
00002336  E04C                    1793          LSR.W   #8,D4
00002338  3E3C 0008               1794          MOVE.W  #8,D7               Counter
0000233C  49F9 00002E4B           1795          LEA     DISPD,A4
00002342  6100 0020               1796          BSR     MISCMMPREDECPRINT
00002346  6000 0002               1797          BRA     MISCMMPREDEC2
0000234A                          1798  
0000234A                          1799  MISCMMPREDEC2
0000234A  43F9 00002E37           1800          LEA     COMMA,A1
00002350  103C 000E               1801          MOVE.B  #14,D0
00002354  4E4F                    1802          TRAP    #15
00002356                          1803  
00002356  45F9 00002360           1804          LEA     MISCMMPREDEC3,A2
0000235C  6000 0646               1805          BRA     SUBEA
00002360                          1806  
00002360                          1807  MISCMMPREDEC3
00002360  6000 087E               1808          BRA     ENDNEWLINE
00002364                          1809  
00002364                          1810  * Prints out reg list
00002364                          1811  MISCMMPREDECPRINT
00002364  E30C                    1812          LSL.B   #1,D4
00002366  6400 001C               1813          BCC     MISCMMPREDECPRINT3
0000236A                          1814  
0000236A  B23C 000F               1815          CMP.B   #$F,D1
0000236E  6700 0008               1816          BEQ     MISCMMPREDECPRINT2
00002372  4EB9 00002472           1817          JSR     MISCMMSLASH
00002378                          1818  
00002378                          1819  MISCMMPREDECPRINT2
00002378  224C                    1820          MOVEA.L A4,A1
0000237A  103C 000E               1821          MOVE.B  #14,D0
0000237E  4E4F                    1822          TRAP    #15
00002380  6100 00E2               1823          BSR     MISCMMPRINTNUM
00002384                          1824  
00002384                          1825  MISCMMPREDECPRINT3
00002384  5307                    1826          SUB.B   #1,D7
00002386  BE3C 0000               1827          CMP.B   #0,D7
0000238A  66D8                    1828          BNE     MISCMMPREDECPRINT
0000238C  4E75                    1829          RTS
0000238E                          1830  
0000238E                          1831  ******************************************************************
0000238E                          1832  * MOVEM Post-increment
0000238E                          1833  * Prints out registers from post-increment
0000238E                          1834  * D6 holds the reg list
0000238E                          1835  MISCMMPOSTINC
0000238E  45F9 00002398           1836          LEA     MISCMMPOSTINC2,A2
00002394  6000 060E               1837          BRA     SUBEA
00002398                          1838  
00002398                          1839  MISCMMPOSTINC2
00002398  43F9 00002E37           1840          LEA     COMMA,A1
0000239E  103C 000E               1841          MOVE.B  #14,D0
000023A2  4E4F                    1842          TRAP    #15
000023A4                          1843  
000023A4  3806                    1844          MOVE.W  D6,D4
000023A6  E04C                    1845          LSR.W   #8,D4
000023A8  3E3C 0008               1846          MOVE.W  #8,D7               Counter
000023AC  123C 000F               1847          MOVE.B  #$F,D1
000023B0                          1848  
000023B0  49F9 00002E45           1849          LEA     DISPA,A4
000023B6  6100 001A               1850          BSR     MISCMMPOSTINCPRINT
000023BA                          1851  
000023BA  1806                    1852          MOVE.B  D6,D4
000023BC  3E3C 0008               1853          MOVE.W  #8,D7               Counter
000023C0  49F9 00002E4B           1854          LEA     DISPD,A4
000023C6  6100 000A               1855          BSR     MISCMMPOSTINCPRINT
000023CA  6000 0002               1856          BRA     MISCMMPOSTINC3
000023CE                          1857  
000023CE                          1858  MISCMMPOSTINC3
000023CE  6000 0810               1859          BRA     ENDNEWLINE
000023D2                          1860  
000023D2                          1861  * Prints out reg list
000023D2                          1862  MISCMMPOSTINCPRINT
000023D2  E20C                    1863          LSR.B   #1,D4
000023D4  6400 001C               1864          BCC     MISCMMPOSTINCPRINT3
000023D8                          1865  
000023D8  B23C 000F               1866          CMP.B   #$F,D1
000023DC  6700 0008               1867          BEQ     MISCMMPOSTINCPRINT2
000023E0  4EB9 00002472           1868          JSR     MISCMMSLASH
000023E6                          1869  
000023E6                          1870  MISCMMPOSTINCPRINT2
000023E6  224C                    1871          MOVEA.L A4,A1
000023E8  103C 000E               1872          MOVE.B  #14,D0
000023EC  4E4F                    1873          TRAP    #15
000023EE  6100 0074               1874          BSR     MISCMMPRINTNUM
000023F2                          1875  
000023F2                          1876  MISCMMPOSTINCPRINT3
000023F2  5307                    1877          SUB.B   #1,D7
000023F4  BE3C 0000               1878          CMP.B   #0,D7
000023F8  66D8                    1879          BNE     MISCMMPOSTINCPRINT
000023FA  4E75                    1880          RTS
000023FC                          1881  
000023FC                          1882  ******************************************************************
000023FC                          1883  * MOVEM Post-increment
000023FC                          1884  * Prints out registers from post-increment
000023FC                          1885  * D6 holds the reg list
000023FC                          1886  MISCMMREGMEM
000023FC  1806                    1887          MOVE.B  D6,D4
000023FE  3E3C 0008               1888          MOVE.W  #8,D7               Counter
00002402  123C 000F               1889          MOVE.B  #$F,D1
00002406                          1890  
00002406  49F9 00002E4B           1891          LEA     DISPD,A4
0000240C  61C4                    1892          BSR     MISCMMPOSTINCPRINT
0000240E                          1893  
0000240E  3806                    1894          MOVE.W  D6,D4
00002410  E04C                    1895          LSR.W   #8,D4
00002412  3E3C 0008               1896          MOVE.W  #8,D7               Counter
00002416  49F9 00002E45           1897          LEA     DISPA,A4
0000241C  61B4                    1898          BSR     MISCMMPOSTINCPRINT
0000241E  6000 0002               1899          BRA     MISCMMREGMEM2
00002422                          1900  
00002422                          1901  MISCMMREGMEM2
00002422  43F9 00002E37           1902          LEA     COMMA,A1
00002428  103C 000E               1903          MOVE.B  #14,D0
0000242C  4E4F                    1904          TRAP    #15
0000242E                          1905  
0000242E  45F9 00002438           1906          LEA     MISCMMREGMEM3,A2
00002434  6000 056E               1907          BRA     SUBEA
00002438                          1908  
00002438                          1909  MISCMMREGMEM3
00002438  6000 07A6               1910          BRA     ENDNEWLINE
0000243C                          1911  
0000243C                          1912  * Prints out reg list
0000243C                          1913  MISCMMREGMEMPRINT
0000243C  E20C                    1914          LSR.B   #1,D4
0000243E  64B2                    1915          BCC     MISCMMPOSTINCPRINT3
00002440                          1916  
00002440  B23C 000F               1917          CMP.B   #$F,D1
00002444  67A0                    1918          BEQ     MISCMMPOSTINCPRINT2
00002446  4EB9 00002472           1919          JSR     MISCMMSLASH
0000244C                          1920  
0000244C                          1921  MISCMMREGMEMPRINT2
0000244C  224C                    1922          MOVEA.L A4,A1
0000244E  103C 000E               1923          MOVE.B  #14,D0
00002452  4E4F                    1924          TRAP    #15
00002454  6100 000E               1925          BSR     MISCMMPRINTNUM
00002458                          1926  
00002458                          1927  MISCMMREGMEMPRINT3
00002458  5307                    1928          SUB.B   #1,D7
0000245A  BE3C 0000               1929          CMP.B   #0,D7
0000245E  6600 FF72               1930          BNE     MISCMMPOSTINCPRINT
00002462  4E75                    1931          RTS
00002464                          1932  
00002464                          1933  
00002464                          1934  
00002464                          1935  ***********************************************
00002464                          1936  * Stuff for printing reg list
00002464                          1937  MISCMMPRINTNUM
00002464  123C 0008               1938          MOVE.B  #8,D1
00002468  9207                    1939          SUB.B   D7,D1
0000246A  103C 0003               1940          MOVE.B  #3,D0
0000246E  4E4F                    1941          TRAP    #15
00002470  4E75                    1942          RTS
00002472                          1943  
00002472                          1944  MISCMMSLASH
00002472  43F9 00002E43           1945          LEA     SLASH,A1
00002478  103C 000E               1946          MOVE.B  #14,D0
0000247C  4E4F                    1947          TRAP    #15
0000247E  4E75                    1948          RTS
00002480                          1949  
00002480                          1950  ******************************************************************************************************
00002480                          1951  * SUB section
00002480                          1952  
00002480                          1953          *   Grabs next two nibbles
00002480  141E                    1954  SUB     MOVE.B  (A6)+,D2
00002482                          1955  
00002482  DE02                    1956          ADD.B   D2,D7
00002484                          1957  
00002484  1602                    1958          MOVE.B  D2,D3               Copies data at D2 to D3
00002486                          1959          *   this gets digit in 10's place
00002486  E80B                    1960          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002488                          1961          *   this gets digit in 1's place
00002488  E90A                    1962          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000248A  E80A                    1963          LSR.B   #4,D2               Shifts back right into 1's place
0000248C                          1964  
0000248C                          1965          *   D3 holds digit in 10's place
0000248C                          1966          *   D2 holds digit in 1's place
0000248C                          1967  
0000248C                          1968          
0000248C                          1969          *   Converts nibble into 3-bit parts
0000248C  E20B                    1970          LSR.B   #1,D3
0000248E  6400 0004               1971          BCC     SUB2
00002492  5404                    1972          ADD.B   #$2,D4
00002494                          1973          
00002494  E20B                    1974  SUB2    LSR.B   #1,D3
00002496  6400 0004               1975          BCC     SUB3
0000249A  5804                    1976          ADD.B   #$4,D4
0000249C                          1977          
0000249C  1205                    1978  SUB3    MOVE.B  D5,D1
0000249E  E209                    1979          LSR.B   #1,D1
000024A0  6400 0004               1980          BCC     SUB4
000024A4  5803                    1981          ADD.B   #$4,D3
000024A6                          1982  
000024A6  B43C 0007               1983  SUB4    CMP.B   #$7,D2
000024AA  6D00 0006               1984          BLT     SUB1
000024AE  5204                    1985          ADD.B   #$1,D4
000024B0  5102                    1986          SUB.B   #$8,D2
000024B2                          1987  
000024B2                          1988          *   Stores them into addr
000024B2  13C1 00003091           1989  SUB1    MOVE.B  D1,bit1
000024B8  13C3 00003092           1990          MOVE.B  D3,bit2
000024BE  13C4 00003093           1991          MOVE.B  D4,bit3
000024C4  13C2 00003094           1992          MOVE.B  D2,bit4
000024CA                          1993  
000024CA                          1994          * do this later
000024CA  4241                    1995          CLR     D1
000024CC  7400                    1996          MOVE.L  #0,D2
000024CE  7600                    1997          MOVE.L  #0,D3
000024D0  7800                    1998          MOVE.L  #0,D4
000024D2  7A00                    1999          MOVE.L  #0,D5
000024D4  7C00                    2000          MOVE.L  #0,D6
000024D6                          2001  
000024D6                          2002          
000024D6                          2003  ******************************************************************************************************
000024D6                          2004  * After spliting the op-code into SUB's defined groupings
000024D6                          2005  *   This figures out which operation it is and goes to that sub-routine
000024D6                          2006  
000024D6                          2007          * This checks if bit0 is C which is either AND or MULS
000024D6  0C39 000C 00003090      2008          CMP.B   #$C,bit0
000024DE  6600 000E               2009          BNE     SUBACHECK
000024E2  0C39 0007 00003092      2010          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
000024EA  6700 F578               2011          BEQ     MULSW                       AND will use SUB's routine
000024EE                          2012  
000024EE                          2013  SUBACHECK
000024EE                          2014          * This will display SUBA instead  -- check this later
000024EE  0C39 0003 00003092      2015          CMP.B   #$3,bit2
000024F6  6700 01D6               2016          BEQ     SUBA
000024FA  0C39 0007 00003092      2017          CMP.B   #$7,bit2
00002502  6700 01CA               2018          BEQ     SUBA
00002506                          2019  
00002506                          2020          * This will find the size and stuff
00002506  0C39 0000 00003092      2021          CMP.B   #$0,bit2
0000250E  6700 003E               2022          BEQ     SUBSIZE1
00002512  0C39 0001 00003092      2023          CMP.B   #$1,bit2
0000251A  6700 0072               2024          BEQ     SUBSIZE2
0000251E  0C39 0002 00003092      2025          CMP.B   #$2,bit2
00002526  6700 00A6               2026          BEQ     SUBSIZE3
0000252A  0C39 0004 00003092      2027          CMP.B   #$4,bit2
00002532  6700 00DA               2028          BEQ     SUBSIZE4
00002536  0C39 0005 00003092      2029          CMP.B   #$5,bit2
0000253E  6700 010E               2030          BEQ     SUBSIZE5
00002542  0C39 0006 00003092      2031          CMP.B   #$6,bit2
0000254A  6700 0142               2032          BEQ     SUBSIZE6
0000254E                          2033     
0000254E                          2034  ******************************************************************************************************
0000254E                          2035  *   Displays size, then does operation order
0000254E                          2036  
0000254E                          2037  *   000 byte    EA,DN
0000254E                          2038  SUBSIZE1
0000254E  6100 0260               2039          BSR     SUBPRINT
00002552  43F9 00002E55           2040          LEA     MBYTE,A1
00002558  103C 000E               2041          MOVE.B  #14,D0
0000255C  4E4F                    2042          TRAP    #15
0000255E  43F9 00002E33           2043          LEA     TAB,A1
00002564  103C 000E               2044          MOVE.B  #14,D0
00002568  4E4F                    2045          TRAP    #15
0000256A                          2046  
0000256A  45F9 00002574           2047          LEA     SUBSIZE11,A2
00002570  6000 0432               2048          BRA     SUBEA
00002574                          2049  SUBSIZE11
00002574  45F9 0000258A           2050          LEA     SUBSIZE12,A2
0000257A  43F9 00002E37           2051          LEA     COMMA,A1
00002580  103C 000E               2052          MOVE.B  #14,D0
00002584  4E4F                    2053          TRAP    #15
00002586  6000 02F8               2054          BRA     SUBDN
0000258A                          2055  SUBSIZE12
0000258A  6000 0654               2056          BRA     ENDNEWLINE
0000258E                          2057  
0000258E                          2058  *************************************************
0000258E                          2059  *   001 word    EA,DN
0000258E                          2060  SUBSIZE2
0000258E  6100 0220               2061          BSR     SUBPRINT
00002592  43F9 00002E58           2062          LEA     MWORD,A1
00002598  103C 000E               2063          MOVE.B  #14,D0
0000259C  4E4F                    2064          TRAP    #15
0000259E  43F9 00002E33           2065          LEA     TAB,A1
000025A4  103C 000E               2066          MOVE.B  #14,D0
000025A8  4E4F                    2067          TRAP    #15
000025AA                          2068  
000025AA  45F9 000025B4           2069          LEA     SUBSIZE21,A2
000025B0  6000 03F2               2070          BRA     SUBEA
000025B4                          2071  SUBSIZE21
000025B4  45F9 000025CA           2072          LEA     SUBSIZE22,A2
000025BA  43F9 00002E37           2073          LEA     COMMA,A1
000025C0  103C 000E               2074          MOVE.B  #14,D0
000025C4  4E4F                    2075          TRAP    #15
000025C6  6000 02B8               2076          BRA     SUBDN
000025CA                          2077  SUBSIZE22
000025CA  6000 0614               2078          BRA     ENDNEWLINE
000025CE                          2079  
000025CE                          2080  *************************************************
000025CE                          2081  *   010 long    EA,DN
000025CE                          2082  SUBSIZE3
000025CE  6100 01E0               2083          BSR     SUBPRINT
000025D2  43F9 00002E5B           2084          LEA     MLONG,A1
000025D8  103C 000E               2085          MOVE.B  #14,D0
000025DC  4E4F                    2086          TRAP    #15
000025DE  43F9 00002E33           2087          LEA     TAB,A1
000025E4  103C 000E               2088          MOVE.B  #14,D0
000025E8  4E4F                    2089          TRAP    #15
000025EA                          2090  
000025EA  45F9 000025F4           2091          LEA     SUBSIZE31,A2
000025F0  6000 03B2               2092          BRA     SUBEA
000025F4                          2093  SUBSIZE31
000025F4  45F9 0000260A           2094          LEA     SUBSIZE32,A2
000025FA  43F9 00002E37           2095          LEA     COMMA,A1
00002600  103C 000E               2096          MOVE.B  #14,D0
00002604  4E4F                    2097          TRAP    #15
00002606  6000 0278               2098          BRA     SUBDN
0000260A                          2099  SUBSIZE32
0000260A  6000 05D4               2100          BRA     ENDNEWLINE
0000260E                          2101  
0000260E                          2102  *************************************************
0000260E                          2103  *   100 byte    DN,EA
0000260E                          2104  SUBSIZE4
0000260E  6100 01A0               2105          BSR     SUBPRINT
00002612  43F9 00002E55           2106          LEA     MBYTE,A1
00002618  103C 000E               2107          MOVE.B  #14,D0
0000261C  4E4F                    2108          TRAP    #15
0000261E  43F9 00002E33           2109          LEA     TAB,A1
00002624  103C 000E               2110          MOVE.B  #14,D0
00002628  4E4F                    2111          TRAP    #15
0000262A                          2112  
0000262A                          2113          *BSR     SUBERRORTEST1
0000262A                          2114  
0000262A  45F9 00002634           2115          LEA     SUBSIZE41,A2
00002630  6000 024E               2116          BRA     SUBDN
00002634                          2117  SUBSIZE41
00002634  45F9 0000264A           2118          LEA     SUBSIZE42,A2
0000263A  43F9 00002E37           2119          LEA     COMMA,A1
00002640  103C 000E               2120          MOVE.B  #14,D0
00002644  4E4F                    2121          TRAP    #15
00002646  6000 035C               2122          BRA     SUBEA
0000264A                          2123  SUBSIZE42
0000264A  6000 0594               2124          BRA     ENDNEWLINE
0000264E                          2125  
0000264E                          2126  *************************************************
0000264E                          2127  *   101 word    DN,EA
0000264E                          2128  SUBSIZE5
0000264E                          2129          *BSR     SUBERRORTEST1               * This does error testing
0000264E  6100 0160               2130          BSR     SUBPRINT                    * Prints out 'SUB.'
00002652  43F9 00002E58           2131          LEA     MWORD,A1
00002658  103C 000E               2132          MOVE.B  #14,D0
0000265C  4E4F                    2133          TRAP    #15
0000265E  43F9 00002E33           2134          LEA     TAB,A1
00002664  103C 000E               2135          MOVE.B  #14,D0
00002668  4E4F                    2136          TRAP    #15
0000266A                          2137  
0000266A  45F9 00002674           2138          LEA     SUBSIZE51,A2
00002670  6000 020E               2139          BRA     SUBDN
00002674                          2140  SUBSIZE51
00002674  45F9 0000268A           2141          LEA     SUBSIZE52,A2
0000267A  43F9 00002E37           2142          LEA     COMMA,A1
00002680  103C 000E               2143          MOVE.B  #14,D0
00002684  4E4F                    2144          TRAP    #15
00002686  6000 031C               2145          BRA     SUBEA
0000268A                          2146  SUBSIZE52
0000268A  6000 0554               2147          BRA     ENDNEWLINE
0000268E                          2148  
0000268E                          2149  *************************************************
0000268E                          2150  *   110 long    DN,EA
0000268E                          2151  SUBSIZE6
0000268E                          2152          *BSR     SUBERRORTEST1               * This does error testing
0000268E  6100 0120               2153          BSR     SUBPRINT                    * Prints out 'SUB.'
00002692  43F9 00002E5B           2154          LEA     MLONG,A1
00002698  103C 000E               2155          MOVE.B  #14,D0
0000269C  4E4F                    2156          TRAP    #15
0000269E  43F9 00002E33           2157          LEA     TAB,A1
000026A4  103C 000E               2158          MOVE.B  #14,D0
000026A8  4E4F                    2159          TRAP    #15
000026AA                          2160  
000026AA                          2161          *BSR     SUBERRORTEST1
000026AA                          2162  
000026AA  45F9 000026B4           2163          LEA     SUBSIZE61,A2
000026B0  6000 01CE               2164          BRA     SUBDN
000026B4                          2165  SUBSIZE61
000026B4  45F9 000026CA           2166          LEA     SUBSIZE62,A2
000026BA  43F9 00002E37           2167          LEA     COMMA,A1
000026C0  103C 000E               2168          MOVE.B  #14,D0
000026C4  4E4F                    2169          TRAP    #15
000026C6  6000 02DC               2170          BRA     SUBEA
000026CA                          2171  SUBSIZE62
000026CA  6000 0514               2172          BRA     ENDNEWLINE
000026CE                          2173  
000026CE                          2174  ****************************************************************************
000026CE                          2175  *   This section is for SUBA
000026CE                          2176  *   Displays 'SUBA.' then decodes the op-code as SUBA
000026CE                          2177  SUBA
000026CE  0C39 0009 00003090      2178          CMP.B   #$9,bit0
000026D6  6700 001A               2179          BEQ     SUBPRINTSUBA
000026DA  0C39 000B 00003090      2180          CMP.B   #$B,bit0
000026E2  6700 001E               2181          BEQ     SUBPRINTCMPA
000026E6  0C39 000D 00003090      2182          CMP.B   #$D,bit0
000026EE  6700 0022               2183          BEQ     SUBPRINTADDA
000026F2                          2184  
000026F2                          2185  
000026F2                          2186  SUBPRINTSUBA
000026F2  43F9 00002EC4           2187          LEA     MSUBA,A1                    Displays 'SUBA.'
000026F8  103C 000E               2188          MOVE.B  #14,D0
000026FC  4E4F                    2189          TRAP    #15
000026FE  6000 0022               2190          BRA     SUBACONT
00002702                          2191  
00002702                          2192  SUBPRINTCMPA
00002702  43F9 00002EF9           2193          LEA     MCMPA,A1                    Displays 'SUBA.'
00002708  103C 000E               2194          MOVE.B  #14,D0
0000270C  4E4F                    2195          TRAP    #15
0000270E  6000 0012               2196          BRA     SUBACONT
00002712                          2197  
00002712                          2198  SUBPRINTADDA
00002712  43F9 00002F0A           2199          LEA     MADDA,A1                    Displays 'SUBA.'
00002718  103C 000E               2200          MOVE.B  #14,D0
0000271C  4E4F                    2201          TRAP    #15
0000271E  6000 0002               2202          BRA     SUBACONT
00002722                          2203  
00002722                          2204  SUBACONT
00002722                          2205          * Does the rest of SUBA
00002722  0C39 0003 00003092      2206          CMP.B   #$3,bit2
0000272A  6700 000E               2207          BEQ     SUBSIZE7
0000272E  0C39 0007 00003092      2208          CMP.B   #$7,bit2
00002736  6700 003E               2209          BEQ     SUBSIZE8
0000273A                          2210  
0000273A                          2211  *************************************************
0000273A                          2212  *   SUBA Word   ea,An
0000273A                          2213  SUBSIZE7
0000273A  43F9 00002E58           2214          LEA     MWORD,A1
00002740  103C 000E               2215          MOVE.B  #14,D0
00002744  4E4F                    2216          TRAP    #15
00002746  43F9 00002E33           2217          LEA     TAB,A1
0000274C  103C 000E               2218          MOVE.B  #14,D0
00002750  4E4F                    2219          TRAP    #15
00002752                          2220  
00002752  45F9 0000275C           2221          LEA     SUBSIZE71,A2
00002758  6000 024A               2222          BRA     SUBEA
0000275C                          2223  SUBSIZE71
0000275C  45F9 00002772           2224          LEA     SUBSIZE72,A2
00002762  43F9 00002E37           2225          LEA     COMMA,A1
00002768  103C 000E               2226          MOVE.B  #14,D0
0000276C  4E4F                    2227          TRAP    #15
0000276E  6000 0164               2228          BRA     SUBAN2
00002772                          2229  SUBSIZE72
00002772  6000 046C               2230          BRA     ENDNEWLINE
00002776                          2231  
00002776                          2232  *************************************************
00002776                          2233  *   SUBA longword   ea,An
00002776                          2234  SUBSIZE8
00002776  43F9 00002E5B           2235          LEA     MLONG,A1
0000277C  103C 000E               2236          MOVE.B  #14,D0
00002780  4E4F                    2237          TRAP    #15
00002782  43F9 00002E33           2238          LEA     TAB,A1
00002788  103C 000E               2239          MOVE.B  #14,D0
0000278C  4E4F                    2240          TRAP    #15
0000278E                          2241  
0000278E  45F8 275C               2242          LEA     SUBSIZE71,A2
00002792  6000 0210               2243          BRA     SUBEA
00002796                          2244  SUBSIZE81
00002796  45F8 2772               2245          LEA     SUBSIZE72,A2
0000279A  43F9 00002E37           2246          LEA     COMMA,A1
000027A0  103C 000E               2247          MOVE.B  #14,D0
000027A4  4E4F                    2248          TRAP    #15
000027A6  6000 012C               2249          BRA     SUBAN2
000027AA                          2250  SUBSIZE82
000027AA  6000 0434               2251          BRA     ENDNEWLINE
000027AE                          2252  
000027AE                          2253  *************************************************
000027AE                          2254  * Jumps to memory location at A2
000027AE                          2255  SUBJMPA2
000027AE  4ED2                    2256          JMP     (A2)
000027B0                          2257  
000027B0                          2258  *************************************************
000027B0                          2259  * Prints out opcode name
000027B0                          2260  SUBPRINT
000027B0  0C39 0009 00003090      2261          CMP.B   #$9,bit0                Prints SUB
000027B8  6700 0026               2262          BEQ     SUBPRINTSUB
000027BC  0C39 000B 00003090      2263          CMP.B   #$B,bit0                Prints CMP or EOR
000027C4  6700 004A               2264          BEQ     SUBPRINTB
000027C8  0C39 000C 00003090      2265          CMP.B   #$C,bit0                Prints AND
000027D0  6700 001E               2266          BEQ     SUBPRINTAND
000027D4  0C39 000D 00003090      2267          CMP.B   #$D,bit0                Prints ADD
000027DC  6700 0022               2268          BEQ     SUBPRINTADD
000027E0                          2269  
000027E0                          2270  SUBPRINTSUB   * Displays 'SUB.' 
000027E0  43F9 00002EBF           2271          LEA     MSUB,A1
000027E6  103C 000E               2272          MOVE.B  #14,D0
000027EA  4E4F                    2273          TRAP    #15
000027EC  6000 004E               2274          BRA     SUBPRINTEND
000027F0                          2275  
000027F0                          2276  SUBPRINTAND   * Displays 'AND.' 
000027F0  43F9 00002ECA           2277          LEA     MAND,A1
000027F6  103C 000E               2278          MOVE.B  #14,D0
000027FA  4E4F                    2279          TRAP    #15
000027FC  6000 003E               2280          BRA     SUBPRINTEND
00002800                          2281  
00002800                          2282  SUBPRINTADD   * Displays 'ADD.' 
00002800  43F9 00002ECF           2283          LEA     MADD,A1
00002806  103C 000E               2284          MOVE.B  #14,D0
0000280A  4E4F                    2285          TRAP    #15
0000280C  6000 002E               2286          BRA     SUBPRINTEND
00002810                          2287  
00002810                          2288  SUBPRINTB
00002810  0C39 0004 00003092      2289          CMP.B   #$4,bit2
00002818  6D00 0012               2290          BLT     SUBPRINTEOR
0000281C                          2291  
0000281C                          2292  SUBPRINTCMP   * Displays 'CMP.' 
0000281C  43F9 00002EEE           2293          LEA     MCMP,A1
00002822  103C 000E               2294          MOVE.B  #14,D0
00002826  4E4F                    2295          TRAP    #15
00002828  6000 0012               2296          BRA     SUBPRINTEND
0000282C                          2297  
0000282C                          2298  SUBPRINTEOR   * Displays 'EOR.' 
0000282C  43F9 00002EFF           2299          LEA     MEOR,A1
00002832  103C 000E               2300          MOVE.B  #14,D0
00002836  4E4F                    2301          TRAP    #15
00002838  6000 0002               2302          BRA     SUBPRINTEND
0000283C                          2303  
0000283C                          2304  SUBPRINTEND
0000283C  4E75                    2305          RTS
0000283E                          2306  
0000283E                          2307  
0000283E                          2308  *******************************************************************
0000283E                          2309  * Error testing for DN->EA operations
0000283E                          2310  *  Data register, address register, and immediate data cannot be destinations
0000283E                          2311  SUBERRORTEST1
0000283E                          2312          * test for DN or AN register, branches to invalid op code if true
0000283E  0C39 0000 00003093      2313          CMP.B   #0,bit3
00002846  6700 0326               2314          BEQ     INVOP
0000284A  0C39 0001 00003093      2315          CMP.B   #1,bit3
00002852  6700 031A               2316          BEQ     INVOP
00002856                          2317          
00002856                          2318          * check if destination is immediate data
00002856  0C39 0007 00003093      2319          CMP.B   #7,bit3
0000285E  6600 001E               2320          BNE     SUBERRORTEST11
00002862  0C39 0000 00003094      2321          CMP.B   #0,bit4
0000286A  6700 0012               2322          BEQ     SUBERRORTEST11
0000286E  0C39 0001 00003094      2323          CMP.B   #1,bit4
00002876  6700 0006               2324          BEQ     SUBERRORTEST11
0000287A  6000 02F2               2325          BRA     INVOP
0000287E                          2326          
0000287E                          2327  SUBERRORTEST11
0000287E  4E75                    2328          RTS
00002880                          2329  
00002880                          2330  
00002880                          2331  ******************************************************************************************************
00002880                          2332  *   Displays data register
00002880                          2333  SUBDN
00002880  43F9 00002E5E           2334          LEA     MDN,A1
00002886  103C 000E               2335          MOVE.B  #14,D0
0000288A  4E4F                    2336          TRAP    #15
0000288C                          2337  
0000288C  1239 00003091           2338          MOVE.B  bit1,D1
00002892  103C 0003               2339          MOVE.B  #3,D0
00002896  4E4F                    2340          TRAP    #15
00002898                          2341          
00002898  6000 FF14               2342          BRA     SUBJMPA2
0000289C                          2343  
0000289C                          2344  *   Displays data register
0000289C                          2345  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
0000289C                          2346  SUBDN2
0000289C  43F9 00002E5E           2347          LEA     MDN,A1
000028A2  103C 000E               2348          MOVE.B  #14,D0
000028A6  4E4F                    2349          TRAP    #15
000028A8                          2350  
000028A8  1239 00003094           2351          MOVE.B  bit4,D1
000028AE  103C 0003               2352          MOVE.B  #3,D0
000028B2  4E4F                    2353          TRAP    #15
000028B4                          2354          
000028B4  6000 FEF8               2355          BRA     SUBJMPA2
000028B8                          2356  
000028B8                          2357  *   Displays address register
000028B8                          2358  SUBAN
000028B8  43F9 00002E60           2359          LEA     MAN,A1
000028BE  103C 000E               2360          MOVE.B  #14,D0
000028C2  4E4F                    2361          TRAP    #15
000028C4                          2362  
000028C4  1239 00003094           2363          MOVE.B  bit4,D1
000028CA  103C 0003               2364          MOVE.B  #3,D0
000028CE  4E4F                    2365          TRAP    #15
000028D0                          2366          
000028D0  6000 FEDC               2367          BRA     SUBJMPA2
000028D4                          2368  
000028D4                          2369  *   Displays address register
000028D4                          2370  *   This is for SUBA, SUBA puts An into bit1
000028D4                          2371  SUBAN2
000028D4  43F9 00002E60           2372          LEA     MAN,A1
000028DA  103C 000E               2373          MOVE.B  #14,D0
000028DE  4E4F                    2374          TRAP    #15
000028E0                          2375  
000028E0  1239 00003091           2376          MOVE.B  bit1,D1
000028E6  103C 0003               2377          MOVE.B  #3,D0
000028EA  4E4F                    2378          TRAP    #15
000028EC                          2379          
000028EC  6000 FEC0               2380          BRA     SUBJMPA2
000028F0                          2381  
000028F0                          2382  
000028F0                          2383  *   Displays indirect address register
000028F0                          2384  SUBANID
000028F0  43F9 00002E39           2385          LEA     OPENBRA,A1
000028F6  103C 000E               2386          MOVE.B  #14,D0
000028FA  4E4F                    2387          TRAP    #15
000028FC                          2388  
000028FC  43F9 00002E60           2389          LEA     MAN,A1
00002902  103C 000E               2390          MOVE.B  #14,D0
00002906  4E4F                    2391          TRAP    #15
00002908                          2392  
00002908  1239 00003094           2393          MOVE.B  bit4,D1
0000290E  103C 0003               2394          MOVE.B  #3,D0
00002912  4E4F                    2395          TRAP    #15
00002914                          2396  
00002914  43F9 00002E3B           2397          LEA     CLOSEBRA,A1
0000291A  103C 000E               2398          MOVE.B  #14,D0
0000291E  4E4F                    2399          TRAP    #15
00002920                          2400  
00002920  6000 FE8C               2401          BRA     SUBJMPA2
00002924                          2402  
00002924                          2403  *   Displays indirect address register with post increment
00002924                          2404  SUBANIDPOS
00002924  43F9 00002E39           2405          LEA     OPENBRA,A1
0000292A  103C 000E               2406          MOVE.B  #14,D0
0000292E  4E4F                    2407          TRAP    #15
00002930                          2408  
00002930  43F9 00002E60           2409          LEA     MAN,A1
00002936  103C 000E               2410          MOVE.B  #14,D0
0000293A  4E4F                    2411          TRAP    #15
0000293C                          2412  
0000293C  1239 00003094           2413          MOVE.B  bit4,D1
00002942  103C 0003               2414          MOVE.B  #3,D0
00002946  4E4F                    2415          TRAP    #15
00002948                          2416  
00002948  43F9 00002E3B           2417          LEA     CLOSEBRA,A1
0000294E  103C 000E               2418          MOVE.B  #14,D0
00002952  4E4F                    2419          TRAP    #15
00002954                          2420  
00002954  43F9 00002E3D           2421          LEA     POS,A1
0000295A  103C 000E               2422          MOVE.B  #14,D0
0000295E  4E4F                    2423          TRAP    #15
00002960                          2424  
00002960  6000 FE4C               2425          BRA     SUBJMPA2
00002964                          2426  
00002964                          2427  *   Displays indirect address register with pre decrement
00002964                          2428  SUBANIDNEG
00002964  43F9 00002E3F           2429          LEA     NEG,A1
0000296A  103C 000E               2430          MOVE.B  #14,D0
0000296E  4E4F                    2431          TRAP    #15
00002970                          2432  
00002970  43F9 00002E39           2433          LEA     OPENBRA,A1
00002976  103C 000E               2434          MOVE.B  #14,D0
0000297A  4E4F                    2435          TRAP    #15
0000297C                          2436  
0000297C  43F9 00002E60           2437          LEA     MAN,A1
00002982  103C 000E               2438          MOVE.B  #14,D0
00002986  4E4F                    2439          TRAP    #15
00002988                          2440  
00002988  1239 00003094           2441          MOVE.B  bit4,D1
0000298E  103C 0003               2442          MOVE.B  #3,D0
00002992  4E4F                    2443          TRAP    #15
00002994                          2444  
00002994  43F9 00002E3B           2445          LEA     CLOSEBRA,A1
0000299A  103C 000E               2446          MOVE.B  #14,D0
0000299E  4E4F                    2447          TRAP    #15
000029A0                          2448  
000029A0  6000 FE0C               2449          BRA     SUBJMPA2
000029A4                          2450  
000029A4                          2451  
000029A4                          2452  
000029A4                          2453  
000029A4                          2454  ******************************************************************************************************
000029A4                          2455  * Displays the EA as hex numbers
000029A4                          2456  * 
000029A4                          2457  SUBEA
000029A4                          2458          *   This finds which mode to use
000029A4  0C39 0000 00003093      2459          CMP.B   #$0,bit3
000029AC  6700 FEEE               2460          BEQ     SUBDN2
000029B0  0C39 0001 00003093      2461          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
000029B8  6700 FEFE               2462          BEQ     SUBAN
000029BC  0C39 0002 00003093      2463          CMP.B   #$2,bit3
000029C4  6700 FF2A               2464          BEQ     SUBANID
000029C8  0C39 0003 00003093      2465          CMP.B   #$3,bit3
000029D0  6700 FF52               2466          BEQ     SUBANIDPOS
000029D4  0C39 0004 00003093      2467          CMP.B   #$4,bit3
000029DC  6786                    2468          BEQ     SUBANIDNEG
000029DE  0C39 0005 00003093      2469          CMP.B   #$5,bit3
000029E6  6700 0424               2470          BEQ     ERROR
000029EA  0C39 0006 00003093      2471          CMP.B   #$6,bit3
000029F2  6700 0418               2472          BEQ     ERROR
000029F6  0C39 0007 00003093      2473          CMP.B   #$7,bit3
000029FE  6700 0002               2474          BEQ     SUBEAHEX
00002A02                          2475  
00002A02                          2476  SUBEAHEX
00002A02  0C39 0004 00003094      2477          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002A0A  6700 0086               2478          BEQ     SUBEAID
00002A0E                          2479  SUBEAID2
00002A0E                          2480          *   Else it will assume it is absolute addressing mode
00002A0E  43F9 00002E53           2481          LEA     MHEX,A1
00002A14  103C 000E               2482          MOVE.B  #14,D0
00002A18  4E4F                    2483          TRAP    #15
00002A1A                          2484  
00002A1A  0C39 0000 00003094      2485          CMP.B   #$0,bit4
00002A22  6700 007E               2486          BEQ     SUBEAHEX1
00002A26  0C39 0001 00003094      2487          CMP.B   #$1,bit4
00002A2E  6700 007A               2488          BEQ     SUBEAHEX2
00002A32                          2489  
00002A32  0C39 0000 00003092      2490          CMP.B   #$0,bit2            * SUB byte displays as word
00002A3A  6700 0066               2491          BEQ     SUBEAHEX1
00002A3E  0C39 0004 00003092      2492          CMP.B   #$4,bit2            * SUB byte displays as word
00002A46  6700 005A               2493          BEQ     SUBEAHEX1
00002A4A  0C39 0001 00003092      2494          CMP.B   #$1,bit2            * SUB word
00002A52  6700 004E               2495          BEQ     SUBEAHEX1
00002A56  0C39 0005 00003092      2496          CMP.B   #$5,bit2            * SUB word
00002A5E  6700 0042               2497          BEQ     SUBEAHEX1
00002A62  0C39 0003 00003092      2498          CMP.B   #$3,bit2            * SUBA word
00002A6A  6700 0036               2499          BEQ     SUBEAHEX1
00002A6E  0C39 0002 00003092      2500          CMP.B   #$2,bit2            * SUB longword
00002A76  6700 0032               2501          BEQ     SUBEAHEX2
00002A7A  0C39 0006 00003092      2502          CMP.B   #$6,bit2            * SUB longword
00002A82  6700 0026               2503          BEQ     SUBEAHEX2
00002A86  0C39 0007 00003092      2504          CMP.B   #$7,bit2            * SUBA longword
00002A8E  6700 001A               2505          BEQ     SUBEAHEX2
00002A92                          2506  
00002A92                          2507  SUBEAID
00002A92  43F9 00002E41           2508          LEA     HASH,A1
00002A98  103C 000E               2509          MOVE.B  #14,D0
00002A9C  4E4F                    2510          TRAP    #15
00002A9E  6000 FF6E               2511          BRA     SUBEAID2
00002AA2                          2512  
00002AA2                          2513  SUBEAHEX1  
00002AA2                          2514          *absolute address word
00002AA2  1E3C 0002               2515          MOVE.B  #2,D7
00002AA6  6000 000A               2516          BRA     SUBEAHEX3
00002AAA                          2517  
00002AAA                          2518  SUBEAHEX2  *absolute address long
00002AAA  1E3C 0004               2519          MOVE.B  #4,D7
00002AAE  6000 0002               2520          BRA     SUBEAHEX3
00002AB2                          2521  
00002AB2                          2522  SUBEAHEX3
00002AB2  BE3C 0000               2523          CMP.B   #0,D7               Compares current addr to ending addr
00002AB6  6700 FCF6               2524          BEQ     SUBJMPA2            Branches to done if they are equal
00002ABA                          2525  
00002ABA                          2526      
00002ABA  141E                    2527          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002ABC                          2528          
00002ABC  1602                    2529          MOVE.B  D2,D3               Copies data at D2 to D3
00002ABE                          2530          *   this gets digit in 10's place
00002ABE  E80B                    2531          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002AC0                          2532          *   this gets digit in 1's place
00002AC0  E90A                    2533          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002AC2  E80A                    2534          LSR.B   #4,D2               Shifts back right into 1's place
00002AC4                          2535  
00002AC4                          2536          
00002AC4                          2537          *   D3 holds digit in 10's place
00002AC4                          2538          *   D2 holds digit in 1's place
00002AC4                          2539          
00002AC4  1203                    2540          MOVE.B  D3,D1               Displays digit in 10's place first
00002AC6                          2541  
00002AC6                          2542          *   converts digits 10+ into letters
00002AC6                          2543  
00002AC6  47F9 00002ADA           2544          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002ACC  B23C 0009               2545          CMP.B   #9,D1               Compares digit to 9
00002AD0  6E00 0164               2546          BGT     CONV                Print out letter representation if greater than 9
00002AD4                          2547  
00002AD4  103C 0003               2548          MOVE.B  #3,D0               Displays digit if it is less than A
00002AD8  4E4F                    2549          TRAP    #15
00002ADA                          2550          
00002ADA                          2551  SUBEAHEX4    
00002ADA  1202                    2552          MOVE.B  D2,D1               Displays digit in 1's place second
00002ADC                          2553  
00002ADC                          2554          *   converts digits 10+ into letters
00002ADC  47F9 00002AF0           2555          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002AE2  B23C 0009               2556          CMP.B   #9,D1               Compares digit to 9
00002AE6  6E00 014E               2557          BGT     CONV                Print out letter representation if greater than 9
00002AEA                          2558          
00002AEA  103C 0003               2559          MOVE.B  #3,D0               Displays digit if it is less than A
00002AEE  4E4F                    2560          TRAP    #15
00002AF0                          2561          
00002AF0                          2562  SUBEAHEX5         
00002AF0                          2563  * Display counter -- creates new line every 8 bytes
00002AF0                          2564          * D7 is used as counter
00002AF0                          2565          
00002AF0  5307                    2566          SUB.B   #1,D7                       
00002AF2  60BE                    2567          BRA     SUBEAHEX3              Loops back to display next address
00002AF4                          2568  
00002AF4                          2569  ***   display EA ends here
00002AF4                          2570  
00002AF4                          2571  ******************************************************************************************************
00002AF4                          2572  * Displays the EA as hex numbers
00002AF4                          2573  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002AF4                          2574  * OUTPUT: Displays size of EA reading from A6
00002AF4                          2575  * Jumps to location stored in A2 when finished
00002AF4                          2576  DISPEA
00002AF4  43F9 00002E53           2577          LEA     MHEX,A1
00002AFA  103C 000E               2578          MOVE.B  #14,D0
00002AFE  4E4F                    2579          TRAP    #15
00002B00                          2580  
00002B00  B83C 0002               2581          CMP.B   #$2,D4              Branches to longword display if size is 2
00002B04  6700 000A               2582          BEQ     DISPEALONG          Else it will assume word length
00002B08                          2583  
00002B08                          2584  DISPEAWORD
00002B08                          2585          *absolute address word
00002B08  1E3C 0002               2586          MOVE.B  #2,D7
00002B0C  6000 000A               2587          BRA     DISPEA3
00002B10                          2588   
00002B10                          2589  DISPEALONG
00002B10                          2590          *absolute address long
00002B10  1E3C 0004               2591          MOVE.B  #4,D7
00002B14  6000 0002               2592          BRA     DISPEA3
00002B18                          2593  
00002B18                          2594  DISPEA3
00002B18  BE3C 0000               2595          CMP.B   #0,D7               Compares current addr to ending addr
00002B1C  6700 FC90               2596          BEQ     SUBJMPA2            Branches to done if they are equal
00002B20                          2597  
00002B20                          2598      
00002B20  141E                    2599          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002B22                          2600          
00002B22  1602                    2601          MOVE.B  D2,D3               Copies data at D2 to D3
00002B24                          2602          *   this gets digit in 10's place
00002B24  E80B                    2603          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002B26                          2604          *   this gets digit in 1's place
00002B26  E90A                    2605          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002B28  E80A                    2606          LSR.B   #4,D2               Shifts back right into 1's place
00002B2A                          2607  
00002B2A                          2608          
00002B2A                          2609          *   D3 holds digit in 10's place
00002B2A                          2610          *   D2 holds digit in 1's place
00002B2A                          2611          
00002B2A  1203                    2612          MOVE.B  D3,D1               Displays digit in 10's place first
00002B2C                          2613  
00002B2C                          2614          *   converts digits 10+ into letters
00002B2C                          2615  
00002B2C  47F9 00002B40           2616          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002B32  B23C 0009               2617          CMP.B   #9,D1               Compares digit to 9
00002B36  6E00 00FE               2618          BGT     CONV                Print out letter representation if greater than 9
00002B3A                          2619  
00002B3A  103C 0003               2620          MOVE.B  #3,D0               Displays digit if it is less than A
00002B3E  4E4F                    2621          TRAP    #15
00002B40                          2622    
00002B40                          2623  DISPEA4
00002B40  1202                    2624          MOVE.B  D2,D1               Displays digit in 1's place second
00002B42                          2625  
00002B42                          2626          *   converts digits 10+ into letters
00002B42  47F9 00002B56           2627          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002B48  B23C 0009               2628          CMP.B   #9,D1               Compares digit to 9
00002B4C  6E00 00E8               2629          BGT     CONV                Print out letter representation if greater than 9
00002B50                          2630          
00002B50  103C 0003               2631          MOVE.B  #3,D0               Displays digit if it is less than A
00002B54  4E4F                    2632          TRAP    #15
00002B56                          2633        
00002B56                          2634  DISPEA5
00002B56                          2635  * Display counter -- creates new line every 8 bytes
00002B56                          2636          * D7 is used as counter
00002B56                          2637          
00002B56  5307                    2638          SUB.B   #1,D7                       
00002B58  60BE                    2639          BRA     DISPEA3              Loops back to display next address
00002B5A                          2640  
00002B5A                          2641  ***   display EA ends here
00002B5A                          2642  
00002B5A                          2643  *******************************************************************
00002B5A                          2644  * Clears all of the data registers
00002B5A                          2645  CLRDN
00002B5A  4280                    2646          CLR.L   D0
00002B5C  4281                    2647          CLR.L   D1
00002B5E  4282                    2648          CLR.L   D2
00002B60  4283                    2649          CLR.L   D3
00002B62  4284                    2650          CLR.L   D4
00002B64  4285                    2651          CLR.L   D5
00002B66  4286                    2652          CLR.L   D6
00002B68  4287                    2653          CLR.L   D7
00002B6A  4E75                    2654          RTS
00002B6C                          2655  
00002B6C                          2656  ********************************************************************
00002B6C                          2657  * Invalid op-code handling
00002B6C                          2658  * Displays DATA YYYY
00002B6C                          2659  *  YYYY represents the op-code that failed
00002B6C                          2660  INVOPCODE
00002B6C  DE1E                    2661          ADD.B   (A6)+,D7
00002B6E                          2662  
00002B6E                          2663  INVOP
00002B6E  43F9 00002EBA           2664          LEA     MDATA,A1
00002B74  103C 000E               2665          MOVE.B  #14,D0
00002B78  4E4F                    2666          TRAP    #15
00002B7A  43F9 00002E33           2667          LEA     TAB,A1
00002B80  103C 000E               2668          MOVE.B  #14,D0
00002B84  4E4F                    2669          TRAP    #15
00002B86  43F9 00002E53           2670          LEA     MHEX,A1
00002B8C  103C 000E               2671          MOVE.B  #14,D0
00002B90  4E4F                    2672          TRAP    #15
00002B92                          2673          
00002B92  1C3C 0002               2674          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002B96                          2675          
00002B96  3407                    2676          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002B98  E04A                    2677          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002B9A  6000 0004               2678          BRA     INVOP2              Skips the second part to do later
00002B9E                          2679  
00002B9E                          2680  INVOP1
00002B9E  1407                    2681          MOVE.B  D7,D2
00002BA0                          2682  INVOP2
00002BA0  1602                    2683          MOVE.B  D2,D3               Copies data at D2 to D3
00002BA2                          2684          *   this gets digit in 10's place
00002BA2  E80B                    2685          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002BA4                          2686          *   this gets digit in 1's place
00002BA4  E90A                    2687          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002BA6  E80A                    2688          LSR.B   #4,D2               Shifts back right into 1's place
00002BA8                          2689  
00002BA8                          2690          
00002BA8                          2691          *   D3 holds digit in 10's place
00002BA8                          2692          *   D2 holds digit in 1's place
00002BA8                          2693          
00002BA8  1203                    2694          MOVE.B  D3,D1               Displays digit in 10's place first
00002BAA                          2695  
00002BAA                          2696          *   converts digits 10+ into letters
00002BAA                          2697  
00002BAA  47F9 00002BBE           2698          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002BB0  B23C 0009               2699          CMP.B   #9,D1               Compares digit to 9
00002BB4  6E00 0080               2700          BGT     CONV                Print out letter representation if greater than 9
00002BB8                          2701  
00002BB8  103C 0003               2702          MOVE.B  #3,D0               Displays digit if it is less than A
00002BBC  4E4F                    2703          TRAP    #15
00002BBE                          2704          
00002BBE                          2705  INVOP3   
00002BBE  1202                    2706          MOVE.B  D2,D1               Displays digit in 1's place second
00002BC0                          2707  
00002BC0                          2708          *   converts digits 10+ into letters
00002BC0  47F9 00002BD4           2709          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002BC6  B23C 0009               2710          CMP.B   #9,D1               Compares digit to 9
00002BCA  6E00 006A               2711          BGT     CONV                Print out letter representation if greater than 9
00002BCE                          2712          
00002BCE  103C 0003               2713          MOVE.B  #3,D0               Displays digit if it is less than A
00002BD2  4E4F                    2714          TRAP    #15
00002BD4                          2715          
00002BD4                          2716  INVOP4
00002BD4                          2717  * Display counter -- creates new line every 8 bytes
00002BD4                          2718          * D6 is used as counter
00002BD4                          2719          
00002BD4  5306                    2720          SUB.B   #1,D6
00002BD6  BC3C 0000               2721          CMP.B   #0,D6
00002BDA  6700 0004               2722          BEQ     ENDNEWLINE
00002BDE  60BE                    2723          BRA     INVOP1              Loops back to display next address
00002BE0                          2724  
00002BE0                          2725  
00002BE0                          2726  ******************************************************************************************************
00002BE0                          2727  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002BE0                          2728  ENDNEWLINE
00002BE0  43F9 00002E30           2729          LEA     NEWLINE,A1          Creates a new line in output window
00002BE6  103C 000E               2730          MOVE.B  #14,D0
00002BEA  4E4F                    2731          TRAP    #15
00002BEC                          2732  
00002BEC  5339 00003087           2733          SUB.B   #1,dispcount
00002BF2  0C39 0000 00003087      2734          CMP.B   #0,dispcount               Checks if display counter is zero
00002BFA  6600 E4DE               2735          BNE     NEWADDR
00002BFE                          2736  
00002BFE                          2737  * Asks user to press enter to continue
00002BFE                          2738  * Resets counter
00002BFE  43F9 00002E30           2739          LEA     NEWLINE,A1          Creates a new line in output window
00002C04  103C 000E               2740          MOVE.B  #14,D0
00002C08  4E4F                    2741          TRAP    #15
00002C0A                          2742          
00002C0A  43F9 0000306B           2743          LEA     MCONT,A1            Asks user to press enter to continue
00002C10  103C 000E               2744          MOVE.B  #14,D0
00002C14  4E4F                    2745          TRAP    #15
00002C16                          2746  
00002C16  103C 0004               2747          MOVE.B  #4,D0               Takes in user input
00002C1A  4E4F                    2748          TRAP    #15
00002C1C  4281                    2749          CLR.L   D1                  Clears D1 incase user decides to input something
00002C1E                          2750  
00002C1E  43F9 00002E30           2751          LEA     NEWLINE,A1          Creates a new line in output window
00002C24  103C 000E               2752          MOVE.B  #14,D0
00002C28  4E4F                    2753          TRAP    #15
00002C2A                          2754  
00002C2A  13FC 001E 00003087      2755          MOVE.B  #dispnum,dispcount  Resets display counter
00002C32  6000 E4A6               2756          BRA     NEWADDR             Loops back to beginning
00002C36                          2757  
00002C36                          2758  
00002C36                          2759  ******************************************************************************************************
00002C36                          2760  * Converts decimal number into hex and displays it
00002C36                          2761  *   converts number 10-15 to A-F
00002C36                          2762  *   INPUT: decimal number in D1
00002C36                          2763  *   OUTPUT: HEX number to output
00002C36  B23C 000A               2764  CONV    CMP.B   #10,D1              Displays 10 as A
00002C3A  6700 002A               2765          BEQ     HEXA
00002C3E  B23C 000B               2766          CMP.B   #11,D1              Displays 11 as B
00002C42  6700 002C               2767          BEQ     HEXB
00002C46  B23C 000C               2768          CMP.B   #12,D1              Displays 12 as C
00002C4A  6700 002E               2769          BEQ     HEXC
00002C4E  B23C 000D               2770          CMP.B   #13,D1              Displays 13 as D
00002C52  6700 0030               2771          BEQ     HEXD
00002C56  B23C 000E               2772          CMP.B   #14,D1              Displays 14 as E
00002C5A  6700 0032               2773          BEQ     HEXE
00002C5E  B23C 000F               2774          CMP.B   #15,D1              Displays 15 as F
00002C62  6700 0034               2775          BEQ     HEXF
00002C66                          2776  
00002C66  43F9 00002E45           2777  HEXA    LEA     DISPA,A1            Loads A character
00002C6C  6000 0034               2778          BRA     PRINT
00002C70                          2779    
00002C70  43F9 00002E47           2780  HEXB    LEA     DISPB,A1            Loads B character
00002C76  6000 002A               2781          BRA     PRINT
00002C7A                          2782  
00002C7A  43F9 00002E49           2783  HEXC    LEA     DISPC,A1            Loads C character
00002C80  6000 0020               2784          BRA     PRINT
00002C84                          2785  
00002C84  43F9 00002E4B           2786  HEXD    LEA     DISPD,A1            Loads D character
00002C8A  6000 0016               2787          BRA     PRINT
00002C8E                          2788  
00002C8E  43F9 00002E4D           2789  HEXE    LEA     DISPE,A1            Loads E character
00002C94  6000 000C               2790          BRA     PRINT
00002C98                          2791  
00002C98  43F9 00002E4F           2792  HEXF    LEA     DISPF,A1            Loads F character
00002C9E  6000 0002               2793          BRA     PRINT
00002CA2                          2794  
00002CA2  103C 000E               2795  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002CA6  4E4F                    2796          TRAP    #15                 Prints out message in A1
00002CA8  4ED3                    2797          JMP     (A3)
00002CAA                          2798  
00002CAA                          2799  ******************************************************************************
00002CAA                          2800  * Converts decimal input to hex
00002CAA                          2801  * INPUT: Decimal inside D2
00002CAA                          2802  * OUTPUT: HEX into D3
00002CAA                          2803  *   Converts number in decimal to hex        
00002CAA                          2804  DEC2HEX
00002CAA  B43C 0030               2805          CMP.B   #$30,D2             0
00002CAE  6700 00B0               2806          BEQ     D2HZERO
00002CB2  B43C 0031               2807          CMP.B   #$31,D2             1
00002CB6  6700 00AE               2808          BEQ     D2HONE
00002CBA  B43C 0032               2809          CMP.B   #$32,D2             2
00002CBE  6700 00AC               2810          BEQ     D2HTWO
00002CC2  B43C 0033               2811          CMP.B   #$33,D2             3
00002CC6  6700 00AA               2812          BEQ     D2HTHREE
00002CCA  B43C 0034               2813          CMP.B   #$34,D2             4
00002CCE  6700 00A8               2814          BEQ     D2HFOUR
00002CD2  B43C 0035               2815          CMP.B   #$35,D2             5
00002CD6  6700 00A6               2816          BEQ     D2HFIVE
00002CDA  B43C 0036               2817          CMP.B   #$36,D2             6
00002CDE  6700 00A4               2818          BEQ     D2HSIX
00002CE2  B43C 0037               2819          CMP.B   #$37,D2             7
00002CE6  6700 00A2               2820          BEQ     D2HSEVEN
00002CEA  B43C 0038               2821          CMP.B   #$38,D2             8
00002CEE  6700 00A0               2822          BEQ     D2HEIGHT
00002CF2  B43C 0039               2823          CMP.B   #$39,D2             9
00002CF6  6700 009E               2824          BEQ     D2HNINE
00002CFA  B43C 0041               2825          CMP.B   #$41,D2             A
00002CFE  6700 009C               2826          BEQ     D2HHEXA
00002D02  B43C 0042               2827          CMP.B   #$42,D2             B
00002D06  6700 009A               2828          BEQ     D2HHEXB
00002D0A  B43C 0043               2829          CMP.B   #$43,D2             C
00002D0E  6700 0098               2830          BEQ     D2HHEXC
00002D12  B43C 0044               2831          CMP.B   #$44,D2             D
00002D16  6700 0096               2832          BEQ     D2HHEXD
00002D1A  B43C 0045               2833          CMP.B   #$45,D2             E
00002D1E  6700 0094               2834          BEQ     D2HHEXE
00002D22  B43C 0046               2835          CMP.B   #$46,D2             F
00002D26  6700 0092               2836          BEQ     D2HHEXF
00002D2A  B43C 0061               2837          CMP.B   #$61,D2             A
00002D2E  6700 006C               2838          BEQ     D2HHEXA
00002D32  B43C 0062               2839          CMP.B   #$62,D2             B
00002D36  6700 006A               2840          BEQ     D2HHEXB
00002D3A  B43C 0063               2841          CMP.B   #$63,D2             C
00002D3E  6700 0068               2842          BEQ     D2HHEXC
00002D42  B43C 0064               2843          CMP.B   #$64,D2             D
00002D46  6700 0066               2844          BEQ     D2HHEXD
00002D4A  B43C 0065               2845          CMP.B   #$65,D2             E
00002D4E  6700 0064               2846          BEQ     D2HHEXE
00002D52  B43C 0066               2847          CMP.B   #$66,D2             F
00002D56  6700 0062               2848          BEQ     D2HHEXF
00002D5A                          2849  
00002D5A                          2850          * User entered a non-hex character
00002D5A                          2851          * Moves F to D1 to indicate error before returning
00002D5A  123C 000F               2852          MOVE.B  #$F,D1
00002D5E  4E75                    2853          RTS
00002D60                          2854  
00002D60                          2855  *   Moves the appropiate hex number to D3
00002D60  163C 0000               2856  D2HZERO MOVE.B  #$0,D3
00002D64  4E75                    2857          RTS
00002D66                          2858  
00002D66                          2859  D2HONE
00002D66  163C 0001               2860          MOVE.B  #$1,D3
00002D6A  4E75                    2861          RTS
00002D6C                          2862  
00002D6C                          2863  D2HTWO
00002D6C  163C 0002               2864          MOVE.B  #$2,D3
00002D70  4E75                    2865          RTS
00002D72                          2866  
00002D72                          2867  D2HTHREE
00002D72  163C 0003               2868          MOVE.B  #$3,D3
00002D76  4E75                    2869          RTS
00002D78                          2870  
00002D78                          2871  D2HFOUR
00002D78  163C 0004               2872          MOVE.B  #$4,D3
00002D7C  4E75                    2873          RTS
00002D7E                          2874  
00002D7E                          2875  D2HFIVE
00002D7E  163C 0005               2876          MOVE.B  #$5,D3
00002D82  4E75                    2877          RTS
00002D84                          2878  
00002D84                          2879  D2HSIX
00002D84  163C 0006               2880          MOVE.B  #$6,D3
00002D88  4E75                    2881          RTS
00002D8A                          2882  
00002D8A                          2883  D2HSEVEN
00002D8A  163C 0007               2884          MOVE.B  #$7,D3
00002D8E  4E75                    2885          RTS
00002D90                          2886  
00002D90                          2887  D2HEIGHT
00002D90  163C 0008               2888          MOVE.B  #$8,D3
00002D94  4E75                    2889          RTS
00002D96                          2890  
00002D96                          2891  D2HNINE
00002D96  163C 0009               2892          MOVE.B  #$9,D3
00002D9A  4E75                    2893          RTS
00002D9C                          2894  
00002D9C                          2895  D2HHEXA
00002D9C  163C 000A               2896          MOVE.B  #$A,D3
00002DA0  4E75                    2897          RTS
00002DA2                          2898  
00002DA2                          2899  D2HHEXB
00002DA2  163C 000B               2900          MOVE.B  #$B,D3
00002DA6  4E75                    2901          RTS
00002DA8                          2902  
00002DA8                          2903  D2HHEXC
00002DA8  163C 000C               2904          MOVE.B  #$C,D3
00002DAC  4E75                    2905          RTS
00002DAE                          2906  
00002DAE                          2907  D2HHEXD
00002DAE  163C 000D               2908          MOVE.B  #$D,D3
00002DB2  4E75                    2909          RTS
00002DB4                          2910  
00002DB4                          2911  D2HHEXE
00002DB4  163C 000E               2912          MOVE.B  #$E,D3
00002DB8  4E75                    2913          RTS
00002DBA                          2914  
00002DBA                          2915  D2HHEXF
00002DBA  163C 000F               2916          MOVE.B  #$F,D3
00002DBE  4E75                    2917          RTS
00002DC0                          2918  
00002DC0                          2919  *************************************************************************************************
00002DC0                          2920  ASK4REPEAT
00002DC0  43F9 00002E30           2921          LEA     NEWLINE,A1          Creates a new line in output window
00002DC6  103C 000E               2922          MOVE.B  #14,D0
00002DCA  4E4F                    2923          TRAP    #15
00002DCC                          2924  ASK4REPEAT2
00002DCC  43F9 00002F72           2925          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00002DD2  103C 000E               2926          MOVE.B  #14,D0
00002DD6  4E4F                    2927          TRAP    #15
00002DD8                          2928  
00002DD8  43F9 00003094           2929          LEA     bit4,A1             User has to enter Y to start over
00002DDE  103C 0002               2930          MOVE.B  #2,D0               N to exit
00002DE2  4E4F                    2931          TRAP    #15
00002DE4                          2932  
00002DE4  1239 00003094           2933          MOVE.B  bit4,D1             User input was stored in bit4
00002DEA  B23C 0059               2934          CMP.B   #$59,D1             Char Y
00002DEE  6700 E210               2935          BEQ     IOSTART
00002DF2  B23C 0079               2936          CMP.B   #$79,D1             Char y
00002DF6  6700 E208               2937          BEQ     IOSTART
00002DFA  B23C 004E               2938          CMP.B   #$4E,D1             Char N
00002DFE  6700 001C               2939          BEQ     DONE
00002E02  B23C 006E               2940          CMP.B   #$6E,D1             Char n
00002E06  6700 0014               2941          BEQ     DONE
00002E0A  60C0                    2942          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00002E0C                          2943  
00002E0C                          2944  
00002E0C                          2945  **************************************************************************************************
00002E0C  43F9 00003039           2946  ERROR   LEA     MERROR,A1
00002E12  103C 000E               2947          MOVE.B  #14,D0
00002E16  4E4F                    2948          TRAP    #15
00002E18  6000 000E               2949          BRA     EXIT
00002E1C                          2950  
00002E1C  43F9 00003050           2951  DONE    LEA     MDONE,A1
00002E22  103C 000E               2952          MOVE.B  #14,D0
00002E26  4E4F                    2953          TRAP    #15
00002E28                          2954  
00002E28  103C 0009               2955  EXIT    MOVE.B  #9,D0
00002E2C  4E4F                    2956          TRAP    #15
00002E2E                          2957  
00002E2E                          2958  ************************************ Output stuff **************************************
00002E2E                          2959  * Stuff for output
00002E2E                          2960  
00002E2E  =0000000D               2961  CR      EQU     $0D
00002E2E  =0000000A               2962  LF      EQU     $0A
00002E2E                          2963  
00002E2E= 20 00                   2964  SPACE       DC.B    ' ',0
00002E30= 0D 0A 00                2965  NEWLINE     DC.B    '',CR,LF,0
00002E33= 20 20 20 00             2966  TAB         DC.B    '   ',0
00002E37= 2C 00                   2967  COMMA       DC.B    ',',0
00002E39= 28 00                   2968  OPENBRA     DC.B    '(',0
00002E3B= 29 00                   2969  CLOSEBRA    DC.B    ')',0
00002E3D= 2B 00                   2970  POS         DC.B    '+',0
00002E3F= 2D 00                   2971  NEG         DC.B    '-',0
00002E41= 23 00                   2972  HASH        DC.B    '#',0
00002E43= 2F 00                   2973  SLASH       DC.B    '/',0
00002E45                          2974  
00002E45                          2975  
00002E45= 41 00                   2976  DISPA       DC.B    'A',0
00002E47= 42 00                   2977  DISPB       DC.B    'B',0
00002E49= 43 00                   2978  DISPC       DC.B    'C',0
00002E4B= 44 00                   2979  DISPD       DC.B    'D',0
00002E4D= 45 00                   2980  DISPE       DC.B    'E',0
00002E4F= 46 00                   2981  DISPF       DC.B    'F',0
00002E51                          2982  
00002E51= 2E 00                   2983  MDOT        DC.B    '.',0
00002E53= 24 00                   2984  MHEX        DC.B    '$',0
00002E55= 42 20 00                2985  MBYTE       DC.B    'B ',0
00002E58= 57 20 00                2986  MWORD       DC.B    'W ',0
00002E5B= 4C 20 00                2987  MLONG       DC.B    'L ',0
00002E5E= 44 00                   2988  MDN         DC.B    'D',0
00002E60= 41 00                   2989  MAN         DC.B    'A',0
00002E62                          2990  
00002E62= 4A 53 52 00             2991  MJSR        DC.B    'JSR',0
00002E66= 42 54 53 54 00          2992  MBTST       DC.B    'BTST',0
00002E6B= 52 4F 4C 00             2993  MROL        DC.B    'ROL',0
00002E6F= 52 4F 52 00             2994  MROR        DC.B    'ROR',0
00002E73= 4C 53 4C 00             2995  MLSL        DC.B    'LSL',0
00002E77= 4C 53 52 00             2996  MLSR        DC.B    'LSR',0
00002E7B= 4E 45 47 2E 00          2997  MMNEGW      DC.B    'NEG.',0
00002E80= 44 49 56 53 2E 57 00    2998  MMDIVSW     DC.B    'DIVS.W',0
00002E87= 4D 55 4C 53 2E 57 00    2999  MMULSW      DC.B    'MULS.W',0
00002E8E= 4D 4F 56 45 2E 42 00    3000  MMOVEB      DC.B    'MOVE.B',0
00002E95= 4D 4F 56 45 2E 57 00    3001  MMOVEW      DC.B    'MOVE.W',0
00002E9C= 4D 4F 56 45 2E 4C 00    3002  MMOVEL      DC.B    'MOVE.L',0
00002EA3= 4D 4F 56 45 41 2E ...   3003  MMOVEAW     DC.B    'MOVEA.W',0
00002EAB= 4D 4F 56 45 41 2E ...   3004  MMOVEAL     DC.B    'MOVEA.L',0
00002EB3= 4D 4F 56 45 4D 2E 00    3005  MMOVEM      DC.B    'MOVEM.',0
00002EBA                          3006  
00002EBA= 44 41 54 41 00          3007  MDATA       DC.B    'DATA',0
00002EBF= 53 55 42 2E 00          3008  MSUB        DC.B    'SUB.',0
00002EC4= 53 55 42 41 2E 00       3009  MSUBA       DC.B    'SUBA.',0
00002ECA= 41 4E 44 2E 00          3010  MAND        DC.B    'AND.',0
00002ECF= 41 44 44 2E 00          3011  MADD        DC.B    'ADD.',0
00002ED4= 53 55 42 49 2E 00       3012  MSUBI       DC.B    'SUBI.',0
00002EDA= 4F 52 49 2E 00          3013  MORI        DC.B    'ORI.',0
00002EDF= 4E 4F 54 2E 00          3014  MNOT        DC.B    'NOT.',0
00002EE4= 4D 55 4C 53 2E 00       3015  MMUL        DC.B    'MULS.',0
00002EEA= 4E 45 47 00             3016  MNEG        DC.B    'NEG',0
00002EEE= 43 4D 50 2E 00          3017  MCMP        DC.B    'CMP.',0
00002EF3= 43 4D 50 49 2E 00       3018  MCMPI       DC.B    'CMPI.',0
00002EF9= 43 4D 50 41 2E 00       3019  MCMPA       DC.B    'CMPA.',0
00002EFF= 45 4F 52 2E 00          3020  MEOR        DC.B    'EOR.',0
00002F04= 45 4F 52 49 2E 00       3021  MEORI       DC.B    'EORI.',0
00002F0A= 41 44 44 41 2E 00       3022  MADDA       DC.B    'ADDA.',0
00002F10                          3023  
00002F10= 42 45 51 00             3024  MBEQ        DC.B    'BEQ',0
00002F14= 42 4E 45 00             3025  MBNE        DC.B    'BNE',0
00002F18= 42 4C 54 00             3026  MBLT        DC.B    'BLT',0
00002F1C= 42 48 49 00             3027  MBHI        DC.B    'BHI',0
00002F20= 42 52 41 00             3028  MBRA        DC.B    'BRA',0
00002F24= 4E 4F 50 00             3029  MNOP        DC.B    'NOP',0
00002F28= 52 54 53 00             3030  MRTS        DC.B    'RTS',0
00002F2C                          3031  
00002F2C= 4C 65 6D 6D 65 20 ...   3032  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002F4F= 47 69 6D 6D 65 20 ...   3033  MADDR2      DC.B    'Gimme that end address too homie: ',0
00002F72= 54 72 79 6E 61 20 ...   3034  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00002F92= 45 6E 64 20 61 64 ...   3035  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00002FCA= 41 64 64 72 65 73 ...   3036  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00002FFD= 52 65 2D 65 6E 74 ...   3037  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00003019= 41 64 64 72 65 73 ...   3038  MIOERR4     DC.B    'Address must be an even number.',0
00003039= 45 52 52 4F 52 3A ...   3039  MERROR      DC.B    'ERROR: Something broke',0
00003050= 43 4F 4D 50 4C 45 ...   3040  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
0000306B= 2A 2A 50 52 45 53 ...   3041  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00003087                          3042  
00003087                          3043  
00003087                          3044  ********************************** MEMORY STORAGE **********************************************
00003087                          3045  * Stores memory locations at the end of the program
00003087                          3046  * How DS works: Give it a variable name.
00003087                          3047  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00003087                          3048  *   Last is the number of storage you want. 
00003087                          3049  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00003087                          3050  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00003087                          3051  *            
00003087                          3052  
00003087                          3053  dispcount   DS.B    1           Used to count display lines
00003088                          3054  
00003088                          3055  startaddr   DS.L    1
0000308C                          3056  endaddr     DS.L    1
00003090                          3057  
00003090                          3058  bit0        DS.B    1           SEE NOTE UP TOP
00003091                          3059  bit1        DS.B    1           SEE NOTE UP TOP
00003092                          3060  bit2        DS.B    1           SEE NOTE UP TOP
00003093                          3061  bit3        DS.B    1           SEE NOTE UP TOP
00003094                          3062  bit4        DS.B    1           SEE NOTE UP TOP
00003095                          3063  
00003095                          3064  
00003095                          3065      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1544
ADDIMD0             1574
ADDIMD1             1582
ADDIMD4             1590
ADDIMDDES           15FE
ADDIMDDES0          1622
ADDIMDDES1          1630
ADDIMDDES4          163E
ASK4REPEAT          2DC0
ASK4REPEAT2         2DCC
BCC                 1F32
BCCBEQ              1FAE
BCCBHI              1FCC
BCCBLT              1FC2
BCCBNE              1FB8
BCCBRA              1FA4
BCCDISP             1F78
BCCLONG             1F60
BCCNEXT             1F68
BCCPRINT            1FD6
BCCWORD             1F58
BIT0                3090
BIT1                3091
BIT2                3092
BIT3                3093
BIT4                3094
BTST                1252
CLOSEBRA            2E3B
CLRDN               2B5A
CODE                11AE
COMMA               2E37
CONV                2C36
CR                  D
D2HEIGHT            2D90
D2HFIVE             2D7E
D2HFOUR             2D78
D2HHEXA             2D9C
D2HHEXB             2DA2
D2HHEXC             2DA8
D2HHEXD             2DAE
D2HHEXE             2DB4
D2HHEXF             2DBA
D2HNINE             2D96
D2HONE              2D66
D2HSEVEN            2D8A
D2HSIX              2D84
D2HTHREE            2D72
D2HTWO              2D6C
D2HZERO             2D60
DEC2HEX             2CAA
DISPA               2E45
DISPADDR            10B0
DISPADDR1           10F8
DISPADDR2           10FA
DISPADDR3           112E
DISPADDR4           1144
DISPADDR5           115A
DISPADDR6           1170
DISPADDREND         117A
DISPADDRSTART       10EC
DISPB               2E47
DISPC               2E49
DISPCOUNT           3087
DISPD               2E4B
DISPE               2E4D
DISPEA              2AF4
DISPEA3             2B18
DISPEA4             2B40
DISPEA5             2B56
DISPEALONG          2B10
DISPEAWORD          2B08
DISPF               2E4F
DISPNUM             1E
DIVSW               1AEE
DONE                2E1C
ENDADDR             308C
ENDNEWLINE          2BE0
ENDNLINC            1A60
ERROR               2E0C
EXIT                2E28
HANDLEDES           15A6
HASH                2E41
HEXA                2C66
HEXB                2C70
HEXC                2C7A
HEXD                2C84
HEXE                2C8E
HEXF                2C98
IMD                 1FE6
IMD2                200E
IMD3                2016
IMD4                2022
IMDBYTE             20BC
IMDEA               20E4
IMDEA2              2100
IMDEA3              2116
IMDLONG             20DA
IMDPRINT            205C
IMDPRINTCMPI        20AA
IMDPRINTEND         20B4
IMDPRINTEORI        20A0
IMDPRINTORI         208C
IMDPRINTSUBI        2096
IMDWORD             20CC
INVOP               2B6E
INVOP1              2B9E
INVOP2              2BA0
INVOP3              2BBE
INVOP4              2BD4
INVOPCODE           2B6C
IOERROR1            1072
IOERROR2            1080
IOERROR3            1090
IOERROR4            10A0
IOGETADDR           1028
IOLOOP              104E
IOSTART             1000
IOSTARTLOOP         1048
JSR                 1212
LF                  A
LSLR                1CD2
LSLRDESD            1950
LSLRMEM             1DF0
LSLRSRCD            1928
MADD                2ECF
MADDA               2F0A
MADDR1              2F2C
MADDR2              2F4F
MAN                 2E60
MAND                2ECA
MBEQ                2F10
MBHI                2F1C
MBLT                2F18
MBNE                2F14
MBRA                2F20
MBTST               2E66
MBYTE               2E55
MCMP                2EEE
MCMPA               2EF9
MCMPI               2EF3
MCONT               306B
MDATA               2EBA
MDN                 2E5E
MDONE               3050
MDOT                2E51
MEOR                2EFF
MEORI               2F04
MERROR              3039
MHEX                2E53
MIOERR1             2F92
MIOERR2             2FCA
MIOERR3             2FFD
MIOERR4             3019
MISC                211A
MISCBIT2            2162
MISCBIT3            216E
MISCBYTE            220C
MISCCHECKM          2182
MISCEA              223A
MISCEA2             2256
MISCLONG            222E
MISCMMPOSTINC       238E
MISCMMPOSTINC2      2398
MISCMMPOSTINC3      23CE
MISCMMPOSTINCPRINT  23D2
MISCMMPOSTINCPRINT2  23E6
MISCMMPOSTINCPRINT3  23F2
MISCMMPREDEC        2320
MISCMMPREDEC2       234A
MISCMMPREDEC3       2360
MISCMMPREDECCHECK   2314
MISCMMPREDECPRINT   2364
MISCMMPREDECPRINT2  2378
MISCMMPREDECPRINT3  2384
MISCMMPRINTNUM      2464
MISCMMPRINTSIZE     22FC
MISCMMREGMEM        23FC
MISCMMREGMEM2       2422
MISCMMREGMEM3       2438
MISCMMREGMEMPRINT   243C
MISCMMREGMEMPRINT2  244C
MISCMMREGMEMPRINT3  2458
MISCMMSIZEL         22F6
MISCMMSLASH         2472
MISCMOVEM           228E
MISCMOVEM2          229E
MISCMOVEM3          22AE
MISCMOVEM4          22C0
MISCNOP             21A2
MISCNOT             21C2
MISCNOT2            21CA
MISCNOT3            21D2
MISCNOT4            21DE
MISCPRINT           225A
MISCPRINTEND        2286
MISCPRINTNEG        227C
MISCPRINTNOT        2272
MISCRTS             21B2
MISCWORD            221E
MJSR                2E62
MLONG               2E5B
MLSL                2E73
MLSR                2E77
MMDIVSW             2E80
MMNEGW              2E7B
MMOVEAL             2EAB
MMOVEAW             2EA3
MMOVEB              2E8E
MMOVEL              2E9C
MMOVEM              2EB3
MMOVEW              2E95
MMUL                2EE4
MMULSW              2E87
MNEG                2EEA
MNOP                2F24
MNOT                2EDF
MORI                2EDA
MOVB                14C0
MOVBDN1             189C
MOVBDN2             1A3C
MOVEAL              146C
MOVEAN1             1654
MOVEAN2             196C
MOVEAW              138C
MOVEIAN1            16C8
MOVEIAND1           17FC
MOVEIANI1           175C
MOVIAN2             1988
MOVIAND2            19FC
MOVIANI2            19BC
MOVL                13E0
MOVW                1300
MREPEAT             2F72
MROL                2E6B
MROR                2E6F
MRTS                2F28
MSUB                2EBF
MSUBA               2EC4
MSUBI               2ED4
MULSW               1A64
MWORD               2E58
NEG                 2E3F
NEGW                1B7C
NEWADDR             10DA
NEWLINE             2E30
OPENBRA             2E39
POS                 2E3D
PRINT               2CA2
PRINTB              1E2E
PRINTBYTE           1BD6
PRINTL              1E96
PRINTLONG           1C7E
PRINTLSL            1DBC
PRINTLSLRCOUNT      1ECA
PRINTLSR            1EFE
PRINTROL            1D54
PRINTROR            1D88
PRINTW              1E62
PRINTWORD           1C2A
RORL                1D3C
SLASH               2E43
SPACE               2E2E
START               1000
STARTADDR           3088
SUB                 2480
SUB1                24B2
SUB2                2494
SUB3                249C
SUB4                24A6
SUBA                26CE
SUBACHECK           24EE
SUBACONT            2722
SUBAN               28B8
SUBAN2              28D4
SUBANID             28F0
SUBANIDNEG          2964
SUBANIDPOS          2924
SUBDN               2880
SUBDN2              289C
SUBEA               29A4
SUBEAHEX            2A02
SUBEAHEX1           2AA2
SUBEAHEX2           2AAA
SUBEAHEX3           2AB2
SUBEAHEX4           2ADA
SUBEAHEX5           2AF0
SUBEAID             2A92
SUBEAID2            2A0E
SUBERRORTEST1       283E
SUBERRORTEST11      287E
SUBJMPA2            27AE
SUBPRINT            27B0
SUBPRINTADD         2800
SUBPRINTADDA        2712
SUBPRINTAND         27F0
SUBPRINTB           2810
SUBPRINTCMP         281C
SUBPRINTCMPA        2702
SUBPRINTEND         283C
SUBPRINTEOR         282C
SUBPRINTSUB         27E0
SUBPRINTSUBA        26F2
SUBSIZE1            254E
SUBSIZE11           2574
SUBSIZE12           258A
SUBSIZE2            258E
SUBSIZE21           25B4
SUBSIZE22           25CA
SUBSIZE3            25CE
SUBSIZE31           25F4
SUBSIZE32           260A
SUBSIZE4            260E
SUBSIZE41           2634
SUBSIZE42           264A
SUBSIZE5            264E
SUBSIZE51           2674
SUBSIZE52           268A
SUBSIZE6            268E
SUBSIZE61           26B4
SUBSIZE62           26CA
SUBSIZE7            273A
SUBSIZE71           275C
SUBSIZE72           2772
SUBSIZE8            2776
SUBSIZE81           2796
SUBSIZE82           27AA
TAB                 2E33
