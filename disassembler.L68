00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 12/9/2015 6:24:36 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000                            64  
00000000                            65  
00000000  =00007000                 66  addr1       EQU     $7000
00000000                            67  *addr2      EQU     $703C
00000000  =0000726C                 68  addr2       EQU     $726C
00000000                            69  
00000000  =0000001E                 70  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            71  
00000000                            72  
00000000                            73  
00001000                            74      ORG    $1000
00001000                            75  START:                  ; first instruction of program
00001000                            76  
00001000                            77          
00001000                            78          
00001000                            79  
00001000                            80          *   this stores some test EA into memory m,
00001000                            81          *LEA     addr1,A1
00001000                            82          *MOVE.W  #$0440,(A1)+        *917C
00001000                            83          *MOVE.W  #$917C,(A1)+       
00001000                            84          *MOVE.L  #$5555A7FF,(A1)+
00001000                            85          *MOVE.W  #$9078,(A1)+
00001000                            86          *MOVE.W  #$5555,(A1)+
00001000                            87          
00001000                            88          
00001000                            89          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            90          
00001000                            91          *MOVE.L  #$6700F0D8,$7000
00001000                            92          *MOVE.W  #$4E71,$7000         NOP
00001000                            93  
00001000                            94          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            95          *MOVE.L  #$48E3FAF5,$7000
00001000                            96          *MOVE.L  #$4CF8CDD9,$7004
00001000                            97          *MOVE.W  #$4000,$7008
00001000                            98  
00001000                            99  
00001000                           100          * start address: 7000
00001000                           101          * end address:   766C
00001000                           102  
00001000  21FC 46004610 7000       103          MOVE.L  #$46004610,$7000
00001008                           104          *MOVE.W  #$5A80,$7000
00001008                           105          *MOVE.L  #$47F80033,$7000
00001008                           106          *MOVE.W  #$4000,$7008
00001008                           107  
00001008                           108  *********************************************************************************************************************
00001008                           109  * Takes in user start and end address
00001008                           110  
00001008                           111  IOSTART
00001008                           112  
00001008  43F9 000034F1            113          LEA     ASCII1,A1
0000100E  303C 000D                114          MOVE    #13,D0
00001012  4E4F                     115          TRAP    #15
00001014                           116          
00001014  43F9 00003515            117          LEA     ASCII2,A1
0000101A  303C 000D                118          MOVE    #13,D0
0000101E  4E4F                     119          TRAP    #15
00001020                           120          
00001020  43F9 00003539            121          LEA     ASCII3,A1
00001026  303C 000D                122          MOVE    #13,D0
0000102A  4E4F                     123          TRAP    #15
0000102C                           124          
0000102C  43F9 0000355D            125          LEA     ASCII4,A1
00001032  303C 000D                126          MOVE    #13,D0
00001036  4E4F                     127          TRAP    #15
00001038                           128          
00001038  43F9 00003581            129          LEA     ASCII5,A1
0000103E  303C 000D                130          MOVE    #13,D0
00001042  4E4F                     131          TRAP    #15
00001044                           132          
00001044  43F9 000035A5            133          LEA     ASCII6,A1
0000104A  303C 000D                134          MOVE    #13,D0
0000104E  4E4F                     135          TRAP    #15
00001050                           136          
00001050  43F9 000035C9            137          LEA     ASCII7,A1
00001056  303C 000D                138          MOVE    #13,D0
0000105A  4E4F                     139          TRAP    #15
0000105C                           140  *   Displays message asking for address
0000105C  43F9 00003396            141          LEA     MADDR1,A1           Loads message to retrieve first number
00001062  6100 0020                142          BSR     IOGETADDR
00001066                           143  
00001066  0804 0000                144          BTST    #0,D4               Checks of the starting address is an odd number
0000106A  6600 0092                145          BNE     IOERROR4            Throws an error if it is because it will crash
0000106E                           146  
0000106E  2E04                     147          MOVE.L  D4,D7               Moves starting address to D7 for now
00001070  43F9 000033B9            148          LEA     MADDR2,A1           Then grabs the ending address
00001076  6100 000C                149          BSR     IOGETADDR
0000107A  B887                     150          CMP.L   D7,D4               Compares the start address to end address
0000107C  6E00 0090                151          BGT     DISPADDR            Continues if start < end
00001080  6000 004C                152          BRA     IOERROR1            Error if not
00001084                           153  
00001084                           154  IOGETADDR
00001084  2649                     155          MOVEA.L A1,A3               Saves the message incase of an error
00001086  103C 000E                156          MOVE.B  #14,D0              Prepares to display message
0000108A  4E4F                     157          TRAP    #15                 Displays message
0000108C                           158  
0000108C  4244                     159          CLR     D4                  Clears D4 register to prevent errors
0000108E                           160  
0000108E  43F9 000035EE            161          LEA     startaddr,A1        Uses this memory location to store the data
00001094  103C 0002                162          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001098  4E4F                     163          TRAP    #15
0000109A                           164  
0000109A  B23C 0008                165          CMP.B   #8,D1               Throws an error if the input is longer than a longword
0000109E  6E00 003E                166          BGT     IOERROR2
000010A2  1A01                     167          MOVE.B  D1,D5               Moves the length of the input to D5
000010A4                           168  
000010A4                           169  IOSTARTLOOP
000010A4  45F9 000035EE            170          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
000010AA                           171  
000010AA                           172  IOLOOP
000010AA  141A                     173          MOVE.B  (A2)+,D2            Moves data from current addr to D2
000010AC  5305                     174          SUB.B   #1,D5               Subtract 1 from counter
000010AE  6100 2052                175          BSR     DEC2HEX             Converts decimal to hex number
000010B2  B23C 000F                176          CMP.B   #$F,D1
000010B6  6700 0036                177          BEQ     IOERROR3
000010BA                           178  
000010BA  1C05                     179          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
000010BC  CDFC 0004                180          MULS    #4,D6               Multiply by 4 to find number of shifts left
000010C0                           181          
000010C0  EDAB                     182          LSL.L   D6,D3               Shifts hex left
000010C2  D883                     183          ADD.L   D3,D4               Adds number to new total
000010C4                           184          
000010C4  7600                     185          MOVE.L  #0,D3               Clears D3 to prevent errors
000010C6                           186          
000010C6  BA3C 0000                187          CMP.B   #0,D5               Compares counter to 0    
000010CA  66DE                     188          BNE     IOLOOP              Otherwise will loop
000010CC  4E75                     189          RTS
000010CE                           190  
000010CE                           191  * Error message for start address greater than end address
000010CE                           192  IOERROR1
000010CE  43F9 000033FC            193          LEA     MIOERR1,A1
000010D4  103C 000D                194          MOVE.B  #13,D0
000010D8  4E4F                     195          TRAP    #15
000010DA  6000 FF2C                196          BRA     IOSTART
000010DE                           197  
000010DE                           198  * Error message if user input address is longer than longword
000010DE                           199  IOERROR2
000010DE  43F9 00003434            200          LEA     MIOERR2,A1
000010E4  103C 000D                201          MOVE.B  #13,D0
000010E8  4E4F                     202          TRAP    #15
000010EA  224B                     203          MOVEA.L A3,A1
000010EC  6096                     204          BRA     IOGETADDR
000010EE                           205  
000010EE                           206  * Error message if user enters non-valid hex numbers
000010EE                           207  IOERROR3
000010EE  43F9 00003467            208          LEA     MIOERR3,A1
000010F4  103C 000D                209          MOVE.B  #13,D0
000010F8  4E4F                     210          TRAP    #15
000010FA  224B                     211          MOVEA.L A3,A1
000010FC  6086                     212          BRA     IOGETADDR
000010FE                           213  
000010FE                           214  * Error message for odd numbered addresses
000010FE                           215  IOERROR4
000010FE  43F9 00003483            216          LEA     MIOERR4,A1
00001104  103C 000D                217          MOVE.B  #13,D0
00001108  4E4F                     218          TRAP    #15
0000110A  6000 FEFC                219          BRA     IOSTART
0000110E                           220  
0000110E                           221  ******************************************** displays address location***********************************************
0000110E                           222  * This displays the address location of the op-code being worked on
0000110E                           223  * A6 is used as current address
0000110E                           224  DISPADDR
0000110E  23C7 000035EE            225          MOVE.L  D7,startaddr
00001114  23C4 000035F2            226          MOVE.L  D4,endaddr
0000111A  6100 1E96                227          BSR     CLRDN
0000111E  2C79 000035EE            228          MOVEA.L startaddr,A6        Moves starting addr into A6 register
00001124  13FC 001E 000035ED       229          MOVE.B  #dispnum,dispcount  Sets display line counter
0000112C                           230  
0000112C  43F9 00003288            231          LEA     NEWLINE,A1          Creates a new line in output window
00001132  103C 000E                232          MOVE.B  #14,D0
00001136  4E4F                     233          TRAP    #15
00001138                           234  
00001138                           235  NEWADDR
00001138  2E0E                     236          MOVE.L  A6,D7               Loads the current address into D7
0000113A  BEB9 000035F2            237          CMP.L   endaddr,D7          Compares current address to end address
00001140  6E00 20D6                238          BGT     ASK4REPEAT          Branches to done if current address > end address
00001144  45F9 000011D8            239          LEA     DISPADDREND,A2
0000114A                           240  
0000114A                           241  ************************************************
0000114A                           242  * Displays address as HEX
0000114A                           243  * INPUT: address stored into D7
0000114A                           244  * OUTPUT: prints hex address to output window
0000114A                           245  DISPADDRSTART
0000114A  1C3C 0002                246          MOVE.B  #2,D6               D6 is a counter, used for looping
0000114E  2407                     247          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
00001150  4842                     248          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
00001152  6000 0004                249          BRA     DISPADDR2           Skips the second part to do later
00001156                           250  
00001156                           251  DISPADDR1
00001156  3407                     252          MOVE.W  D7,D2
00001158                           253  DISPADDR2
00001158  3202                     254          MOVE.W  D2,D1               D1 will be the first byte of the word
0000115A  3602                     255          MOVE.W  D2,D3               D3 will be the second byte of the word
0000115C  3802                     256          MOVE.W  D2,D4               D4 will be the third byte of the word
0000115E  3A02                     257          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001160                           258  
00001160  E049                     259          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
00001162  E849                     260          LSR.W   #4,D1
00001164  E94B                     261          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001166  E04B                     262          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001168  E84B                     263          LSR.W   #4,D3
0000116A  E14C                     264          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
0000116C  E04C                     265          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
0000116E  E84C                     266          LSR.W   #4,D4
00001170  E14D                     267          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
00001172  E94D                     268          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001174  E04D                     269          LSR.W   #8,D5
00001176  E84D                     270          LSR.W   #4,D5
00001178                           271          
00001178                           272          
00001178  47F9 0000118C            273          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
0000117E  B23C 0009                274          CMP.B   #9,D1               Compares digit to 9
00001182  6E00 1F0A                275          BGT     CONV                Print out letter representation if greater than 9
00001186                           276  
00001186  103C 0003                277          MOVE.B  #3,D0               Displays digit if it is less than A
0000118A  4E4F                     278          TRAP    #15
0000118C                           279          
0000118C                           280  DISPADDR3   
0000118C  1203                     281          MOVE.B  D3,D1               Displays digit in 1's place second
0000118E                           282  
0000118E                           283          *   converts digits 10+ into letters
0000118E  47F9 000011A2            284          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001194  B23C 0009                285          CMP.B   #9,D1               Compares digit to 9
00001198  6E00 1EF4                286          BGT     CONV                Print out letter representation if greater than 9
0000119C                           287          
0000119C  103C 0003                288          MOVE.B  #3,D0               Displays digit if it is less than A
000011A0  4E4F                     289          TRAP    #15
000011A2                           290  
000011A2                           291  DISPADDR4
000011A2  1204                     292          MOVE.B  D4,D1               Displays digit in 1's place second
000011A4                           293  
000011A4                           294          *   converts digits 10+ into letters
000011A4  47F9 000011B8            295          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
000011AA  B23C 0009                296          CMP.B   #9,D1               Compares digit to 9
000011AE  6E00 1EDE                297          BGT     CONV                Print out letter representation if greater than 9
000011B2                           298          
000011B2  103C 0003                299          MOVE.B  #3,D0               Displays digit if it is less than A
000011B6  4E4F                     300          TRAP    #15
000011B8                           301  
000011B8                           302  DISPADDR5
000011B8  1205                     303          MOVE.B  D5,D1               Displays digit in 1's place second
000011BA                           304  
000011BA                           305          *   converts digits 10+ into letters
000011BA  47F9 000011CE            306          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
000011C0  B23C 0009                307          CMP.B   #9,D1               Compares digit to 9
000011C4  6E00 1EC8                308          BGT     CONV                Print out letter representation if greater than 9
000011C8                           309          
000011C8  103C 0003                310          MOVE.B  #3,D0               Displays digit if it is less than A
000011CC  4E4F                     311          TRAP    #15
000011CE                           312          
000011CE                           313  DISPADDR6
000011CE                           314  * Display counter -- creates new line every 8 bytes
000011CE                           315          * D6 is used as counter
000011CE                           316          
000011CE  5306                     317          SUB.B   #1,D6
000011D0  BC3C 0000                318          CMP.B   #0,D6
000011D4  6680                     319          BNE     DISPADDR1
000011D6                           320  
000011D6  4ED2                     321          JMP     (A2)                Jumps to address stored in A2 when complete
000011D8                           322  
000011D8                           323  DISPADDREND
000011D8  43F9 0000328B            324          LEA     TAB,A1
000011DE  103C 000E                325          MOVE.B  #14,D0
000011E2  4E4F                     326          TRAP    #15
000011E4                           327          
000011E4                           328  *********************************************************************************************************************
000011E4                           329  * Splits the first byte of the op code into nibbles
000011E4                           330  * then sends it to the branch-table to jump to the appropiate section to be decoded
000011E4                           331  
000011E4  4281                     332          CLR.L   D1                  Clears the data registers
000011E6  4282                     333          CLR.L   D2
000011E8  4283                     334          CLR.L   D3
000011EA  4284                     335          CLR.L   D4
000011EC  4285                     336          CLR.L   D5
000011EE  4286                     337          CLR.L   D6
000011F0  3C16                     338          MOVE.W  (A6),D6
000011F2  141E                     339          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000011F4                           340    
000011F4  1E02                     341          MOVE.B  D2,D7
000011F6  E14F                     342          LSL.W   #8,D7
000011F8                           343          
000011F8  1602                     344          MOVE.B  D2,D3               Copies data at D2 to D3
000011FA                           345          *   this gets digit in 10's place
000011FA  E80B                     346          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011FC                           347          *   this gets digit in 1's place
000011FC  E90A                     348          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011FE  E80A                     349          LSR.B   #4,D2               Shifts back right into 1's place
00001200                           350          
00001200                           351          *   D3 holds digit in 10's place
00001200                           352          *   D2 holds digit in 1's place
00001200                           353  
00001200                           354          *   Moves second nibble to D5 to be used later
00001200  1A02                     355          MOVE.B  D2,D5
00001202  13C3 000035F6            356          MOVE.B  D3,bit0
00001208                           357          *   Goes to a branch-table to figure out which op code it is
00001208  6000 0002                358          BRA     CODE
0000120C                           359  
0000120C                           360  ******************************************************************************************************
0000120C                           361  *   This is where the table goes to detirmine which op-code to use
0000120C                           362  CODE    
0000120C  B63C 0000                363          CMP.B   #$0,D3              Goes to immediate operation section
00001210  6700 0F0A                364          BEQ     IMD
00001214  B63C 0004                365          CMP.B   #$4,D3              Goes to miscellaneous section
00001218  6700 104C                366          BEQ     MISC
0000121C  B63C 0005                367          CMP.B   #$5,D3
00001220  6700 12CE                368          BEQ     ADDQ                Goes to addq section
00001224  B63C 0006                369          CMP.B   #$6,D3
00001228  6700 0E3E                370          BEQ     BCC
0000122C  B63C 0009                371          CMP.B   #$9,D3              Goes to sub section
00001230  6700 16A6                372          BEQ     SUB
00001234  B63C 000C                373          CMP.B   #$C,D3              Goes to sub but displays as AND
00001238  6700 169E                374          BEQ     SUB
0000123C  B63C 000D                375          CMP.B   #$D,D3              Goes to sub but displays as ADD
00001240  6700 1696                376          BEQ     SUB
00001244  B63C 000B                377          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
00001248  6700 168E                378          BEQ     SUB
0000124C  B63C 0001                379          CMP.B   #$1,D3
00001250  6700 02C4                380          BEQ     MOVB                Goes to movb
00001254  B63C 0003                381          CMP.B   #$3,D3
00001258  6700 00FC                382          BEQ     MOVW                Goes to movb
0000125C  B63C 0002                383          CMP.B   #$2,D3
00001260  6700 01D4                384          BEQ     MOVL                Goes to movb
00001264  B63C 0008                385          CMP.B   #$8,D3
00001268  6700 08E4                386          BEQ     DIVSW               Goes to divsw
0000126C  B63C 000E                387          CMP.B   #$E,D3
00001270  6700 0AC0                388          BEQ     LSLR                Goes to divsw
00001274                           389  
00001274  6000 1D4E                390          BRA     INVOPCODE
00001278                           391  
00001278                           392  ******************************************************************************************************
00001278                           393  * 
00001278                           394  JSR
00001278  43F9 000032BA            395          LEA MJSR,A1
0000127E  103C 000E                396          MOVE.B  #14,D0
00001282  4E4F                     397          TRAP    #15 
00001284                           398          
00001284  1406                     399          MOVE.B  D6,D2
00001286  EB0A                     400          LSL.B   #5,D2
00001288  EA0A                     401          LSR.B   #5,D2
0000128A  13C2 000035FA            402          MOVE.B  D2,bit4
00001290                           403          
00001290  1406                     404          MOVE.B  D6,D2
00001292  E50A                     405          LSL.B   #2,D2
00001294  EA0A                     406          LSR.B   #5,D2
00001296  13C2 000035F9            407          MOVE.B  D2,bit3
0000129C                           408  
0000129C  183C 0003                409          MOVE.B  #$3,D4
000012A0                           410  
000012A0  0C39 0002 000035F9       411          CMP.B   #$2,bit3
000012A8  6700 0476                412          BEQ     MOVEIAN1
000012AC                           413          
000012AC  43F9 0000328B            414          LEA     TAB,A1
000012B2  323C 0003                415          MOVE    #3,D1
000012B6  4E4F                     416          TRAP    #15
000012B8                           417          
000012B8  0C39 0007 000035F9       418          CMP.B   #$7,bit3
000012C0  6700 0394                419          BEQ     ADDIMDDES
000012C4                           420          
000012C4                           421  BTST 
000012C4  43F9 000032BE            422          LEA MBTST,A1
000012CA  103C 000E                423          MOVE.B  #14,D0
000012CE  4E4F                     424          TRAP    #15 
000012D0                           425          
000012D0  1406                     426          MOVE.B  D6,D2
000012D2  EB0A                     427          LSL.B   #5,D2
000012D4  EA0A                     428          LSR.B   #5,D2
000012D6  13C2 000035F7            429          MOVE.B  D2,bit1
000012DC                           430          
000012DC  1406                     431          MOVE.B  D6,D2
000012DE  E50A                     432          LSL.B   #2,D2
000012E0  EA0A                     433          LSR.B   #5,D2
000012E2  13C2 000035F8            434          MOVE.B  D2,bit2
000012E8                           435          
000012E8  3406                     436          MOVE.W  D6,D2
000012EA  E94A                     437          LSL.W   #4,D2
000012EC  E04A                     438          LSR.W   #8,D2
000012EE  EA4A                     439          LSR.W   #5,D2
000012F0  13C2 000035F9            440          MOVE.B  D2,bit3
000012F6                           441          
000012F6  3406                     442          MOVE.W  D6,D2
000012F8  EF4A                     443          LSL.W   #7,D2
000012FA  E04A                     444          LSR.W   #8,D2
000012FC  EE4A                     445          LSR.W   #7,D2
000012FE  13C2 000035F6            446          MOVE.B  D2,bit0
00001304                           447          
00001304  0C39 0000 000035F6       448          CMP.B   #0,bit0
0000130C  6700 002E                449          BEQ     BTSTMEM
00001310                           450          
00001310  43F9 0000328B            451          LEA TAB,A1
00001316  103C 000E                452          MOVE.B  #14,D0
0000131A  4E4F                     453          TRAP    #15
0000131C                           454  
0000131C  43F9 000032A3            455          LEA DISPD,A1
00001322  103C 000E                456          MOVE.B  #14,D0
00001326  4E4F                     457          TRAP    #15
00001328                           458          
00001328  1A3C 0004                459          MOVE.B   #$4,D5
0000132C                           460          
0000132C  1239 000035F9            461          MOVE.B  bit3,D1
00001332  103C 0003                462          MOVE.B  #3,D0
00001336  4E4F                     463          TRAP    #15
00001338                           464          
00001338  6000 02C4                465          BRA HANDLEDES
0000133C                           466          
0000133C                           467  BTSTMEM
0000133C  43F9 0000328B            468          LEA TAB,A1
00001342  123C 0003                469          MOVE.B  #3,D1
00001346  4E4F                     470          TRAP    #15
00001348                           471          
00001348  183C 0001                472          MOVE.B  #$1,D4
0000134C  45F9 000015FE            473          LEA     HANDLEDES,A2
00001352  6000 1BF8                474          BRA     DISPEA
00001356                           475          
00001356                           476  MOVW
00001356  E20A                     477          LSR.B   #1,D2
00001358  13C2 000035F7            478          MOVE.B  D2,bit1
0000135E                           479          
0000135E  1416                     480          MOVE.B  (A6),D2
00001360  EB0A                     481          LSL.B   #5,D2
00001362  EA0A                     482          LSR.B   #5,D2
00001364  13C2 000035FA            483          MOVE.B  D2,bit4
0000136A                           484          
0000136A  141E                     485          MOVE.B  (A6)+,D2
0000136C  E50A                     486          LSL.B   #2,D2
0000136E  EA0A                     487          LSR.B   #5,D2
00001370  13C2 000035F9            488          MOVE.B  D2,bit3
00001376                           489          
00001376  EF4E                     490          LSL.W   #7,D6
00001378  E04E                     491          LSR.W   #8,D6 
0000137A  EA4E                     492          LSR.W   #5,D6 
0000137C  13C6 000035F8            493          MOVE.B  D6,bit2
00001382                           494  
00001382  0C39 0001 000035F8       495          CMP.B   #$1,bit2
0000138A  6700 0056                496          BEQ     MOVEAW
0000138E                           497  
0000138E  43F9 000032ED            498          LEA MMOVEW,A1
00001394  103C 000E                499          MOVE.B  #14,D0
00001398  4E4F                     500          TRAP    #15 
0000139A                           501  
0000139A  0C39 0000 000035F9       502          CMP.B   #$0,bit3           
000013A2  6700 0558                503          BEQ     MOVBDN1
000013A6  0C39 0001 000035F9       504          CMP.B   #$1,bit3
000013AE  6700 02FC                505          BEQ     MOVEAN1
000013B2  0C39 0002 000035F9       506          CMP.B   #$2,bit3
000013BA  6700 0364                507          BEQ     MOVEIAN1
000013BE  0C39 0003 000035F9       508          CMP.B   #$3,bit3
000013C6  6700 03EC                509          BEQ     MOVEIANI1
000013CA  0C39 0004 000035F9       510          CMP.B   #$4,bit3
000013D2  6700 0488                511          BEQ     MOVEIAND1
000013D6  0C39 0007 000035F9       512          CMP.B   #$7,bit3
000013DE  6700 01BC                513          BEQ     ADDIMD
000013E2                           514  
000013E2                           515  MOVEAW
000013E2  43F9 000032FB            516          LEA MMOVEAW,A1
000013E8  103C 000E                517          MOVE.B  #14,D0
000013EC  4E4F                     518          TRAP    #15 
000013EE                           519          
000013EE  0C39 0000 000035F9       520          CMP.B   #$0,bit3           
000013F6  6700 0504                521          BEQ     MOVBDN1
000013FA  0C39 0001 000035F9       522          CMP.B   #$1,bit3
00001402  6700 02A8                523          BEQ     MOVEAN1
00001406  0C39 0002 000035F9       524          CMP.B   #$2,bit3
0000140E  6700 0310                525          BEQ     MOVEIAN1
00001412  0C39 0003 000035F9       526          CMP.B   #$3,bit3
0000141A  6700 0398                527          BEQ     MOVEIANI1
0000141E  0C39 0004 000035F9       528          CMP.B   #$4,bit3
00001426  6700 0434                529          BEQ     MOVEIAND1
0000142A  0C39 0007 000035F9       530          CMP.B   #$7,bit3
00001432  6700 0168                531          BEQ     ADDIMD
00001436                           532  
00001436                           533  MOVL
00001436  E20A                     534          LSR.B   #1,D2
00001438  13C2 000035F7            535          MOVE.B  D2,bit1
0000143E                           536          
0000143E  1416                     537          MOVE.B  (A6),D2
00001440  EB0A                     538          LSL.B   #5,D2
00001442  EA0A                     539          LSR.B   #5,D2
00001444  13C2 000035FA            540          MOVE.B  D2,bit4
0000144A                           541          
0000144A  141E                     542          MOVE.B  (A6)+,D2
0000144C  E50A                     543          LSL.B   #2,D2
0000144E  EA0A                     544          LSR.B   #5,D2
00001450  13C2 000035F9            545          MOVE.B  D2,bit3
00001456                           546          
00001456  EF4E                     547          LSL.W   #7,D6
00001458  E04E                     548          LSR.W   #8,D6 
0000145A  EA4E                     549          LSR.W   #5,D6 
0000145C  13C6 000035F8            550          MOVE.B  D6,bit2
00001462                           551          
00001462  0C39 0001 000035F8       552          CMP.B   #$1,bit2
0000146A  6700 0056                553          BEQ     MOVEAL
0000146E                           554  
0000146E  43F9 000032F4            555          LEA MMOVEL,A1
00001474  103C 000E                556          MOVE.B  #14,D0
00001478  4E4F                     557          TRAP    #15 
0000147A                           558          
0000147A  0C39 0000 000035F9       559          CMP.B   #$0,bit3           
00001482  6700 0478                560          BEQ     MOVBDN1
00001486  0C39 0001 000035F9       561          CMP.B   #$1,bit3
0000148E  6700 021C                562          BEQ     MOVEAN1
00001492  0C39 0002 000035F9       563          CMP.B   #$2,bit3
0000149A  6700 0284                564          BEQ     MOVEIAN1
0000149E  0C39 0003 000035F9       565          CMP.B   #$3,bit3
000014A6  6700 030C                566          BEQ     MOVEIANI1
000014AA  0C39 0004 000035F9       567          CMP.B   #$4,bit3
000014B2  6700 03A8                568          BEQ     MOVEIAND1
000014B6  0C39 0007 000035F9       569          CMP.B   #$7,bit3
000014BE  6700 00DC                570          BEQ     ADDIMD
000014C2                           571  
000014C2                           572  MOVEAL
000014C2  43F9 00003303            573          LEA MMOVEAL,A1
000014C8  103C 000E                574          MOVE.B  #14,D0
000014CC  4E4F                     575          TRAP    #15 
000014CE                           576          
000014CE  0C39 0000 000035F9       577          CMP.B   #$0,bit3           
000014D6  6700 0424                578          BEQ     MOVBDN1
000014DA  0C39 0001 000035F9       579          CMP.B   #$1,bit3
000014E2  6700 01C8                580          BEQ     MOVEAN1
000014E6  0C39 0002 000035F9       581          CMP.B   #$2,bit3
000014EE  6700 0230                582          BEQ     MOVEIAN1
000014F2  0C39 0003 000035F9       583          CMP.B   #$3,bit3
000014FA  6700 02B8                584          BEQ     MOVEIANI1
000014FE  0C39 0004 000035F9       585          CMP.B   #$4,bit3
00001506  6700 0354                586          BEQ     MOVEIAND1
0000150A  0C39 0007 000035F9       587          CMP.B   #$7,bit3
00001512  6700 0088                588          BEQ     ADDIMD        
00001516                           589  
00001516                           590  MOVB
00001516  43F9 000032E6            591          LEA MMOVEB,A1
0000151C  103C 000E                592          MOVE.B  #14,D0
00001520  4E4F                     593          TRAP    #15 
00001522                           594          
00001522  E20A                     595          LSR.B   #1,D2
00001524  13C2 000035F7            596          MOVE.B  D2,bit1
0000152A                           597          
0000152A  1416                     598          MOVE.B  (A6),D2
0000152C  EB0A                     599          LSL.B   #5,D2
0000152E  EA0A                     600          LSR.B   #5,D2
00001530  13C2 000035FA            601          MOVE.B  D2,bit4
00001536                           602          
00001536  141E                     603          MOVE.B  (A6)+,D2
00001538  E50A                     604          LSL.B   #2,D2
0000153A  EA0A                     605          LSR.B   #5,D2
0000153C  13C2 000035F9            606          MOVE.B  D2,bit3
00001542                           607          
00001542  EF4E                     608          LSL.W   #7,D6
00001544  E04E                     609          LSR.W   #8,D6 
00001546  EA4E                     610          LSR.W   #5,D6 
00001548  13C6 000035F8            611          MOVE.B  D6,bit2
0000154E                           612          
0000154E                           613      
0000154E  4285                     614          CLR.L   D5
00001550                           615          
00001550  0C39 0000 000035F9       616          CMP.B   #$0,bit3           
00001558  6700 03A2                617          BEQ     MOVBDN1
0000155C  0C39 0001 000035F9       618          CMP.B   #$1,bit3
00001564  6700 0146                619          BEQ     MOVEAN1
00001568  0C39 0002 000035F9       620          CMP.B   #$2,bit3
00001570  6700 01AE                621          BEQ     MOVEIAN1
00001574  0C39 0003 000035F9       622          CMP.B   #$3,bit3
0000157C  6700 0236                623          BEQ     MOVEIANI1
00001580  0C39 0004 000035F9       624          CMP.B   #$4,bit3
00001588  6700 02D2                625          BEQ     MOVEIAND1
0000158C  0C39 0007 000035F9       626          CMP.B   #$7,bit3
00001594  6700 0006                627          BEQ     ADDIMD
00001598                           628          
00001598  6000 1A2C                629          BRA     INVOP
0000159C                           630  
0000159C                           631  ADDIMD
0000159C  43F9 0000328B            632      LEA     TAB,A1
000015A2  103C 000E                633      MOVE.B  #14,D0
000015A6  4E4F                     634      TRAP    #15
000015A8                           635      
000015A8  0C39 0000 000035FA       636      CMP.B   #$0,bit4
000015B0  6700 001A                637      BEQ     ADDIMD0
000015B4  0C39 0001 000035FA       638      CMP.B   #$1,bit4
000015BC  6700 001C                639      BEQ     ADDIMD1
000015C0  0C39 0004 000035FA       640      CMP.B   #$4,bit4
000015C8  6700 001E                641      BEQ     ADDIMD4
000015CC                           642  
000015CC                           643  ADDIMD0
000015CC  183C 0001                644      MOVE.B  #$1,D4
000015D0  45F9 000015FE            645      LEA     HANDLEDES,A2
000015D6  6000 1974                646      BRA     DISPEA
000015DA                           647  ADDIMD1 
000015DA  183C 0002                648      MOVE.B  #$2,D4
000015DE  45F9 000015FE            649      LEA     HANDLEDES,A2
000015E4  6000 1966                650      BRA     DISPEA
000015E8                           651  ADDIMD4
000015E8  43F9 00003299            652      LEA     HASH,A1
000015EE  103C 000E                653      MOVE.B  #14,D0
000015F2  4E4F                     654      TRAP    #15
000015F4                           655      
000015F4  45F9 000015FE            656      LEA     HANDLEDES,A2
000015FA  6000 1950                657      BRA     DISPEA 
000015FE                           658      
000015FE                           659  HANDLEDES
000015FE  43F9 0000328F            660      LEA     COMMA,A1
00001604  103C 000E                661      MOVE.B  #14,D0
00001608  4E4F                     662      TRAP    #15
0000160A                           663      
0000160A  0C39 0000 000035F8       664      CMP.B   #$0,bit2
00001612  6700 0488                665      BEQ     MOVBDN2
00001616  0C39 0001 000035F8       666      CMP.B   #$1,bit2
0000161E  6700 03AC                667      BEQ     MOVEAN2
00001622  0C39 0002 000035F8       668      CMP.B   #$2,bit2 
0000162A  6700 03BC                669      BEQ     MOVIAN2
0000162E  0C39 0003 000035F8       670      CMP.B   #$3,bit2 
00001636  6700 03E4                671      BEQ     MOVIANI2
0000163A  0C39 0004 000035F8       672      CMP.B   #$4,bit2 
00001642  6700 0418                673      BEQ     MOVIAND2
00001646  BA3C 0005                674      CMP.B   #$5,D5
0000164A  6700 0450                675      BEQ     MOVBDN2
0000164E  BA3C 0007                676      CMP.B   #$7,D5
00001652  6700 0002                677      BEQ     ADDIMDDES
00001656                           678  
00001656                           679  ADDIMDDES
00001656  0C39 0000 000035FA       680      CMP.B   #$0,bit4
0000165E  6700 001A                681      BEQ     ADDIMDDES0
00001662  0C39 0001 000035FA       682      CMP.B   #$1,bit4
0000166A  6700 001C                683      BEQ     ADDIMDDES1
0000166E  0C39 0004 000035FA       684      CMP.B   #$4,bit4
00001676  6700 001E                685      BEQ     ADDIMDDES4
0000167A                           686      
0000167A                           687  ADDIMDDES0
0000167A  183C 0001                688      MOVE.B  #$1,D4
0000167E  45F9 00003038            689      LEA     ENDNEWLINE,A2
00001684  6000 18C6                690      BRA     DISPEA
00001688                           691      
00001688                           692  ADDIMDDES1
00001688  183C 0002                693      MOVE.B  #$2,D4
0000168C  45F9 00003038            694      LEA     ENDNEWLINE,A2
00001692  6000 18B8                695      BRA     DISPEA
00001696                           696      
00001696                           697  ADDIMDDES4    
00001696  43F9 00003299            698      LEA     HASH,A1
0000169C  103C 000E                699      MOVE.B  #14,D0
000016A0  4E4F                     700      TRAP    #15
000016A2                           701      
000016A2  45F9 00003038            702      LEA     ENDNEWLINE,A2
000016A8  6000 18A2                703      BRA     DISPEA 
000016AC                           704          
000016AC                           705  MOVEAN1
000016AC  43F9 0000328B            706      LEA TAB,A1
000016B2  103C 000E                707      MOVE.B  #14,D0
000016B6  4E4F                     708      TRAP    #15
000016B8                           709  
000016B8  43F9 0000329D            710      LEA DISPA,A1
000016BE  103C 000E                711      MOVE.B  #14,D0
000016C2  4E4F                     712      TRAP    #15
000016C4                           713      
000016C4  1239 000035FA            714      MOVE.B  bit4,D1
000016CA  103C 0003                715      MOVE.B  #3,D0
000016CE  4E4F                     716      TRAP    #15
000016D0                           717      
000016D0  43F9 0000328F            718      LEA COMMA,A1
000016D6  103C 000E                719      MOVE.B  #14,D0
000016DA  4E4F                     720      TRAP    #15
000016DC                           721      
000016DC  0C39 0000 000035F8       722      CMP.B   #$0,bit2
000016E4  6700 03B6                723      BEQ     MOVBDN2
000016E8  0C39 0001 000035F8       724      CMP.B   #$1,bit2
000016F0  6700 02DA                725      BEQ     MOVEAN2
000016F4  0C39 0002 000035F8       726      CMP.B   #$2,bit2 
000016FC  6700 02EA                727      BEQ     MOVIAN2
00001700  0C39 0003 000035F8       728      CMP.B   #$3,bit2 
00001708  6700 0312                729      BEQ     MOVIANI2
0000170C  0C39 0004 000035F8       730      CMP.B   #$4,bit2 
00001714  6700 0346                731      BEQ     MOVIAND2
00001718  BA3C 0005                732      CMP.B   #$5,D5
0000171C  6700 037E                733      BEQ     MOVBDN2
00001720                           734      
00001720                           735  MOVEIAN1
00001720  43F9 0000328B            736      LEA TAB,A1
00001726  103C 000E                737      MOVE.B  #14,D0
0000172A  4E4F                     738      TRAP    #15
0000172C                           739      
0000172C  43F9 00003291            740      LEA OPENBRA,A1
00001732  103C 000E                741      MOVE.B  #14,D0
00001736  4E4F                     742      TRAP    #15
00001738                           743  
00001738  43F9 0000329D            744      LEA DISPA,A1
0000173E  103C 000E                745      MOVE.B  #14,D0
00001742  4E4F                     746      TRAP    #15
00001744                           747      
00001744  1239 000035FA            748      MOVE.B  bit4,D1
0000174A  103C 0003                749      MOVE.B  #3,D0
0000174E  4E4F                     750      TRAP    #15
00001750                           751      
00001750  43F9 00003293            752      LEA CLOSEBRA,A1
00001756  103C 000E                753      MOVE.B  #14,D0
0000175A  4E4F                     754      TRAP    #15
0000175C                           755      
0000175C  B83C 0003                756      CMP.B   #$3,D4
00001760  6700 18D6                757      BEQ     ENDNEWLINE
00001764                           758      
00001764  43F9 0000328F            759      LEA COMMA,A1
0000176A  103C 000E                760      MOVE.B  #14,D0
0000176E  4E4F                     761      TRAP    #15
00001770                           762      
00001770  0C39 0000 000035F8       763      CMP.B   #$0,bit2
00001778  6700 0322                764      BEQ     MOVBDN2
0000177C  0C39 0001 000035F8       765      CMP.B   #$1,bit2
00001784  6700 0246                766      BEQ     MOVEAN2
00001788  0C39 0002 000035F8       767      CMP.B   #$2,bit2 
00001790  6700 0256                768      BEQ     MOVIAN2
00001794  0C39 0003 000035F8       769      CMP.B   #$3,bit2 
0000179C  6700 027E                770      BEQ     MOVIANI2
000017A0  0C39 0004 000035F8       771      CMP.B   #$4,bit2 
000017A8  6700 02B2                772      BEQ     MOVIAND2
000017AC  BA3C 0005                773      CMP.B   #$5,D5
000017B0  6700 02EA                774      BEQ     MOVBDN2
000017B4                           775  
000017B4                           776  MOVEIANI1
000017B4  43F9 0000328B            777      LEA TAB,A1
000017BA  103C 000E                778      MOVE.B  #14,D0
000017BE  4E4F                     779      TRAP    #15
000017C0                           780      
000017C0  43F9 00003291            781      LEA OPENBRA,A1
000017C6  103C 000E                782      MOVE.B  #14,D0
000017CA  4E4F                     783      TRAP    #15
000017CC                           784  
000017CC  43F9 0000329D            785      LEA DISPA,A1
000017D2  103C 000E                786      MOVE.B  #14,D0
000017D6  4E4F                     787      TRAP    #15
000017D8                           788      
000017D8  1239 000035FA            789      MOVE.B  bit4,D1
000017DE  103C 0003                790      MOVE.B  #3,D0
000017E2  4E4F                     791      TRAP    #15
000017E4                           792      
000017E4  43F9 00003293            793      LEA CLOSEBRA,A1
000017EA  103C 000E                794      MOVE.B  #14,D0
000017EE  4E4F                     795      TRAP    #15
000017F0                           796      
000017F0  43F9 00003295            797      LEA POS,A1
000017F6  103C 000E                798      MOVE.B  #14,D0
000017FA  4E4F                     799      TRAP    #15
000017FC                           800      
000017FC  BA3C 0003                801      CMP.B   #$3,D5
00001800  6700 1836                802      BEQ     ENDNEWLINE
00001804                           803             
00001804  BA3C 0004                804      CMP.B   #$4,D5
00001808  6700 182E                805      BEQ     ENDNEWLINE
0000180C                           806          
0000180C                           807          
0000180C  43F9 0000328F            808      LEA COMMA,A1
00001812  103C 000E                809      MOVE.B  #14,D0
00001816  4E4F                     810      TRAP    #15
00001818                           811      
00001818  0C39 0000 000035F8       812      CMP.B   #$0,bit2
00001820  6700 027A                813      BEQ     MOVBDN2
00001824  0C39 0001 000035F8       814      CMP.B   #$1,bit2
0000182C  6700 019E                815      BEQ     MOVEAN2
00001830  0C39 0002 000035F8       816      CMP.B   #$2,bit2 
00001838  6700 01AE                817      BEQ     MOVIAN2
0000183C  0C39 0003 000035F8       818      CMP.B   #$3,bit2 
00001844  6700 01D6                819      BEQ     MOVIANI2
00001848  0C39 0004 000035F8       820      CMP.B   #$4,bit2 
00001850  6700 020A                821      BEQ     MOVIAND2
00001854  BA3C 0005                822      CMP.B   #$5,D5
00001858  6700 0242                823      BEQ     MOVBDN2
0000185C                           824  
0000185C                           825  MOVEIAND1
0000185C  43F9 0000328B            826      LEA TAB,A1
00001862  103C 000E                827      MOVE.B  #14,D0
00001866  4E4F                     828      TRAP    #15
00001868                           829      
00001868  43F9 00003297            830      LEA NEG,A1
0000186E  103C 000E                831      MOVE.B  #14,D0
00001872  4E4F                     832      TRAP    #15
00001874                           833      
00001874  43F9 00003291            834      LEA OPENBRA,A1
0000187A  103C 000E                835      MOVE.B  #14,D0
0000187E  4E4F                     836      TRAP    #15
00001880                           837  
00001880  43F9 0000329D            838      LEA DISPA,A1
00001886  103C 000E                839      MOVE.B  #14,D0
0000188A  4E4F                     840      TRAP    #15
0000188C                           841      
0000188C  1239 000035FA            842      MOVE.B  bit4,D1
00001892  103C 0003                843      MOVE.B  #3,D0
00001896  4E4F                     844      TRAP    #15
00001898                           845      
00001898  43F9 00003293            846      LEA CLOSEBRA,A1
0000189E  103C 000E                847      MOVE.B  #14,D0
000018A2  4E4F                     848      TRAP    #15
000018A4                           849      
000018A4  BA3C 0004                850      CMP.B   #$4,D5
000018A8  6700 178E                851      BEQ     ENDNEWLINE
000018AC                           852      
000018AC  43F9 0000328F            853      LEA COMMA,A1
000018B2  103C 000E                854      MOVE.B  #14,D0
000018B6  4E4F                     855      TRAP    #15
000018B8                           856      
000018B8  0C39 0000 000035F8       857      CMP.B   #$0,bit2
000018C0  6700 01DA                858      BEQ     MOVBDN2
000018C4  0C39 0001 000035F8       859      CMP.B   #$1,bit2
000018CC  6700 00FE                860      BEQ     MOVEAN2
000018D0  0C39 0002 000035F8       861      CMP.B   #$2,bit2 
000018D8  6700 010E                862      BEQ     MOVIAN2
000018DC  0C39 0003 000035F8       863      CMP.B   #$3,bit2 
000018E4  6700 0136                864      BEQ     MOVIANI2
000018E8  0C39 0004 000035F8       865      CMP.B   #$4,bit2 
000018F0  6700 016A                866      BEQ     MOVIAND2
000018F4  BA3C 0005                867      CMP.B   #$5,D5
000018F8  6700 01A2                868      BEQ     MOVBDN2
000018FC                           869  
000018FC                           870  MOVBDN1
000018FC  43F9 0000328B            871      LEA TAB,A1
00001902  103C 000E                872      MOVE.B  #14,D0
00001906  4E4F                     873      TRAP    #15
00001908                           874  
00001908  BA3C 0006                875      CMP.B   #$6,D5             * Data Reg for LSLR
0000190C  6700 007A                876      BEQ     LSLRSRCD
00001910                           877  
00001910  43F9 000032A3            878      LEA DISPD,A1
00001916  103C 000E                879      MOVE.B  #14,D0
0000191A  4E4F                     880      TRAP    #15
0000191C                           881      
0000191C  1239 000035FA            882      MOVE.B  bit4,D1
00001922  103C 0003                883      MOVE.B  #3,D0
00001926  4E4F                     884      TRAP    #15
00001928                           885  
00001928  BA3C 0004                886      CMP.B   #$4,D5
0000192C  6700 0192                887      BEQ     ENDNLINC
00001930                           888  
00001930  43F9 0000328F            889      LEA COMMA,A1
00001936  103C 000E                890      MOVE.B  #14,D0
0000193A  4E4F                     891      TRAP    #15
0000193C                           892  
0000193C  BA3C 0006                893      CMP.B   #$6,D5             * Data Reg for LSLR
00001940  6700 006E                894      BEQ     LSLRDESD
00001944  0C39 0000 000035F8       895      CMP.B   #$0,bit2
0000194C  6700 014E                896      BEQ     MOVBDN2
00001950  0C39 0001 000035F8       897      CMP.B   #$1,bit2
00001958  6700 0072                898      BEQ     MOVEAN2
0000195C  0C39 0002 000035F8       899      CMP.B   #$2,bit2 
00001964  6700 0082                900      BEQ     MOVIAN2
00001968  0C39 0003 000035F8       901      CMP.B   #$3,bit2 
00001970  6700 00AA                902      BEQ     MOVIANI2
00001974  0C39 0004 000035F8       903      CMP.B   #$4,bit2 
0000197C  6700 00DE                904      BEQ     MOVIAND2
00001980  BA3C 0005                905      CMP.B   #$5,D5
00001984  6700 0116                906      BEQ     MOVBDN2
00001988                           907      
00001988                           908  LSLRSRCD
00001988  43F9 000032A3            909      LEA DISPD,A1
0000198E  103C 000E                910      MOVE.B  #14,D0
00001992  4E4F                     911      TRAP    #15
00001994                           912          
00001994  1239 000035F6            913      MOVE.B  bit0,D1
0000199A  103C 0003                914      MOVE.B  #3,D0
0000199E  4E4F                     915      TRAP    #15    
000019A0                           916  
000019A0  43F9 0000328F            917      LEA COMMA,A1
000019A6  103C 000E                918      MOVE.B  #14,D0
000019AA  4E4F                     919      TRAP    #15  
000019AC                           920      
000019AC  6000 0002                921      BRA     LSLRDESD
000019B0                           922      
000019B0                           923  LSLRDESD
000019B0  43F9 000032A3            924      LEA DISPD,A1
000019B6  103C 000E                925      MOVE.B  #14,D0
000019BA  4E4F                     926      TRAP    #15
000019BC                           927          
000019BC  1239 000035FA            928      MOVE.B  bit4,D1
000019C2  103C 0003                929      MOVE.B  #3,D0
000019C6  4E4F                     930      TRAP    #15      
000019C8                           931      
000019C8                           932      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019C8  6000 166E                933      BRA     ENDNEWLINE       
000019CC                           934  
000019CC                           935  MOVEAN2
000019CC  43F9 0000329D            936      LEA DISPA,A1
000019D2  103C 000E                937      MOVE.B  #14,D0
000019D6  4E4F                     938      TRAP    #15
000019D8                           939      
000019D8  1239 000035F7            940      MOVE.B  bit1,D1
000019DE  103C 0003                941      MOVE.B  #3,D0
000019E2  4E4F                     942      TRAP    #15
000019E4                           943  
000019E4                           944      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019E4  6000 1652                945      BRA     ENDNEWLINE    
000019E8                           946  
000019E8                           947  MOVIAN2
000019E8  43F9 00003291            948      LEA OPENBRA,A1
000019EE  103C 000E                949      MOVE.B  #14,D0
000019F2  4E4F                     950      TRAP    #15
000019F4                           951  
000019F4  43F9 0000329D            952      LEA DISPA,A1
000019FA  103C 000E                953      MOVE.B  #14,D0
000019FE  4E4F                     954      TRAP    #15
00001A00                           955      
00001A00  1239 000035F7            956      MOVE.B  bit1,D1
00001A06  103C 0003                957      MOVE.B  #3,D0
00001A0A  4E4F                     958      TRAP    #15
00001A0C                           959      
00001A0C  43F9 00003293            960      LEA CLOSEBRA,A1
00001A12  103C 000E                961      MOVE.B  #14,D0
00001A16  4E4F                     962      TRAP    #15
00001A18                           963      
00001A18                           964      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A18  6000 161E                965      BRA     ENDNEWLINE
00001A1C                           966  
00001A1C                           967  MOVIANI2
00001A1C  43F9 00003291            968      LEA OPENBRA,A1
00001A22  103C 000E                969      MOVE.B  #14,D0
00001A26  4E4F                     970      TRAP    #15
00001A28                           971  
00001A28  43F9 0000329D            972      LEA DISPA,A1
00001A2E  103C 000E                973      MOVE.B  #14,D0
00001A32  4E4F                     974      TRAP    #15
00001A34                           975      
00001A34  1239 000035F7            976      MOVE.B  bit1,D1
00001A3A  103C 0003                977      MOVE.B  #3,D0
00001A3E  4E4F                     978      TRAP    #15
00001A40                           979      
00001A40  43F9 00003293            980      LEA CLOSEBRA,A1
00001A46  103C 000E                981      MOVE.B  #14,D0
00001A4A  4E4F                     982      TRAP    #15
00001A4C                           983      
00001A4C  43F9 00003295            984      LEA POS,A1
00001A52  103C 000E                985      MOVE.B  #14,D0
00001A56  4E4F                     986      TRAP    #15
00001A58                           987      
00001A58                           988      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A58  6000 15DE                989      BRA     ENDNEWLINE
00001A5C                           990  
00001A5C                           991  MOVIAND2
00001A5C  43F9 00003297            992      LEA NEG,A1
00001A62  103C 000E                993      MOVE.B  #14,D0
00001A66  4E4F                     994      TRAP    #15
00001A68                           995      
00001A68  43F9 00003291            996      LEA OPENBRA,A1
00001A6E  103C 000E                997      MOVE.B  #14,D0
00001A72  4E4F                     998      TRAP    #15
00001A74                           999  
00001A74  43F9 0000329D           1000      LEA DISPA,A1
00001A7A  103C 000E               1001      MOVE.B  #14,D0
00001A7E  4E4F                    1002      TRAP    #15
00001A80                          1003      
00001A80  1239 000035F7           1004      MOVE.B  bit1,D1
00001A86  103C 0003               1005      MOVE.B  #3,D0
00001A8A  4E4F                    1006      TRAP    #15
00001A8C                          1007      
00001A8C  43F9 00003293           1008      LEA CLOSEBRA,A1
00001A92  103C 000E               1009      MOVE.B  #14,D0
00001A96  4E4F                    1010      TRAP    #15
00001A98                          1011  
00001A98                          1012      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A98  6000 159E               1013      BRA     ENDNEWLINE
00001A9C                          1014  
00001A9C                          1015  MOVBDN2
00001A9C  43F9 000032A3           1016      LEA DISPD,A1
00001AA2  103C 000E               1017      MOVE.B  #14,D0
00001AA6  4E4F                    1018      TRAP    #15
00001AA8                          1019          
00001AA8  1239 000035F7           1020      MOVE.B  bit1,D1
00001AAE  103C 0003               1021      MOVE.B  #3,D0
00001AB2  4E4F                    1022      TRAP    #15   
00001AB4                          1023      
00001AB4  B83C 0000               1024      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001AB8  6700 157E               1025      BEQ     ENDNEWLINE
00001ABC                          1026      
00001ABC                          1027      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001ABC  6000 157A               1028      BRA     ENDNEWLINE
00001AC0                          1029      
00001AC0                          1030      
00001AC0                          1031  ENDNLINC
00001AC0                          1032      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001AC0  6000 1576               1033      BRA     ENDNEWLINE    
00001AC4                          1034      
00001AC4                          1035  MULSW
00001AC4  1407                    1036          MOVE.B  D7,D2
00001AC6  EB0A                    1037          LSL.B   #5,D2
00001AC8  EA0A                    1038          LSR.B   #5,D2
00001ACA  13C2 000035FA           1039          MOVE.B  D2,bit4
00001AD0                          1040          
00001AD0  1407                    1041          MOVE.B  D7,D2
00001AD2  E50A                    1042          LSL.B   #2,D2
00001AD4  EA0A                    1043          LSR.B   #5,D2
00001AD6  13C2 000035F9           1044          MOVE.B  D2,bit3
00001ADC                          1045          
00001ADC  3C07                    1046          MOVE.W  D7,D6
00001ADE  EF4E                    1047          LSL.W   #7,D6
00001AE0  E04E                    1048          LSR.W   #8,D6 
00001AE2  EA4E                    1049          LSR.W   #5,D6 
00001AE4  13C6 000035F8           1050          MOVE.B  D6,bit2
00001AEA                          1051          
00001AEA  E94F                    1052          LSL.W   #4,D7
00001AEC  E04F                    1053          LSR.W   #8,D7 
00001AEE  EA4F                    1054          LSR.W   #5,D7 
00001AF0  13C7 000035F7           1055          MOVE.B  D7,bit1
00001AF6                          1056          
00001AF6  43F9 000032DF           1057          LEA MMULSW,A1
00001AFC  323C 000E               1058          MOVE    #14,D1
00001B00  4E4F                    1059          TRAP    #15
00001B02                          1060          
00001B02  1A3C 0005               1061          MOVE.B  #$5,D5 
00001B06                          1062          
00001B06  0C39 0000 000035F9      1063          CMP.B   #$0,bit3           
00001B0E  6700 FDEC               1064          BEQ     MOVBDN1
00001B12  0C39 0001 000035F9      1065          CMP.B   #$1,bit3
00001B1A  6700 FB90               1066          BEQ     MOVEAN1
00001B1E  0C39 0002 000035F9      1067          CMP.B   #$2,bit3
00001B26  6700 FBF8               1068          BEQ     MOVEIAN1
00001B2A  0C39 0003 000035F9      1069          CMP.B   #$3,bit3
00001B32  6700 FC80               1070          BEQ     MOVEIANI1
00001B36  0C39 0004 000035F9      1071          CMP.B   #$4,bit3
00001B3E  6700 FD1C               1072          BEQ     MOVEIAND1
00001B42  0C39 0007 000035F9      1073          CMP.B   #$7,bit3
00001B4A  6700 FA50               1074          BEQ     ADDIMD
00001B4E                          1075  
00001B4E                          1076           
00001B4E                          1077  DIVSW               
00001B4E                          1078          *MOVE.B  D6,D2
00001B4E  141E                    1079          MOVE.B  (A6)+,D2
00001B50  EB0A                    1080          LSL.B   #5,D2
00001B52  EA0A                    1081          LSR.B   #5,D2
00001B54  13C2 000035FA           1082          MOVE.B  D2,bit4
00001B5A                          1083          
00001B5A  1406                    1084          MOVE.B  D6,D2
00001B5C  E50A                    1085          LSL.B   #2,D2
00001B5E  EA0A                    1086          LSR.B   #5,D2
00001B60  13C2 000035F9           1087          MOVE.B  D2,bit3
00001B66                          1088          
00001B66  3E06                    1089          MOVE.W  D6,D7
00001B68  EF4F                    1090          LSL.W   #7,D7
00001B6A  E04F                    1091          LSR.W   #8,D7 
00001B6C  EA4F                    1092          LSR.W   #5,D7 
00001B6E  13C7 000035F8           1093          MOVE.B  D7,bit2
00001B74                          1094          
00001B74  E94E                    1095          LSL.W   #4,D6
00001B76  E04E                    1096          LSR.W   #8,D6 
00001B78  EA4E                    1097          LSR.W   #5,D6 
00001B7A  13C6 000035F7           1098          MOVE.B  D6,bit1
00001B80                          1099          
00001B80  43F9 000032D8           1100          LEA MMDIVSW,A1
00001B86  323C 000E               1101          MOVE    #14,D1
00001B8A  4E4F                    1102          TRAP    #15
00001B8C                          1103          
00001B8C  1A3C 0005               1104          MOVE.B  #$5,D5 
00001B90  183C 0004               1105          MOVE.B  #$4,D4
00001B94                          1106          
00001B94  0C39 0000 000035F9      1107          CMP.B   #$0,bit3           
00001B9C  6700 FD5E               1108          BEQ     MOVBDN1
00001BA0  0C39 0001 000035F9      1109          CMP.B   #$1,bit3
00001BA8  6700 FB02               1110          BEQ     MOVEAN1
00001BAC  0C39 0002 000035F9      1111          CMP.B   #$2,bit3
00001BB4  6700 FB6A               1112          BEQ     MOVEIAN1
00001BB8  0C39 0003 000035F9      1113          CMP.B   #$3,bit3
00001BC0  6700 FBF2               1114          BEQ     MOVEIANI1
00001BC4  0C39 0004 000035F9      1115          CMP.B   #$4,bit3
00001BCC  6700 FC8E               1116          BEQ     MOVEIAND1
00001BD0  0C39 0007 000035F9      1117          CMP.B   #$7,bit3
00001BD8  6700 F9C2               1118          BEQ     ADDIMD
00001BDC                          1119  
00001BDC                          1120  NEGW
00001BDC  1406                    1121          MOVE.B  D6,D2
00001BDE  EB0A                    1122          LSL.B   #5,D2
00001BE0  EA0A                    1123          LSR.B   #5,D2
00001BE2  13C2 000035FA           1124          MOVE.B  D2,bit4
00001BE8                          1125          
00001BE8  1406                    1126          MOVE.B  D6,D2
00001BEA  E50A                    1127          LSL.B   #2,D2
00001BEC  EA0A                    1128          LSR.B   #5,D2
00001BEE  13C2 000035F9           1129          MOVE.B  D2,bit3
00001BF4                          1130          
00001BF4  3E06                    1131          MOVE.W  D6,D7
00001BF6  E14F                    1132          LSL.W   #8,D7
00001BF8  E04F                    1133          LSR.W   #8,D7 
00001BFA  EC4F                    1134          LSR.W   #6,D7 
00001BFC  13C7 000035F8           1135          MOVE.B  D7,bit2
00001C02                          1136          
00001C02  43F9 000032D3           1137          LEA MMNEGW,A1
00001C08  323C 000E               1138          MOVE    #14,D1
00001C0C  4E4F                    1139          TRAP    #15
00001C0E                          1140          
00001C0E  183C 0003               1141          MOVE.B  #$3,D4
00001C12                          1142          
00001C12  0C39 0000 000035F8      1143          CMP.B   #$0,bit2
00001C1A  6700 001A               1144          BEQ     PRINTBYTE
00001C1E  0C39 0001 000035F8      1145          CMP.B   #$1,bit2
00001C26  6700 0062               1146          BEQ     PRINTWORD
00001C2A  0C39 0002 000035F8      1147          CMP.B   #$2,bit2
00001C32  6700 00AA               1148          BEQ     PRINTLONG
00001C36                          1149          
00001C36                          1150  PRINTBYTE
00001C36  43F9 000032AD           1151      LEA MBYTE,A1
00001C3C  323C 000E               1152      MOVE    #14,D1
00001C40  4E4F                    1153      TRAP    #15
00001C42                          1154  
00001C42  0C39 0000 000035F9      1155      CMP.B   #$0,bit3           
00001C4A  6700 FCB0               1156          BEQ     MOVBDN1
00001C4E  0C39 0001 000035F9      1157          CMP.B   #$1,bit3
00001C56  6700 FA54               1158          BEQ     MOVEAN1
00001C5A  0C39 0002 000035F9      1159          CMP.B   #$2,bit3
00001C62  6700 FABC               1160          BEQ     MOVEIAN1
00001C66  0C39 0003 000035F9      1161          CMP.B   #$3,bit3
00001C6E  6700 FB44               1162          BEQ     MOVEIANI1
00001C72  0C39 0004 000035F9      1163          CMP.B   #$4,bit3
00001C7A  6700 FBE0               1164          BEQ     MOVEIAND1
00001C7E  0C39 0007 000035F9      1165          CMP.B   #$7,bit3
00001C86  6700 F9CE               1166          BEQ     ADDIMDDES
00001C8A                          1167      
00001C8A                          1168  PRINTWORD
00001C8A  43F9 000032B0           1169      LEA MWORD,A1
00001C90  323C 000E               1170      MOVE    #14,D1
00001C94  4E4F                    1171      TRAP    #15
00001C96                          1172  
00001C96  0C39 0000 000035F9      1173      CMP.B   #$0,bit3           
00001C9E  6700 FC5C               1174          BEQ     MOVBDN1
00001CA2  0C39 0001 000035F9      1175          CMP.B   #$1,bit3
00001CAA  6700 FA00               1176          BEQ     MOVEAN1
00001CAE  0C39 0002 000035F9      1177          CMP.B   #$2,bit3
00001CB6  6700 FA68               1178          BEQ     MOVEIAN1
00001CBA  0C39 0003 000035F9      1179          CMP.B   #$3,bit3
00001CC2  6700 FAF0               1180          BEQ     MOVEIANI1
00001CC6  0C39 0004 000035F9      1181          CMP.B   #$4,bit3
00001CCE  6700 FB8C               1182          BEQ     MOVEIAND1
00001CD2  0C39 0007 000035F9      1183          CMP.B   #$7,bit3
00001CDA  6700 F97A               1184          BEQ     ADDIMDDES
00001CDE                          1185      
00001CDE                          1186  PRINTLONG
00001CDE  43F9 000032B3           1187      LEA MLONG,A1
00001CE4  323C 000E               1188      MOVE    #14,D1
00001CE8  4E4F                    1189      TRAP    #15
00001CEA                          1190   
00001CEA  0C39 0000 000035F9      1191      CMP.B   #$0,bit3           
00001CF2  6700 FC08               1192          BEQ     MOVBDN1
00001CF6  0C39 0001 000035F9      1193          CMP.B   #$1,bit3
00001CFE  6700 F9AC               1194          BEQ     MOVEAN1
00001D02  0C39 0002 000035F9      1195          CMP.B   #$2,bit3
00001D0A  6700 FA14               1196          BEQ     MOVEIAN1
00001D0E  0C39 0003 000035F9      1197          CMP.B   #$3,bit3
00001D16  6700 FA9C               1198          BEQ     MOVEIANI1
00001D1A  0C39 0004 000035F9      1199          CMP.B   #$4,bit3
00001D22  6700 FB38               1200          BEQ     MOVEIAND1
00001D26  0C39 0007 000035F9      1201          CMP.B   #$7,bit3
00001D2E  6700 F926               1202          BEQ     ADDIMDDES
00001D32                          1203          
00001D32                          1204  LSLR
00001D32                          1205          *MOVE.B  D6,D2
00001D32  141E                    1206          MOVE.B  (A6)+,D2
00001D34  EB0A                    1207          LSL.B   #5,D2
00001D36  EA0A                    1208          LSR.B   #5,D2
00001D38  13C2 000035FA           1209          MOVE.B  D2,bit4
00001D3E                          1210          
00001D3E  1406                    1211          MOVE.B  D6,D2
00001D40  E50A                    1212          LSL.B   #2,D2
00001D42  EE0A                    1213          LSR.B   #7,D2
00001D44  13C2 000035F9           1214          MOVE.B  D2,bit3
00001D4A                          1215          
00001D4A  3E06                    1216          MOVE.W  D6,D7
00001D4C  E14F                    1217          LSL.W   #8,D7
00001D4E  E04F                    1218          LSR.W   #8,D7 
00001D50  EC4F                    1219          LSR.W   #6,D7 
00001D52  13C7 000035F8           1220          MOVE.B  D7,bit2
00001D58                          1221          
00001D58  3E06                    1222          MOVE.W  D6,D7
00001D5A  EF4F                    1223          LSL.W   #7,D7
00001D5C  E04F                    1224          LSR.W   #8,D7 
00001D5E  EE4F                    1225          LSR.W   #7,D7
00001D60  13C7 000035F7           1226          MOVE.B  D7,bit1   
00001D66                          1227      
00001D66  1806                    1228          MOVE.B  D6,D4
00001D68                          1229          
00001D68  3E06                    1230          MOVE.W  D6,D7
00001D6A  E94F                    1231          LSL.W   #4,D7
00001D6C  E04F                    1232          LSR.W   #8,D7 
00001D6E  EA4F                    1233          LSR.W   #5,D7
00001D70  13C7 000035F6           1234          MOVE.B  D7,bit0 
00001D76                          1235          
00001D76  1E06                    1236          MOVE.B  D6,D7
00001D78  E90F                    1237          LSL.B   #4,D7
00001D7A  EE0F                    1238          LSR.B   #7,D7
00001D7C                          1239          
00001D7C  0C39 0003 000035F8      1240          CMP.B   #3,bit2
00001D84  6700 00B4               1241          BEQ     LSLRMEMH
00001D88                          1242          
00001D88  BE3C 0000               1243          CMP.B   #0,D7
00001D8C  6700 0028               1244          BEQ     ASLRMEMH
00001D90                          1245          
00001D90  1606                    1246          MOVE.B  D6,D3
00001D92  E70B                    1247          LSL.B   #3,D3
00001D94  EC0B                    1248          LSR.B   #6,D3
00001D96  B63C 0003               1249          CMP.B   #3,D3
00001D9A  6700 00CA               1250          BEQ     RORL
00001D9E                          1251          
00001D9E  0C39 0001 000035F7      1252          CMP.B   #$1,bit1
00001DA6  6700 013E               1253          BEQ     PRINTLSL
00001DAA  0C39 0000 000035F7      1254          CMP.B   #$0,bit1
00001DB2  6700 0280               1255          BEQ     PRINTLSR
00001DB6                          1256          
00001DB6                          1257  ASLRMEMH
00001DB6  1A3C 0004               1258          MOVE.B  #4,D5
00001DBA  0C39 0001 000035F7      1259          CMP.B   #$1,bit1
00001DC2  6700 000E               1260          BEQ     PRINTASL
00001DC6  0C39 0000 000035F7      1261          CMP.B   #$0,bit1
00001DCE  6700 0036               1262          BEQ     PRINTASR
00001DD2                          1263          
00001DD2                          1264  PRINTASL
00001DD2  43F9 00003312           1265          LEA MASL,A1
00001DD8  303C 000E               1266          MOVE    #14,D0
00001DDC  4E4F                    1267          TRAP    #15
00001DDE                          1268          
00001DDE  0C39 0000 000035F8      1269          CMP.B   #$0,bit2
00001DE6  6700 017C               1270          BEQ     PRINTB
00001DEA  0C39 0001 000035F8      1271          CMP.B   #$1,bit2
00001DF2  6700 01A4               1272          BEQ     PRINTW
00001DF6  0C39 0002 000035F8      1273          CMP.B   #$2,bit2
00001DFE  6700 01CC               1274          BEQ     PRINTL
00001E02  6000 0116               1275          BRA     LSLRMEM
00001E06                          1276          
00001E06                          1277  PRINTASR        
00001E06  43F9 00003316           1278          LEA MASR,A1
00001E0C  303C 000E               1279          MOVE    #14,D0
00001E10  4E4F                    1280          TRAP    #15
00001E12                          1281          
00001E12  0C39 0000 000035F8      1282          CMP.B   #$0,bit2
00001E1A  6700 0148               1283          BEQ     PRINTB
00001E1E  0C39 0001 000035F8      1284          CMP.B   #$1,bit2
00001E26  6700 0170               1285          BEQ     PRINTW
00001E2A  0C39 0002 000035F8      1286          CMP.B   #$2,bit2
00001E32  6700 0198               1287          BEQ     PRINTL
00001E36  6000 00E2               1288          BRA     LSLRMEM
00001E3A                          1289          
00001E3A                          1290  LSLRMEMH
00001E3A  3E06                    1291          MOVE.W  D6,D7
00001E3C  ED4F                    1292          LSL.W   #6,D7
00001E3E  E04F                    1293          LSR.W   #8,D7
00001E40  EE4F                    1294          LSR.W   #7,D7
00001E42  BE3C 0000               1295          CMP.B   #0,D7
00001E46  6700 FF6E               1296          BEQ     ASLRMEMH
00001E4A                          1297          
00001E4A  1A3C 0004               1298          MOVE.B  #4,D5
00001E4E  0C39 0001 000035F7      1299          CMP.B   #$1,bit1
00001E56  6700 008E               1300          BEQ     PRINTLSL
00001E5A  0C39 0000 000035F7      1301          CMP.B   #$0,bit1
00001E62  6700 01D0               1302          BEQ     PRINTLSR
00001E66                          1303  RORL
00001E66  0C39 0001 000035F7      1304          CMP.B   #$1,bit1
00001E6E  6700 000E               1305          BEQ     PRINTROL
00001E72  0C39 0000 000035F7      1306          CMP.B   #$0,bit1
00001E7A  6700 0036               1307          BEQ     PRINTROR
00001E7E                          1308  PRINTROL
00001E7E  43F9 000032C3           1309          LEA MROL,A1
00001E84  303C 000E               1310          MOVE    #14,D0
00001E88  4E4F                    1311          TRAP    #15
00001E8A                          1312          
00001E8A  0C39 0000 000035F8      1313          CMP.B   #$0,bit2
00001E92  6700 00D0               1314          BEQ     PRINTB
00001E96  0C39 0001 000035F8      1315          CMP.B   #$1,bit2
00001E9E  6700 00F8               1316          BEQ     PRINTW
00001EA2  0C39 0002 000035F8      1317          CMP.B   #$2,bit2
00001EAA  6700 0120               1318          BEQ     PRINTL
00001EAE  6000 006A               1319          BRA     LSLRMEM
00001EB2                          1320  PRINTROR
00001EB2  43F9 000032C7           1321          LEA MROR,A1
00001EB8  323C 000E               1322          MOVE    #14,D1
00001EBC  4E4F                    1323          TRAP    #15
00001EBE                          1324          
00001EBE  0C39 0000 000035F8      1325          CMP.B   #$0,bit2
00001EC6  6700 009C               1326          BEQ     PRINTB
00001ECA  0C39 0001 000035F8      1327          CMP.B   #$1,bit2
00001ED2  6700 00C4               1328          BEQ     PRINTW
00001ED6  0C39 0002 000035F8      1329          CMP.B   #$2,bit2
00001EDE  6700 00EC               1330          BEQ     PRINTL
00001EE2  6000 0036               1331          BRA     LSLRMEM
00001EE6                          1332  PRINTLSL
00001EE6  43F9 000032CB           1333          LEA MLSL,A1
00001EEC  303C 000E               1334          MOVE    #14,D0
00001EF0  4E4F                    1335          TRAP    #15
00001EF2                          1336          
00001EF2  0C39 0000 000035F8      1337          CMP.B   #$0,bit2
00001EFA  6700 0068               1338          BEQ     PRINTB
00001EFE  0C39 0001 000035F8      1339          CMP.B   #$1,bit2
00001F06  6700 0090               1340          BEQ     PRINTW
00001F0A  0C39 0002 000035F8      1341          CMP.B   #$2,bit2
00001F12  6700 00B8               1342          BEQ     PRINTL
00001F16  6000 0002               1343          BRA     LSLRMEM
00001F1A                          1344          
00001F1A                          1345  LSLRMEM
00001F1A                          1346          
00001F1A  E50C                    1347          LSL.B   #2,D4
00001F1C  EA0C                    1348          LSR.B   #5,D4
00001F1E  13C4 000035F9           1349          MOVE.B  D4,bit3
00001F24                          1350          
00001F24  183C 0003               1351          MOVE.B  #$3,D4
00001F28                          1352          
00001F28  0C39 0002 000035F9      1353          CMP.B   #$2,bit3
00001F30  6700 F7EE               1354          BEQ     MOVEIAN1
00001F34  0C39 0003 000035F9      1355          CMP.B   #$3,bit3
00001F3C  6700 F876               1356          BEQ     MOVEIANI1
00001F40  0C39 0004 000035F9      1357          CMP.B   #$4,bit3
00001F48  6700 F912               1358          BEQ     MOVEIAND1
00001F4C                          1359          
00001F4C  43F9 0000328B           1360          LEA TAB,A1
00001F52  123C 0003               1361          MOVE.B  #3,D1
00001F56  4E4F                    1362          TRAP    #15 
00001F58                          1363          
00001F58  0C39 0007 000035F9      1364          CMP.B   #$7,bit3
00001F60  6700 F6F4               1365          BEQ     ADDIMDDES
00001F64                          1366  PRINTB
00001F64  43F9 000032A9           1367          LEA MDOT,A1
00001F6A  303C 000E               1368          MOVE    #14,D0
00001F6E  4E4F                    1369          TRAP    #15
00001F70                          1370  
00001F70  43F9 000032AD           1371          LEA MBYTE,A1
00001F76  303C 000E               1372          MOVE    #14,D0
00001F7A  4E4F                    1373          TRAP    #15
00001F7C                          1374          
00001F7C  3A3C 0006               1375          MOVE #$6,D5
00001F80                          1376          
00001F80  0C39 0000 000035F9      1377          CMP.B   #0,bit3
00001F88  6700 0076               1378          BEQ     PRINTLSLRCOUNT
00001F8C  0C39 0001 000035F9      1379          CMP.B   #1,bit3
00001F94  6700 F966               1380          BEQ     MOVBDN1
00001F98                          1381  
00001F98                          1382  PRINTW 
00001F98  43F9 000032A9           1383          LEA MDOT,A1
00001F9E  303C 000E               1384          MOVE    #14,D0
00001FA2  4E4F                    1385          TRAP    #15
00001FA4                          1386  
00001FA4  43F9 000032B0           1387          LEA MWORD,A1
00001FAA  303C 000E               1388          MOVE    #14,D0
00001FAE  4E4F                    1389          TRAP    #15
00001FB0                          1390          
00001FB0  3A3C 0006               1391          MOVE #$6,D5
00001FB4                          1392          
00001FB4  0C39 0000 000035F9      1393          CMP.B   #0,bit3
00001FBC  6700 0042               1394          BEQ     PRINTLSLRCOUNT
00001FC0  0C39 0001 000035F9      1395          CMP.B   #1,bit3
00001FC8  6700 F932               1396          BEQ     MOVBDN1
00001FCC                          1397  
00001FCC                          1398  PRINTL
00001FCC  43F9 000032A9           1399          LEA MDOT,A1
00001FD2  303C 000E               1400          MOVE    #14,D0
00001FD6  4E4F                    1401          TRAP    #15
00001FD8                          1402  
00001FD8  43F9 000032B3           1403          LEA MLONG,A1
00001FDE  303C 000E               1404          MOVE    #14,D0
00001FE2  4E4F                    1405          TRAP    #15
00001FE4                          1406  
00001FE4  3A3C 0006               1407          MOVE #$6,D5
00001FE8                          1408          
00001FE8  0C39 0000 000035F9      1409          CMP.B   #0,bit3
00001FF0  6700 000E               1410          BEQ     PRINTLSLRCOUNT
00001FF4  0C39 0001 000035F9      1411          CMP.B   #1,bit3
00001FFC  6700 F8FE               1412          BEQ     MOVBDN1    
00002000                          1413  
00002000                          1414  PRINTLSLRCOUNT
00002000  43F9 0000328B           1415          LEA TAB,A1
00002006  303C 000E               1416          MOVE    #14,D0
0000200A  4E4F                    1417          TRAP    #15
0000200C                          1418          
0000200C  43F9 00003299           1419          LEA HASH,A1
00002012  303C 000E               1420          MOVE    #14,D0
00002016  4E4F                    1421          TRAP    #15
00002018                          1422          
00002018  1239 000035F6           1423          MOVE.B  bit0,D1
0000201E  303C 0003               1424          MOVE    #3,D0
00002022  4E4F                    1425          TRAP    #15
00002024                          1426          
00002024  43F9 0000328F           1427          LEA COMMA,A1
0000202A  303C 000E               1428          MOVE    #14,D0
0000202E  4E4F                    1429          TRAP    #15
00002030                          1430          
00002030  6000 F97E               1431          BRA LSLRDESD
00002034                          1432    
00002034                          1433  PRINTLSR
00002034  43F9 000032CF           1434          LEA MLSR,A1
0000203A  323C 000E               1435          MOVE    #14,D1
0000203E  4E4F                    1436          TRAP    #15
00002040                          1437          
00002040  0C39 0000 000035F8      1438          CMP.B   #$0,bit2
00002048  6700 FF1A               1439          BEQ     PRINTB
0000204C  0C39 0001 000035F8      1440          CMP.B   #$1,bit2
00002054  6700 FF42               1441          BEQ     PRINTW
00002058  0C39 0002 000035F8      1442          CMP.B   #$2,bit2
00002060  6700 FF6A               1443          BEQ     PRINTL
00002064  6000 FEB4               1444          BRA     LSLRMEM
00002068                          1445  
00002068                          1446  ******************************************************************************************************
00002068                          1447  *   Branch, branch to subroutine, and branch conditionally
00002068                          1448  *   BRA, BSR, Bcc
00002068                          1449  
00002068                          1450  BCC
00002068  13C5 000035F7           1451          MOVE.B  D5,bit1             Moves condition code to bit1
0000206E  1A1E                    1452          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00002070  13C5 000035F8           1453          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00002076  280E                    1454          MOVE.L  A6,D4               Moves current address to D4 register
00002078                          1455  
00002078  BA3C 0000               1456          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
0000207C  6700 0010               1457          BEQ     BCCWORD
00002080  BA3C 00FF               1458          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00002084  6700 0010               1459          BEQ     BCCLONG             Else, displacement is 8-bits
00002088                          1460  
00002088                          1461          * Calculates 8-bit displacement
00002088                          1462          * 8-bit displacement is already in D5
00002088                          1463          * Adds displacement to current address
00002088  D805                    1464          ADD.B   D5,D4               Adds the displacement to current address
0000208A  6000 0012               1465          BRA     BCCNEXT
0000208E                          1466  
0000208E                          1467  * Calculates 16-bit displacement
0000208E                          1468  BCCWORD
0000208E  3A1E                    1469          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00002090  D845                    1470          ADD.W   D5,D4               Adds the displacement to current address
00002092  6000 000A               1471          BRA     BCCNEXT
00002096                          1472  
00002096                          1473  * Calculates 32-bit displacement
00002096                          1474  BCCLONG
00002096  2A1E                    1475          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00002098  D885                    1476          ADD.L   D5,D4               Adds the displacement to current address
0000209A  6000 0002               1477          BRA     BCCNEXT
0000209E                          1478  
0000209E                          1479  * Does the actual calculation
0000209E                          1480  * Adds the displacement to the current address
0000209E                          1481  BCCNEXT
0000209E  6100 000E               1482          BSR     BCCDISP             Displays branch op-code
000020A2  45F9 00003038           1483          LEA     ENDNEWLINE,A2
000020A8  2E04                    1484          MOVE.L  D4,D7
000020AA  6000 F09E               1485          BRA     DISPADDRSTART
000020AE                          1486  
000020AE                          1487  BCCDISP * Figures out which conditional code it is
000020AE  B43C 0000               1488          CMP.B   #$0,D2
000020B2  6700 0026               1489          BEQ     BCCBRA
000020B6  B43C 0007               1490          CMP.B   #$7,D2
000020BA  6700 0028               1491          BEQ     BCCBEQ
000020BE  B43C 0006               1492          CMP.B   #$6,D2
000020C2  6700 002A               1493          BEQ     BCCBNE
000020C6  B43C 000D               1494          CMP.B   #$D,D2
000020CA  6700 002C               1495          BEQ     BCCBLT
000020CE  B43C 0002               1496          CMP.B   #$2,D2
000020D2  6700 002E               1497          BEQ     BCCBHI
000020D6                          1498  
000020D6  6000 0EEE               1499          BRA     INVOP
000020DA                          1500  
000020DA                          1501  * Prints out the appropiate code
000020DA                          1502  BCCBRA
000020DA  43F9 00003386           1503          LEA     MBRA,A1
000020E0  6000 002A               1504          BRA     BCCPRINT
000020E4                          1505  BCCBEQ
000020E4  43F9 00003376           1506          LEA     MBEQ,A1
000020EA  6000 0020               1507          BRA     BCCPRINT
000020EE                          1508  BCCBNE
000020EE  43F9 0000337A           1509          LEA     MBNE,A1
000020F4  6000 0016               1510          BRA     BCCPRINT
000020F8                          1511  BCCBLT
000020F8  43F9 0000337E           1512          LEA     MBLT,A1
000020FE  6000 000C               1513          BRA     BCCPRINT
00002102                          1514  BCCBHI
00002102  43F9 00003382           1515          LEA     MBHI,A1
00002108  6000 0002               1516          BRA     BCCPRINT
0000210C                          1517  BCCPRINT
0000210C  103C 000E               1518          MOVE.B  #14,D0
00002110  4E4F                    1519          TRAP    #15
00002112  43F9 0000328B           1520          LEA     TAB,A1
00002118  4E4F                    1521          TRAP    #15
0000211A  4E75                    1522          RTS
0000211C                          1523  
0000211C                          1524  ******************************************************************************************************
0000211C                          1525  *   Immediate data arithmetic operations
0000211C                          1526  *   SUBI
0000211C                          1527  
0000211C  13C5 000035F7           1528  IMD     MOVE.B  D5,bit1
00002122  1202                    1529          MOVE.B  D2,D1
00002124  141E                    1530          MOVE.B  (A6)+,D2
00002126                          1531          
00002126  3805                    1532          MOVE    D5,D4
00002128  C83C 0001               1533          AND.B   #$0001,D4
0000212C  B83C 0001               1534          CMP.B   #$1,D4
00002130  6700 F192               1535          BEQ     BTST
00002134  B23C 0008               1536          CMP.B   #8,D1
00002138  6700 F18A               1537          BEQ     BTST
0000213C                          1538  
0000213C  DE02                    1539          ADD.B   D2,D7
0000213E                          1540  
0000213E  1602                    1541          MOVE.B  D2,D3               Copies data at D2 to D3
00002140                          1542          *   this gets digit in 10's place
00002140  E80B                    1543          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002142                          1544          *   this gets digit in 1's place
00002142  E90A                    1545          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002144  E80A                    1546          LSR.B   #4,D2               Shifts back right into 1's place
00002146                          1547  
00002146                          1548          *   D3 holds digit in 10's place
00002146                          1549          *   D2 holds digit in 1's place
00002146                          1550  
00002146  E20B                    1551          LSR.B   #1,D3
00002148  6400 0004               1552          BCC     IMD2
0000214C  5404                    1553          ADD.B   #$2,D4
0000214E  E20B                    1554  IMD2    LSR.B   #1,D3
00002150  6400 0004               1555          BCC     IMD3
00002154  5804                    1556          ADD.B   #$4,D4
00002156  B43C 0007               1557  IMD3    CMP.B   #$7,D2
0000215A  6D00 0006               1558          BLT     IMD4
0000215E  5204                    1559          ADD.B   #$1,D4
00002160  5102                    1560          SUB.B   #$8,D2
00002162                          1561  
00002162                          1562          *   Stores them into addr
00002162  13C3 000035F8           1563  IMD4    MOVE.B  D3,bit2
00002168  13C4 000035F9           1564          MOVE.B  D4,bit3
0000216E  13C2 000035FA           1565          MOVE.B  D2,bit4
00002174                          1566  
00002174                          1567  **************************
00002174                          1568  * This finds the size of the operation
00002174                          1569  
00002174  0C39 0000 000035F8      1570          CMP.B   #$0,bit2
0000217C  6700 007E               1571          BEQ     IMDBYTE
00002180  0C39 0001 000035F8      1572          CMP.B   #$1,bit2
00002188  6700 0082               1573          BEQ     IMDWORD
0000218C  0C39 0002 000035F8      1574          CMP.B   #$2,bit2
00002194  6700 0084               1575          BEQ     IMDLONG
00002198  6000 0E2C               1576          BRA     INVOP
0000219C                          1577  
0000219C                          1578  *************************************************************
0000219C                          1579  * Display IMD op-code
0000219C                          1580  IMDPRINT
0000219C  0C39 0000 000035F7      1581          CMP.B   #$0,bit1
000021A4  6700 0026               1582          BEQ     IMDPRINTORI
000021A8  0C39 0004 000035F7      1583          CMP.B   #$4,bit1
000021B0  6700 0024               1584          BEQ     IMDPRINTSUBI
000021B4  0C39 000A 000035F7      1585          CMP.B   #$A,bit1
000021BC  6700 0022               1586          BEQ     IMDPRINTEORI
000021C0  0C39 000C 000035F7      1587          CMP.B   #$C,bit1
000021C8  6700 0020               1588          BEQ     IMDPRINTCMPI
000021CC                          1589  
000021CC                          1590  IMDPRINTORI
000021CC  43F9 0000333A           1591          LEA     MORI,A1
000021D2  6000 0020               1592          BRA     IMDPRINTEND
000021D6                          1593  
000021D6                          1594  IMDPRINTSUBI
000021D6  43F9 00003334           1595          LEA     MSUBI,A1
000021DC  6000 0016               1596          BRA     IMDPRINTEND
000021E0                          1597  
000021E0                          1598  IMDPRINTEORI
000021E0  43F9 00003364           1599          LEA     MEORI,A1
000021E6  6000 000C               1600          BRA     IMDPRINTEND
000021EA                          1601  
000021EA                          1602  IMDPRINTCMPI
000021EA  43F9 00003353           1603          LEA     MCMPI,A1
000021F0  6000 0002               1604          BRA     IMDPRINTEND
000021F4                          1605  
000021F4                          1606  IMDPRINTEND
000021F4  103C 000E               1607          MOVE.B  #14,D0
000021F8  4E4F                    1608          TRAP    #15
000021FA  4E75                    1609          RTS
000021FC                          1610  
000021FC                          1611  *************************************************************
000021FC                          1612  * Immediate data operation size BYTE
000021FC                          1613  IMDBYTE
000021FC  619E                    1614          BSR     IMDPRINT
000021FE  43F9 000032AD           1615          LEA     MBYTE,A1
00002204                          1616  
00002204                          1617          * Moves size to D4, needed to use DISPEA
00002204  183C 0001               1618          MOVE.B  #$1,D4
00002208  6000 001A               1619          BRA     IMDEA
0000220C                          1620  
0000220C                          1621  *************************************************************
0000220C                          1622  * Immediate data operation size WORD
0000220C                          1623  IMDWORD
0000220C  618E                    1624          BSR     IMDPRINT
0000220E  43F9 000032B0           1625          LEA     MWORD,A1
00002214                          1626  
00002214  1803                    1627          MOVE.B  D3,D4
00002216  6000 000C               1628          BRA     IMDEA
0000221A                          1629  
0000221A                          1630  
0000221A                          1631  *************************************************************
0000221A                          1632  * Immediate data operation size LONG
0000221A                          1633  IMDLONG
0000221A  6180                    1634          BSR     IMDPRINT
0000221C  43F9 000032B3           1635          LEA     MLONG,A1
00002222                          1636          
00002222                          1637  
00002222                          1638          * Moves size to D4, needed to use DISPEA
00002222  1803                    1639          MOVE.B  D3,D4
00002224                          1640  
00002224                          1641  IMDEA
00002224                          1642          * This prints out the size and creates tab
00002224  103C 000E               1643          MOVE.B  #14,D0
00002228  4E4F                    1644          TRAP    #15
0000222A  43F9 0000328B           1645          LEA     TAB,A1
00002230  103C 000E               1646          MOVE.B  #14,D0
00002234  4E4F                    1647          TRAP    #15
00002236  43F9 00003299           1648          LEA     HASH,A1
0000223C  103C 000E               1649          MOVE.B  #14,D0
00002240  4E4F                    1650          TRAP    #15
00002242                          1651          * Loads return address into A2
00002242  45F9 0000224C           1652          LEA     IMDEA2,A2
00002248  6000 0D02               1653          BRA     DISPEA
0000224C                          1654  IMDEA2
0000224C  43F9 0000328F           1655          LEA     COMMA,A1
00002252  103C 000E               1656          MOVE.B  #14,D0
00002256  4E4F                    1657          TRAP    #15
00002258                          1658  
00002258  45F9 00002262           1659          LEA     IMDEA3,A2
0000225E  6000 0B9C               1660          BRA     SUBEA
00002262                          1661  IMDEA3
00002262  6000 0DD4               1662          BRA     ENDNEWLINE
00002266                          1663  
00002266                          1664  ******************************************************************************************************
00002266                          1665  * Miscellaneous section
00002266                          1666  *   Not goes here
00002266                          1667  
00002266                          1668  MISC
00002266  13C5 000035F7           1669          MOVE.B  D5,bit1
0000226C  141E                    1670          MOVE.B  (A6)+,D2
0000226E                          1671  
0000226E  DE02                    1672          ADD.B   D2,D7
00002270                          1673  
00002270  1602                    1674          MOVE.B  D2,D3               Copies data at D2 to D3
00002272                          1675          *   this gets digit in 10's place
00002272  E80B                    1676          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002274                          1677          *   this gets digit in 1's place
00002274  E90A                    1678          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002276  E80A                    1679          LSR.B   #4,D2               Shifts back right into 1's place
00002278                          1680  
00002278                          1681  
00002278  3806                    1682          MOVE.W  D6,D4
0000227A  E94C                    1683          LSL.W   #$4,D4
0000227C  E04C                    1684          LSR.W   #$8,D4
0000227E  E44C                    1685          LSR.W   #$2,D4
00002280  13C4 000035F8           1686          MOVE.B  D4,bit2
00002286  0C39 003A 000035F8      1687          CMP.B   #$3A,bit2
0000228E  6700 EFE8               1688          BEQ     JSR
00002292                          1689  
00002292                          1690      ***
00002292                          1691          *BTST.B  #$04,bit0
00002292                          1692          *BEQ     MISCLEA
00002292                          1693          *   D5 is bit1
00002292                          1694          *   D3 is bit2
00002292                          1695          *   D2 is bit3
00002292                          1696  
00002292                          1697  **************************
00002292                          1698  * This finds the size of the operation
00002292                          1699          * D5 is bit1
00002292  BA3C 0004               1700          CMP.B   #$4,D5
00002296  6700 F944               1701          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
0000229A  BA3C 0006               1702          CMP.B   #$6,D5              Branches to NOT section
0000229E  6700 0182               1703          BEQ     MISCNOT
000022A2  BA3C 000E               1704          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
000022A6  6700 0006               1705          BEQ     MISCBIT2
000022AA  6000 0022               1706          BRA     MISCCHKLEA          Check bits to see if LEA, else branch to MoveM
000022AE                          1707  
000022AE                          1708  MISCBIT2
000022AE                          1709          * D3 is bit2
000022AE  B63C 0007               1710          CMP.B   #$7,D3              Branches to NOP
000022B2  6700 0006               1711          BEQ     MISCBIT3
000022B6  6000 0D0E               1712          BRA     INVOP
000022BA                          1713  
000022BA                          1714  MISCBIT3
000022BA                          1715          * D2 is bit3
000022BA  B43C 0001               1716          CMP.B   #$1,D2              Branches to NOP
000022BE  6700 004E               1717          BEQ     MISCNOP
000022C2  B43C 0005               1718          CMP.B   #$5,D2              Branches to NOP
000022C6  6700 014A               1719          BEQ     MISCRTS
000022CA  6000 0CFA               1720          BRA     INVOP
000022CE                          1721  
000022CE                          1722  * Checks if the opcode is LEA
000022CE                          1723  MISCCHKLEA
000022CE  1805                    1724          MOVE.B  D5,D4
000022D0  C83C 0001               1725          AND.B   #$1,D4
000022D4  B83C 0001               1726          CMP.B   #$1,D4
000022D8  6600 0014               1727          BNE     MISCCHECKM
000022DC  1803                    1728          MOVE.B  D3,D4
000022DE  C83C 000C               1729          AND.B   #$C,D4
000022E2  B83C 000C               1730          CMP.B   #$C,D4
000022E6  6600 0006               1731          BNE     MISCCHECKM
000022EA  6000 0032               1732          BRA     MISCLEA
000022EE                          1733  
000022EE                          1734  * Checks if the opcode is MOVEM
000022EE                          1735  MISCCHECKM
000022EE  1805                    1736          MOVE.B  D5,D4
000022F0  C83C 0008               1737          AND.B   #$8,D4
000022F4  B83C 0008               1738          CMP.B   #$8,D4
000022F8  6600 0CCC               1739          BNE     INVOP
000022FC  1803                    1740          MOVE.B  D3,D4
000022FE  C83C 0008               1741          AND.B   #$8,D4
00002302  B83C 0008               1742          CMP.B   #$8,D4
00002306  6600 0CBE               1743          BNE     INVOP
0000230A  6000 03DA               1744          BRA     MISCMOVEM
0000230E                          1745  
0000230E                          1746  ******************************************************
0000230E                          1747  * NOP
0000230E                          1748  * No operation
0000230E                          1749  MISCNOP
0000230E  43F9 0000338A           1750          LEA     MNOP,A1
00002314  103C 000E               1751          MOVE.B  #14,D0
00002318  4E4F                    1752          TRAP    #15
0000231A                          1753  
0000231A  6000 0D1C               1754          BRA     ENDNEWLINE          Goes to next opcode
0000231E                          1755  
0000231E                          1756  ******************************************************
0000231E                          1757  MISCLEA
0000231E                          1758      
0000231E  43F9 00003392           1759          LEA     MLEA,A1
00002324  103C 000E               1760          MOVE.B  #14,D0
00002328  4E4F                    1761          TRAP    #15
0000232A  43F9 0000328B           1762          LEA     TAB,A1
00002330  103C 000E               1763          MOVE.B  #14,D0
00002334  4E4F                    1764          TRAP    #15        
00002336                          1765          
00002336  E20D                    1766          LSR.B   #1,D5   *isolate addr register
00002338  3C02                    1767          MOVE.W  D2,D6   *copy over bit3 for potential manip of ea reg
0000233A                          1768  
0000233A  E30B                    1769          LSL.B   #1,D3               Shifts the byte to the left
0000233C  C63C 0007               1770          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
00002340                          1771  
00002340  0882 0003               1772          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
00002344  6700 0004               1773          BEQ     MISCLEA2             If it was already zero, then it will skip this next step
00002348  5203                    1774          ADD.B   #$1,D3              It it was one, then it will add one to the mode
0000234A                          1775  
0000234A                          1776  MISCLEA2
0000234A  13C3 000035F9           1777          MOVE.B  D3,bit3     *MODE?
00002350  13C2 000035FA           1778          MOVE.B  D2,bit4     *REG?
00002356                          1779  
00002356                          1780          ***
00002356                          1781  *        AND.L   D2,D7
00002356                          1782  *        CMP.L   #$0,D7
00002356                          1783  *        BEQ     LEAMODE0
00002356                          1784  *        CMP.L   #$1,D7 
00002356                          1785  *        BEQ     LEAMODE1
00002356                          1786  *        
00002356                          1787  *        CMP.B   #1,D7
00002356                          1788  *        BEQ     LEAMODE1
00002356                          1789  *        CMP.B   #0,D7
00002356                          1790  *        BEQ     LEAMODE0
00002356                          1791  *        
00002356                          1792  *        ***
00002356                          1793          
00002356                          1794  LEAMODE1
00002356                          1795          *ea mode should be set to 111
00002356  B63C 0007               1796          CMP.B   #7,D3   *error check
0000235A  6700 000E               1797          BEQ     LEA_ABS_EA 
0000235E                          1798          
0000235E                          1799  LEAMODE0
0000235E                          1800          *ea mode should be set to 010
0000235E  B63C 0002               1801          CMP.B   #2,D3   *error check
00002362  6700 005E               1802          BEQ     LEA_INDIR_AN
00002366  6600 0C5E               1803          BNE     INVOP
0000236A                          1804  
0000236A                          1805  LEA_ABS_EA
0000236A                          1806          *MOVE RET LOC INTO A2
0000236A  0C39 0000 000035FA      1807          CMP.B   #$0,bit4
00002372  6700 000E               1808          BEQ     LEAIMD0
00002376  0C39 0001 000035FA      1809          CMP.B   #$1,bit4
0000237E  6700 0010               1810          BEQ     LEAIMD1
00002382                          1811  
00002382                          1812  LEAIMD0
00002382  183C 0001               1813          MOVE.B  #$1,D4
00002386  45F9 0000239E           1814          LEA     CONTPRINTLEA,A2
0000238C  6000 0BBE               1815          BRA     DISPEA
00002390                          1816  LEAIMD1 
00002390  183C 0002               1817          MOVE.B  #$2,D4
00002394  45F9 0000239E           1818          LEA     CONTPRINTLEA,A2
0000239A  6000 0BB0               1819          BRA     DISPEA  
0000239E                          1820          
0000239E                          1821  CONTPRINTLEA
0000239E  43F9 0000328F           1822          LEA     COMMA,A1
000023A4  103C 000E               1823          MOVE.B  #14,D0
000023A8  4E4F                    1824          TRAP    #15
000023AA  43F9 0000329D           1825          LEA     DISPA,A1
000023B0  103C 000E               1826          MOVE.B  #14,D0
000023B4  4E4F                    1827          TRAP    #15
000023B6  1205                    1828          MOVE.B  D5,D1
000023B8  103C 0003               1829          MOVE.B  #3,D0
000023BC  4E4F                    1830          TRAP    #15
000023BE  6000 0C78               1831          BRA     ENDNEWLINE
000023C2                          1832          
000023C2                          1833  LEA_INDIR_AN
000023C2                          1834  
000023C2  43F9 00003291           1835          LEA     OPENBRA,A1
000023C8  103C 000E               1836          MOVE.B  #14,D0
000023CC  4E4F                    1837          TRAP    #15
000023CE                          1838          
000023CE  43F9 0000329D           1839          LEA     DISPA,A1
000023D4  103C 000E               1840          MOVE.B  #14,D0
000023D8  4E4F                    1841          TRAP    #15
000023DA                          1842          
000023DA  1202                    1843          MOVE.B  D2,D1
000023DC  103C 0003               1844          MOVE.B  #3,D0
000023E0  4E4F                    1845          TRAP    #15
000023E2                          1846          
000023E2  43F9 00003293           1847          LEA     CLOSEBRA,A1
000023E8  103C 000E               1848          MOVE.B  #14,D0
000023EC  4E4F                    1849          TRAP    #15
000023EE                          1850          
000023EE  43F9 0000328F           1851          LEA     COMMA,A1
000023F4  103C 000E               1852          MOVE.B  #14,D0
000023F8  4E4F                    1853          TRAP    #15
000023FA                          1854          
000023FA  43F9 0000329D           1855          LEA     DISPA,A1
00002400  103C 000E               1856          MOVE.B  #14,D0
00002404  4E4F                    1857          TRAP    #15
00002406                          1858  
00002406  1205                    1859          MOVE.B  D5,D1
00002408  103C 0003               1860          MOVE.B  #3,D0
0000240C  4E4F                    1861          TRAP    #15
0000240E                          1862  
0000240E  6000 0C28               1863          BRA     ENDNEWLINE
00002412                          1864  
00002412                          1865  ******************************************************
00002412                          1866  * RTS
00002412                          1867  * Return to sub routine
00002412                          1868  MISCRTS
00002412  43F9 0000338E           1869          LEA     MRTS,A1
00002418  103C 000E               1870          MOVE.B  #14,D0
0000241C  4E4F                    1871          TRAP    #15
0000241E                          1872  
0000241E  6000 0C18               1873          BRA     ENDNEWLINE          Goes to next opcode
00002422                          1874  
00002422                          1875  ******************************************************
00002422                          1876  * NOT
00002422                          1877  * Reuses some of IMD section to display because they have similar format
00002422                          1878  *  (I was kinda lazy too)
00002422                          1879  MISCNOT
00002422  4244                    1880          CLR     D4
00002424  E20B                    1881          LSR.B   #1,D3
00002426  6400 0004               1882          BCC     MISCNOT2
0000242A  5404                    1883          ADD.B   #$2,D4
0000242C                          1884  MISCNOT2   
0000242C  E20B                    1885          LSR.B   #1,D3
0000242E  6400 0004               1886          BCC     MISCNOT3
00002432  5804                    1887          ADD.B   #$4,D4
00002434                          1888  MISCNOT3   
00002434  B43C 0007               1889          CMP.B   #$7,D2
00002438  6D00 0006               1890          BLT     MISCNOT4
0000243C  5204                    1891          ADD.B   #$1,D4
0000243E  5102                    1892          SUB.B   #$8,D2
00002440                          1893  
00002440                          1894          *   Stores them into addr
00002440                          1895  MISCNOT4
00002440  13C3 000035F8           1896          MOVE.B  D3,bit2
00002446  13C4 000035F9           1897          MOVE.B  D4,bit3
0000244C  13C2 000035FA           1898          MOVE.B  D2,bit4
00002452                          1899  
00002452  B63C 0000               1900          CMP.B   #$0,D3
00002456  6700 0016               1901          BEQ     MISCBYTE
0000245A  B63C 0001               1902          CMP.B   #$1,D3
0000245E  6700 0020               1903          BEQ     MISCWORD
00002462  B63C 0002               1904          CMP.B   #$2,D3
00002466  6700 0028               1905          BEQ     MISCLONG
0000246A  6000 0B5A               1906          BRA     INVOP
0000246E                          1907  *************************************************************
0000246E                          1908  * Immediate data operation size BYTE
0000246E                          1909  MISCBYTE
0000246E  6100 004C               1910          BSR     MISCPRINT
00002472  43F9 000032AD           1911          LEA     MBYTE,A1
00002478                          1912  
00002478                          1913          * Moves size to D4, needed to use DISPEA
00002478  183C 0001               1914          MOVE.B  #$1,D4
0000247C  6000 001E               1915          BRA     MISCEA
00002480                          1916  
00002480                          1917  *************************************************************
00002480                          1918  * Immediate data operation size WORD
00002480                          1919  MISCWORD
00002480  6100 003A               1920          BSR     MISCPRINT
00002484  43F9 000032B0           1921          LEA     MWORD,A1
0000248A                          1922  
0000248A  1803                    1923          MOVE.B  D3,D4
0000248C  6000 000E               1924          BRA     MISCEA
00002490                          1925  
00002490                          1926  
00002490                          1927  *************************************************************
00002490                          1928  * Immediate data operation size LONG
00002490                          1929  MISCLONG
00002490  6100 002A               1930          BSR     MISCPRINT
00002494  43F9 000032B3           1931          LEA     MLONG,A1
0000249A                          1932  
0000249A                          1933          * Moves size to D4, needed to use DISPEA
0000249A  1803                    1934          MOVE.B  D3,D4
0000249C                          1935  
0000249C                          1936  MISCEA
0000249C  103C 000E               1937          MOVE.B  #14,D0
000024A0  4E4F                    1938          TRAP    #15
000024A2  43F9 0000328B           1939          LEA     TAB,A1
000024A8  103C 000E               1940          MOVE.B  #14,D0
000024AC  4E4F                    1941          TRAP    #15
000024AE                          1942  
000024AE  45F9 000024B8           1943          LEA     MISCEA2,A2
000024B4  6000 0946               1944          BRA     SUBEA
000024B8                          1945  MISCEA2
000024B8  6000 0B7E               1946          BRA     ENDNEWLINE
000024BC                          1947  
000024BC                          1948  *************************************************************
000024BC                          1949  * Display IMD op-code
000024BC                          1950  MISCPRINT
000024BC  0C39 0004 000035F7      1951          CMP.B   #$4,bit1
000024C4  6700 0018               1952          BEQ     MISCPRINTNEG
000024C8  0C39 0006 000035F7      1953          CMP.B   #$6,bit1
000024D0  6700 0002               1954          BEQ     MISCPRINTNOT
000024D4                          1955  
000024D4                          1956  MISCPRINTNOT
000024D4  43F9 0000333F           1957          LEA     MNOT,A1
000024DA  6000 000C               1958          BRA     MISCPRINTEND
000024DE                          1959  
000024DE                          1960  MISCPRINTNEG
000024DE  43F9 0000334A           1961          LEA     MNEG,A1
000024E4  6000 0002               1962          BRA     MISCPRINTEND
000024E8                          1963  
000024E8                          1964  MISCPRINTEND
000024E8  103C 000E               1965          MOVE.B  #14,D0
000024EC  4E4F                    1966          TRAP    #15
000024EE  4E75                    1967          RTS
000024F0                          1968  
000024F0                          1969  *******************************************************************************
000024F0                          1970  * ADDQ section 
000024F0                          1971  
000024F0                          1972  ADDQ    
000024F0                          1973  *       BRA     IMD
000024F0                          1974          
000024F0  13C5 000035F7           1975          MOVE.B  D5,bit1
000024F6  141E                    1976          MOVE.B  (A6)+,D2
000024F8                          1977  
000024F8  DE02                    1978          ADD.B   D2,D7
000024FA                          1979  
000024FA  1602                    1980          MOVE.B  D2,D3               *copy data at D2 to D3
000024FC                          1981                                      *get digit in 10's place
000024FC  E80B                    1982          LSR.B   #4,D3               Shifts right to get rid of 1's place
000024FE                          1983                                      *get digit in 1's place
000024FE  E90A                    1984          LSL.B   #4,D2               Shift left to get rid of 10's place
00002500  E80A                    1985          LSR.B   #4,D2               Shift back right into 1's place
00002502                          1986  
00002502                          1987          * gets size
00002502  3803                    1988          MOVE.W  D3,D4
00002504  E44C                    1989          LSR.W   #$2,D4
00002506  13C4 000035F8           1990          MOVE.B  D4,bit2
0000250C                          1991      
0000250C                          1992  
0000250C                          1993  *        BRA     IMD
0000250C  43F9 00003370           1994          LEA     MADDQ,A1
00002512  103C 000E               1995          MOVE.B  #14,D0
00002516  4E4F                    1996          TRAP    #15
00002518                          1997          
00002518                          1998          *determine size
00002518  B83C 0000               1999          CMP.B   #$0,D4
0000251C  6700 0018               2000          BEQ     ADDQB
00002520  B87C 0001               2001          CMP.W   #$1,D4
00002524  6700 0020               2002          BEQ     ADDQW
00002528  B8BC 00000002           2003          CMP.L   #$2,D4
0000252E  6700 0026               2004          BEQ     ADDQL
00002532  6000 0A92               2005          BRA     INVOP
00002536                          2006  
00002536                          2007  ADDQB
00002536  43F9 000032AD           2008          LEA     MBYTE,A1
0000253C  103C 000E               2009          MOVE.B  #14,D0
00002540  4E4F                    2010          TRAP    #15
00002542  6000 0022               2011          BRA     ADDQCONT
00002546                          2012          
00002546                          2013  ADDQW
00002546  43F9 000032B0           2014          LEA     MWORD,A1
0000254C  103C 000E               2015          MOVE.B  #14,D0
00002550  4E4F                    2016          TRAP    #15
00002552  6000 0012               2017          BRA     ADDQCONT
00002556                          2018          
00002556                          2019  ADDQL        
00002556  43F9 000032B3           2020          LEA     MLONG,A1
0000255C  103C 000E               2021          MOVE.B  #14,D0
00002560  4E4F                    2022          TRAP    #15
00002562  6000 0002               2023          BRA     ADDQCONT
00002566                          2024          
00002566                          2025  ADDQCONT        
00002566  43F9 0000328B           2026          LEA     TAB,A1
0000256C  103C 000E               2027          MOVE.B  #14,D0
00002570  4E4F                    2028          TRAP    #15
00002572                          2029  
00002572  43F9 00003299           2030          LEA     HASH,A1
00002578  103C 000E               2031          MOVE.B  #14,D0
0000257C  4E4F                    2032          TRAP    #15
0000257E                          2033          
0000257E  E20D                    2034          LSR.B   #1,D5               Shifts the byte over to get the value of the immediate data
00002580  BA3C 0000               2035          CMP.B   #$0,D5              Checks if the value is 0
00002584  6600 0006               2036          BNE     ADDQCONT2           If it isn't then skips this next part
00002588  1A3C 0008               2037          MOVE.B  #8,D5               If it is, then replaces the 0 with 8
0000258C                          2038  
0000258C                          2039  ADDQCONT2
0000258C  1205                    2040          MOVE.B  D5,D1
0000258E  103C 0003               2041          MOVE.B  #3,D0
00002592  4E4F                    2042          TRAP    #15
00002594                          2043          
00002594  43F9 0000328F           2044          LEA     COMMA,A1
0000259A  103C 000E               2045          MOVE.B  #14,D0
0000259E  4E4F                    2046          TRAP    #15
000025A0                          2047          
000025A0  6000 0002               2048          BRA     ADDQEA
000025A4                          2049          
000025A4                          2050  ADDQEA
000025A4  E30B                    2051          LSL.B   #1,D3               Shifts the byte to the left
000025A6  C63C 0007               2052          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
000025AA                          2053  
000025AA  0882 0003               2054          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
000025AE  6700 0004               2055          BEQ     ADDQEA2             If it was already zero, then it will skip this next step
000025B2  5203                    2056          ADD.B   #$1,D3              It it was one, then it will add one to the mode
000025B4                          2057  
000025B4                          2058  ADDQEA2
000025B4  13C2 000035FA           2059          MOVE.B  D2,bit4     *REG?
000025BA  13C3 000035F9           2060          MOVE.B  D3,bit3     *MODE?
000025C0  13C4 000035F8           2061          MOVE.B  D4,bit2     *SIZE?
000025C6  45F9 00003038           2062          LEA     ENDNEWLINE,A2
000025CC  6000 082E               2063          BRA     SUBEA
000025D0                          2064          ***
000025D0                          2065          
000025D0                          2066          
000025D0  B63C 0000               2067          CMP.B   #$0,D3
000025D4  6700 002A               2068          BEQ     DN_EAM
000025D8  B63C 0001               2069          CMP.B   #$1,D3
000025DC  6700 003A               2070          BEQ     AN_EAM
000025E0  B63C 0002               2071          CMP.B   #$2,D3
000025E4  6700 004A               2072          BEQ     INAN_EAM
000025E8  B63C 0003               2073          CMP.B   #$3,D3
000025EC  6700 0072               2074          BEQ     INC_EAM
000025F0  B63C 0004               2075          CMP.B   #$4,D3
000025F4  6700 00A6               2076          BEQ     DEC_EAM
000025F8  B63C 0007               2077          CMP.B   #$7,D3
000025FC  6700 00DA               2078          BEQ     ABS_EA
00002600                          2079          
00002600                          2080  DN_EAM
00002600  43F9 000032A3           2081          LEA     DISPD,A1
00002606  103C 000E               2082          MOVE.B  #14,D0
0000260A  4E4F                    2083          TRAP    #15
0000260C  1202                    2084          MOVE.B  D2,D1
0000260E  103C 0003               2085          MOVE.B  #3,D0
00002612  4E4F                    2086          TRAP    #15
00002614  6000 0A22               2087          BRA     ENDNEWLINE
00002618                          2088          
00002618                          2089  AN_EAM
00002618  43F9 0000329D           2090          LEA     DISPA,A1
0000261E  103C 000E               2091          MOVE.B  #14,D0
00002622  4E4F                    2092          TRAP    #15
00002624  1202                    2093          MOVE.B  D2,D1
00002626  103C 0003               2094          MOVE.B  #3,D0
0000262A  4E4F                    2095          TRAP    #15
0000262C  6000 0A0A               2096          BRA     ENDNEWLINE
00002630                          2097          
00002630                          2098  INAN_EAM
00002630  43F9 00003291           2099          LEA     OPENBRA,A1
00002636  103C 000E               2100          MOVE.B  #14,D0
0000263A  4E4F                    2101          TRAP    #15
0000263C  43F9 0000329D           2102          LEA     DISPA,A1
00002642  103C 000E               2103          MOVE.B  #14,D0
00002646  4E4F                    2104          TRAP    #15
00002648  1202                    2105          MOVE.B  D2,D1
0000264A  103C 0003               2106          MOVE.B  #3,D0
0000264E  4E4F                    2107          TRAP    #15
00002650  43F9 00003293           2108          LEA     CLOSEBRA,A1
00002656  103C 000E               2109          MOVE.B  #14,D0
0000265A  4E4F                    2110          TRAP    #15
0000265C  6000 09DA               2111          BRA     ENDNEWLINE
00002660                          2112          
00002660                          2113  INC_EAM                             *Consider combining inc and dec with in and removing dup com
00002660  43F9 00003291           2114          LEA     OPENBRA,A1
00002666  103C 000E               2115          MOVE.B  #14,D0
0000266A  4E4F                    2116          TRAP    #15
0000266C  43F9 0000329D           2117          LEA     DISPA,A1
00002672  103C 000E               2118          MOVE.B  #14,D0
00002676  4E4F                    2119          TRAP    #15
00002678                          2120          
00002678  3202                    2121          MOVE.W  D2,D1
0000267A  103C 0003               2122          MOVE.B  #3,D0
0000267E  4E4F                    2123          TRAP    #15
00002680                          2124          
00002680  43F9 00003293           2125          LEA     CLOSEBRA,A1
00002686  103C 000E               2126          MOVE.B  #14,D0
0000268A  4E4F                    2127          TRAP    #15
0000268C  43F9 00003295           2128          LEA     POS,A1
00002692  103C 000E               2129          MOVE.B  #14,D0
00002696  4E4F                    2130          TRAP    #15
00002698  6000 099E               2131          BRA     ENDNEWLINE
0000269C                          2132          
0000269C                          2133  DEC_EAM
0000269C  43F9 00003297           2134          LEA     NEG,A1
000026A2  103C 000E               2135          MOVE.B  #14,D0
000026A6  4E4F                    2136          TRAP    #15
000026A8  43F9 00003291           2137          LEA     OPENBRA,A1
000026AE  103C 000E               2138          MOVE.B  #14,D0
000026B2  4E4F                    2139          TRAP    #15
000026B4  43F9 0000329D           2140          LEA     DISPA,A1
000026BA  103C 000E               2141          MOVE.B  #14,D0
000026BE  4E4F                    2142          TRAP    #15
000026C0  1202                    2143          MOVE.B  D2,D1
000026C2  103C 0003               2144          MOVE.B  #3,D0
000026C6  4E4F                    2145          TRAP    #15
000026C8  43F9 00003293           2146          LEA     CLOSEBRA,A1
000026CE  103C 000E               2147          MOVE.B  #14,D0
000026D2  4E4F                    2148          TRAP    #15
000026D4  6000 0962               2149          BRA     ENDNEWLINE
000026D8                          2150          
000026D8                          2151  ABS_EA  
000026D8                          2152          *USE D5 TO SET SIZE APPROPRIATELY AND TO FULFILL REQ TO USE DISPEA SR
000026D8  45F9 000026E2           2153          LEA     ABS_EA2,A2
000026DE  6000 086C               2154          BRA     DISPEA
000026E2                          2155          
000026E2                          2156  ABS_EA2
000026E2  6000 0954               2157          BRA     ENDNEWLINE
000026E6                          2158  
000026E6                          2159  *************************************************************************
000026E6                          2160  * MOVEM stuff
000026E6                          2161          *   D5 is bit1
000026E6                          2162          *   D3 is bit2
000026E6                          2163          *   D2 is bit3
000026E6                          2164  MISCMOVEM
000026E6  1805                    2165          MOVE.B  D5,D4               Gets the dr field and stores it into D5
000026E8  4245                    2166          CLR     D5                  Moves 0 to D5
000026EA  0804 0002               2167          BTST    #2,D4               Checks the bit at spot 2
000026EE  6700 0006               2168          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
000026F2  1A3C 0001               2169          MOVE.B  #1,D5               Else, it will skip it
000026F6                          2170  
000026F6                          2171  MISCMOVEM2
000026F6  4246                    2172          CLR     D6                  Clears D6, setting it to 0
000026F8  1803                    2173          MOVE.B  D3,D4               Gets the size field and stores it into D6
000026FA  0804 0002               2174          BTST    #2,D4               Checks the bit at spot 2
000026FE  6700 0006               2175          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
00002702  1C3C 0001               2176          MOVE.B  #1,D6               Else, it will skip it. 
00002706                          2177  
00002706                          2178  MISCMOVEM3
00002706  C63C 0003               2179          AND.B   #$3,D3              Gets ride of the first 2 bits
0000270A  E30B                    2180          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
0000270C  0882 0003               2181          BCLR    #3,D2               Checks furthest left bit and set it to 0
00002710  6700 0006               2182          BEQ     MISCMOVEM4
00002714  08C3 0000               2183          BSET    #0,D3               If bit was 1, adds 1 to mode
00002718                          2184  
00002718                          2185      * bit1 is in D5 dr field
00002718                          2186      * bit2 is in D6 size
00002718                          2187      * bit3 is in D3 mode
00002718                          2188      * bit4 is in D2 reg
00002718                          2189  MISCMOVEM4
00002718  13C5 000035F7           2190          MOVE.B  D5,bit1
0000271E  13C6 000035F8           2191          MOVE.B  D6,bit2
00002724  13C3 000035F9           2192          MOVE.B  D3,bit3
0000272A  13C2 000035FA           2193          MOVE.B  D2,bit4
00002730                          2194  
00002730                          2195      * Prints out MOVEM and size + tab
00002730  43F9 0000330B           2196          LEA     MMOVEM,A1
00002736  103C 000E               2197          MOVE.B  #14,D0
0000273A  4E4F                    2198          TRAP    #15
0000273C                          2199  
0000273C                          2200  * Finds the appropiate size and prints it out
0000273C  BC3C 0001               2201          CMP.B   #1,D6
00002740  6700 000C               2202          BEQ     MISCMMSIZEL
00002744  43F9 000032B0           2203          LEA     MWORD,A1
0000274A  6000 0008               2204          BRA     MISCMMPRINTSIZE
0000274E                          2205  
0000274E                          2206  MISCMMSIZEL
0000274E  43F9 000032B3           2207          LEA     MLONG,A1
00002754                          2208  
00002754                          2209  MISCMMPRINTSIZE
00002754  4E4F                    2210          TRAP    #15
00002756  43F9 0000328B           2211          LEA     TAB,A1
0000275C  4E4F                    2212          TRAP    #15
0000275E                          2213  
0000275E                          2214  * Figures out if it is REG-to-MEM or MEM-to-REG
0000275E  3C1E                    2215          MOVE.W  (A6)+,D6
00002760  BA3C 0000               2216          CMP.B   #0,D5
00002764  6700 0006               2217          BEQ     MISCMMPREDECCHECK
00002768  6000 007C               2218          BRA     MISCMMPOSTINC
0000276C                          2219  
0000276C                          2220  MISCMMPREDECCHECK
0000276C  B63C 0004               2221          CMP.B   #$4,D3
00002770  6700 0006               2222          BEQ     MISCMMPREDEC
00002774  6000 00DE               2223          BRA     MISCMMREGMEM
00002778                          2224  
00002778                          2225  ******************************************************************
00002778                          2226  * MOVEM Post-decrement
00002778                          2227  * Prints out registers from post-decrement
00002778                          2228  * D6 holds the reg list
00002778                          2229  MISCMMPREDEC
00002778  1806                    2230          MOVE.B  D6,D4
0000277A  3E3C 0008               2231          MOVE.W  #8,D7               Counter
0000277E  123C 000F               2232          MOVE.B  #$F,D1
00002782                          2233  
00002782  49F9 0000329D           2234          LEA     DISPA,A4
00002788  6100 0032               2235          BSR     MISCMMPREDECPRINT
0000278C                          2236  
0000278C  3806                    2237          MOVE.W  D6,D4
0000278E  E04C                    2238          LSR.W   #8,D4
00002790  3E3C 0008               2239          MOVE.W  #8,D7               Counter
00002794  49F9 000032A3           2240          LEA     DISPD,A4
0000279A  6100 0020               2241          BSR     MISCMMPREDECPRINT
0000279E  6000 0002               2242          BRA     MISCMMPREDEC2
000027A2                          2243  
000027A2                          2244  MISCMMPREDEC2
000027A2  43F9 0000328F           2245          LEA     COMMA,A1
000027A8  103C 000E               2246          MOVE.B  #14,D0
000027AC  4E4F                    2247          TRAP    #15
000027AE                          2248  
000027AE  45F9 000027B8           2249          LEA     MISCMMPREDEC3,A2
000027B4  6000 0646               2250          BRA     SUBEA
000027B8                          2251  
000027B8                          2252  MISCMMPREDEC3
000027B8  6000 087E               2253          BRA     ENDNEWLINE
000027BC                          2254  
000027BC                          2255  * Prints out reg list
000027BC                          2256  MISCMMPREDECPRINT
000027BC  E30C                    2257          LSL.B   #1,D4
000027BE  6400 001C               2258          BCC     MISCMMPREDECPRINT3
000027C2                          2259  
000027C2  B23C 000F               2260          CMP.B   #$F,D1
000027C6  6700 0008               2261          BEQ     MISCMMPREDECPRINT2
000027CA  4EB9 000028CA           2262          JSR     MISCMMSLASH
000027D0                          2263  
000027D0                          2264  MISCMMPREDECPRINT2
000027D0  224C                    2265          MOVEA.L A4,A1
000027D2  103C 000E               2266          MOVE.B  #14,D0
000027D6  4E4F                    2267          TRAP    #15
000027D8  6100 00E2               2268          BSR     MISCMMPRINTNUM
000027DC                          2269  
000027DC                          2270  MISCMMPREDECPRINT3
000027DC  5307                    2271          SUB.B   #1,D7
000027DE  BE3C 0000               2272          CMP.B   #0,D7
000027E2  66D8                    2273          BNE     MISCMMPREDECPRINT
000027E4  4E75                    2274          RTS
000027E6                          2275  
000027E6                          2276  ******************************************************************
000027E6                          2277  * MOVEM Post-increment
000027E6                          2278  * Prints out registers from post-increment
000027E6                          2279  * D6 holds the reg list
000027E6                          2280  MISCMMPOSTINC
000027E6  45F9 000027F0           2281          LEA     MISCMMPOSTINC2,A2
000027EC  6000 060E               2282          BRA     SUBEA
000027F0                          2283  
000027F0                          2284  MISCMMPOSTINC2
000027F0  43F9 0000328F           2285          LEA     COMMA,A1
000027F6  103C 000E               2286          MOVE.B  #14,D0
000027FA  4E4F                    2287          TRAP    #15
000027FC                          2288  
000027FC  3806                    2289          MOVE.W  D6,D4
000027FE  E04C                    2290          LSR.W   #8,D4
00002800  3E3C 0008               2291          MOVE.W  #8,D7               Counter
00002804  123C 000F               2292          MOVE.B  #$F,D1
00002808                          2293  
00002808  49F9 0000329D           2294          LEA     DISPA,A4
0000280E  6100 001A               2295          BSR     MISCMMPOSTINCPRINT
00002812                          2296  
00002812  1806                    2297          MOVE.B  D6,D4
00002814  3E3C 0008               2298          MOVE.W  #8,D7               Counter
00002818  49F9 000032A3           2299          LEA     DISPD,A4
0000281E  6100 000A               2300          BSR     MISCMMPOSTINCPRINT
00002822  6000 0002               2301          BRA     MISCMMPOSTINC3
00002826                          2302  
00002826                          2303  MISCMMPOSTINC3
00002826  6000 0810               2304          BRA     ENDNEWLINE
0000282A                          2305  
0000282A                          2306  * Prints out reg list
0000282A                          2307  MISCMMPOSTINCPRINT
0000282A  E20C                    2308          LSR.B   #1,D4
0000282C  6400 001C               2309          BCC     MISCMMPOSTINCPRINT3
00002830                          2310  
00002830  B23C 000F               2311          CMP.B   #$F,D1
00002834  6700 0008               2312          BEQ     MISCMMPOSTINCPRINT2
00002838  4EB9 000028CA           2313          JSR     MISCMMSLASH
0000283E                          2314  
0000283E                          2315  MISCMMPOSTINCPRINT2
0000283E  224C                    2316          MOVEA.L A4,A1
00002840  103C 000E               2317          MOVE.B  #14,D0
00002844  4E4F                    2318          TRAP    #15
00002846  6100 0074               2319          BSR     MISCMMPRINTNUM
0000284A                          2320  
0000284A                          2321  MISCMMPOSTINCPRINT3
0000284A  5307                    2322          SUB.B   #1,D7
0000284C  BE3C 0000               2323          CMP.B   #0,D7
00002850  66D8                    2324          BNE     MISCMMPOSTINCPRINT
00002852  4E75                    2325          RTS
00002854                          2326  
00002854                          2327  ******************************************************************
00002854                          2328  * MOVEM REG-to-MEM non-predecrement
00002854                          2329  * Prints out a register to memory when it is NOT in predecrement
00002854                          2330  * D6 holds the reg list
00002854                          2331  MISCMMREGMEM
00002854  1806                    2332          MOVE.B  D6,D4
00002856  3E3C 0008               2333          MOVE.W  #8,D7               Counter
0000285A  123C 000F               2334          MOVE.B  #$F,D1
0000285E                          2335  
0000285E  49F9 000032A3           2336          LEA     DISPD,A4
00002864  61C4                    2337          BSR     MISCMMPOSTINCPRINT
00002866                          2338  
00002866  3806                    2339          MOVE.W  D6,D4
00002868  E04C                    2340          LSR.W   #8,D4
0000286A  3E3C 0008               2341          MOVE.W  #8,D7               Counter
0000286E  49F9 0000329D           2342          LEA     DISPA,A4
00002874  61B4                    2343          BSR     MISCMMPOSTINCPRINT
00002876  6000 0002               2344          BRA     MISCMMREGMEM2
0000287A                          2345  
0000287A                          2346  MISCMMREGMEM2
0000287A  43F9 0000328F           2347          LEA     COMMA,A1
00002880  103C 000E               2348          MOVE.B  #14,D0
00002884  4E4F                    2349          TRAP    #15
00002886                          2350  
00002886  45F9 00002890           2351          LEA     MISCMMREGMEM3,A2
0000288C  6000 056E               2352          BRA     SUBEA
00002890                          2353  
00002890                          2354  MISCMMREGMEM3
00002890  6000 07A6               2355          BRA     ENDNEWLINE
00002894                          2356  
00002894                          2357  * Prints out reg list
00002894                          2358  MISCMMREGMEMPRINT
00002894  E20C                    2359          LSR.B   #1,D4
00002896  64B2                    2360          BCC     MISCMMPOSTINCPRINT3
00002898                          2361  
00002898  B23C 000F               2362          CMP.B   #$F,D1
0000289C  67A0                    2363          BEQ     MISCMMPOSTINCPRINT2
0000289E  4EB9 000028CA           2364          JSR     MISCMMSLASH
000028A4                          2365  
000028A4                          2366  MISCMMREGMEMPRINT2
000028A4  224C                    2367          MOVEA.L A4,A1
000028A6  103C 000E               2368          MOVE.B  #14,D0
000028AA  4E4F                    2369          TRAP    #15
000028AC  6100 000E               2370          BSR     MISCMMPRINTNUM
000028B0                          2371  
000028B0                          2372  MISCMMREGMEMPRINT3
000028B0  5307                    2373          SUB.B   #1,D7
000028B2  BE3C 0000               2374          CMP.B   #0,D7
000028B6  6600 FF72               2375          BNE     MISCMMPOSTINCPRINT
000028BA  4E75                    2376          RTS
000028BC                          2377  
000028BC                          2378  
000028BC                          2379  
000028BC                          2380  ***********************************************
000028BC                          2381  * Stuff for printing reg list
000028BC                          2382  MISCMMPRINTNUM
000028BC  123C 0008               2383          MOVE.B  #8,D1
000028C0  9207                    2384          SUB.B   D7,D1
000028C2  103C 0003               2385          MOVE.B  #3,D0
000028C6  4E4F                    2386          TRAP    #15
000028C8  4E75                    2387          RTS
000028CA                          2388  
000028CA                          2389  MISCMMSLASH
000028CA  43F9 0000329B           2390          LEA     SLASH,A1
000028D0  103C 000E               2391          MOVE.B  #14,D0
000028D4  4E4F                    2392          TRAP    #15
000028D6  4E75                    2393          RTS
000028D8                          2394  
000028D8                          2395  ******************************************************************************************************
000028D8                          2396  * SUB section
000028D8                          2397  
000028D8                          2398          *   Grabs next two nibbles
000028D8  141E                    2399  SUB     MOVE.B  (A6)+,D2
000028DA                          2400  
000028DA  DE02                    2401          ADD.B   D2,D7
000028DC                          2402  
000028DC  1602                    2403          MOVE.B  D2,D3               Copies data at D2 to D3
000028DE                          2404          *   this gets digit in 10's place
000028DE  E80B                    2405          LSR.B   #4,D3               Shifts right to get rid of 1's place
000028E0                          2406          *   this gets digit in 1's place
000028E0  E90A                    2407          LSL.B   #4,D2               Shifts left to get rid of 10's place
000028E2  E80A                    2408          LSR.B   #4,D2               Shifts back right into 1's place
000028E4                          2409  
000028E4                          2410          *   D3 holds digit in 10's place
000028E4                          2411          *   D2 holds digit in 1's place
000028E4                          2412  
000028E4                          2413          
000028E4                          2414          *   Converts nibble into 3-bit parts
000028E4  E20B                    2415          LSR.B   #1,D3
000028E6  6400 0004               2416          BCC     SUB2
000028EA  5404                    2417          ADD.B   #$2,D4
000028EC                          2418          
000028EC  E20B                    2419  SUB2    LSR.B   #1,D3
000028EE  6400 0004               2420          BCC     SUB3
000028F2  5804                    2421          ADD.B   #$4,D4
000028F4                          2422          
000028F4  1205                    2423  SUB3    MOVE.B  D5,D1
000028F6  E209                    2424          LSR.B   #1,D1
000028F8  6400 0004               2425          BCC     SUB4
000028FC  5803                    2426          ADD.B   #$4,D3
000028FE                          2427  
000028FE  B43C 0007               2428  SUB4    CMP.B   #$7,D2
00002902  6D00 0006               2429          BLT     SUB1
00002906  5204                    2430          ADD.B   #$1,D4
00002908  5102                    2431          SUB.B   #$8,D2
0000290A                          2432  
0000290A                          2433          *   Stores them into addr
0000290A  13C1 000035F7           2434  SUB1    MOVE.B  D1,bit1
00002910  13C3 000035F8           2435          MOVE.B  D3,bit2
00002916  13C4 000035F9           2436          MOVE.B  D4,bit3
0000291C  13C2 000035FA           2437          MOVE.B  D2,bit4
00002922                          2438  
00002922                          2439          * do this later
00002922  4241                    2440          CLR     D1
00002924  7400                    2441          MOVE.L  #0,D2
00002926  7600                    2442          MOVE.L  #0,D3
00002928  7800                    2443          MOVE.L  #0,D4
0000292A  7A00                    2444          MOVE.L  #0,D5
0000292C  7C00                    2445          MOVE.L  #0,D6
0000292E                          2446  
0000292E                          2447          
0000292E                          2448  ******************************************************************************************************
0000292E                          2449  * After spliting the op-code into SUB's defined groupings
0000292E                          2450  *   This figures out which operation it is and goes to that sub-routine
0000292E                          2451  
0000292E                          2452          * This checks if bit0 is C which is either AND or MULS
0000292E  0C39 000C 000035F6      2453          CMP.B   #$C,bit0
00002936  6600 000E               2454          BNE     SUBACHECK
0000293A  0C39 0007 000035F8      2455          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
00002942  6700 F180               2456          BEQ     MULSW                       AND will use SUB's routine
00002946                          2457  
00002946                          2458  SUBACHECK
00002946                          2459          * This will display SUBA instead  -- check this later
00002946  0C39 0003 000035F8      2460          CMP.B   #$3,bit2
0000294E  6700 01D6               2461          BEQ     SUBA
00002952  0C39 0007 000035F8      2462          CMP.B   #$7,bit2
0000295A  6700 01CA               2463          BEQ     SUBA
0000295E                          2464  
0000295E                          2465          * This will find the size and stuff
0000295E  0C39 0000 000035F8      2466          CMP.B   #$0,bit2
00002966  6700 003E               2467          BEQ     SUBSIZE1
0000296A  0C39 0001 000035F8      2468          CMP.B   #$1,bit2
00002972  6700 0072               2469          BEQ     SUBSIZE2
00002976  0C39 0002 000035F8      2470          CMP.B   #$2,bit2
0000297E  6700 00A6               2471          BEQ     SUBSIZE3
00002982  0C39 0004 000035F8      2472          CMP.B   #$4,bit2
0000298A  6700 00DA               2473          BEQ     SUBSIZE4
0000298E  0C39 0005 000035F8      2474          CMP.B   #$5,bit2
00002996  6700 010E               2475          BEQ     SUBSIZE5
0000299A  0C39 0006 000035F8      2476          CMP.B   #$6,bit2
000029A2  6700 0142               2477          BEQ     SUBSIZE6
000029A6                          2478     
000029A6                          2479  ******************************************************************************************************
000029A6                          2480  *   Displays size, then does operation order
000029A6                          2481  
000029A6                          2482  *   000 byte    EA,DN
000029A6                          2483  SUBSIZE1
000029A6  6100 0260               2484          BSR     SUBPRINT
000029AA  43F9 000032AD           2485          LEA     MBYTE,A1
000029B0  103C 000E               2486          MOVE.B  #14,D0
000029B4  4E4F                    2487          TRAP    #15
000029B6  43F9 0000328B           2488          LEA     TAB,A1
000029BC  103C 000E               2489          MOVE.B  #14,D0
000029C0  4E4F                    2490          TRAP    #15
000029C2                          2491  
000029C2  45F9 000029CC           2492          LEA     SUBSIZE11,A2
000029C8  6000 0432               2493          BRA     SUBEA
000029CC                          2494  SUBSIZE11
000029CC  45F9 000029E2           2495          LEA     SUBSIZE12,A2
000029D2  43F9 0000328F           2496          LEA     COMMA,A1
000029D8  103C 000E               2497          MOVE.B  #14,D0
000029DC  4E4F                    2498          TRAP    #15
000029DE  6000 02F8               2499          BRA     SUBDN
000029E2                          2500  SUBSIZE12
000029E2  6000 0654               2501          BRA     ENDNEWLINE
000029E6                          2502  
000029E6                          2503  *************************************************
000029E6                          2504  *   001 word    EA,DN
000029E6                          2505  SUBSIZE2
000029E6  6100 0220               2506          BSR     SUBPRINT
000029EA  43F9 000032B0           2507          LEA     MWORD,A1
000029F0  103C 000E               2508          MOVE.B  #14,D0
000029F4  4E4F                    2509          TRAP    #15
000029F6  43F9 0000328B           2510          LEA     TAB,A1
000029FC  103C 000E               2511          MOVE.B  #14,D0
00002A00  4E4F                    2512          TRAP    #15
00002A02                          2513  
00002A02  45F9 00002A0C           2514          LEA     SUBSIZE21,A2
00002A08  6000 03F2               2515          BRA     SUBEA
00002A0C                          2516  SUBSIZE21
00002A0C  45F9 00002A22           2517          LEA     SUBSIZE22,A2
00002A12  43F9 0000328F           2518          LEA     COMMA,A1
00002A18  103C 000E               2519          MOVE.B  #14,D0
00002A1C  4E4F                    2520          TRAP    #15
00002A1E  6000 02B8               2521          BRA     SUBDN
00002A22                          2522  SUBSIZE22
00002A22  6000 0614               2523          BRA     ENDNEWLINE
00002A26                          2524  
00002A26                          2525  *************************************************
00002A26                          2526  *   010 long    EA,DN
00002A26                          2527  SUBSIZE3
00002A26  6100 01E0               2528          BSR     SUBPRINT
00002A2A  43F9 000032B3           2529          LEA     MLONG,A1
00002A30  103C 000E               2530          MOVE.B  #14,D0
00002A34  4E4F                    2531          TRAP    #15
00002A36  43F9 0000328B           2532          LEA     TAB,A1
00002A3C  103C 000E               2533          MOVE.B  #14,D0
00002A40  4E4F                    2534          TRAP    #15
00002A42                          2535  
00002A42  45F9 00002A4C           2536          LEA     SUBSIZE31,A2
00002A48  6000 03B2               2537          BRA     SUBEA
00002A4C                          2538  SUBSIZE31
00002A4C  45F9 00002A62           2539          LEA     SUBSIZE32,A2
00002A52  43F9 0000328F           2540          LEA     COMMA,A1
00002A58  103C 000E               2541          MOVE.B  #14,D0
00002A5C  4E4F                    2542          TRAP    #15
00002A5E  6000 0278               2543          BRA     SUBDN
00002A62                          2544  SUBSIZE32
00002A62  6000 05D4               2545          BRA     ENDNEWLINE
00002A66                          2546  
00002A66                          2547  *************************************************
00002A66                          2548  *   100 byte    DN,EA
00002A66                          2549  SUBSIZE4
00002A66  6100 01A0               2550          BSR     SUBPRINT
00002A6A  43F9 000032AD           2551          LEA     MBYTE,A1
00002A70  103C 000E               2552          MOVE.B  #14,D0
00002A74  4E4F                    2553          TRAP    #15
00002A76  43F9 0000328B           2554          LEA     TAB,A1
00002A7C  103C 000E               2555          MOVE.B  #14,D0
00002A80  4E4F                    2556          TRAP    #15
00002A82                          2557  
00002A82                          2558          *BSR     SUBERRORTEST1
00002A82                          2559  
00002A82  45F9 00002A8C           2560          LEA     SUBSIZE41,A2
00002A88  6000 024E               2561          BRA     SUBDN
00002A8C                          2562  SUBSIZE41
00002A8C  45F9 00002AA2           2563          LEA     SUBSIZE42,A2
00002A92  43F9 0000328F           2564          LEA     COMMA,A1
00002A98  103C 000E               2565          MOVE.B  #14,D0
00002A9C  4E4F                    2566          TRAP    #15
00002A9E  6000 035C               2567          BRA     SUBEA
00002AA2                          2568  SUBSIZE42
00002AA2  6000 0594               2569          BRA     ENDNEWLINE
00002AA6                          2570  
00002AA6                          2571  *************************************************
00002AA6                          2572  *   101 word    DN,EA
00002AA6                          2573  SUBSIZE5
00002AA6                          2574          *BSR     SUBERRORTEST1               * This does error testing
00002AA6  6100 0160               2575          BSR     SUBPRINT                    * Prints out 'SUB.'
00002AAA  43F9 000032B0           2576          LEA     MWORD,A1
00002AB0  103C 000E               2577          MOVE.B  #14,D0
00002AB4  4E4F                    2578          TRAP    #15
00002AB6  43F9 0000328B           2579          LEA     TAB,A1
00002ABC  103C 000E               2580          MOVE.B  #14,D0
00002AC0  4E4F                    2581          TRAP    #15
00002AC2                          2582  
00002AC2  45F9 00002ACC           2583          LEA     SUBSIZE51,A2
00002AC8  6000 020E               2584          BRA     SUBDN
00002ACC                          2585  SUBSIZE51
00002ACC  45F9 00002AE2           2586          LEA     SUBSIZE52,A2
00002AD2  43F9 0000328F           2587          LEA     COMMA,A1
00002AD8  103C 000E               2588          MOVE.B  #14,D0
00002ADC  4E4F                    2589          TRAP    #15
00002ADE  6000 031C               2590          BRA     SUBEA
00002AE2                          2591  SUBSIZE52
00002AE2  6000 0554               2592          BRA     ENDNEWLINE
00002AE6                          2593  
00002AE6                          2594  *************************************************
00002AE6                          2595  *   110 long    DN,EA
00002AE6                          2596  SUBSIZE6
00002AE6                          2597          *BSR     SUBERRORTEST1               * This does error testing
00002AE6  6100 0120               2598          BSR     SUBPRINT                    * Prints out 'SUB.'
00002AEA  43F9 000032B3           2599          LEA     MLONG,A1
00002AF0  103C 000E               2600          MOVE.B  #14,D0
00002AF4  4E4F                    2601          TRAP    #15
00002AF6  43F9 0000328B           2602          LEA     TAB,A1
00002AFC  103C 000E               2603          MOVE.B  #14,D0
00002B00  4E4F                    2604          TRAP    #15
00002B02                          2605  
00002B02                          2606          *BSR     SUBERRORTEST1
00002B02                          2607  
00002B02  45F9 00002B0C           2608          LEA     SUBSIZE61,A2
00002B08  6000 01CE               2609          BRA     SUBDN
00002B0C                          2610  SUBSIZE61
00002B0C  45F9 00002B22           2611          LEA     SUBSIZE62,A2
00002B12  43F9 0000328F           2612          LEA     COMMA,A1
00002B18  103C 000E               2613          MOVE.B  #14,D0
00002B1C  4E4F                    2614          TRAP    #15
00002B1E  6000 02DC               2615          BRA     SUBEA
00002B22                          2616  SUBSIZE62
00002B22  6000 0514               2617          BRA     ENDNEWLINE
00002B26                          2618  
00002B26                          2619  ****************************************************************************
00002B26                          2620  *   This section is for SUBA
00002B26                          2621  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002B26                          2622  SUBA
00002B26  0C39 0009 000035F6      2623          CMP.B   #$9,bit0
00002B2E  6700 001A               2624          BEQ     SUBPRINTSUBA
00002B32  0C39 000B 000035F6      2625          CMP.B   #$B,bit0
00002B3A  6700 001E               2626          BEQ     SUBPRINTCMPA
00002B3E  0C39 000D 000035F6      2627          CMP.B   #$D,bit0
00002B46  6700 0022               2628          BEQ     SUBPRINTADDA
00002B4A                          2629  
00002B4A                          2630  
00002B4A                          2631  SUBPRINTSUBA
00002B4A  43F9 00003324           2632          LEA     MSUBA,A1                    Displays 'SUBA.'
00002B50  103C 000E               2633          MOVE.B  #14,D0
00002B54  4E4F                    2634          TRAP    #15
00002B56  6000 0022               2635          BRA     SUBACONT
00002B5A                          2636  
00002B5A                          2637  SUBPRINTCMPA
00002B5A  43F9 00003359           2638          LEA     MCMPA,A1                    Displays 'SUBA.'
00002B60  103C 000E               2639          MOVE.B  #14,D0
00002B64  4E4F                    2640          TRAP    #15
00002B66  6000 0012               2641          BRA     SUBACONT
00002B6A                          2642  
00002B6A                          2643  SUBPRINTADDA
00002B6A  43F9 0000336A           2644          LEA     MADDA,A1                    Displays 'SUBA.'
00002B70  103C 000E               2645          MOVE.B  #14,D0
00002B74  4E4F                    2646          TRAP    #15
00002B76  6000 0002               2647          BRA     SUBACONT
00002B7A                          2648  
00002B7A                          2649  SUBACONT
00002B7A                          2650          * Does the rest of SUBA
00002B7A  0C39 0003 000035F8      2651          CMP.B   #$3,bit2
00002B82  6700 000E               2652          BEQ     SUBSIZE7
00002B86  0C39 0007 000035F8      2653          CMP.B   #$7,bit2
00002B8E  6700 003E               2654          BEQ     SUBSIZE8
00002B92                          2655  
00002B92                          2656  *************************************************
00002B92                          2657  *   SUBA Word   ea,An
00002B92                          2658  SUBSIZE7
00002B92  43F9 000032B0           2659          LEA     MWORD,A1
00002B98  103C 000E               2660          MOVE.B  #14,D0
00002B9C  4E4F                    2661          TRAP    #15
00002B9E  43F9 0000328B           2662          LEA     TAB,A1
00002BA4  103C 000E               2663          MOVE.B  #14,D0
00002BA8  4E4F                    2664          TRAP    #15
00002BAA                          2665  
00002BAA  45F9 00002BB4           2666          LEA     SUBSIZE71,A2
00002BB0  6000 024A               2667          BRA     SUBEA
00002BB4                          2668  SUBSIZE71
00002BB4  45F9 00002BCA           2669          LEA     SUBSIZE72,A2
00002BBA  43F9 0000328F           2670          LEA     COMMA,A1
00002BC0  103C 000E               2671          MOVE.B  #14,D0
00002BC4  4E4F                    2672          TRAP    #15
00002BC6  6000 0164               2673          BRA     SUBAN2
00002BCA                          2674  SUBSIZE72
00002BCA  6000 046C               2675          BRA     ENDNEWLINE
00002BCE                          2676  
00002BCE                          2677  *************************************************
00002BCE                          2678  *   SUBA longword   ea,An
00002BCE                          2679  SUBSIZE8
00002BCE  43F9 000032B3           2680          LEA     MLONG,A1
00002BD4  103C 000E               2681          MOVE.B  #14,D0
00002BD8  4E4F                    2682          TRAP    #15
00002BDA  43F9 0000328B           2683          LEA     TAB,A1
00002BE0  103C 000E               2684          MOVE.B  #14,D0
00002BE4  4E4F                    2685          TRAP    #15
00002BE6                          2686  
00002BE6  45F8 2BB4               2687          LEA     SUBSIZE71,A2
00002BEA  6000 0210               2688          BRA     SUBEA
00002BEE                          2689  SUBSIZE81
00002BEE  45F8 2BCA               2690          LEA     SUBSIZE72,A2
00002BF2  43F9 0000328F           2691          LEA     COMMA,A1
00002BF8  103C 000E               2692          MOVE.B  #14,D0
00002BFC  4E4F                    2693          TRAP    #15
00002BFE  6000 012C               2694          BRA     SUBAN2
00002C02                          2695  SUBSIZE82
00002C02  6000 0434               2696          BRA     ENDNEWLINE
00002C06                          2697  
00002C06                          2698  *************************************************
00002C06                          2699  * Jumps to memory location at A2
00002C06                          2700  SUBJMPA2
00002C06  4ED2                    2701          JMP     (A2)
00002C08                          2702  
00002C08                          2703  *************************************************
00002C08                          2704  * Prints out opcode name
00002C08                          2705  SUBPRINT
00002C08  0C39 0009 000035F6      2706          CMP.B   #$9,bit0                Prints SUB
00002C10  6700 0026               2707          BEQ     SUBPRINTSUB
00002C14  0C39 000B 000035F6      2708          CMP.B   #$B,bit0                Prints CMP or EOR
00002C1C  6700 004A               2709          BEQ     SUBPRINTB
00002C20  0C39 000C 000035F6      2710          CMP.B   #$C,bit0                Prints AND
00002C28  6700 001E               2711          BEQ     SUBPRINTAND
00002C2C  0C39 000D 000035F6      2712          CMP.B   #$D,bit0                Prints ADD
00002C34  6700 0022               2713          BEQ     SUBPRINTADD
00002C38                          2714  
00002C38                          2715  SUBPRINTSUB   * Displays 'SUB.' 
00002C38  43F9 0000331F           2716          LEA     MSUB,A1
00002C3E  103C 000E               2717          MOVE.B  #14,D0
00002C42  4E4F                    2718          TRAP    #15
00002C44  6000 004E               2719          BRA     SUBPRINTEND
00002C48                          2720  
00002C48                          2721  SUBPRINTAND   * Displays 'AND.' 
00002C48  43F9 0000332A           2722          LEA     MAND,A1
00002C4E  103C 000E               2723          MOVE.B  #14,D0
00002C52  4E4F                    2724          TRAP    #15
00002C54  6000 003E               2725          BRA     SUBPRINTEND
00002C58                          2726  
00002C58                          2727  SUBPRINTADD   * Displays 'ADD.' 
00002C58  43F9 0000332F           2728          LEA     MADD,A1
00002C5E  103C 000E               2729          MOVE.B  #14,D0
00002C62  4E4F                    2730          TRAP    #15
00002C64  6000 002E               2731          BRA     SUBPRINTEND
00002C68                          2732  
00002C68                          2733  SUBPRINTB
00002C68  0C39 0004 000035F8      2734          CMP.B   #$4,bit2
00002C70  6D00 0012               2735          BLT     SUBPRINTCMP
00002C74                          2736  
00002C74                          2737  SUBPRINTEOR   * Displays 'EOR.' 
00002C74  43F9 0000335F           2738          LEA     MEOR,A1
00002C7A  103C 000E               2739          MOVE.B  #14,D0
00002C7E  4E4F                    2740          TRAP    #15
00002C80  6000 0012               2741          BRA     SUBPRINTEND
00002C84                          2742  
00002C84                          2743  SUBPRINTCMP   * Displays 'CMP.' 
00002C84  43F9 0000334E           2744          LEA     MCMP,A1
00002C8A  103C 000E               2745          MOVE.B  #14,D0
00002C8E  4E4F                    2746          TRAP    #15
00002C90  6000 0002               2747          BRA     SUBPRINTEND
00002C94                          2748  
00002C94                          2749  SUBPRINTEND
00002C94  4E75                    2750          RTS
00002C96                          2751  
00002C96                          2752  
00002C96                          2753  *******************************************************************
00002C96                          2754  * Error testing for DN->EA operations
00002C96                          2755  *  Data register, address register, and immediate data cannot be destinations
00002C96                          2756  SUBERRORTEST1
00002C96                          2757          * test for DN or AN register, branches to invalid op code if true
00002C96  0C39 0000 000035F9      2758          CMP.B   #0,bit3
00002C9E  6700 0326               2759          BEQ     INVOP
00002CA2  0C39 0001 000035F9      2760          CMP.B   #1,bit3
00002CAA  6700 031A               2761          BEQ     INVOP
00002CAE                          2762          
00002CAE                          2763          * check if destination is immediate data
00002CAE  0C39 0007 000035F9      2764          CMP.B   #7,bit3
00002CB6  6600 001E               2765          BNE     SUBERRORTEST11
00002CBA  0C39 0000 000035FA      2766          CMP.B   #0,bit4
00002CC2  6700 0012               2767          BEQ     SUBERRORTEST11
00002CC6  0C39 0001 000035FA      2768          CMP.B   #1,bit4
00002CCE  6700 0006               2769          BEQ     SUBERRORTEST11
00002CD2  6000 02F2               2770          BRA     INVOP
00002CD6                          2771          
00002CD6                          2772  SUBERRORTEST11
00002CD6  4E75                    2773          RTS
00002CD8                          2774  
00002CD8                          2775  
00002CD8                          2776  ******************************************************************************************************
00002CD8                          2777  *   Displays data register
00002CD8                          2778  SUBDN
00002CD8  43F9 000032B6           2779          LEA     MDN,A1
00002CDE  103C 000E               2780          MOVE.B  #14,D0
00002CE2  4E4F                    2781          TRAP    #15
00002CE4                          2782  
00002CE4  1239 000035F7           2783          MOVE.B  bit1,D1
00002CEA  103C 0003               2784          MOVE.B  #3,D0
00002CEE  4E4F                    2785          TRAP    #15
00002CF0                          2786          
00002CF0  6000 FF14               2787          BRA     SUBJMPA2
00002CF4                          2788  
00002CF4                          2789  *   Displays data register
00002CF4                          2790  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002CF4                          2791  SUBDN2
00002CF4  43F9 000032B6           2792          LEA     MDN,A1
00002CFA  103C 000E               2793          MOVE.B  #14,D0
00002CFE  4E4F                    2794          TRAP    #15
00002D00                          2795  
00002D00  1239 000035FA           2796          MOVE.B  bit4,D1
00002D06  103C 0003               2797          MOVE.B  #3,D0
00002D0A  4E4F                    2798          TRAP    #15
00002D0C                          2799          
00002D0C  6000 FEF8               2800          BRA     SUBJMPA2
00002D10                          2801  
00002D10                          2802  *   Displays address register
00002D10                          2803  SUBAN
00002D10  43F9 000032B8           2804          LEA     MAN,A1
00002D16  103C 000E               2805          MOVE.B  #14,D0
00002D1A  4E4F                    2806          TRAP    #15
00002D1C                          2807  
00002D1C  1239 000035FA           2808          MOVE.B  bit4,D1
00002D22  103C 0003               2809          MOVE.B  #3,D0
00002D26  4E4F                    2810          TRAP    #15
00002D28                          2811          
00002D28  6000 FEDC               2812          BRA     SUBJMPA2
00002D2C                          2813  
00002D2C                          2814  *   Displays address register
00002D2C                          2815  *   This is for SUBA, SUBA puts An into bit1
00002D2C                          2816  SUBAN2
00002D2C  43F9 000032B8           2817          LEA     MAN,A1
00002D32  103C 000E               2818          MOVE.B  #14,D0
00002D36  4E4F                    2819          TRAP    #15
00002D38                          2820  
00002D38  1239 000035F7           2821          MOVE.B  bit1,D1
00002D3E  103C 0003               2822          MOVE.B  #3,D0
00002D42  4E4F                    2823          TRAP    #15
00002D44                          2824          
00002D44  6000 FEC0               2825          BRA     SUBJMPA2
00002D48                          2826  
00002D48                          2827  
00002D48                          2828  *   Displays indirect address register
00002D48                          2829  SUBANID
00002D48  43F9 00003291           2830          LEA     OPENBRA,A1
00002D4E  103C 000E               2831          MOVE.B  #14,D0
00002D52  4E4F                    2832          TRAP    #15
00002D54                          2833  
00002D54  43F9 000032B8           2834          LEA     MAN,A1
00002D5A  103C 000E               2835          MOVE.B  #14,D0
00002D5E  4E4F                    2836          TRAP    #15
00002D60                          2837  
00002D60  1239 000035FA           2838          MOVE.B  bit4,D1
00002D66  103C 0003               2839          MOVE.B  #3,D0
00002D6A  4E4F                    2840          TRAP    #15
00002D6C                          2841  
00002D6C  43F9 00003293           2842          LEA     CLOSEBRA,A1
00002D72  103C 000E               2843          MOVE.B  #14,D0
00002D76  4E4F                    2844          TRAP    #15
00002D78                          2845  
00002D78  6000 FE8C               2846          BRA     SUBJMPA2
00002D7C                          2847  
00002D7C                          2848  *   Displays indirect address register with post increment
00002D7C                          2849  SUBANIDPOS
00002D7C  43F9 00003291           2850          LEA     OPENBRA,A1
00002D82  103C 000E               2851          MOVE.B  #14,D0
00002D86  4E4F                    2852          TRAP    #15
00002D88                          2853  
00002D88  43F9 000032B8           2854          LEA     MAN,A1
00002D8E  103C 000E               2855          MOVE.B  #14,D0
00002D92  4E4F                    2856          TRAP    #15
00002D94                          2857  
00002D94  1239 000035FA           2858          MOVE.B  bit4,D1
00002D9A  103C 0003               2859          MOVE.B  #3,D0
00002D9E  4E4F                    2860          TRAP    #15
00002DA0                          2861  
00002DA0  43F9 00003293           2862          LEA     CLOSEBRA,A1
00002DA6  103C 000E               2863          MOVE.B  #14,D0
00002DAA  4E4F                    2864          TRAP    #15
00002DAC                          2865  
00002DAC  43F9 00003295           2866          LEA     POS,A1
00002DB2  103C 000E               2867          MOVE.B  #14,D0
00002DB6  4E4F                    2868          TRAP    #15
00002DB8                          2869  
00002DB8  6000 FE4C               2870          BRA     SUBJMPA2
00002DBC                          2871  
00002DBC                          2872  *   Displays indirect address register with pre decrement
00002DBC                          2873  SUBANIDNEG
00002DBC  43F9 00003297           2874          LEA     NEG,A1
00002DC2  103C 000E               2875          MOVE.B  #14,D0
00002DC6  4E4F                    2876          TRAP    #15
00002DC8                          2877  
00002DC8  43F9 00003291           2878          LEA     OPENBRA,A1
00002DCE  103C 000E               2879          MOVE.B  #14,D0
00002DD2  4E4F                    2880          TRAP    #15
00002DD4                          2881  
00002DD4  43F9 000032B8           2882          LEA     MAN,A1
00002DDA  103C 000E               2883          MOVE.B  #14,D0
00002DDE  4E4F                    2884          TRAP    #15
00002DE0                          2885  
00002DE0  1239 000035FA           2886          MOVE.B  bit4,D1
00002DE6  103C 0003               2887          MOVE.B  #3,D0
00002DEA  4E4F                    2888          TRAP    #15
00002DEC                          2889  
00002DEC  43F9 00003293           2890          LEA     CLOSEBRA,A1
00002DF2  103C 000E               2891          MOVE.B  #14,D0
00002DF6  4E4F                    2892          TRAP    #15
00002DF8                          2893  
00002DF8  6000 FE0C               2894          BRA     SUBJMPA2
00002DFC                          2895  
00002DFC                          2896  
00002DFC                          2897  
00002DFC                          2898  
00002DFC                          2899  ******************************************************************************************************
00002DFC                          2900  * Displays the EA as hex numbers
00002DFC                          2901  * 
00002DFC                          2902  SUBEA
00002DFC                          2903          *   This finds which mode to use
00002DFC  0C39 0000 000035F9      2904          CMP.B   #$0,bit3
00002E04  6700 FEEE               2905          BEQ     SUBDN2
00002E08  0C39 0001 000035F9      2906          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002E10  6700 FEFE               2907          BEQ     SUBAN
00002E14  0C39 0002 000035F9      2908          CMP.B   #$2,bit3
00002E1C  6700 FF2A               2909          BEQ     SUBANID
00002E20  0C39 0003 000035F9      2910          CMP.B   #$3,bit3
00002E28  6700 FF52               2911          BEQ     SUBANIDPOS
00002E2C  0C39 0004 000035F9      2912          CMP.B   #$4,bit3
00002E34  6786                    2913          BEQ     SUBANIDNEG
00002E36  0C39 0005 000035F9      2914          CMP.B   #$5,bit3
00002E3E  6700 0424               2915          BEQ     ERROR
00002E42  0C39 0006 000035F9      2916          CMP.B   #$6,bit3
00002E4A  6700 0418               2917          BEQ     ERROR
00002E4E  0C39 0007 000035F9      2918          CMP.B   #$7,bit3
00002E56  6700 0002               2919          BEQ     SUBEAHEX
00002E5A                          2920  
00002E5A                          2921  SUBEAHEX
00002E5A  0C39 0004 000035FA      2922          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002E62  6700 0086               2923          BEQ     SUBEAID
00002E66                          2924  SUBEAID2
00002E66                          2925          *   Else it will assume it is absolute addressing mode
00002E66  43F9 000032AB           2926          LEA     MHEX,A1
00002E6C  103C 000E               2927          MOVE.B  #14,D0
00002E70  4E4F                    2928          TRAP    #15
00002E72                          2929  
00002E72  0C39 0000 000035FA      2930          CMP.B   #$0,bit4
00002E7A  6700 007E               2931          BEQ     SUBEAHEX1
00002E7E  0C39 0001 000035FA      2932          CMP.B   #$1,bit4
00002E86  6700 007A               2933          BEQ     SUBEAHEX2
00002E8A                          2934  
00002E8A  0C39 0000 000035F8      2935          CMP.B   #$0,bit2            * SUB byte displays as word
00002E92  6700 0066               2936          BEQ     SUBEAHEX1
00002E96  0C39 0004 000035F8      2937          CMP.B   #$4,bit2            * SUB byte displays as word
00002E9E  6700 005A               2938          BEQ     SUBEAHEX1
00002EA2  0C39 0001 000035F8      2939          CMP.B   #$1,bit2            * SUB word
00002EAA  6700 004E               2940          BEQ     SUBEAHEX1
00002EAE  0C39 0005 000035F8      2941          CMP.B   #$5,bit2            * SUB word
00002EB6  6700 0042               2942          BEQ     SUBEAHEX1
00002EBA  0C39 0003 000035F8      2943          CMP.B   #$3,bit2            * SUBA word
00002EC2  6700 0036               2944          BEQ     SUBEAHEX1
00002EC6  0C39 0002 000035F8      2945          CMP.B   #$2,bit2            * SUB longword
00002ECE  6700 0032               2946          BEQ     SUBEAHEX2
00002ED2  0C39 0006 000035F8      2947          CMP.B   #$6,bit2            * SUB longword
00002EDA  6700 0026               2948          BEQ     SUBEAHEX2
00002EDE  0C39 0007 000035F8      2949          CMP.B   #$7,bit2            * SUBA longword
00002EE6  6700 001A               2950          BEQ     SUBEAHEX2
00002EEA                          2951  
00002EEA                          2952  SUBEAID
00002EEA  43F9 00003299           2953          LEA     HASH,A1
00002EF0  103C 000E               2954          MOVE.B  #14,D0
00002EF4  4E4F                    2955          TRAP    #15
00002EF6  6000 FF6E               2956          BRA     SUBEAID2
00002EFA                          2957  
00002EFA                          2958  SUBEAHEX1  
00002EFA                          2959          *absolute address word
00002EFA  1E3C 0002               2960          MOVE.B  #2,D7
00002EFE  6000 000A               2961          BRA     SUBEAHEX3
00002F02                          2962  
00002F02                          2963  SUBEAHEX2  *absolute address long
00002F02  1E3C 0004               2964          MOVE.B  #4,D7
00002F06  6000 0002               2965          BRA     SUBEAHEX3
00002F0A                          2966  
00002F0A                          2967  SUBEAHEX3
00002F0A  BE3C 0000               2968          CMP.B   #0,D7               Compares current addr to ending addr
00002F0E  6700 FCF6               2969          BEQ     SUBJMPA2            Branches to done if they are equal
00002F12                          2970  
00002F12                          2971      
00002F12  141E                    2972          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002F14                          2973          
00002F14  1602                    2974          MOVE.B  D2,D3               Copies data at D2 to D3
00002F16                          2975          *   this gets digit in 10's place
00002F16  E80B                    2976          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F18                          2977          *   this gets digit in 1's place
00002F18  E90A                    2978          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F1A  E80A                    2979          LSR.B   #4,D2               Shifts back right into 1's place
00002F1C                          2980  
00002F1C                          2981          
00002F1C                          2982          *   D3 holds digit in 10's place
00002F1C                          2983          *   D2 holds digit in 1's place
00002F1C                          2984          
00002F1C  1203                    2985          MOVE.B  D3,D1               Displays digit in 10's place first
00002F1E                          2986  
00002F1E                          2987          *   converts digits 10+ into letters
00002F1E                          2988  
00002F1E  47F9 00002F32           2989          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002F24  B23C 0009               2990          CMP.B   #9,D1               Compares digit to 9
00002F28  6E00 0164               2991          BGT     CONV                Print out letter representation if greater than 9
00002F2C                          2992  
00002F2C  103C 0003               2993          MOVE.B  #3,D0               Displays digit if it is less than A
00002F30  4E4F                    2994          TRAP    #15
00002F32                          2995          
00002F32                          2996  SUBEAHEX4    
00002F32  1202                    2997          MOVE.B  D2,D1               Displays digit in 1's place second
00002F34                          2998  
00002F34                          2999          *   converts digits 10+ into letters
00002F34  47F9 00002F48           3000          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002F3A  B23C 0009               3001          CMP.B   #9,D1               Compares digit to 9
00002F3E  6E00 014E               3002          BGT     CONV                Print out letter representation if greater than 9
00002F42                          3003          
00002F42  103C 0003               3004          MOVE.B  #3,D0               Displays digit if it is less than A
00002F46  4E4F                    3005          TRAP    #15
00002F48                          3006          
00002F48                          3007  SUBEAHEX5         
00002F48                          3008  * Display counter -- creates new line every 8 bytes
00002F48                          3009          * D7 is used as counter
00002F48                          3010          
00002F48  5307                    3011          SUB.B   #1,D7                       
00002F4A  60BE                    3012          BRA     SUBEAHEX3              Loops back to display next address
00002F4C                          3013  
00002F4C                          3014  ***   display EA ends here
00002F4C                          3015  
00002F4C                          3016  ******************************************************************************************************
00002F4C                          3017  * Displays the EA as hex numbers
00002F4C                          3018  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002F4C                          3019  * OUTPUT: Displays size of EA reading from A6
00002F4C                          3020  * Jumps to location stored in A2 when finished
00002F4C                          3021  DISPEA
00002F4C  43F9 000032AB           3022          LEA     MHEX,A1
00002F52  103C 000E               3023          MOVE.B  #14,D0
00002F56  4E4F                    3024          TRAP    #15
00002F58                          3025  
00002F58  B83C 0002               3026          CMP.B   #$2,D4              Branches to longword display if size is 2
00002F5C  6700 000A               3027          BEQ     DISPEALONG          Else it will assume word length
00002F60                          3028  
00002F60                          3029  DISPEAWORD
00002F60                          3030          *absolute address word
00002F60  1E3C 0002               3031          MOVE.B  #2,D7
00002F64  6000 000A               3032          BRA     DISPEA3
00002F68                          3033   
00002F68                          3034  DISPEALONG
00002F68                          3035          *absolute address long
00002F68  1E3C 0004               3036          MOVE.B  #4,D7
00002F6C  6000 0002               3037          BRA     DISPEA3
00002F70                          3038  
00002F70                          3039  DISPEA3
00002F70  BE3C 0000               3040          CMP.B   #0,D7               Compares current addr to ending addr
00002F74  6700 FC90               3041          BEQ     SUBJMPA2            Branches to done if they are equal
00002F78                          3042  
00002F78                          3043      
00002F78  141E                    3044          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002F7A                          3045          
00002F7A  1602                    3046          MOVE.B  D2,D3               Copies data at D2 to D3
00002F7C                          3047          *   this gets digit in 10's place
00002F7C  E80B                    3048          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F7E                          3049          *   this gets digit in 1's place
00002F7E  E90A                    3050          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F80  E80A                    3051          LSR.B   #4,D2               Shifts back right into 1's place
00002F82                          3052  
00002F82                          3053          
00002F82                          3054          *   D3 holds digit in 10's place
00002F82                          3055          *   D2 holds digit in 1's place
00002F82                          3056          
00002F82  1203                    3057          MOVE.B  D3,D1               Displays digit in 10's place first
00002F84                          3058  
00002F84                          3059          *   converts digits 10+ into letters
00002F84                          3060  
00002F84  47F9 00002F98           3061          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002F8A  B23C 0009               3062          CMP.B   #9,D1               Compares digit to 9
00002F8E  6E00 00FE               3063          BGT     CONV                Print out letter representation if greater than 9
00002F92                          3064  
00002F92  103C 0003               3065          MOVE.B  #3,D0               Displays digit if it is less than A
00002F96  4E4F                    3066          TRAP    #15
00002F98                          3067    
00002F98                          3068  DISPEA4
00002F98  1202                    3069          MOVE.B  D2,D1               Displays digit in 1's place second
00002F9A                          3070  
00002F9A                          3071          *   converts digits 10+ into letters
00002F9A  47F9 00002FAE           3072          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002FA0  B23C 0009               3073          CMP.B   #9,D1               Compares digit to 9
00002FA4  6E00 00E8               3074          BGT     CONV                Print out letter representation if greater than 9
00002FA8                          3075          
00002FA8  103C 0003               3076          MOVE.B  #3,D0               Displays digit if it is less than A
00002FAC  4E4F                    3077          TRAP    #15
00002FAE                          3078        
00002FAE                          3079  DISPEA5
00002FAE                          3080  * Display counter -- creates new line every 8 bytes
00002FAE                          3081          * D7 is used as counter
00002FAE                          3082          
00002FAE  5307                    3083          SUB.B   #1,D7                       
00002FB0  60BE                    3084          BRA     DISPEA3              Loops back to display next address
00002FB2                          3085  
00002FB2                          3086  ***   display EA ends here
00002FB2                          3087  
00002FB2                          3088  *******************************************************************
00002FB2                          3089  * Clears all of the data registers
00002FB2                          3090  CLRDN
00002FB2  4280                    3091          CLR.L   D0
00002FB4  4281                    3092          CLR.L   D1
00002FB6  4282                    3093          CLR.L   D2
00002FB8  4283                    3094          CLR.L   D3
00002FBA  4284                    3095          CLR.L   D4
00002FBC  4285                    3096          CLR.L   D5
00002FBE  4286                    3097          CLR.L   D6
00002FC0  4287                    3098          CLR.L   D7
00002FC2  4E75                    3099          RTS
00002FC4                          3100  
00002FC4                          3101  ********************************************************************
00002FC4                          3102  * Invalid op-code handling
00002FC4                          3103  * Displays DATA YYYY
00002FC4                          3104  *  YYYY represents the op-code that failed
00002FC4                          3105  INVOPCODE
00002FC4  DE1E                    3106          ADD.B   (A6)+,D7
00002FC6                          3107  
00002FC6                          3108  INVOP
00002FC6  43F9 0000331A           3109          LEA     MDATA,A1
00002FCC  103C 000E               3110          MOVE.B  #14,D0
00002FD0  4E4F                    3111          TRAP    #15
00002FD2  43F9 0000328B           3112          LEA     TAB,A1
00002FD8  103C 000E               3113          MOVE.B  #14,D0
00002FDC  4E4F                    3114          TRAP    #15
00002FDE  43F9 000032AB           3115          LEA     MHEX,A1
00002FE4  103C 000E               3116          MOVE.B  #14,D0
00002FE8  4E4F                    3117          TRAP    #15
00002FEA                          3118          
00002FEA  1C3C 0002               3119          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002FEE                          3120          
00002FEE  3407                    3121          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002FF0  E04A                    3122          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002FF2  6000 0004               3123          BRA     INVOP2              Skips the second part to do later
00002FF6                          3124  
00002FF6                          3125  INVOP1
00002FF6  1407                    3126          MOVE.B  D7,D2
00002FF8                          3127  INVOP2
00002FF8  1602                    3128          MOVE.B  D2,D3               Copies data at D2 to D3
00002FFA                          3129          *   this gets digit in 10's place
00002FFA  E80B                    3130          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002FFC                          3131          *   this gets digit in 1's place
00002FFC  E90A                    3132          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002FFE  E80A                    3133          LSR.B   #4,D2               Shifts back right into 1's place
00003000                          3134  
00003000                          3135          
00003000                          3136          *   D3 holds digit in 10's place
00003000                          3137          *   D2 holds digit in 1's place
00003000                          3138          
00003000  1203                    3139          MOVE.B  D3,D1               Displays digit in 10's place first
00003002                          3140  
00003002                          3141          *   converts digits 10+ into letters
00003002                          3142  
00003002  47F9 00003016           3143          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00003008  B23C 0009               3144          CMP.B   #9,D1               Compares digit to 9
0000300C  6E00 0080               3145          BGT     CONV                Print out letter representation if greater than 9
00003010                          3146  
00003010  103C 0003               3147          MOVE.B  #3,D0               Displays digit if it is less than A
00003014  4E4F                    3148          TRAP    #15
00003016                          3149          
00003016                          3150  INVOP3   
00003016  1202                    3151          MOVE.B  D2,D1               Displays digit in 1's place second
00003018                          3152  
00003018                          3153          *   converts digits 10+ into letters
00003018  47F9 0000302C           3154          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
0000301E  B23C 0009               3155          CMP.B   #9,D1               Compares digit to 9
00003022  6E00 006A               3156          BGT     CONV                Print out letter representation if greater than 9
00003026                          3157          
00003026  103C 0003               3158          MOVE.B  #3,D0               Displays digit if it is less than A
0000302A  4E4F                    3159          TRAP    #15
0000302C                          3160          
0000302C                          3161  INVOP4
0000302C                          3162  * Display counter -- creates new line every 8 bytes
0000302C                          3163          * D6 is used as counter
0000302C                          3164          
0000302C  5306                    3165          SUB.B   #1,D6
0000302E  BC3C 0000               3166          CMP.B   #0,D6
00003032  6700 0004               3167          BEQ     ENDNEWLINE
00003036  60BE                    3168          BRA     INVOP1              Loops back to display next address
00003038                          3169  
00003038                          3170  
00003038                          3171  ******************************************************************************************************
00003038                          3172  * Creates a new line after an op-code is displayed, loops back to start to display next code
00003038                          3173  ENDNEWLINE
00003038  43F9 00003288           3174          LEA     NEWLINE,A1          Creates a new line in output window
0000303E  103C 000E               3175          MOVE.B  #14,D0
00003042  4E4F                    3176          TRAP    #15
00003044                          3177  
00003044  5339 000035ED           3178          SUB.B   #1,dispcount
0000304A  0C39 0000 000035ED      3179          CMP.B   #0,dispcount               Checks if display counter is zero
00003052  6600 E0E4               3180          BNE     NEWADDR
00003056                          3181  
00003056                          3182  * Asks user to press enter to continue
00003056                          3183  * Resets counter
00003056  43F9 00003288           3184          LEA     NEWLINE,A1          Creates a new line in output window
0000305C  103C 000E               3185          MOVE.B  #14,D0
00003060  4E4F                    3186          TRAP    #15
00003062                          3187          
00003062  43F9 000034D5           3188          LEA     MCONT,A1            Asks user to press enter to continue
00003068  103C 000E               3189          MOVE.B  #14,D0
0000306C  4E4F                    3190          TRAP    #15
0000306E                          3191  
0000306E  103C 0004               3192          MOVE.B  #4,D0               Takes in user input
00003072  4E4F                    3193          TRAP    #15
00003074  4281                    3194          CLR.L   D1                  Clears D1 incase user decides to input something
00003076                          3195  
00003076  43F9 00003288           3196          LEA     NEWLINE,A1          Creates a new line in output window
0000307C  103C 000E               3197          MOVE.B  #14,D0
00003080  4E4F                    3198          TRAP    #15
00003082                          3199  
00003082  13FC 001E 000035ED      3200          MOVE.B  #dispnum,dispcount  Resets display counter
0000308A  6000 E0AC               3201          BRA     NEWADDR             Loops back to beginning
0000308E                          3202  
0000308E                          3203  
0000308E                          3204  ******************************************************************************************************
0000308E                          3205  * Converts decimal number into hex and displays it
0000308E                          3206  *   converts number 10-15 to A-F
0000308E                          3207  *   INPUT: decimal number in D1
0000308E                          3208  *   OUTPUT: HEX number to output
0000308E  B23C 000A               3209  CONV    CMP.B   #10,D1              Displays 10 as A
00003092  6700 002A               3210          BEQ     HEXA
00003096  B23C 000B               3211          CMP.B   #11,D1              Displays 11 as B
0000309A  6700 002C               3212          BEQ     HEXB
0000309E  B23C 000C               3213          CMP.B   #12,D1              Displays 12 as C
000030A2  6700 002E               3214          BEQ     HEXC
000030A6  B23C 000D               3215          CMP.B   #13,D1              Displays 13 as D
000030AA  6700 0030               3216          BEQ     HEXD
000030AE  B23C 000E               3217          CMP.B   #14,D1              Displays 14 as E
000030B2  6700 0032               3218          BEQ     HEXE
000030B6  B23C 000F               3219          CMP.B   #15,D1              Displays 15 as F
000030BA  6700 0034               3220          BEQ     HEXF
000030BE                          3221  
000030BE  43F9 0000329D           3222  HEXA    LEA     DISPA,A1            Loads A character
000030C4  6000 0034               3223          BRA     PRINT
000030C8                          3224    
000030C8  43F9 0000329F           3225  HEXB    LEA     DISPB,A1            Loads B character
000030CE  6000 002A               3226          BRA     PRINT
000030D2                          3227  
000030D2  43F9 000032A1           3228  HEXC    LEA     DISPC,A1            Loads C character
000030D8  6000 0020               3229          BRA     PRINT
000030DC                          3230  
000030DC  43F9 000032A3           3231  HEXD    LEA     DISPD,A1            Loads D character
000030E2  6000 0016               3232          BRA     PRINT
000030E6                          3233  
000030E6  43F9 000032A5           3234  HEXE    LEA     DISPE,A1            Loads E character
000030EC  6000 000C               3235          BRA     PRINT
000030F0                          3236  
000030F0  43F9 000032A7           3237  HEXF    LEA     DISPF,A1            Loads F character
000030F6  6000 0002               3238          BRA     PRINT
000030FA                          3239  
000030FA  103C 000E               3240  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000030FE  4E4F                    3241          TRAP    #15                 Prints out message in A1
00003100  4ED3                    3242          JMP     (A3)
00003102                          3243  
00003102                          3244  ******************************************************************************
00003102                          3245  * Converts decimal input to hex
00003102                          3246  * INPUT: Decimal inside D2
00003102                          3247  * OUTPUT: HEX into D3
00003102                          3248  *   Converts number in decimal to hex        
00003102                          3249  DEC2HEX
00003102  B43C 0030               3250          CMP.B   #$30,D2             0
00003106  6700 00B0               3251          BEQ     D2HZERO
0000310A  B43C 0031               3252          CMP.B   #$31,D2             1
0000310E  6700 00AE               3253          BEQ     D2HONE
00003112  B43C 0032               3254          CMP.B   #$32,D2             2
00003116  6700 00AC               3255          BEQ     D2HTWO
0000311A  B43C 0033               3256          CMP.B   #$33,D2             3
0000311E  6700 00AA               3257          BEQ     D2HTHREE
00003122  B43C 0034               3258          CMP.B   #$34,D2             4
00003126  6700 00A8               3259          BEQ     D2HFOUR
0000312A  B43C 0035               3260          CMP.B   #$35,D2             5
0000312E  6700 00A6               3261          BEQ     D2HFIVE
00003132  B43C 0036               3262          CMP.B   #$36,D2             6
00003136  6700 00A4               3263          BEQ     D2HSIX
0000313A  B43C 0037               3264          CMP.B   #$37,D2             7
0000313E  6700 00A2               3265          BEQ     D2HSEVEN
00003142  B43C 0038               3266          CMP.B   #$38,D2             8
00003146  6700 00A0               3267          BEQ     D2HEIGHT
0000314A  B43C 0039               3268          CMP.B   #$39,D2             9
0000314E  6700 009E               3269          BEQ     D2HNINE
00003152  B43C 0041               3270          CMP.B   #$41,D2             A
00003156  6700 009C               3271          BEQ     D2HHEXA
0000315A  B43C 0042               3272          CMP.B   #$42,D2             B
0000315E  6700 009A               3273          BEQ     D2HHEXB
00003162  B43C 0043               3274          CMP.B   #$43,D2             C
00003166  6700 0098               3275          BEQ     D2HHEXC
0000316A  B43C 0044               3276          CMP.B   #$44,D2             D
0000316E  6700 0096               3277          BEQ     D2HHEXD
00003172  B43C 0045               3278          CMP.B   #$45,D2             E
00003176  6700 0094               3279          BEQ     D2HHEXE
0000317A  B43C 0046               3280          CMP.B   #$46,D2             F
0000317E  6700 0092               3281          BEQ     D2HHEXF
00003182  B43C 0061               3282          CMP.B   #$61,D2             A
00003186  6700 006C               3283          BEQ     D2HHEXA
0000318A  B43C 0062               3284          CMP.B   #$62,D2             B
0000318E  6700 006A               3285          BEQ     D2HHEXB
00003192  B43C 0063               3286          CMP.B   #$63,D2             C
00003196  6700 0068               3287          BEQ     D2HHEXC
0000319A  B43C 0064               3288          CMP.B   #$64,D2             D
0000319E  6700 0066               3289          BEQ     D2HHEXD
000031A2  B43C 0065               3290          CMP.B   #$65,D2             E
000031A6  6700 0064               3291          BEQ     D2HHEXE
000031AA  B43C 0066               3292          CMP.B   #$66,D2             F
000031AE  6700 0062               3293          BEQ     D2HHEXF
000031B2                          3294  
000031B2                          3295          * User entered a non-hex character
000031B2                          3296          * Moves F to D1 to indicate error before returning
000031B2  123C 000F               3297          MOVE.B  #$F,D1
000031B6  4E75                    3298          RTS
000031B8                          3299  
000031B8                          3300  *   Moves the appropiate hex number to D3
000031B8  163C 0000               3301  D2HZERO MOVE.B  #$0,D3
000031BC  4E75                    3302          RTS
000031BE                          3303  
000031BE                          3304  D2HONE
000031BE  163C 0001               3305          MOVE.B  #$1,D3
000031C2  4E75                    3306          RTS
000031C4                          3307  
000031C4                          3308  D2HTWO
000031C4  163C 0002               3309          MOVE.B  #$2,D3
000031C8  4E75                    3310          RTS
000031CA                          3311  
000031CA                          3312  D2HTHREE
000031CA  163C 0003               3313          MOVE.B  #$3,D3
000031CE  4E75                    3314          RTS
000031D0                          3315  
000031D0                          3316  D2HFOUR
000031D0  163C 0004               3317          MOVE.B  #$4,D3
000031D4  4E75                    3318          RTS
000031D6                          3319  
000031D6                          3320  D2HFIVE
000031D6  163C 0005               3321          MOVE.B  #$5,D3
000031DA  4E75                    3322          RTS
000031DC                          3323  
000031DC                          3324  D2HSIX
000031DC  163C 0006               3325          MOVE.B  #$6,D3
000031E0  4E75                    3326          RTS
000031E2                          3327  
000031E2                          3328  D2HSEVEN
000031E2  163C 0007               3329          MOVE.B  #$7,D3
000031E6  4E75                    3330          RTS
000031E8                          3331  
000031E8                          3332  D2HEIGHT
000031E8  163C 0008               3333          MOVE.B  #$8,D3
000031EC  4E75                    3334          RTS
000031EE                          3335  
000031EE                          3336  D2HNINE
000031EE  163C 0009               3337          MOVE.B  #$9,D3
000031F2  4E75                    3338          RTS
000031F4                          3339  
000031F4                          3340  D2HHEXA
000031F4  163C 000A               3341          MOVE.B  #$A,D3
000031F8  4E75                    3342          RTS
000031FA                          3343  
000031FA                          3344  D2HHEXB
000031FA  163C 000B               3345          MOVE.B  #$B,D3
000031FE  4E75                    3346          RTS
00003200                          3347  
00003200                          3348  D2HHEXC
00003200  163C 000C               3349          MOVE.B  #$C,D3
00003204  4E75                    3350          RTS
00003206                          3351  
00003206                          3352  D2HHEXD
00003206  163C 000D               3353          MOVE.B  #$D,D3
0000320A  4E75                    3354          RTS
0000320C                          3355  
0000320C                          3356  D2HHEXE
0000320C  163C 000E               3357          MOVE.B  #$E,D3
00003210  4E75                    3358          RTS
00003212                          3359  
00003212                          3360  D2HHEXF
00003212  163C 000F               3361          MOVE.B  #$F,D3
00003216  4E75                    3362          RTS
00003218                          3363  
00003218                          3364  *************************************************************************************************
00003218                          3365  ASK4REPEAT
00003218  43F9 00003288           3366          LEA     NEWLINE,A1          Creates a new line in output window
0000321E  103C 000E               3367          MOVE.B  #14,D0
00003222  4E4F                    3368          TRAP    #15
00003224                          3369  ASK4REPEAT2
00003224  43F9 000033DC           3370          LEA     MREPEAT,A1          Asks user if they want to start over or exit
0000322A  103C 000E               3371          MOVE.B  #14,D0
0000322E  4E4F                    3372          TRAP    #15
00003230                          3373  
00003230  43F9 000035FA           3374          LEA     bit4,A1             User has to enter Y to start over
00003236  103C 0002               3375          MOVE.B  #2,D0               N to exit
0000323A  4E4F                    3376          TRAP    #15
0000323C                          3377  
0000323C  1239 000035FA           3378          MOVE.B  bit4,D1             User input was stored in bit4
00003242  B23C 0059               3379          CMP.B   #$59,D1             Char Y
00003246  6700 DDC0               3380          BEQ     IOSTART
0000324A  B23C 0079               3381          CMP.B   #$79,D1             Char y
0000324E  6700 DDB8               3382          BEQ     IOSTART
00003252  B23C 004E               3383          CMP.B   #$4E,D1             Char N
00003256  6700 001C               3384          BEQ     DONE
0000325A  B23C 006E               3385          CMP.B   #$6E,D1             Char n
0000325E  6700 0014               3386          BEQ     DONE
00003262  60C0                    3387          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00003264                          3388  
00003264                          3389  
00003264                          3390  **************************************************************************************************
00003264  43F9 000034A3           3391  ERROR   LEA     MERROR,A1
0000326A  103C 000E               3392          MOVE.B  #14,D0
0000326E  4E4F                    3393          TRAP    #15
00003270  6000 000E               3394          BRA     EXIT
00003274                          3395  
00003274  43F9 000034BA           3396  DONE    LEA     MDONE,A1
0000327A  103C 000E               3397          MOVE.B  #14,D0
0000327E  4E4F                    3398          TRAP    #15
00003280                          3399  
00003280  103C 0009               3400  EXIT    MOVE.B  #9,D0
00003284  4E4F                    3401          TRAP    #15
00003286                          3402  
00003286                          3403  ************************************ Output stuff **************************************
00003286                          3404  * Stuff for output
00003286                          3405  
00003286  =0000000D               3406  CR      EQU     $0D
00003286  =0000000A               3407  LF      EQU     $0A
00003286                          3408  
00003286= 20 00                   3409  SPACE       DC.B    ' ',0
00003288= 0D 0A 00                3410  NEWLINE     DC.B    '',CR,LF,0
0000328B= 20 20 20 00             3411  TAB         DC.B    '   ',0
0000328F= 2C 00                   3412  COMMA       DC.B    ',',0
00003291= 28 00                   3413  OPENBRA     DC.B    '(',0
00003293= 29 00                   3414  CLOSEBRA    DC.B    ')',0
00003295= 2B 00                   3415  POS         DC.B    '+',0
00003297= 2D 00                   3416  NEG         DC.B    '-',0
00003299= 23 00                   3417  HASH        DC.B    '#',0
0000329B= 2F 00                   3418  SLASH       DC.B    '/',0
0000329D                          3419  
0000329D                          3420  
0000329D= 41 00                   3421  DISPA       DC.B    'A',0
0000329F= 42 00                   3422  DISPB       DC.B    'B',0
000032A1= 43 00                   3423  DISPC       DC.B    'C',0
000032A3= 44 00                   3424  DISPD       DC.B    'D',0
000032A5= 45 00                   3425  DISPE       DC.B    'E',0
000032A7= 46 00                   3426  DISPF       DC.B    'F',0
000032A9                          3427  
000032A9= 2E 00                   3428  MDOT        DC.B    '.',0
000032AB= 24 00                   3429  MHEX        DC.B    '$',0
000032AD= 42 20 00                3430  MBYTE       DC.B    'B ',0
000032B0= 57 20 00                3431  MWORD       DC.B    'W ',0
000032B3= 4C 20 00                3432  MLONG       DC.B    'L ',0
000032B6= 44 00                   3433  MDN         DC.B    'D',0
000032B8= 41 00                   3434  MAN         DC.B    'A',0
000032BA                          3435  
000032BA= 4A 53 52 00             3436  MJSR        DC.B    'JSR',0
000032BE= 42 54 53 54 00          3437  MBTST       DC.B    'BTST',0
000032C3= 52 4F 4C 00             3438  MROL        DC.B    'ROL',0
000032C7= 52 4F 52 00             3439  MROR        DC.B    'ROR',0
000032CB= 4C 53 4C 00             3440  MLSL        DC.B    'LSL',0
000032CF= 4C 53 52 00             3441  MLSR        DC.B    'LSR',0
000032D3= 4E 45 47 2E 00          3442  MMNEGW      DC.B    'NEG.',0
000032D8= 44 49 56 53 2E 57 00    3443  MMDIVSW     DC.B    'DIVS.W',0
000032DF= 4D 55 4C 53 2E 57 00    3444  MMULSW      DC.B    'MULS.W',0
000032E6= 4D 4F 56 45 2E 42 00    3445  MMOVEB      DC.B    'MOVE.B',0
000032ED= 4D 4F 56 45 2E 57 00    3446  MMOVEW      DC.B    'MOVE.W',0
000032F4= 4D 4F 56 45 2E 4C 00    3447  MMOVEL      DC.B    'MOVE.L',0
000032FB= 4D 4F 56 45 41 2E ...   3448  MMOVEAW     DC.B    'MOVEA.W',0
00003303= 4D 4F 56 45 41 2E ...   3449  MMOVEAL     DC.B    'MOVEA.L',0
0000330B= 4D 4F 56 45 4D 2E 00    3450  MMOVEM      DC.B    'MOVEM.',0
00003312                          3451  
00003312= 41 53 4C 00             3452  MASL        DC.B    'ASL',0
00003316= 41 53 52 00             3453  MASR        DC.B    'ASR',0
0000331A= 44 41 54 41 00          3454  MDATA       DC.B    'DATA',0
0000331F= 53 55 42 2E 00          3455  MSUB        DC.B    'SUB.',0
00003324= 53 55 42 41 2E 00       3456  MSUBA       DC.B    'SUBA.',0
0000332A= 41 4E 44 2E 00          3457  MAND        DC.B    'AND.',0
0000332F= 41 44 44 2E 00          3458  MADD        DC.B    'ADD.',0
00003334= 53 55 42 49 2E 00       3459  MSUBI       DC.B    'SUBI.',0
0000333A= 4F 52 49 2E 00          3460  MORI        DC.B    'ORI.',0
0000333F= 4E 4F 54 2E 00          3461  MNOT        DC.B    'NOT.',0
00003344= 4D 55 4C 53 2E 00       3462  MMUL        DC.B    'MULS.',0
0000334A= 4E 45 47 00             3463  MNEG        DC.B    'NEG',0
0000334E= 43 4D 50 2E 00          3464  MCMP        DC.B    'CMP.',0
00003353= 43 4D 50 49 2E 00       3465  MCMPI       DC.B    'CMPI.',0
00003359= 43 4D 50 41 2E 00       3466  MCMPA       DC.B    'CMPA.',0
0000335F= 45 4F 52 2E 00          3467  MEOR        DC.B    'EOR.',0
00003364= 45 4F 52 49 2E 00       3468  MEORI       DC.B    'EORI.',0
0000336A= 41 44 44 41 2E 00       3469  MADDA       DC.B    'ADDA.',0
00003370= 41 44 44 51 2E 00       3470  MADDQ       DC.B    'ADDQ.',0
00003376                          3471  
00003376= 42 45 51 00             3472  MBEQ        DC.B    'BEQ',0
0000337A= 42 4E 45 00             3473  MBNE        DC.B    'BNE',0
0000337E= 42 4C 54 00             3474  MBLT        DC.B    'BLT',0
00003382= 42 48 49 00             3475  MBHI        DC.B    'BHI',0
00003386= 42 52 41 00             3476  MBRA        DC.B    'BRA',0
0000338A= 4E 4F 50 00             3477  MNOP        DC.B    'NOP',0
0000338E= 52 54 53 00             3478  MRTS        DC.B    'RTS',0
00003392= 4C 45 41 00             3479  MLEA        DC.B    'LEA',0
00003396                          3480  
00003396= 4C 65 6D 6D 65 20 ...   3481  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
000033B9= 47 69 6D 6D 65 20 ...   3482  MADDR2      DC.B    'Gimme that end address too homie: ',0
000033DC= 54 72 79 6E 61 20 ...   3483  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
000033FC= 45 6E 64 20 61 64 ...   3484  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00003434= 41 64 64 72 65 73 ...   3485  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003467= 52 65 2D 65 6E 74 ...   3486  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00003483= 41 64 64 72 65 73 ...   3487  MIOERR4     DC.B    'Address must be an even number.',0
000034A3= 45 52 52 4F 52 3A ...   3488  MERROR      DC.B    'ERROR: Something broke',0
000034BA= 43 4F 4D 50 4C 45 ...   3489  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
000034D5= 2A 2A 50 52 45 53 ...   3490  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
000034F1                          3491  
000034F1= 20 5F 5F 5F 5F 5F ...   3492  ASCII1      DC.B    ' ________  ________  ___  __       ',0
00003515= 7C 5C 20 20 20 5F ...   3493  ASCII2      DC.B    '|\   ____\|\   __  \|\  \|\  \     ',0
00003539= 5C 20 5C 20 20 5C ...   3494  ASCII3      DC.B    '\ \  \___|\ \  \|\  \ \  \/  /|_   ',0
0000355D= 20 5C 20 5C 20 20 ...   3495  ASCII4      DC.B    ' \ \  \____\ \   __  \ \   ___  \  ',0
00003581= 20 20 5C 20 5C 20 ...   3496  ASCII5      DC.B    '  \ \  ___  \ \  \|\  \ \  \\ \  \ ',0
000035A5= 20 20 20 5C 20 5C ...   3497  ASCII6      DC.B    '   \ \_______\ \_______\ \__\\ \__\',0
000035C9= 20 20 20 20 5C 7C ...   3498  ASCII7      DC.B    '    \|_______|\|_______|\|__| \|__|',0
000035ED                          3499  
000035ED                          3500  
000035ED                          3501  ********************************** MEMORY STORAGE **********************************************
000035ED                          3502  * Stores memory locations at the end of the program
000035ED                          3503  * How DS works: Give it a variable name.
000035ED                          3504  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
000035ED                          3505  *   Last is the number of storage you want. 
000035ED                          3506  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
000035ED                          3507  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
000035ED                          3508  *            
000035ED                          3509  
000035ED                          3510  dispcount   DS.B    1           Used to count display lines
000035EE                          3511  
000035EE                          3512  startaddr   DS.L    1
000035F2                          3513  endaddr     DS.L    1
000035F6                          3514  
000035F6                          3515  bit0        DS.B    1           SEE NOTE UP TOP
000035F7                          3516  bit1        DS.B    1           SEE NOTE UP TOP
000035F8                          3517  bit2        DS.B    1           SEE NOTE UP TOP
000035F9                          3518  bit3        DS.B    1           SEE NOTE UP TOP
000035FA                          3519  bit4        DS.B    1           SEE NOTE UP TOP
000035FB                          3520  
000035FB                          3521  
000035FB                          3522      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_EA              26D8
ABS_EA2             26E2
ADDIMD              159C
ADDIMD0             15CC
ADDIMD1             15DA
ADDIMD4             15E8
ADDIMDDES           1656
ADDIMDDES0          167A
ADDIMDDES1          1688
ADDIMDDES4          1696
ADDQ                24F0
ADDQB               2536
ADDQCONT            2566
ADDQCONT2           258C
ADDQEA              25A4
ADDQEA2             25B4
ADDQL               2556
ADDQW               2546
ADDR1               7000
ADDR2               726C
AN_EAM              2618
ASCII1              34F1
ASCII2              3515
ASCII3              3539
ASCII4              355D
ASCII5              3581
ASCII6              35A5
ASCII7              35C9
ASK4REPEAT          3218
ASK4REPEAT2         3224
ASLRMEMH            1DB6
BCC                 2068
BCCBEQ              20E4
BCCBHI              2102
BCCBLT              20F8
BCCBNE              20EE
BCCBRA              20DA
BCCDISP             20AE
BCCLONG             2096
BCCNEXT             209E
BCCPRINT            210C
BCCWORD             208E
BIT0                35F6
BIT1                35F7
BIT2                35F8
BIT3                35F9
BIT4                35FA
BTST                12C4
BTSTMEM             133C
CLOSEBRA            3293
CLRDN               2FB2
CODE                120C
COMMA               328F
CONTPRINTLEA        239E
CONV                308E
CR                  D
D2HEIGHT            31E8
D2HFIVE             31D6
D2HFOUR             31D0
D2HHEXA             31F4
D2HHEXB             31FA
D2HHEXC             3200
D2HHEXD             3206
D2HHEXE             320C
D2HHEXF             3212
D2HNINE             31EE
D2HONE              31BE
D2HSEVEN            31E2
D2HSIX              31DC
D2HTHREE            31CA
D2HTWO              31C4
D2HZERO             31B8
DEC2HEX             3102
DEC_EAM             269C
DISPA               329D
DISPADDR            110E
DISPADDR1           1156
DISPADDR2           1158
DISPADDR3           118C
DISPADDR4           11A2
DISPADDR5           11B8
DISPADDR6           11CE
DISPADDREND         11D8
DISPADDRSTART       114A
DISPB               329F
DISPC               32A1
DISPCOUNT           35ED
DISPD               32A3
DISPE               32A5
DISPEA              2F4C
DISPEA3             2F70
DISPEA4             2F98
DISPEA5             2FAE
DISPEALONG          2F68
DISPEAWORD          2F60
DISPF               32A7
DISPNUM             1E
DIVSW               1B4E
DN_EAM              2600
DONE                3274
ENDADDR             35F2
ENDNEWLINE          3038
ENDNLINC            1AC0
ERROR               3264
EXIT                3280
HANDLEDES           15FE
HASH                3299
HEXA                30BE
HEXB                30C8
HEXC                30D2
HEXD                30DC
HEXE                30E6
HEXF                30F0
IMD                 211C
IMD2                214E
IMD3                2156
IMD4                2162
IMDBYTE             21FC
IMDEA               2224
IMDEA2              224C
IMDEA3              2262
IMDLONG             221A
IMDPRINT            219C
IMDPRINTCMPI        21EA
IMDPRINTEND         21F4
IMDPRINTEORI        21E0
IMDPRINTORI         21CC
IMDPRINTSUBI        21D6
IMDWORD             220C
INAN_EAM            2630
INC_EAM             2660
INVOP               2FC6
INVOP1              2FF6
INVOP2              2FF8
INVOP3              3016
INVOP4              302C
INVOPCODE           2FC4
IOERROR1            10CE
IOERROR2            10DE
IOERROR3            10EE
IOERROR4            10FE
IOGETADDR           1084
IOLOOP              10AA
IOSTART             1008
IOSTARTLOOP         10A4
JSR                 1278
LEAIMD0             2382
LEAIMD1             2390
LEAMODE0            235E
LEAMODE1            2356
LEA_ABS_EA          236A
LEA_INDIR_AN        23C2
LF                  A
LSLR                1D32
LSLRDESD            19B0
LSLRMEM             1F1A
LSLRMEMH            1E3A
LSLRSRCD            1988
MADD                332F
MADDA               336A
MADDQ               3370
MADDR1              3396
MADDR2              33B9
MAN                 32B8
MAND                332A
MASL                3312
MASR                3316
MBEQ                3376
MBHI                3382
MBLT                337E
MBNE                337A
MBRA                3386
MBTST               32BE
MBYTE               32AD
MCMP                334E
MCMPA               3359
MCMPI               3353
MCONT               34D5
MDATA               331A
MDN                 32B6
MDONE               34BA
MDOT                32A9
MEOR                335F
MEORI               3364
MERROR              34A3
MHEX                32AB
MIOERR1             33FC
MIOERR2             3434
MIOERR3             3467
MIOERR4             3483
MISC                2266
MISCBIT2            22AE
MISCBIT3            22BA
MISCBYTE            246E
MISCCHECKM          22EE
MISCCHKLEA          22CE
MISCEA              249C
MISCEA2             24B8
MISCLEA             231E
MISCLEA2            234A
MISCLONG            2490
MISCMMPOSTINC       27E6
MISCMMPOSTINC2      27F0
MISCMMPOSTINC3      2826
MISCMMPOSTINCPRINT  282A
MISCMMPOSTINCPRINT2  283E
MISCMMPOSTINCPRINT3  284A
MISCMMPREDEC        2778
MISCMMPREDEC2       27A2
MISCMMPREDEC3       27B8
MISCMMPREDECCHECK   276C
MISCMMPREDECPRINT   27BC
MISCMMPREDECPRINT2  27D0
MISCMMPREDECPRINT3  27DC
MISCMMPRINTNUM      28BC
MISCMMPRINTSIZE     2754
MISCMMREGMEM        2854
MISCMMREGMEM2       287A
MISCMMREGMEM3       2890
MISCMMREGMEMPRINT   2894
MISCMMREGMEMPRINT2  28A4
MISCMMREGMEMPRINT3  28B0
MISCMMSIZEL         274E
MISCMMSLASH         28CA
MISCMOVEM           26E6
MISCMOVEM2          26F6
MISCMOVEM3          2706
MISCMOVEM4          2718
MISCNOP             230E
MISCNOT             2422
MISCNOT2            242C
MISCNOT3            2434
MISCNOT4            2440
MISCPRINT           24BC
MISCPRINTEND        24E8
MISCPRINTNEG        24DE
MISCPRINTNOT        24D4
MISCRTS             2412
MISCWORD            2480
MJSR                32BA
MLEA                3392
MLONG               32B3
MLSL                32CB
MLSR                32CF
MMDIVSW             32D8
MMNEGW              32D3
MMOVEAL             3303
MMOVEAW             32FB
MMOVEB              32E6
MMOVEL              32F4
MMOVEM              330B
MMOVEW              32ED
MMUL                3344
MMULSW              32DF
MNEG                334A
MNOP                338A
MNOT                333F
MORI                333A
MOVB                1516
MOVBDN1             18FC
MOVBDN2             1A9C
MOVEAL              14C2
MOVEAN1             16AC
MOVEAN2             19CC
MOVEAW              13E2
MOVEIAN1            1720
MOVEIAND1           185C
MOVEIANI1           17B4
MOVIAN2             19E8
MOVIAND2            1A5C
MOVIANI2            1A1C
MOVL                1436
MOVW                1356
MREPEAT             33DC
MROL                32C3
MROR                32C7
MRTS                338E
MSUB                331F
MSUBA               3324
MSUBI               3334
MULSW               1AC4
MWORD               32B0
NEG                 3297
NEGW                1BDC
NEWADDR             1138
NEWLINE             3288
OPENBRA             3291
POS                 3295
PRINT               30FA
PRINTASL            1DD2
PRINTASR            1E06
PRINTB              1F64
PRINTBYTE           1C36
PRINTL              1FCC
PRINTLONG           1CDE
PRINTLSL            1EE6
PRINTLSLRCOUNT      2000
PRINTLSR            2034
PRINTROL            1E7E
PRINTROR            1EB2
PRINTW              1F98
PRINTWORD           1C8A
RORL                1E66
SLASH               329B
SPACE               3286
START               1000
STARTADDR           35EE
SUB                 28D8
SUB1                290A
SUB2                28EC
SUB3                28F4
SUB4                28FE
SUBA                2B26
SUBACHECK           2946
SUBACONT            2B7A
SUBAN               2D10
SUBAN2              2D2C
SUBANID             2D48
SUBANIDNEG          2DBC
SUBANIDPOS          2D7C
SUBDN               2CD8
SUBDN2              2CF4
SUBEA               2DFC
SUBEAHEX            2E5A
SUBEAHEX1           2EFA
SUBEAHEX2           2F02
SUBEAHEX3           2F0A
SUBEAHEX4           2F32
SUBEAHEX5           2F48
SUBEAID             2EEA
SUBEAID2            2E66
SUBERRORTEST1       2C96
SUBERRORTEST11      2CD6
SUBJMPA2            2C06
SUBPRINT            2C08
SUBPRINTADD         2C58
SUBPRINTADDA        2B6A
SUBPRINTAND         2C48
SUBPRINTB           2C68
SUBPRINTCMP         2C84
SUBPRINTCMPA        2B5A
SUBPRINTEND         2C94
SUBPRINTEOR         2C74
SUBPRINTSUB         2C38
SUBPRINTSUBA        2B4A
SUBSIZE1            29A6
SUBSIZE11           29CC
SUBSIZE12           29E2
SUBSIZE2            29E6
SUBSIZE21           2A0C
SUBSIZE22           2A22
SUBSIZE3            2A26
SUBSIZE31           2A4C
SUBSIZE32           2A62
SUBSIZE4            2A66
SUBSIZE41           2A8C
SUBSIZE42           2AA2
SUBSIZE5            2AA6
SUBSIZE51           2ACC
SUBSIZE52           2AE2
SUBSIZE6            2AE6
SUBSIZE61           2B0C
SUBSIZE62           2B22
SUBSIZE7            2B92
SUBSIZE71           2BB4
SUBSIZE72           2BCA
SUBSIZE8            2BCE
SUBSIZE81           2BEE
SUBSIZE82           2C02
TAB                 328B
