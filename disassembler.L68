00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 12/7/2015 3:16:53 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000                            64  
00000000                            65  
00000000  =00007000                 66  addr1       EQU     $7000
00000000                            67  *addr2      EQU     $703C
00000000  =0000726C                 68  addr2       EQU     $726C
00000000                            69  
00000000  =0000001E                 70  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            71  
00000000                            72  
00000000                            73  
00001000                            74      ORG    $1000
00001000                            75  START:                  ; first instruction of program
00001000                            76  
00001000                            77          
00001000                            78          
00001000                            79  
00001000                            80          *   this stores some test EA into memory m,
00001000                            81          *LEA     addr1,A1
00001000                            82          *MOVE.W  #$0440,(A1)+        *917C
00001000                            83          *MOVE.W  #$917C,(A1)+       
00001000                            84          *MOVE.L  #$5555A7FF,(A1)+
00001000                            85          *MOVE.W  #$9078,(A1)+
00001000                            86          *MOVE.W  #$5555,(A1)+
00001000                            87          
00001000                            88          
00001000                            89          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            90          
00001000                            91          *MOVE.L  #$6700F0D8,$7000
00001000                            92          *MOVE.W  #$4E71,$7000         NOP
00001000                            93  
00001000                            94          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            95          *MOVE.L  #$48E3FAF5,$7000
00001000                            96          *MOVE.L  #$4CF8CDD9,$7004
00001000                            97          *MOVE.W  #$4000,$7008
00001000                            98  
00001000                            99  
00001000                           100          * start address: 7000
00001000                           101          * end address:   766C
00001000                           102  
00001000                           103  
00001000  31FC 0805 7000           104           MOVE.W  #$0805,$7000
00001006  31FC 002D 7002           105           MOVE.W  #$002D,$7002
0000100C                           106          *MOVE.W  #$4000,$7008
0000100C                           107  
0000100C                           108  *********************************************************************************************************************
0000100C                           109  * Takes in user start and end address
0000100C                           110  
0000100C                           111  IOSTART
0000100C                           112  *   Displays message asking for address
0000100C  43F9 00003366            113          LEA     MADDR1,A1           Loads message to retrieve first number
00001012  6100 0020                114          BSR     IOGETADDR
00001016                           115  
00001016  0804 0000                116          BTST    #0,D4               Checks of the starting address is an odd number
0000101A  6600 0090                117          BNE     IOERROR4            Throws an error if it is because it will crash
0000101E                           118  
0000101E  2E04                     119          MOVE.L  D4,D7               Moves starting address to D7 for now
00001020  43F9 00003389            120          LEA     MADDR2,A1           Then grabs the ending address
00001026  6100 000C                121          BSR     IOGETADDR
0000102A  B887                     122          CMP.L   D7,D4               Compares the start address to end address
0000102C  6E00 008E                123          BGT     DISPADDR            Continues if start < end
00001030  6000 004C                124          BRA     IOERROR1            Error if not
00001034                           125  
00001034                           126  IOGETADDR
00001034  2649                     127          MOVEA.L A1,A3               Saves the message incase of an error
00001036  103C 000E                128          MOVE.B  #14,D0              Prepares to display message
0000103A  4E4F                     129          TRAP    #15                 Displays message
0000103C                           130  
0000103C  4244                     131          CLR     D4                  Clears D4 register to prevent errors
0000103E                           132  
0000103E  43F9 000034C2            133          LEA     startaddr,A1        Uses this memory location to store the data
00001044  103C 0002                134          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001048  4E4F                     135          TRAP    #15
0000104A                           136  
0000104A  B23C 0008                137          CMP.B   #8,D1               Throws an error if the input is longer than a longword
0000104E  6E00 003C                138          BGT     IOERROR2
00001052  1A01                     139          MOVE.B  D1,D5               Moves the length of the input to D5
00001054                           140  
00001054                           141  IOSTARTLOOP
00001054  45F9 000034C2            142          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
0000105A                           143  
0000105A                           144  IOLOOP
0000105A  141A                     145          MOVE.B  (A2)+,D2            Moves data from current addr to D2
0000105C  5305                     146          SUB.B   #1,D5               Subtract 1 from counter
0000105E  6100 2072                147          BSR     DEC2HEX             Converts decimal to hex number
00001062  B23C 000F                148          CMP.B   #$F,D1
00001066  6700 0034                149          BEQ     IOERROR3
0000106A                           150  
0000106A  1C05                     151          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
0000106C  CDFC 0004                152          MULS    #4,D6               Multiply by 4 to find number of shifts left
00001070                           153          
00001070  EDAB                     154          LSL.L   D6,D3               Shifts hex left
00001072  D883                     155          ADD.L   D3,D4               Adds number to new total
00001074                           156          
00001074  7600                     157          MOVE.L  #0,D3               Clears D3 to prevent errors
00001076                           158          
00001076  BA3C 0000                159          CMP.B   #0,D5               Compares counter to 0    
0000107A  66DE                     160          BNE     IOLOOP              Otherwise will loop
0000107C  4E75                     161          RTS
0000107E                           162  
0000107E                           163  * Error message for start address greater than end address
0000107E                           164  IOERROR1
0000107E  43F9 000033CC            165          LEA     MIOERR1,A1
00001084  103C 000D                166          MOVE.B  #13,D0
00001088  4E4F                     167          TRAP    #15
0000108A  6080                     168          BRA     IOSTART
0000108C                           169  
0000108C                           170  * Error message if user input address is longer than longword
0000108C                           171  IOERROR2
0000108C  43F9 00003404            172          LEA     MIOERR2,A1
00001092  103C 000D                173          MOVE.B  #13,D0
00001096  4E4F                     174          TRAP    #15
00001098  224B                     175          MOVEA.L A3,A1
0000109A  6098                     176          BRA     IOGETADDR
0000109C                           177  
0000109C                           178  * Error message if user enters non-valid hex numbers
0000109C                           179  IOERROR3
0000109C  43F9 00003437            180          LEA     MIOERR3,A1
000010A2  103C 000D                181          MOVE.B  #13,D0
000010A6  4E4F                     182          TRAP    #15
000010A8  224B                     183          MOVEA.L A3,A1
000010AA  6088                     184          BRA     IOGETADDR
000010AC                           185  
000010AC                           186  * Error message for odd numbered addresses
000010AC                           187  IOERROR4
000010AC  43F9 00003453            188          LEA     MIOERR4,A1
000010B2  103C 000D                189          MOVE.B  #13,D0
000010B6  4E4F                     190          TRAP    #15
000010B8  6000 FF52                191          BRA     IOSTART
000010BC                           192  
000010BC                           193  ******************************************** displays address location***********************************************
000010BC                           194  * This displays the address location of the op-code being worked on
000010BC                           195  * A6 is used as current address
000010BC                           196  DISPADDR
000010BC  23C7 000034C2            197          MOVE.L  D7,startaddr
000010C2  23C4 000034C6            198          MOVE.L  D4,endaddr
000010C8  6100 1EB8                199          BSR     CLRDN
000010CC  2C79 000034C2            200          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010D2  13FC 001E 000034C1       201          MOVE.B  #dispnum,dispcount  Sets display line counter
000010DA                           202  
000010DA  43F9 00003258            203          LEA     NEWLINE,A1          Creates a new line in output window
000010E0  103C 000E                204          MOVE.B  #14,D0
000010E4  4E4F                     205          TRAP    #15
000010E6                           206  
000010E6                           207  NEWADDR
000010E6  2E0E                     208          MOVE.L  A6,D7               Loads the current address into D7
000010E8  BEB9 000034C6            209          CMP.L   endaddr,D7          Compares current address to end address
000010EE  6E00 20F8                210          BGT     ASK4REPEAT          Branches to done if current address > end address
000010F2  45F9 00001186            211          LEA     DISPADDREND,A2
000010F8                           212  
000010F8                           213  ************************************************
000010F8                           214  * Displays address as HEX
000010F8                           215  * INPUT: address stored into D7
000010F8                           216  * OUTPUT: prints hex address to output window
000010F8                           217  DISPADDRSTART
000010F8  1C3C 0002                218          MOVE.B  #2,D6               D6 is a counter, used for looping
000010FC  2407                     219          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010FE  4842                     220          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
00001100  6000 0004                221          BRA     DISPADDR2           Skips the second part to do later
00001104                           222  
00001104                           223  DISPADDR1
00001104  3407                     224          MOVE.W  D7,D2
00001106                           225  DISPADDR2
00001106  3202                     226          MOVE.W  D2,D1               D1 will be the first byte of the word
00001108  3602                     227          MOVE.W  D2,D3               D3 will be the second byte of the word
0000110A  3802                     228          MOVE.W  D2,D4               D4 will be the third byte of the word
0000110C  3A02                     229          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000110E                           230  
0000110E  E049                     231          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
00001110  E849                     232          LSR.W   #4,D1
00001112  E94B                     233          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001114  E04B                     234          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001116  E84B                     235          LSR.W   #4,D3
00001118  E14C                     236          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
0000111A  E04C                     237          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
0000111C  E84C                     238          LSR.W   #4,D4
0000111E  E14D                     239          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
00001120  E94D                     240          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001122  E04D                     241          LSR.W   #8,D5
00001124  E84D                     242          LSR.W   #4,D5
00001126                           243          
00001126                           244          
00001126  47F9 0000113A            245          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
0000112C  B23C 0009                246          CMP.B   #9,D1               Compares digit to 9
00001130  6E00 1F2C                247          BGT     CONV                Print out letter representation if greater than 9
00001134                           248  
00001134  103C 0003                249          MOVE.B  #3,D0               Displays digit if it is less than A
00001138  4E4F                     250          TRAP    #15
0000113A                           251          
0000113A                           252  DISPADDR3   
0000113A  1203                     253          MOVE.B  D3,D1               Displays digit in 1's place second
0000113C                           254  
0000113C                           255          *   converts digits 10+ into letters
0000113C  47F9 00001150            256          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001142  B23C 0009                257          CMP.B   #9,D1               Compares digit to 9
00001146  6E00 1F16                258          BGT     CONV                Print out letter representation if greater than 9
0000114A                           259          
0000114A  103C 0003                260          MOVE.B  #3,D0               Displays digit if it is less than A
0000114E  4E4F                     261          TRAP    #15
00001150                           262  
00001150                           263  DISPADDR4
00001150  1204                     264          MOVE.B  D4,D1               Displays digit in 1's place second
00001152                           265  
00001152                           266          *   converts digits 10+ into letters
00001152  47F9 00001166            267          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001158  B23C 0009                268          CMP.B   #9,D1               Compares digit to 9
0000115C  6E00 1F00                269          BGT     CONV                Print out letter representation if greater than 9
00001160                           270          
00001160  103C 0003                271          MOVE.B  #3,D0               Displays digit if it is less than A
00001164  4E4F                     272          TRAP    #15
00001166                           273  
00001166                           274  DISPADDR5
00001166  1205                     275          MOVE.B  D5,D1               Displays digit in 1's place second
00001168                           276  
00001168                           277          *   converts digits 10+ into letters
00001168  47F9 0000117C            278          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000116E  B23C 0009                279          CMP.B   #9,D1               Compares digit to 9
00001172  6E00 1EEA                280          BGT     CONV                Print out letter representation if greater than 9
00001176                           281          
00001176  103C 0003                282          MOVE.B  #3,D0               Displays digit if it is less than A
0000117A  4E4F                     283          TRAP    #15
0000117C                           284          
0000117C                           285  DISPADDR6
0000117C                           286  * Display counter -- creates new line every 8 bytes
0000117C                           287          * D6 is used as counter
0000117C                           288          
0000117C  5306                     289          SUB.B   #1,D6
0000117E  BC3C 0000                290          CMP.B   #0,D6
00001182  6680                     291          BNE     DISPADDR1
00001184                           292  
00001184  4ED2                     293          JMP     (A2)                Jumps to address stored in A2 when complete
00001186                           294  
00001186                           295  DISPADDREND
00001186  43F9 0000325B            296          LEA     TAB,A1
0000118C  103C 000E                297          MOVE.B  #14,D0
00001190  4E4F                     298          TRAP    #15
00001192                           299          
00001192                           300  *********************************************************************************************************************
00001192                           301  * Splits the first byte of the op code into nibbles
00001192                           302  * then sends it to the branch-table to jump to the appropiate section to be decoded
00001192                           303  
00001192  4281                     304          CLR.L   D1                  Clears the data registers
00001194  4282                     305          CLR.L   D2
00001196  4283                     306          CLR.L   D3
00001198  4284                     307          CLR.L   D4
0000119A  4285                     308          CLR.L   D5
0000119C  4286                     309          CLR.L   D6
0000119E  3C16                     310          MOVE.W  (A6),D6
000011A0  141E                     311          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000011A2                           312    
000011A2  1E02                     313          MOVE.B  D2,D7
000011A4  E14F                     314          LSL.W   #8,D7
000011A6                           315          
000011A6  1602                     316          MOVE.B  D2,D3               Copies data at D2 to D3
000011A8                           317          *   this gets digit in 10's place
000011A8  E80B                     318          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011AA                           319          *   this gets digit in 1's place
000011AA  E90A                     320          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011AC  E80A                     321          LSR.B   #4,D2               Shifts back right into 1's place
000011AE                           322          
000011AE                           323          *   D3 holds digit in 10's place
000011AE                           324          *   D2 holds digit in 1's place
000011AE                           325  
000011AE                           326          *   Moves second nibble to D5 to be used later
000011AE  1A02                     327          MOVE.B  D2,D5
000011B0  13C3 000034CA            328          MOVE.B  D3,bit0
000011B6                           329          *   Goes to a branch-table to figure out which op code it is
000011B6  6000 0002                330          BRA     CODE
000011BA                           331  
000011BA                           332  ******************************************************************************************************
000011BA                           333  *   This is where the table goes to detirmine which op-code to use
000011BA                           334  CODE    
000011BA  B63C 0000                335          CMP.B   #$0,D3              Goes to immediate operation section
000011BE  6700 0F0A                336          BEQ     IMD
000011C2  B63C 0004                337          CMP.B   #$4,D3              Goes to miscellaneous section
000011C6  6700 104C                338          BEQ     MISC
000011CA  B63C 0005                339          CMP.B   #$5,D3
000011CE  6700 12EA                340          BEQ     ADDQ                Goes to addq section
000011D2  B63C 0006                341          CMP.B   #$6,D3
000011D6  6700 0E3E                342          BEQ     BCC
000011DA  B63C 0009                343          CMP.B   #$9,D3              Goes to sub section
000011DE  6700 16C8                344          BEQ     SUB
000011E2  B63C 000C                345          CMP.B   #$C,D3              Goes to sub but displays as AND
000011E6  6700 16C0                346          BEQ     SUB
000011EA  B63C 000D                347          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011EE  6700 16B8                348          BEQ     SUB
000011F2  B63C 000B                349          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011F6  6700 16B0                350          BEQ     SUB
000011FA  B63C 0001                351          CMP.B   #$1,D3
000011FE  6700 02C4                352          BEQ     MOVB                Goes to movb
00001202  B63C 0003                353          CMP.B   #$3,D3
00001206  6700 00FC                354          BEQ     MOVW                Goes to movb
0000120A  B63C 0002                355          CMP.B   #$2,D3
0000120E  6700 01D4                356          BEQ     MOVL                Goes to movb
00001212  B63C 0008                357          CMP.B   #$8,D3
00001216  6700 08E4                358          BEQ     DIVSW               Goes to divsw
0000121A  B63C 000E                359          CMP.B   #$E,D3
0000121E  6700 0AC0                360          BEQ     LSLR                Goes to divsw
00001222                           361  
00001222  6000 1D70                362          BRA     INVOPCODE
00001226                           363          
00001226                           364  JSR
00001226  43F9 0000328A            365          LEA MJSR,A1
0000122C  103C 000E                366          MOVE.B  #14,D0
00001230  4E4F                     367          TRAP    #15 
00001232                           368          
00001232  1406                     369          MOVE.B  D6,D2
00001234  EB0A                     370          LSL.B   #5,D2
00001236  EA0A                     371          LSR.B   #5,D2
00001238  13C2 000034CE            372          MOVE.B  D2,bit4
0000123E                           373          
0000123E  1406                     374          MOVE.B  D6,D2
00001240  E50A                     375          LSL.B   #2,D2
00001242  EA0A                     376          LSR.B   #5,D2
00001244  13C2 000034CD            377          MOVE.B  D2,bit3
0000124A                           378  
0000124A  183C 0003                379          MOVE.B  #$3,D4
0000124E                           380  
0000124E  0C39 0002 000034CD       381          CMP.B   #$2,bit3
00001256  6700 0476                382          BEQ     MOVEIAN1
0000125A                           383          
0000125A  43F9 0000325B            384          LEA     TAB,A1
00001260  323C 0003                385          MOVE    #3,D1
00001264  4E4F                     386          TRAP    #15
00001266                           387          
00001266  0C39 0007 000034CD       388          CMP.B   #$7,bit3
0000126E  6700 0394                389          BEQ     ADDIMDDES
00001272                           390          
00001272                           391  BTST 
00001272  43F9 0000328E            392          LEA MBTST,A1
00001278  103C 000E                393          MOVE.B  #14,D0
0000127C  4E4F                     394          TRAP    #15 
0000127E                           395          
0000127E  1406                     396          MOVE.B  D6,D2
00001280  EB0A                     397          LSL.B   #5,D2
00001282  EA0A                     398          LSR.B   #5,D2
00001284  13C2 000034CB            399          MOVE.B  D2,bit1
0000128A                           400          
0000128A  1406                     401          MOVE.B  D6,D2
0000128C  E50A                     402          LSL.B   #2,D2
0000128E  EA0A                     403          LSR.B   #5,D2
00001290  13C2 000034CC            404          MOVE.B  D2,bit2
00001296                           405          
00001296  3406                     406          MOVE.W  D6,D2
00001298  E94A                     407          LSL.W   #4,D2
0000129A  E04A                     408          LSR.W   #8,D2
0000129C  EA4A                     409          LSR.W   #5,D2
0000129E  13C2 000034CD            410          MOVE.B  D2,bit3
000012A4                           411          
000012A4  3406                     412          MOVE.W  D6,D2
000012A6  EF4A                     413          LSL.W   #7,D2
000012A8  E04A                     414          LSR.W   #8,D2
000012AA  EE4A                     415          LSR.W   #7,D2
000012AC  13C2 000034CA            416          MOVE.B  D2,bit0
000012B2                           417          
000012B2  0C39 0000 000034CA       418          CMP.B   #0,bit0
000012BA  6700 002E                419          BEQ     BTSTMEM
000012BE                           420          
000012BE  43F9 0000325B            421          LEA TAB,A1
000012C4  103C 000E                422          MOVE.B  #14,D0
000012C8  4E4F                     423          TRAP    #15
000012CA                           424  
000012CA  43F9 00003273            425          LEA DISPD,A1
000012D0  103C 000E                426          MOVE.B  #14,D0
000012D4  4E4F                     427          TRAP    #15
000012D6                           428          
000012D6  1A3C 0004                429          MOVE.B   #$4,D5
000012DA                           430          
000012DA  1239 000034CD            431          MOVE.B  bit3,D1
000012E0  103C 0003                432          MOVE.B  #3,D0
000012E4  4E4F                     433          TRAP    #15
000012E6                           434          
000012E6  6000 02C4                435          BRA HANDLEDES
000012EA                           436          
000012EA                           437  BTSTMEM
000012EA  43F9 0000325B            438          LEA TAB,A1
000012F0  123C 0003                439          MOVE.B  #3,D1
000012F4  4E4F                     440          TRAP    #15
000012F6                           441          
000012F6  183C 0001                442          MOVE.B  #$1,D4
000012FA  45F9 000015AC            443          LEA     HANDLEDES,A2
00001300  6000 1C1A                444          BRA     DISPEA
00001304                           445          
00001304                           446  MOVW
00001304  E20A                     447          LSR.B   #1,D2
00001306  13C2 000034CB            448          MOVE.B  D2,bit1
0000130C                           449          
0000130C  1416                     450          MOVE.B  (A6),D2
0000130E  EB0A                     451          LSL.B   #5,D2
00001310  EA0A                     452          LSR.B   #5,D2
00001312  13C2 000034CE            453          MOVE.B  D2,bit4
00001318                           454          
00001318  141E                     455          MOVE.B  (A6)+,D2
0000131A  E50A                     456          LSL.B   #2,D2
0000131C  EA0A                     457          LSR.B   #5,D2
0000131E  13C2 000034CD            458          MOVE.B  D2,bit3
00001324                           459          
00001324  EF4E                     460          LSL.W   #7,D6
00001326  E04E                     461          LSR.W   #8,D6 
00001328  EA4E                     462          LSR.W   #5,D6 
0000132A  13C6 000034CC            463          MOVE.B  D6,bit2
00001330                           464  
00001330  0C39 0001 000034CC       465          CMP.B   #$1,bit2
00001338  6700 0056                466          BEQ     MOVEAW
0000133C                           467  
0000133C  43F9 000032BD            468          LEA MMOVEW,A1
00001342  103C 000E                469          MOVE.B  #14,D0
00001346  4E4F                     470          TRAP    #15 
00001348                           471  
00001348  0C39 0000 000034CD       472          CMP.B   #$0,bit3           
00001350  6700 0558                473          BEQ     MOVBDN1
00001354  0C39 0001 000034CD       474          CMP.B   #$1,bit3
0000135C  6700 02FC                475          BEQ     MOVEAN1
00001360  0C39 0002 000034CD       476          CMP.B   #$2,bit3
00001368  6700 0364                477          BEQ     MOVEIAN1
0000136C  0C39 0003 000034CD       478          CMP.B   #$3,bit3
00001374  6700 03EC                479          BEQ     MOVEIANI1
00001378  0C39 0004 000034CD       480          CMP.B   #$4,bit3
00001380  6700 0488                481          BEQ     MOVEIAND1
00001384  0C39 0007 000034CD       482          CMP.B   #$7,bit3
0000138C  6700 01BC                483          BEQ     ADDIMD
00001390                           484  
00001390                           485  MOVEAW
00001390  43F9 000032CB            486          LEA MMOVEAW,A1
00001396  103C 000E                487          MOVE.B  #14,D0
0000139A  4E4F                     488          TRAP    #15 
0000139C                           489          
0000139C  0C39 0000 000034CD       490          CMP.B   #$0,bit3           
000013A4  6700 0504                491          BEQ     MOVBDN1
000013A8  0C39 0001 000034CD       492          CMP.B   #$1,bit3
000013B0  6700 02A8                493          BEQ     MOVEAN1
000013B4  0C39 0002 000034CD       494          CMP.B   #$2,bit3
000013BC  6700 0310                495          BEQ     MOVEIAN1
000013C0  0C39 0003 000034CD       496          CMP.B   #$3,bit3
000013C8  6700 0398                497          BEQ     MOVEIANI1
000013CC  0C39 0004 000034CD       498          CMP.B   #$4,bit3
000013D4  6700 0434                499          BEQ     MOVEIAND1
000013D8  0C39 0007 000034CD       500          CMP.B   #$7,bit3
000013E0  6700 0168                501          BEQ     ADDIMD
000013E4                           502  
000013E4                           503  MOVL
000013E4  E20A                     504          LSR.B   #1,D2
000013E6  13C2 000034CB            505          MOVE.B  D2,bit1
000013EC                           506          
000013EC  1416                     507          MOVE.B  (A6),D2
000013EE  EB0A                     508          LSL.B   #5,D2
000013F0  EA0A                     509          LSR.B   #5,D2
000013F2  13C2 000034CE            510          MOVE.B  D2,bit4
000013F8                           511          
000013F8  141E                     512          MOVE.B  (A6)+,D2
000013FA  E50A                     513          LSL.B   #2,D2
000013FC  EA0A                     514          LSR.B   #5,D2
000013FE  13C2 000034CD            515          MOVE.B  D2,bit3
00001404                           516          
00001404  EF4E                     517          LSL.W   #7,D6
00001406  E04E                     518          LSR.W   #8,D6 
00001408  EA4E                     519          LSR.W   #5,D6 
0000140A  13C6 000034CC            520          MOVE.B  D6,bit2
00001410                           521          
00001410  0C39 0001 000034CC       522          CMP.B   #$1,bit2
00001418  6700 0056                523          BEQ     MOVEAL
0000141C                           524  
0000141C  43F9 000032C4            525          LEA MMOVEL,A1
00001422  103C 000E                526          MOVE.B  #14,D0
00001426  4E4F                     527          TRAP    #15 
00001428                           528          
00001428  0C39 0000 000034CD       529          CMP.B   #$0,bit3           
00001430  6700 0478                530          BEQ     MOVBDN1
00001434  0C39 0001 000034CD       531          CMP.B   #$1,bit3
0000143C  6700 021C                532          BEQ     MOVEAN1
00001440  0C39 0002 000034CD       533          CMP.B   #$2,bit3
00001448  6700 0284                534          BEQ     MOVEIAN1
0000144C  0C39 0003 000034CD       535          CMP.B   #$3,bit3
00001454  6700 030C                536          BEQ     MOVEIANI1
00001458  0C39 0004 000034CD       537          CMP.B   #$4,bit3
00001460  6700 03A8                538          BEQ     MOVEIAND1
00001464  0C39 0007 000034CD       539          CMP.B   #$7,bit3
0000146C  6700 00DC                540          BEQ     ADDIMD
00001470                           541  
00001470                           542  MOVEAL
00001470  43F9 000032D3            543          LEA MMOVEAL,A1
00001476  103C 000E                544          MOVE.B  #14,D0
0000147A  4E4F                     545          TRAP    #15 
0000147C                           546          
0000147C  0C39 0000 000034CD       547          CMP.B   #$0,bit3           
00001484  6700 0424                548          BEQ     MOVBDN1
00001488  0C39 0001 000034CD       549          CMP.B   #$1,bit3
00001490  6700 01C8                550          BEQ     MOVEAN1
00001494  0C39 0002 000034CD       551          CMP.B   #$2,bit3
0000149C  6700 0230                552          BEQ     MOVEIAN1
000014A0  0C39 0003 000034CD       553          CMP.B   #$3,bit3
000014A8  6700 02B8                554          BEQ     MOVEIANI1
000014AC  0C39 0004 000034CD       555          CMP.B   #$4,bit3
000014B4  6700 0354                556          BEQ     MOVEIAND1
000014B8  0C39 0007 000034CD       557          CMP.B   #$7,bit3
000014C0  6700 0088                558          BEQ     ADDIMD        
000014C4                           559  
000014C4                           560  MOVB
000014C4  43F9 000032B6            561          LEA MMOVEB,A1
000014CA  103C 000E                562          MOVE.B  #14,D0
000014CE  4E4F                     563          TRAP    #15 
000014D0                           564          
000014D0  E20A                     565          LSR.B   #1,D2
000014D2  13C2 000034CB            566          MOVE.B  D2,bit1
000014D8                           567          
000014D8  1416                     568          MOVE.B  (A6),D2
000014DA  EB0A                     569          LSL.B   #5,D2
000014DC  EA0A                     570          LSR.B   #5,D2
000014DE  13C2 000034CE            571          MOVE.B  D2,bit4
000014E4                           572          
000014E4  141E                     573          MOVE.B  (A6)+,D2
000014E6  E50A                     574          LSL.B   #2,D2
000014E8  EA0A                     575          LSR.B   #5,D2
000014EA  13C2 000034CD            576          MOVE.B  D2,bit3
000014F0                           577          
000014F0  EF4E                     578          LSL.W   #7,D6
000014F2  E04E                     579          LSR.W   #8,D6 
000014F4  EA4E                     580          LSR.W   #5,D6 
000014F6  13C6 000034CC            581          MOVE.B  D6,bit2
000014FC                           582          
000014FC                           583      
000014FC  4285                     584          CLR.L   D5
000014FE                           585          
000014FE  0C39 0000 000034CD       586          CMP.B   #$0,bit3           
00001506  6700 03A2                587          BEQ     MOVBDN1
0000150A  0C39 0001 000034CD       588          CMP.B   #$1,bit3
00001512  6700 0146                589          BEQ     MOVEAN1
00001516  0C39 0002 000034CD       590          CMP.B   #$2,bit3
0000151E  6700 01AE                591          BEQ     MOVEIAN1
00001522  0C39 0003 000034CD       592          CMP.B   #$3,bit3
0000152A  6700 0236                593          BEQ     MOVEIANI1
0000152E  0C39 0004 000034CD       594          CMP.B   #$4,bit3
00001536  6700 02D2                595          BEQ     MOVEIAND1
0000153A  0C39 0007 000034CD       596          CMP.B   #$7,bit3
00001542  6700 0006                597          BEQ     ADDIMD
00001546                           598          
00001546  6000 1A4E                599          BRA     INVOP
0000154A                           600  
0000154A                           601  ADDIMD
0000154A  43F9 0000325B            602      LEA     TAB,A1
00001550  103C 000E                603      MOVE.B  #14,D0
00001554  4E4F                     604      TRAP    #15
00001556                           605      
00001556  0C39 0000 000034CE       606      CMP.B   #$0,bit4
0000155E  6700 001A                607      BEQ     ADDIMD0
00001562  0C39 0001 000034CE       608      CMP.B   #$1,bit4
0000156A  6700 001C                609      BEQ     ADDIMD1
0000156E  0C39 0004 000034CE       610      CMP.B   #$4,bit4
00001576  6700 001E                611      BEQ     ADDIMD4
0000157A                           612  
0000157A                           613  ADDIMD0
0000157A  183C 0001                614      MOVE.B  #$1,D4
0000157E  45F9 000015AC            615      LEA     HANDLEDES,A2
00001584  6000 1996                616      BRA     DISPEA
00001588                           617  ADDIMD1 
00001588  183C 0002                618      MOVE.B  #$2,D4
0000158C  45F9 000015AC            619      LEA     HANDLEDES,A2
00001592  6000 1988                620      BRA     DISPEA
00001596                           621  ADDIMD4
00001596  43F9 00003269            622      LEA     HASH,A1
0000159C  103C 000E                623      MOVE.B  #14,D0
000015A0  4E4F                     624      TRAP    #15
000015A2                           625      
000015A2  45F9 000015AC            626      LEA     HANDLEDES,A2
000015A8  6000 1972                627      BRA     DISPEA 
000015AC                           628      
000015AC                           629  HANDLEDES
000015AC  43F9 0000325F            630      LEA     COMMA,A1
000015B2  103C 000E                631      MOVE.B  #14,D0
000015B6  4E4F                     632      TRAP    #15
000015B8                           633      
000015B8  0C39 0000 000034CC       634      CMP.B   #$0,bit2
000015C0  6700 0488                635      BEQ     MOVBDN2
000015C4  0C39 0001 000034CC       636      CMP.B   #$1,bit2
000015CC  6700 03AC                637      BEQ     MOVEAN2
000015D0  0C39 0002 000034CC       638      CMP.B   #$2,bit2 
000015D8  6700 03BC                639      BEQ     MOVIAN2
000015DC  0C39 0003 000034CC       640      CMP.B   #$3,bit2 
000015E4  6700 03E4                641      BEQ     MOVIANI2
000015E8  0C39 0004 000034CC       642      CMP.B   #$4,bit2 
000015F0  6700 0418                643      BEQ     MOVIAND2
000015F4  BA3C 0005                644      CMP.B   #$5,D5
000015F8  6700 0450                645      BEQ     MOVBDN2
000015FC  BA3C 0007                646      CMP.B   #$7,D5
00001600  6700 0002                647      BEQ     ADDIMDDES
00001604                           648  
00001604                           649  ADDIMDDES
00001604  0C39 0000 000034CE       650      CMP.B   #$0,bit4
0000160C  6700 001A                651      BEQ     ADDIMDDES0
00001610  0C39 0001 000034CE       652      CMP.B   #$1,bit4
00001618  6700 001C                653      BEQ     ADDIMDDES1
0000161C  0C39 0004 000034CE       654      CMP.B   #$4,bit4
00001624  6700 001E                655      BEQ     ADDIMDDES4
00001628                           656      
00001628                           657  ADDIMDDES0
00001628  183C 0001                658      MOVE.B  #$1,D4
0000162C  45F9 00003008            659      LEA     ENDNEWLINE,A2
00001632  6000 18E8                660      BRA     DISPEA
00001636                           661      
00001636                           662  ADDIMDDES1
00001636  183C 0002                663      MOVE.B  #$2,D4
0000163A  45F9 00003008            664      LEA     ENDNEWLINE,A2
00001640  6000 18DA                665      BRA     DISPEA
00001644                           666      
00001644                           667  ADDIMDDES4    
00001644  43F9 00003269            668      LEA     HASH,A1
0000164A  103C 000E                669      MOVE.B  #14,D0
0000164E  4E4F                     670      TRAP    #15
00001650                           671      
00001650  45F9 00003008            672      LEA     ENDNEWLINE,A2
00001656  6000 18C4                673      BRA     DISPEA 
0000165A                           674          
0000165A                           675  MOVEAN1
0000165A  43F9 0000325B            676      LEA TAB,A1
00001660  103C 000E                677      MOVE.B  #14,D0
00001664  4E4F                     678      TRAP    #15
00001666                           679  
00001666  43F9 0000326D            680      LEA DISPA,A1
0000166C  103C 000E                681      MOVE.B  #14,D0
00001670  4E4F                     682      TRAP    #15
00001672                           683      
00001672  1239 000034CE            684      MOVE.B  bit4,D1
00001678  103C 0003                685      MOVE.B  #3,D0
0000167C  4E4F                     686      TRAP    #15
0000167E                           687      
0000167E  43F9 0000325F            688      LEA COMMA,A1
00001684  103C 000E                689      MOVE.B  #14,D0
00001688  4E4F                     690      TRAP    #15
0000168A                           691      
0000168A  0C39 0000 000034CC       692      CMP.B   #$0,bit2
00001692  6700 03B6                693      BEQ     MOVBDN2
00001696  0C39 0001 000034CC       694      CMP.B   #$1,bit2
0000169E  6700 02DA                695      BEQ     MOVEAN2
000016A2  0C39 0002 000034CC       696      CMP.B   #$2,bit2 
000016AA  6700 02EA                697      BEQ     MOVIAN2
000016AE  0C39 0003 000034CC       698      CMP.B   #$3,bit2 
000016B6  6700 0312                699      BEQ     MOVIANI2
000016BA  0C39 0004 000034CC       700      CMP.B   #$4,bit2 
000016C2  6700 0346                701      BEQ     MOVIAND2
000016C6  BA3C 0005                702      CMP.B   #$5,D5
000016CA  6700 037E                703      BEQ     MOVBDN2
000016CE                           704      
000016CE                           705  MOVEIAN1
000016CE  43F9 0000325B            706      LEA TAB,A1
000016D4  103C 000E                707      MOVE.B  #14,D0
000016D8  4E4F                     708      TRAP    #15
000016DA                           709      
000016DA  43F9 00003261            710      LEA OPENBRA,A1
000016E0  103C 000E                711      MOVE.B  #14,D0
000016E4  4E4F                     712      TRAP    #15
000016E6                           713  
000016E6  43F9 0000326D            714      LEA DISPA,A1
000016EC  103C 000E                715      MOVE.B  #14,D0
000016F0  4E4F                     716      TRAP    #15
000016F2                           717      
000016F2  1239 000034CE            718      MOVE.B  bit4,D1
000016F8  103C 0003                719      MOVE.B  #3,D0
000016FC  4E4F                     720      TRAP    #15
000016FE                           721      
000016FE  43F9 00003263            722      LEA CLOSEBRA,A1
00001704  103C 000E                723      MOVE.B  #14,D0
00001708  4E4F                     724      TRAP    #15
0000170A                           725      
0000170A  B83C 0003                726      CMP.B   #$3,D4
0000170E  6700 18F8                727      BEQ     ENDNEWLINE
00001712                           728      
00001712  43F9 0000325F            729      LEA COMMA,A1
00001718  103C 000E                730      MOVE.B  #14,D0
0000171C  4E4F                     731      TRAP    #15
0000171E                           732      
0000171E  0C39 0000 000034CC       733      CMP.B   #$0,bit2
00001726  6700 0322                734      BEQ     MOVBDN2
0000172A  0C39 0001 000034CC       735      CMP.B   #$1,bit2
00001732  6700 0246                736      BEQ     MOVEAN2
00001736  0C39 0002 000034CC       737      CMP.B   #$2,bit2 
0000173E  6700 0256                738      BEQ     MOVIAN2
00001742  0C39 0003 000034CC       739      CMP.B   #$3,bit2 
0000174A  6700 027E                740      BEQ     MOVIANI2
0000174E  0C39 0004 000034CC       741      CMP.B   #$4,bit2 
00001756  6700 02B2                742      BEQ     MOVIAND2
0000175A  BA3C 0005                743      CMP.B   #$5,D5
0000175E  6700 02EA                744      BEQ     MOVBDN2
00001762                           745  
00001762                           746  MOVEIANI1
00001762  43F9 0000325B            747      LEA TAB,A1
00001768  103C 000E                748      MOVE.B  #14,D0
0000176C  4E4F                     749      TRAP    #15
0000176E                           750      
0000176E  43F9 00003261            751      LEA OPENBRA,A1
00001774  103C 000E                752      MOVE.B  #14,D0
00001778  4E4F                     753      TRAP    #15
0000177A                           754  
0000177A  43F9 0000326D            755      LEA DISPA,A1
00001780  103C 000E                756      MOVE.B  #14,D0
00001784  4E4F                     757      TRAP    #15
00001786                           758      
00001786  1239 000034CE            759      MOVE.B  bit4,D1
0000178C  103C 0003                760      MOVE.B  #3,D0
00001790  4E4F                     761      TRAP    #15
00001792                           762      
00001792  43F9 00003263            763      LEA CLOSEBRA,A1
00001798  103C 000E                764      MOVE.B  #14,D0
0000179C  4E4F                     765      TRAP    #15
0000179E                           766      
0000179E  43F9 00003265            767      LEA POS,A1
000017A4  103C 000E                768      MOVE.B  #14,D0
000017A8  4E4F                     769      TRAP    #15
000017AA                           770      
000017AA  BA3C 0003                771      CMP.B   #$3,D5
000017AE  6700 1858                772      BEQ     ENDNEWLINE
000017B2                           773             
000017B2  BA3C 0004                774      CMP.B   #$4,D5
000017B6  6700 1850                775      BEQ     ENDNEWLINE
000017BA                           776          
000017BA                           777          
000017BA  43F9 0000325F            778      LEA COMMA,A1
000017C0  103C 000E                779      MOVE.B  #14,D0
000017C4  4E4F                     780      TRAP    #15
000017C6                           781      
000017C6  0C39 0000 000034CC       782      CMP.B   #$0,bit2
000017CE  6700 027A                783      BEQ     MOVBDN2
000017D2  0C39 0001 000034CC       784      CMP.B   #$1,bit2
000017DA  6700 019E                785      BEQ     MOVEAN2
000017DE  0C39 0002 000034CC       786      CMP.B   #$2,bit2 
000017E6  6700 01AE                787      BEQ     MOVIAN2
000017EA  0C39 0003 000034CC       788      CMP.B   #$3,bit2 
000017F2  6700 01D6                789      BEQ     MOVIANI2
000017F6  0C39 0004 000034CC       790      CMP.B   #$4,bit2 
000017FE  6700 020A                791      BEQ     MOVIAND2
00001802  BA3C 0005                792      CMP.B   #$5,D5
00001806  6700 0242                793      BEQ     MOVBDN2
0000180A                           794  
0000180A                           795  MOVEIAND1
0000180A  43F9 0000325B            796      LEA TAB,A1
00001810  103C 000E                797      MOVE.B  #14,D0
00001814  4E4F                     798      TRAP    #15
00001816                           799      
00001816  43F9 00003267            800      LEA NEG,A1
0000181C  103C 000E                801      MOVE.B  #14,D0
00001820  4E4F                     802      TRAP    #15
00001822                           803      
00001822  43F9 00003261            804      LEA OPENBRA,A1
00001828  103C 000E                805      MOVE.B  #14,D0
0000182C  4E4F                     806      TRAP    #15
0000182E                           807  
0000182E  43F9 0000326D            808      LEA DISPA,A1
00001834  103C 000E                809      MOVE.B  #14,D0
00001838  4E4F                     810      TRAP    #15
0000183A                           811      
0000183A  1239 000034CE            812      MOVE.B  bit4,D1
00001840  103C 0003                813      MOVE.B  #3,D0
00001844  4E4F                     814      TRAP    #15
00001846                           815      
00001846  43F9 00003263            816      LEA CLOSEBRA,A1
0000184C  103C 000E                817      MOVE.B  #14,D0
00001850  4E4F                     818      TRAP    #15
00001852                           819      
00001852  BA3C 0004                820      CMP.B   #$4,D5
00001856  6700 17B0                821      BEQ     ENDNEWLINE
0000185A                           822      
0000185A  43F9 0000325F            823      LEA COMMA,A1
00001860  103C 000E                824      MOVE.B  #14,D0
00001864  4E4F                     825      TRAP    #15
00001866                           826      
00001866  0C39 0000 000034CC       827      CMP.B   #$0,bit2
0000186E  6700 01DA                828      BEQ     MOVBDN2
00001872  0C39 0001 000034CC       829      CMP.B   #$1,bit2
0000187A  6700 00FE                830      BEQ     MOVEAN2
0000187E  0C39 0002 000034CC       831      CMP.B   #$2,bit2 
00001886  6700 010E                832      BEQ     MOVIAN2
0000188A  0C39 0003 000034CC       833      CMP.B   #$3,bit2 
00001892  6700 0136                834      BEQ     MOVIANI2
00001896  0C39 0004 000034CC       835      CMP.B   #$4,bit2 
0000189E  6700 016A                836      BEQ     MOVIAND2
000018A2  BA3C 0005                837      CMP.B   #$5,D5
000018A6  6700 01A2                838      BEQ     MOVBDN2
000018AA                           839  
000018AA                           840  MOVBDN1
000018AA  43F9 0000325B            841      LEA TAB,A1
000018B0  103C 000E                842      MOVE.B  #14,D0
000018B4  4E4F                     843      TRAP    #15
000018B6                           844  
000018B6  BA3C 0006                845      CMP.B   #$6,D5             * Data Reg for LSLR
000018BA  6700 007A                846      BEQ     LSLRSRCD
000018BE                           847  
000018BE  43F9 00003273            848      LEA DISPD,A1
000018C4  103C 000E                849      MOVE.B  #14,D0
000018C8  4E4F                     850      TRAP    #15
000018CA                           851      
000018CA  1239 000034CE            852      MOVE.B  bit4,D1
000018D0  103C 0003                853      MOVE.B  #3,D0
000018D4  4E4F                     854      TRAP    #15
000018D6                           855  
000018D6  BA3C 0004                856      CMP.B   #$4,D5
000018DA  6700 0192                857      BEQ     ENDNLINC
000018DE                           858  
000018DE  43F9 0000325F            859      LEA COMMA,A1
000018E4  103C 000E                860      MOVE.B  #14,D0
000018E8  4E4F                     861      TRAP    #15
000018EA                           862  
000018EA  BA3C 0006                863      CMP.B   #$6,D5             * Data Reg for LSLR
000018EE  6700 006E                864      BEQ     LSLRDESD
000018F2  0C39 0000 000034CC       865      CMP.B   #$0,bit2
000018FA  6700 014E                866      BEQ     MOVBDN2
000018FE  0C39 0001 000034CC       867      CMP.B   #$1,bit2
00001906  6700 0072                868      BEQ     MOVEAN2
0000190A  0C39 0002 000034CC       869      CMP.B   #$2,bit2 
00001912  6700 0082                870      BEQ     MOVIAN2
00001916  0C39 0003 000034CC       871      CMP.B   #$3,bit2 
0000191E  6700 00AA                872      BEQ     MOVIANI2
00001922  0C39 0004 000034CC       873      CMP.B   #$4,bit2 
0000192A  6700 00DE                874      BEQ     MOVIAND2
0000192E  BA3C 0005                875      CMP.B   #$5,D5
00001932  6700 0116                876      BEQ     MOVBDN2
00001936                           877      
00001936                           878  LSLRSRCD
00001936  43F9 00003273            879      LEA DISPD,A1
0000193C  103C 000E                880      MOVE.B  #14,D0
00001940  4E4F                     881      TRAP    #15
00001942                           882          
00001942  1239 000034CA            883      MOVE.B  bit0,D1
00001948  103C 0003                884      MOVE.B  #3,D0
0000194C  4E4F                     885      TRAP    #15    
0000194E                           886  
0000194E  43F9 0000325F            887      LEA COMMA,A1
00001954  103C 000E                888      MOVE.B  #14,D0
00001958  4E4F                     889      TRAP    #15  
0000195A                           890      
0000195A  6000 0002                891      BRA     LSLRDESD
0000195E                           892      
0000195E                           893  LSLRDESD
0000195E  43F9 00003273            894      LEA DISPD,A1
00001964  103C 000E                895      MOVE.B  #14,D0
00001968  4E4F                     896      TRAP    #15
0000196A                           897          
0000196A  1239 000034CE            898      MOVE.B  bit4,D1
00001970  103C 0003                899      MOVE.B  #3,D0
00001974  4E4F                     900      TRAP    #15      
00001976                           901      
00001976                           902      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001976  6000 1690                903      BRA     ENDNEWLINE       
0000197A                           904  
0000197A                           905  MOVEAN2
0000197A  43F9 0000326D            906      LEA DISPA,A1
00001980  103C 000E                907      MOVE.B  #14,D0
00001984  4E4F                     908      TRAP    #15
00001986                           909      
00001986  1239 000034CB            910      MOVE.B  bit1,D1
0000198C  103C 0003                911      MOVE.B  #3,D0
00001990  4E4F                     912      TRAP    #15
00001992                           913  
00001992                           914      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001992  6000 1674                915      BRA     ENDNEWLINE    
00001996                           916  
00001996                           917  MOVIAN2
00001996  43F9 00003261            918      LEA OPENBRA,A1
0000199C  103C 000E                919      MOVE.B  #14,D0
000019A0  4E4F                     920      TRAP    #15
000019A2                           921  
000019A2  43F9 0000326D            922      LEA DISPA,A1
000019A8  103C 000E                923      MOVE.B  #14,D0
000019AC  4E4F                     924      TRAP    #15
000019AE                           925      
000019AE  1239 000034CB            926      MOVE.B  bit1,D1
000019B4  103C 0003                927      MOVE.B  #3,D0
000019B8  4E4F                     928      TRAP    #15
000019BA                           929      
000019BA  43F9 00003263            930      LEA CLOSEBRA,A1
000019C0  103C 000E                931      MOVE.B  #14,D0
000019C4  4E4F                     932      TRAP    #15
000019C6                           933      
000019C6                           934      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019C6  6000 1640                935      BRA     ENDNEWLINE
000019CA                           936  
000019CA                           937  MOVIANI2
000019CA  43F9 00003261            938      LEA OPENBRA,A1
000019D0  103C 000E                939      MOVE.B  #14,D0
000019D4  4E4F                     940      TRAP    #15
000019D6                           941  
000019D6  43F9 0000326D            942      LEA DISPA,A1
000019DC  103C 000E                943      MOVE.B  #14,D0
000019E0  4E4F                     944      TRAP    #15
000019E2                           945      
000019E2  1239 000034CB            946      MOVE.B  bit1,D1
000019E8  103C 0003                947      MOVE.B  #3,D0
000019EC  4E4F                     948      TRAP    #15
000019EE                           949      
000019EE  43F9 00003263            950      LEA CLOSEBRA,A1
000019F4  103C 000E                951      MOVE.B  #14,D0
000019F8  4E4F                     952      TRAP    #15
000019FA                           953      
000019FA  43F9 00003265            954      LEA POS,A1
00001A00  103C 000E                955      MOVE.B  #14,D0
00001A04  4E4F                     956      TRAP    #15
00001A06                           957      
00001A06                           958      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A06  6000 1600                959      BRA     ENDNEWLINE
00001A0A                           960  
00001A0A                           961  MOVIAND2
00001A0A  43F9 00003267            962      LEA NEG,A1
00001A10  103C 000E                963      MOVE.B  #14,D0
00001A14  4E4F                     964      TRAP    #15
00001A16                           965      
00001A16  43F9 00003261            966      LEA OPENBRA,A1
00001A1C  103C 000E                967      MOVE.B  #14,D0
00001A20  4E4F                     968      TRAP    #15
00001A22                           969  
00001A22  43F9 0000326D            970      LEA DISPA,A1
00001A28  103C 000E                971      MOVE.B  #14,D0
00001A2C  4E4F                     972      TRAP    #15
00001A2E                           973      
00001A2E  1239 000034CB            974      MOVE.B  bit1,D1
00001A34  103C 0003                975      MOVE.B  #3,D0
00001A38  4E4F                     976      TRAP    #15
00001A3A                           977      
00001A3A  43F9 00003263            978      LEA CLOSEBRA,A1
00001A40  103C 000E                979      MOVE.B  #14,D0
00001A44  4E4F                     980      TRAP    #15
00001A46                           981  
00001A46                           982      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A46  6000 15C0                983      BRA     ENDNEWLINE
00001A4A                           984  
00001A4A                           985  MOVBDN2
00001A4A  43F9 00003273            986      LEA DISPD,A1
00001A50  103C 000E                987      MOVE.B  #14,D0
00001A54  4E4F                     988      TRAP    #15
00001A56                           989          
00001A56  1239 000034CB            990      MOVE.B  bit1,D1
00001A5C  103C 0003                991      MOVE.B  #3,D0
00001A60  4E4F                     992      TRAP    #15   
00001A62                           993      
00001A62  B83C 0000                994      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A66  6700 15A0                995      BEQ     ENDNEWLINE
00001A6A                           996      
00001A6A                           997      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A6A  6000 159C                998      BRA     ENDNEWLINE
00001A6E                           999      
00001A6E                          1000      
00001A6E                          1001  ENDNLINC
00001A6E                          1002      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A6E  6000 1598               1003      BRA     ENDNEWLINE    
00001A72                          1004      
00001A72                          1005  MULSW
00001A72  1407                    1006          MOVE.B  D7,D2
00001A74  EB0A                    1007          LSL.B   #5,D2
00001A76  EA0A                    1008          LSR.B   #5,D2
00001A78  13C2 000034CE           1009          MOVE.B  D2,bit4
00001A7E                          1010          
00001A7E  1407                    1011          MOVE.B  D7,D2
00001A80  E50A                    1012          LSL.B   #2,D2
00001A82  EA0A                    1013          LSR.B   #5,D2
00001A84  13C2 000034CD           1014          MOVE.B  D2,bit3
00001A8A                          1015          
00001A8A  3C07                    1016          MOVE.W  D7,D6
00001A8C  EF4E                    1017          LSL.W   #7,D6
00001A8E  E04E                    1018          LSR.W   #8,D6 
00001A90  EA4E                    1019          LSR.W   #5,D6 
00001A92  13C6 000034CC           1020          MOVE.B  D6,bit2
00001A98                          1021          
00001A98  E94F                    1022          LSL.W   #4,D7
00001A9A  E04F                    1023          LSR.W   #8,D7 
00001A9C  EA4F                    1024          LSR.W   #5,D7 
00001A9E  13C7 000034CB           1025          MOVE.B  D7,bit1
00001AA4                          1026          
00001AA4  43F9 000032AF           1027          LEA MMULSW,A1
00001AAA  323C 000E               1028          MOVE    #14,D1
00001AAE  4E4F                    1029          TRAP    #15
00001AB0                          1030          
00001AB0  1A3C 0005               1031          MOVE.B  #$5,D5 
00001AB4                          1032          
00001AB4  0C39 0000 000034CD      1033          CMP.B   #$0,bit3           
00001ABC  6700 FDEC               1034          BEQ     MOVBDN1
00001AC0  0C39 0001 000034CD      1035          CMP.B   #$1,bit3
00001AC8  6700 FB90               1036          BEQ     MOVEAN1
00001ACC  0C39 0002 000034CD      1037          CMP.B   #$2,bit3
00001AD4  6700 FBF8               1038          BEQ     MOVEIAN1
00001AD8  0C39 0003 000034CD      1039          CMP.B   #$3,bit3
00001AE0  6700 FC80               1040          BEQ     MOVEIANI1
00001AE4  0C39 0004 000034CD      1041          CMP.B   #$4,bit3
00001AEC  6700 FD1C               1042          BEQ     MOVEIAND1
00001AF0  0C39 0007 000034CD      1043          CMP.B   #$7,bit3
00001AF8  6700 FA50               1044          BEQ     ADDIMD
00001AFC                          1045  
00001AFC                          1046           
00001AFC                          1047  DIVSW               
00001AFC                          1048          *MOVE.B  D6,D2
00001AFC  141E                    1049          MOVE.B  (A6)+,D2
00001AFE  EB0A                    1050          LSL.B   #5,D2
00001B00  EA0A                    1051          LSR.B   #5,D2
00001B02  13C2 000034CE           1052          MOVE.B  D2,bit4
00001B08                          1053          
00001B08  1406                    1054          MOVE.B  D6,D2
00001B0A  E50A                    1055          LSL.B   #2,D2
00001B0C  EA0A                    1056          LSR.B   #5,D2
00001B0E  13C2 000034CD           1057          MOVE.B  D2,bit3
00001B14                          1058          
00001B14  3E06                    1059          MOVE.W  D6,D7
00001B16  EF4F                    1060          LSL.W   #7,D7
00001B18  E04F                    1061          LSR.W   #8,D7 
00001B1A  EA4F                    1062          LSR.W   #5,D7 
00001B1C  13C7 000034CC           1063          MOVE.B  D7,bit2
00001B22                          1064          
00001B22  E94E                    1065          LSL.W   #4,D6
00001B24  E04E                    1066          LSR.W   #8,D6 
00001B26  EA4E                    1067          LSR.W   #5,D6 
00001B28  13C6 000034CB           1068          MOVE.B  D6,bit1
00001B2E                          1069          
00001B2E  43F9 000032A8           1070          LEA MMDIVSW,A1
00001B34  323C 000E               1071          MOVE    #14,D1
00001B38  4E4F                    1072          TRAP    #15
00001B3A                          1073          
00001B3A  1A3C 0005               1074          MOVE.B  #$5,D5 
00001B3E  183C 0004               1075          MOVE.B  #$4,D4
00001B42                          1076          
00001B42  0C39 0000 000034CD      1077          CMP.B   #$0,bit3           
00001B4A  6700 FD5E               1078          BEQ     MOVBDN1
00001B4E  0C39 0001 000034CD      1079          CMP.B   #$1,bit3
00001B56  6700 FB02               1080          BEQ     MOVEAN1
00001B5A  0C39 0002 000034CD      1081          CMP.B   #$2,bit3
00001B62  6700 FB6A               1082          BEQ     MOVEIAN1
00001B66  0C39 0003 000034CD      1083          CMP.B   #$3,bit3
00001B6E  6700 FBF2               1084          BEQ     MOVEIANI1
00001B72  0C39 0004 000034CD      1085          CMP.B   #$4,bit3
00001B7A  6700 FC8E               1086          BEQ     MOVEIAND1
00001B7E  0C39 0007 000034CD      1087          CMP.B   #$7,bit3
00001B86  6700 F9C2               1088          BEQ     ADDIMD
00001B8A                          1089  
00001B8A                          1090  NEGW
00001B8A  1406                    1091          MOVE.B  D6,D2
00001B8C  EB0A                    1092          LSL.B   #5,D2
00001B8E  EA0A                    1093          LSR.B   #5,D2
00001B90  13C2 000034CE           1094          MOVE.B  D2,bit4
00001B96                          1095          
00001B96  1406                    1096          MOVE.B  D6,D2
00001B98  E50A                    1097          LSL.B   #2,D2
00001B9A  EA0A                    1098          LSR.B   #5,D2
00001B9C  13C2 000034CD           1099          MOVE.B  D2,bit3
00001BA2                          1100          
00001BA2  3E06                    1101          MOVE.W  D6,D7
00001BA4  E14F                    1102          LSL.W   #8,D7
00001BA6  E04F                    1103          LSR.W   #8,D7 
00001BA8  EC4F                    1104          LSR.W   #6,D7 
00001BAA  13C7 000034CC           1105          MOVE.B  D7,bit2
00001BB0                          1106          
00001BB0  43F9 000032A3           1107          LEA MMNEGW,A1
00001BB6  323C 000E               1108          MOVE    #14,D1
00001BBA  4E4F                    1109          TRAP    #15
00001BBC                          1110          
00001BBC  183C 0003               1111          MOVE.B  #$3,D4
00001BC0                          1112          
00001BC0  0C39 0000 000034CC      1113          CMP.B   #$0,bit2
00001BC8  6700 001A               1114          BEQ     PRINTBYTE
00001BCC  0C39 0001 000034CC      1115          CMP.B   #$1,bit2
00001BD4  6700 0062               1116          BEQ     PRINTWORD
00001BD8  0C39 0002 000034CC      1117          CMP.B   #$2,bit2
00001BE0  6700 00AA               1118          BEQ     PRINTLONG
00001BE4                          1119          
00001BE4                          1120  PRINTBYTE
00001BE4  43F9 0000327D           1121      LEA MBYTE,A1
00001BEA  323C 000E               1122      MOVE    #14,D1
00001BEE  4E4F                    1123      TRAP    #15
00001BF0                          1124  
00001BF0  0C39 0000 000034CD      1125      CMP.B   #$0,bit3           
00001BF8  6700 FCB0               1126          BEQ     MOVBDN1
00001BFC  0C39 0001 000034CD      1127          CMP.B   #$1,bit3
00001C04  6700 FA54               1128          BEQ     MOVEAN1
00001C08  0C39 0002 000034CD      1129          CMP.B   #$2,bit3
00001C10  6700 FABC               1130          BEQ     MOVEIAN1
00001C14  0C39 0003 000034CD      1131          CMP.B   #$3,bit3
00001C1C  6700 FB44               1132          BEQ     MOVEIANI1
00001C20  0C39 0004 000034CD      1133          CMP.B   #$4,bit3
00001C28  6700 FBE0               1134          BEQ     MOVEIAND1
00001C2C  0C39 0007 000034CD      1135          CMP.B   #$7,bit3
00001C34  6700 F9CE               1136          BEQ     ADDIMDDES
00001C38                          1137      
00001C38                          1138  PRINTWORD
00001C38  43F9 00003280           1139      LEA MWORD,A1
00001C3E  323C 000E               1140      MOVE    #14,D1
00001C42  4E4F                    1141      TRAP    #15
00001C44                          1142  
00001C44  0C39 0000 000034CD      1143      CMP.B   #$0,bit3           
00001C4C  6700 FC5C               1144          BEQ     MOVBDN1
00001C50  0C39 0001 000034CD      1145          CMP.B   #$1,bit3
00001C58  6700 FA00               1146          BEQ     MOVEAN1
00001C5C  0C39 0002 000034CD      1147          CMP.B   #$2,bit3
00001C64  6700 FA68               1148          BEQ     MOVEIAN1
00001C68  0C39 0003 000034CD      1149          CMP.B   #$3,bit3
00001C70  6700 FAF0               1150          BEQ     MOVEIANI1
00001C74  0C39 0004 000034CD      1151          CMP.B   #$4,bit3
00001C7C  6700 FB8C               1152          BEQ     MOVEIAND1
00001C80  0C39 0007 000034CD      1153          CMP.B   #$7,bit3
00001C88  6700 F97A               1154          BEQ     ADDIMDDES
00001C8C                          1155      
00001C8C                          1156  PRINTLONG
00001C8C  43F9 00003283           1157      LEA MLONG,A1
00001C92  323C 000E               1158      MOVE    #14,D1
00001C96  4E4F                    1159      TRAP    #15
00001C98                          1160   
00001C98  0C39 0000 000034CD      1161      CMP.B   #$0,bit3           
00001CA0  6700 FC08               1162          BEQ     MOVBDN1
00001CA4  0C39 0001 000034CD      1163          CMP.B   #$1,bit3
00001CAC  6700 F9AC               1164          BEQ     MOVEAN1
00001CB0  0C39 0002 000034CD      1165          CMP.B   #$2,bit3
00001CB8  6700 FA14               1166          BEQ     MOVEIAN1
00001CBC  0C39 0003 000034CD      1167          CMP.B   #$3,bit3
00001CC4  6700 FA9C               1168          BEQ     MOVEIANI1
00001CC8  0C39 0004 000034CD      1169          CMP.B   #$4,bit3
00001CD0  6700 FB38               1170          BEQ     MOVEIAND1
00001CD4  0C39 0007 000034CD      1171          CMP.B   #$7,bit3
00001CDC  6700 F926               1172          BEQ     ADDIMDDES
00001CE0                          1173          
00001CE0                          1174  LSLR
00001CE0                          1175          *MOVE.B  D6,D2
00001CE0  141E                    1176          MOVE.B  (A6)+,D2
00001CE2  EB0A                    1177          LSL.B   #5,D2
00001CE4  EA0A                    1178          LSR.B   #5,D2
00001CE6  13C2 000034CE           1179          MOVE.B  D2,bit4
00001CEC                          1180          
00001CEC  1406                    1181          MOVE.B  D6,D2
00001CEE  E50A                    1182          LSL.B   #2,D2
00001CF0  EE0A                    1183          LSR.B   #7,D2
00001CF2  13C2 000034CD           1184          MOVE.B  D2,bit3
00001CF8                          1185          
00001CF8  3E06                    1186          MOVE.W  D6,D7
00001CFA  E14F                    1187          LSL.W   #8,D7
00001CFC  E04F                    1188          LSR.W   #8,D7 
00001CFE  EC4F                    1189          LSR.W   #6,D7 
00001D00  13C7 000034CC           1190          MOVE.B  D7,bit2
00001D06                          1191          
00001D06  3E06                    1192          MOVE.W  D6,D7
00001D08  EF4F                    1193          LSL.W   #7,D7
00001D0A  E04F                    1194          LSR.W   #8,D7 
00001D0C  EE4F                    1195          LSR.W   #7,D7
00001D0E  13C7 000034CB           1196          MOVE.B  D7,bit1   
00001D14                          1197      
00001D14  1806                    1198          MOVE.B  D6,D4
00001D16                          1199          
00001D16  3E06                    1200          MOVE.W  D6,D7
00001D18  E94F                    1201          LSL.W   #4,D7
00001D1A  E04F                    1202          LSR.W   #8,D7 
00001D1C  EA4F                    1203          LSR.W   #5,D7
00001D1E  13C7 000034CA           1204          MOVE.B  D7,bit0 
00001D24                          1205          
00001D24  1E06                    1206          MOVE.B  D6,D7
00001D26  E90F                    1207          LSL.B   #4,D7
00001D28  EE0F                    1208          LSR.B   #7,D7
00001D2A                          1209          
00001D2A  0C39 0003 000034CC      1210          CMP.B   #3,bit2
00001D32  6700 00B4               1211          BEQ     LSLRMEMH
00001D36                          1212          
00001D36  BE3C 0000               1213          CMP.B   #0,D7
00001D3A  6700 0028               1214          BEQ     ASLRMEMH
00001D3E                          1215          
00001D3E  1606                    1216          MOVE.B  D6,D3
00001D40  E70B                    1217          LSL.B   #3,D3
00001D42  EC0B                    1218          LSR.B   #6,D3
00001D44  B63C 0003               1219          CMP.B   #3,D3
00001D48  6700 00CA               1220          BEQ     RORL
00001D4C                          1221          
00001D4C  0C39 0001 000034CB      1222          CMP.B   #$1,bit1
00001D54  6700 013E               1223          BEQ     PRINTLSL
00001D58  0C39 0000 000034CB      1224          CMP.B   #$0,bit1
00001D60  6700 0280               1225          BEQ     PRINTLSR
00001D64                          1226          
00001D64                          1227  ASLRMEMH
00001D64  1A3C 0004               1228          MOVE.B  #4,D5
00001D68  0C39 0001 000034CB      1229          CMP.B   #$1,bit1
00001D70  6700 000E               1230          BEQ     PRINTASL
00001D74  0C39 0000 000034CB      1231          CMP.B   #$0,bit1
00001D7C  6700 0036               1232          BEQ     PRINTASR
00001D80                          1233          
00001D80                          1234  PRINTASL
00001D80  43F9 000032E2           1235          LEA MASL,A1
00001D86  303C 000E               1236          MOVE    #14,D0
00001D8A  4E4F                    1237          TRAP    #15
00001D8C                          1238          
00001D8C  0C39 0000 000034CC      1239          CMP.B   #$0,bit2
00001D94  6700 017C               1240          BEQ     PRINTB
00001D98  0C39 0001 000034CC      1241          CMP.B   #$1,bit2
00001DA0  6700 01A4               1242          BEQ     PRINTW
00001DA4  0C39 0002 000034CC      1243          CMP.B   #$2,bit2
00001DAC  6700 01CC               1244          BEQ     PRINTL
00001DB0  6000 0116               1245          BRA     LSLRMEM
00001DB4                          1246          
00001DB4                          1247  PRINTASR        
00001DB4  43F9 000032E6           1248          LEA MASR,A1
00001DBA  303C 000E               1249          MOVE    #14,D0
00001DBE  4E4F                    1250          TRAP    #15
00001DC0                          1251          
00001DC0  0C39 0000 000034CC      1252          CMP.B   #$0,bit2
00001DC8  6700 0148               1253          BEQ     PRINTB
00001DCC  0C39 0001 000034CC      1254          CMP.B   #$1,bit2
00001DD4  6700 0170               1255          BEQ     PRINTW
00001DD8  0C39 0002 000034CC      1256          CMP.B   #$2,bit2
00001DE0  6700 0198               1257          BEQ     PRINTL
00001DE4  6000 00E2               1258          BRA     LSLRMEM
00001DE8                          1259          
00001DE8                          1260  LSLRMEMH
00001DE8  3E06                    1261          MOVE.W  D6,D7
00001DEA  ED4F                    1262          LSL.W   #6,D7
00001DEC  E04F                    1263          LSR.W   #8,D7
00001DEE  EE4F                    1264          LSR.W   #7,D7
00001DF0  BE3C 0000               1265          CMP.B   #0,D7
00001DF4  6700 FF6E               1266          BEQ     ASLRMEMH
00001DF8                          1267          
00001DF8  1A3C 0004               1268          MOVE.B  #4,D5
00001DFC  0C39 0001 000034CB      1269          CMP.B   #$1,bit1
00001E04  6700 008E               1270          BEQ     PRINTLSL
00001E08  0C39 0000 000034CB      1271          CMP.B   #$0,bit1
00001E10  6700 01D0               1272          BEQ     PRINTLSR
00001E14                          1273  RORL
00001E14  0C39 0001 000034CB      1274          CMP.B   #$1,bit1
00001E1C  6700 000E               1275          BEQ     PRINTROL
00001E20  0C39 0000 000034CB      1276          CMP.B   #$0,bit1
00001E28  6700 0036               1277          BEQ     PRINTROR
00001E2C                          1278  PRINTROL
00001E2C  43F9 00003293           1279          LEA MROL,A1
00001E32  303C 000E               1280          MOVE    #14,D0
00001E36  4E4F                    1281          TRAP    #15
00001E38                          1282          
00001E38  0C39 0000 000034CC      1283          CMP.B   #$0,bit2
00001E40  6700 00D0               1284          BEQ     PRINTB
00001E44  0C39 0001 000034CC      1285          CMP.B   #$1,bit2
00001E4C  6700 00F8               1286          BEQ     PRINTW
00001E50  0C39 0002 000034CC      1287          CMP.B   #$2,bit2
00001E58  6700 0120               1288          BEQ     PRINTL
00001E5C  6000 006A               1289          BRA     LSLRMEM
00001E60                          1290  PRINTROR
00001E60  43F9 00003297           1291          LEA MROR,A1
00001E66  323C 000E               1292          MOVE    #14,D1
00001E6A  4E4F                    1293          TRAP    #15
00001E6C                          1294          
00001E6C  0C39 0000 000034CC      1295          CMP.B   #$0,bit2
00001E74  6700 009C               1296          BEQ     PRINTB
00001E78  0C39 0001 000034CC      1297          CMP.B   #$1,bit2
00001E80  6700 00C4               1298          BEQ     PRINTW
00001E84  0C39 0002 000034CC      1299          CMP.B   #$2,bit2
00001E8C  6700 00EC               1300          BEQ     PRINTL
00001E90  6000 0036               1301          BRA     LSLRMEM
00001E94                          1302  PRINTLSL
00001E94  43F9 0000329B           1303          LEA MLSL,A1
00001E9A  303C 000E               1304          MOVE    #14,D0
00001E9E  4E4F                    1305          TRAP    #15
00001EA0                          1306          
00001EA0  0C39 0000 000034CC      1307          CMP.B   #$0,bit2
00001EA8  6700 0068               1308          BEQ     PRINTB
00001EAC  0C39 0001 000034CC      1309          CMP.B   #$1,bit2
00001EB4  6700 0090               1310          BEQ     PRINTW
00001EB8  0C39 0002 000034CC      1311          CMP.B   #$2,bit2
00001EC0  6700 00B8               1312          BEQ     PRINTL
00001EC4  6000 0002               1313          BRA     LSLRMEM
00001EC8                          1314          
00001EC8                          1315  LSLRMEM
00001EC8                          1316          
00001EC8  E50C                    1317          LSL.B   #2,D4
00001ECA  EA0C                    1318          LSR.B   #5,D4
00001ECC  13C4 000034CD           1319          MOVE.B  D4,bit3
00001ED2                          1320          
00001ED2  183C 0003               1321          MOVE.B  #$3,D4
00001ED6                          1322          
00001ED6  0C39 0002 000034CD      1323          CMP.B   #$2,bit3
00001EDE  6700 F7EE               1324          BEQ     MOVEIAN1
00001EE2  0C39 0003 000034CD      1325          CMP.B   #$3,bit3
00001EEA  6700 F876               1326          BEQ     MOVEIANI1
00001EEE  0C39 0004 000034CD      1327          CMP.B   #$4,bit3
00001EF6  6700 F912               1328          BEQ     MOVEIAND1
00001EFA                          1329          
00001EFA  43F9 0000325B           1330          LEA TAB,A1
00001F00  123C 0003               1331          MOVE.B  #3,D1
00001F04  4E4F                    1332          TRAP    #15 
00001F06                          1333          
00001F06  0C39 0007 000034CD      1334          CMP.B   #$7,bit3
00001F0E  6700 F6F4               1335          BEQ     ADDIMDDES
00001F12                          1336  PRINTB
00001F12  43F9 00003279           1337          LEA MDOT,A1
00001F18  303C 000E               1338          MOVE    #14,D0
00001F1C  4E4F                    1339          TRAP    #15
00001F1E                          1340  
00001F1E  43F9 0000327D           1341          LEA MBYTE,A1
00001F24  303C 000E               1342          MOVE    #14,D0
00001F28  4E4F                    1343          TRAP    #15
00001F2A                          1344          
00001F2A  3A3C 0006               1345          MOVE #$6,D5
00001F2E                          1346          
00001F2E  0C39 0000 000034CD      1347          CMP.B   #0,bit3
00001F36  6700 0076               1348          BEQ     PRINTLSLRCOUNT
00001F3A  0C39 0001 000034CD      1349          CMP.B   #1,bit3
00001F42  6700 F966               1350          BEQ     MOVBDN1
00001F46                          1351  
00001F46                          1352  PRINTW 
00001F46  43F9 00003279           1353          LEA MDOT,A1
00001F4C  303C 000E               1354          MOVE    #14,D0
00001F50  4E4F                    1355          TRAP    #15
00001F52                          1356  
00001F52  43F9 00003280           1357          LEA MWORD,A1
00001F58  303C 000E               1358          MOVE    #14,D0
00001F5C  4E4F                    1359          TRAP    #15
00001F5E                          1360          
00001F5E  3A3C 0006               1361          MOVE #$6,D5
00001F62                          1362          
00001F62  0C39 0000 000034CD      1363          CMP.B   #0,bit3
00001F6A  6700 0042               1364          BEQ     PRINTLSLRCOUNT
00001F6E  0C39 0001 000034CD      1365          CMP.B   #1,bit3
00001F76  6700 F932               1366          BEQ     MOVBDN1
00001F7A                          1367  
00001F7A                          1368  PRINTL
00001F7A  43F9 00003279           1369          LEA MDOT,A1
00001F80  303C 000E               1370          MOVE    #14,D0
00001F84  4E4F                    1371          TRAP    #15
00001F86                          1372  
00001F86  43F9 00003283           1373          LEA MLONG,A1
00001F8C  303C 000E               1374          MOVE    #14,D0
00001F90  4E4F                    1375          TRAP    #15
00001F92                          1376  
00001F92  3A3C 0006               1377          MOVE #$6,D5
00001F96                          1378          
00001F96  0C39 0000 000034CD      1379          CMP.B   #0,bit3
00001F9E  6700 000E               1380          BEQ     PRINTLSLRCOUNT
00001FA2  0C39 0001 000034CD      1381          CMP.B   #1,bit3
00001FAA  6700 F8FE               1382          BEQ     MOVBDN1    
00001FAE                          1383  
00001FAE                          1384  PRINTLSLRCOUNT
00001FAE  43F9 0000325B           1385          LEA TAB,A1
00001FB4  303C 000E               1386          MOVE    #14,D0
00001FB8  4E4F                    1387          TRAP    #15
00001FBA                          1388          
00001FBA  43F9 00003269           1389          LEA HASH,A1
00001FC0  303C 000E               1390          MOVE    #14,D0
00001FC4  4E4F                    1391          TRAP    #15
00001FC6                          1392          
00001FC6  1239 000034CA           1393          MOVE.B  bit0,D1
00001FCC  303C 0003               1394          MOVE    #3,D0
00001FD0  4E4F                    1395          TRAP    #15
00001FD2                          1396          
00001FD2  43F9 0000325F           1397          LEA COMMA,A1
00001FD8  303C 000E               1398          MOVE    #14,D0
00001FDC  4E4F                    1399          TRAP    #15
00001FDE                          1400          
00001FDE  6000 F97E               1401          BRA LSLRDESD
00001FE2                          1402    
00001FE2                          1403  PRINTLSR
00001FE2  43F9 0000329F           1404          LEA MLSR,A1
00001FE8  323C 000E               1405          MOVE    #14,D1
00001FEC  4E4F                    1406          TRAP    #15
00001FEE                          1407          
00001FEE  0C39 0000 000034CC      1408          CMP.B   #$0,bit2
00001FF6  6700 FF1A               1409          BEQ     PRINTB
00001FFA  0C39 0001 000034CC      1410          CMP.B   #$1,bit2
00002002  6700 FF42               1411          BEQ     PRINTW
00002006  0C39 0002 000034CC      1412          CMP.B   #$2,bit2
0000200E  6700 FF6A               1413          BEQ     PRINTL
00002012  6000 FEB4               1414          BRA     LSLRMEM
00002016                          1415  
00002016                          1416  ******************************************************************************************************
00002016                          1417  *   Branch, branch to subroutine, and branch conditionally
00002016                          1418  *   BRA, BSR, Bcc
00002016                          1419  
00002016                          1420  BCC
00002016  13C5 000034CB           1421          MOVE.B  D5,bit1             Moves condition code to bit1
0000201C  1A1E                    1422          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
0000201E  13C5 000034CC           1423          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00002024  280E                    1424          MOVE.L  A6,D4               Moves current address to D4 register
00002026                          1425  
00002026  BA3C 0000               1426          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
0000202A  6700 0010               1427          BEQ     BCCWORD
0000202E  BA3C 00FF               1428          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00002032  6700 0010               1429          BEQ     BCCLONG             Else, displacement is 8-bits
00002036                          1430  
00002036                          1431          * Calculates 8-bit displacement
00002036                          1432          * 8-bit displacement is already in D5
00002036                          1433          * Adds displacement to current address
00002036  D805                    1434          ADD.B   D5,D4               Adds the displacement to current address
00002038  6000 0012               1435          BRA     BCCNEXT
0000203C                          1436  
0000203C                          1437  * Calculates 16-bit displacement
0000203C                          1438  BCCWORD
0000203C  3A1E                    1439          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
0000203E  D845                    1440          ADD.W   D5,D4               Adds the displacement to current address
00002040  6000 000A               1441          BRA     BCCNEXT
00002044                          1442  
00002044                          1443  * Calculates 32-bit displacement
00002044                          1444  BCCLONG
00002044  2A1E                    1445          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00002046  D885                    1446          ADD.L   D5,D4               Adds the displacement to current address
00002048  6000 0002               1447          BRA     BCCNEXT
0000204C                          1448  
0000204C                          1449  * Does the actual calculation
0000204C                          1450  * Adds the displacement to the current address
0000204C                          1451  BCCNEXT
0000204C  6100 000E               1452          BSR     BCCDISP             Displays branch op-code
00002050  45F9 00003008           1453          LEA     ENDNEWLINE,A2
00002056  2E04                    1454          MOVE.L  D4,D7
00002058  6000 F09E               1455          BRA     DISPADDRSTART
0000205C                          1456  
0000205C                          1457  BCCDISP
0000205C  B43C 0000               1458          CMP.B   #$0,D2
00002060  6700 0026               1459          BEQ     BCCBRA
00002064  B43C 0007               1460          CMP.B   #$7,D2
00002068  6700 0028               1461          BEQ     BCCBEQ
0000206C  B43C 0006               1462          CMP.B   #$6,D2
00002070  6700 002A               1463          BEQ     BCCBNE
00002074  B43C 000D               1464          CMP.B   #$D,D2
00002078  6700 002C               1465          BEQ     BCCBLT
0000207C  B43C 0002               1466          CMP.B   #$2,D2
00002080  6700 002E               1467          BEQ     BCCBHI
00002084                          1468  
00002084  6000 0F10               1469          BRA     INVOP
00002088                          1470  
00002088                          1471  BCCBRA
00002088  43F9 00003356           1472          LEA     MBRA,A1
0000208E  6000 002A               1473          BRA     BCCPRINT
00002092                          1474  BCCBEQ
00002092  43F9 00003346           1475          LEA     MBEQ,A1
00002098  6000 0020               1476          BRA     BCCPRINT
0000209C                          1477  BCCBNE
0000209C  43F9 0000334A           1478          LEA     MBNE,A1
000020A2  6000 0016               1479          BRA     BCCPRINT
000020A6                          1480  BCCBLT
000020A6  43F9 0000334E           1481          LEA     MBLT,A1
000020AC  6000 000C               1482          BRA     BCCPRINT
000020B0                          1483  BCCBHI
000020B0  43F9 00003352           1484          LEA     MBHI,A1
000020B6  6000 0002               1485          BRA     BCCPRINT
000020BA                          1486  BCCPRINT
000020BA  103C 000E               1487          MOVE.B  #14,D0
000020BE  4E4F                    1488          TRAP    #15
000020C0  43F9 0000325B           1489          LEA     TAB,A1
000020C6  4E4F                    1490          TRAP    #15
000020C8  4E75                    1491          RTS
000020CA                          1492  
000020CA                          1493  ******************************************************************************************************
000020CA                          1494  *   Immediate data arithmetic operations
000020CA                          1495  *   SUBI
000020CA                          1496  
000020CA  13C5 000034CB           1497  IMD     MOVE.B  D5,bit1
000020D0  1202                    1498          MOVE.B  D2,D1
000020D2  141E                    1499          MOVE.B  (A6)+,D2
000020D4                          1500          
000020D4  3805                    1501          MOVE    D5,D4
000020D6  C83C 0001               1502          AND.B   #$0001,D4
000020DA  B83C 0001               1503          CMP.B   #$1,D4
000020DE  6700 F192               1504          BEQ     BTST
000020E2  B23C 0008               1505          CMP.B   #8,D1
000020E6  6700 F18A               1506          BEQ     BTST
000020EA                          1507  
000020EA  DE02                    1508          ADD.B   D2,D7
000020EC                          1509  
000020EC  1602                    1510          MOVE.B  D2,D3               Copies data at D2 to D3
000020EE                          1511          *   this gets digit in 10's place
000020EE  E80B                    1512          LSR.B   #4,D3               Shifts right to get rid of 1's place
000020F0                          1513          *   this gets digit in 1's place
000020F0  E90A                    1514          LSL.B   #4,D2               Shifts left to get rid of 10's place
000020F2  E80A                    1515          LSR.B   #4,D2               Shifts back right into 1's place
000020F4                          1516  
000020F4                          1517          *   D3 holds digit in 10's place
000020F4                          1518          *   D2 holds digit in 1's place
000020F4                          1519  
000020F4  E20B                    1520          LSR.B   #1,D3
000020F6  6400 0004               1521          BCC     IMD2
000020FA  5404                    1522          ADD.B   #$2,D4
000020FC  E20B                    1523  IMD2    LSR.B   #1,D3
000020FE  6400 0004               1524          BCC     IMD3
00002102  5804                    1525          ADD.B   #$4,D4
00002104  B43C 0007               1526  IMD3    CMP.B   #$7,D2
00002108  6D00 0006               1527          BLT     IMD4
0000210C  5204                    1528          ADD.B   #$1,D4
0000210E  5102                    1529          SUB.B   #$8,D2
00002110                          1530  
00002110                          1531          *   Stores them into addr
00002110  13C3 000034CC           1532  IMD4    MOVE.B  D3,bit2
00002116  13C4 000034CD           1533          MOVE.B  D4,bit3
0000211C  13C2 000034CE           1534          MOVE.B  D2,bit4
00002122                          1535  
00002122                          1536  **************************
00002122                          1537  * This finds the size of the operation
00002122                          1538  
00002122  0C39 0000 000034CC      1539          CMP.B   #$0,bit2
0000212A  6700 007E               1540          BEQ     IMDBYTE
0000212E  0C39 0001 000034CC      1541          CMP.B   #$1,bit2
00002136  6700 0082               1542          BEQ     IMDWORD
0000213A  0C39 0002 000034CC      1543          CMP.B   #$2,bit2
00002142  6700 0084               1544          BEQ     IMDLONG
00002146  6000 0E4E               1545          BRA     INVOP
0000214A                          1546  
0000214A                          1547  *************************************************************
0000214A                          1548  * Display IMD op-code
0000214A                          1549  IMDPRINT
0000214A  0C39 0000 000034CB      1550          CMP.B   #$0,bit1
00002152  6700 0026               1551          BEQ     IMDPRINTORI
00002156  0C39 0004 000034CB      1552          CMP.B   #$4,bit1
0000215E  6700 0024               1553          BEQ     IMDPRINTSUBI
00002162  0C39 000A 000034CB      1554          CMP.B   #$A,bit1
0000216A  6700 0022               1555          BEQ     IMDPRINTEORI
0000216E  0C39 000C 000034CB      1556          CMP.B   #$C,bit1
00002176  6700 0020               1557          BEQ     IMDPRINTCMPI
0000217A                          1558  
0000217A                          1559  IMDPRINTORI
0000217A  43F9 0000330A           1560          LEA     MORI,A1
00002180  6000 0020               1561          BRA     IMDPRINTEND
00002184                          1562  
00002184                          1563  IMDPRINTSUBI
00002184  43F9 00003304           1564          LEA     MSUBI,A1
0000218A  6000 0016               1565          BRA     IMDPRINTEND
0000218E                          1566  
0000218E                          1567  IMDPRINTEORI
0000218E  43F9 00003334           1568          LEA     MEORI,A1
00002194  6000 000C               1569          BRA     IMDPRINTEND
00002198                          1570  
00002198                          1571  IMDPRINTCMPI
00002198  43F9 00003323           1572          LEA     MCMPI,A1
0000219E  6000 0002               1573          BRA     IMDPRINTEND
000021A2                          1574  
000021A2                          1575  IMDPRINTEND
000021A2  103C 000E               1576          MOVE.B  #14,D0
000021A6  4E4F                    1577          TRAP    #15
000021A8  4E75                    1578          RTS
000021AA                          1579  
000021AA                          1580  *************************************************************
000021AA                          1581  * Immediate data operation size BYTE
000021AA                          1582  IMDBYTE
000021AA  619E                    1583          BSR     IMDPRINT
000021AC  43F9 0000327D           1584          LEA     MBYTE,A1
000021B2                          1585  
000021B2                          1586          * Moves size to D4, needed to use DISPEA
000021B2  183C 0001               1587          MOVE.B  #$1,D4
000021B6  6000 001A               1588          BRA     IMDEA
000021BA                          1589  
000021BA                          1590  *************************************************************
000021BA                          1591  * Immediate data operation size WORD
000021BA                          1592  IMDWORD
000021BA  618E                    1593          BSR     IMDPRINT
000021BC  43F9 00003280           1594          LEA     MWORD,A1
000021C2                          1595  
000021C2  1803                    1596          MOVE.B  D3,D4
000021C4  6000 000C               1597          BRA     IMDEA
000021C8                          1598  
000021C8                          1599  
000021C8                          1600  *************************************************************
000021C8                          1601  * Immediate data operation size LONG
000021C8                          1602  IMDLONG
000021C8  6180                    1603          BSR     IMDPRINT
000021CA  43F9 00003283           1604          LEA     MLONG,A1
000021D0                          1605          
000021D0                          1606  
000021D0                          1607          * Moves size to D4, needed to use DISPEA
000021D0  1803                    1608          MOVE.B  D3,D4
000021D2                          1609  
000021D2                          1610  IMDEA
000021D2                          1611          * This prints out the size and creates tab
000021D2  103C 000E               1612          MOVE.B  #14,D0
000021D6  4E4F                    1613          TRAP    #15
000021D8  43F9 0000325B           1614          LEA     TAB,A1
000021DE  103C 000E               1615          MOVE.B  #14,D0
000021E2  4E4F                    1616          TRAP    #15
000021E4  43F9 00003269           1617          LEA     HASH,A1
000021EA  103C 000E               1618          MOVE.B  #14,D0
000021EE  4E4F                    1619          TRAP    #15
000021F0                          1620          * Loads return address into A2
000021F0  45F9 000021FA           1621          LEA     IMDEA2,A2
000021F6  6000 0D24               1622          BRA     DISPEA
000021FA                          1623  IMDEA2
000021FA  43F9 0000325F           1624          LEA     COMMA,A1
00002200  103C 000E               1625          MOVE.B  #14,D0
00002204  4E4F                    1626          TRAP    #15
00002206                          1627  
00002206  45F9 00002210           1628          LEA     IMDEA3,A2
0000220C  6000 0BBE               1629          BRA     SUBEA
00002210                          1630  IMDEA3
00002210  6000 0DF6               1631          BRA     ENDNEWLINE
00002214                          1632  
00002214                          1633  ******************************************************************************************************
00002214                          1634  * Miscellaneous section
00002214                          1635  *   Not goes here
00002214                          1636  
00002214                          1637  MISC
00002214  13C5 000034CB           1638          MOVE.B  D5,bit1
0000221A  141E                    1639          MOVE.B  (A6)+,D2
0000221C                          1640  
0000221C  DE02                    1641          ADD.B   D2,D7
0000221E                          1642  
0000221E  1602                    1643          MOVE.B  D2,D3               Copies data at D2 to D3
00002220                          1644          *   this gets digit in 10's place
00002220  E80B                    1645          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002222                          1646          *   this gets digit in 1's place
00002222  E90A                    1647          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002224  E80A                    1648          LSR.B   #4,D2               Shifts back right into 1's place
00002226                          1649  
00002226                          1650  
00002226  3806                    1651          MOVE.W  D6,D4
00002228  E94C                    1652          LSL.W   #$4,D4
0000222A  E04C                    1653          LSR.W   #$8,D4
0000222C  E44C                    1654          LSR.W   #$2,D4
0000222E  13C4 000034CC           1655          MOVE.B  D4,bit2
00002234  0C39 003A 000034CC      1656          CMP.B   #$3A,bit2
0000223C  6700 EFE8               1657          BEQ     JSR
00002240                          1658  
00002240                          1659      ***
00002240                          1660          *BTST.B  #$04,bit0
00002240                          1661          *BEQ     MISCLEA
00002240                          1662          *   D5 is bit1
00002240                          1663          *   D3 is bit2
00002240                          1664          *   D2 is bit3
00002240                          1665  
00002240                          1666  **************************
00002240                          1667  * This finds the size of the operation
00002240                          1668          * D5 is bit1
00002240  BA3C 0004               1669          CMP.B   #$4,D5
00002244  6700 F944               1670          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00002248  BA3C 0006               1671          CMP.B   #$6,D5              Branches to NOT section
0000224C  6700 01A0               1672          BEQ     MISCNOT
00002250  BA3C 000E               1673          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00002254  6700 0006               1674          BEQ     MISCBIT2
00002258  6000 0022               1675          BRA     MISCCHKLEA          Check bits to see if LEA, else branch to MoveM
0000225C                          1676  
0000225C                          1677  MISCBIT2
0000225C                          1678          * D3 is bit2
0000225C  B63C 0007               1679          CMP.B   #$7,D3              Branches to NOP
00002260  6700 0006               1680          BEQ     MISCBIT3
00002264  6000 0D30               1681          BRA     INVOP
00002268                          1682  
00002268                          1683  MISCBIT3
00002268                          1684          * D2 is bit3
00002268  B43C 0001               1685          CMP.B   #$1,D2              Branches to NOP
0000226C  6700 004E               1686          BEQ     MISCNOP
00002270  B43C 0005               1687          CMP.B   #$5,D2              Branches to NOP
00002274  6700 0168               1688          BEQ     MISCRTS
00002278  6000 0D1C               1689          BRA     INVOP
0000227C                          1690  
0000227C                          1691  MISCCHKLEA
0000227C  1805                    1692          MOVE.B  D5,D4
0000227E  C83C 0001               1693          AND.B   #$1,D4
00002282  B83C 0001               1694          CMP.B   #$1,D4
00002286  6600 0014               1695          BNE     MISCCHECKM
0000228A  1803                    1696          MOVE.B  D3,D4
0000228C  C83C 000C               1697          AND.B   #$C,D4
00002290  B83C 000C               1698          CMP.B   #$C,D4
00002294  6600 0006               1699          BNE     MISCCHECKM
00002298  6000 0032               1700          BRA     MISCLEA
0000229C                          1701  
0000229C                          1702  MISCCHECKM
0000229C  1805                    1703          MOVE.B  D5,D4
0000229E  C83C 0008               1704          AND.B   #$8,D4
000022A2  B83C 0008               1705          CMP.B   #$8,D4
000022A6  6600 0CEE               1706          BNE     INVOP
000022AA  1803                    1707          MOVE.B  D3,D4
000022AC  C83C 0008               1708          AND.B   #$8,D4
000022B0  B83C 0008               1709          CMP.B   #$8,D4
000022B4  6600 0CE0               1710          BNE     INVOP
000022B8  6000 03FC               1711          BRA     MISCMOVEM
000022BC                          1712  
000022BC                          1713  ******************************************************
000022BC                          1714  * NOP
000022BC                          1715  * No operation
000022BC                          1716  MISCNOP
000022BC  43F9 0000335A           1717          LEA     MNOP,A1
000022C2  103C 000E               1718          MOVE.B  #14,D0
000022C6  4E4F                    1719          TRAP    #15
000022C8                          1720  
000022C8  6000 0D3E               1721          BRA     ENDNEWLINE          Goes to next opcode
000022CC                          1722  
000022CC                          1723  ******************************************************
000022CC                          1724  MISCLEA
000022CC                          1725      
000022CC  43F9 00003362           1726          LEA     MLEA,A1
000022D2  103C 000E               1727          MOVE.B  #14,D0
000022D6  4E4F                    1728          TRAP    #15
000022D8  43F9 0000325B           1729          LEA     TAB,A1
000022DE  103C 000E               1730          MOVE.B  #14,D0
000022E2  4E4F                    1731          TRAP    #15        
000022E4                          1732          
000022E4  E20D                    1733          LSR.B   #1,D5   *isolate addr register
000022E6  3C02                    1734          MOVE.W  D2,D6   *copy over bit3 for potential manip of ea reg
000022E8  E50B                    1735          LSL.B   #2,D3
000022EA  E40B                    1736          LSR.B   #2,D3   *d3 00xx
000022EC  1E02                    1737          MOVE.B  D2,D7
000022EE  E60F                    1738          LSR.B   #3,D7
000022F0                          1739          ***
000022F0                          1740  *        AND.L   D2,D7
000022F0                          1741  *        CMP.L   #$0,D7
000022F0                          1742  *        BEQ     LEAMODE0
000022F0                          1743  *        CMP.L   #$1,D7 
000022F0                          1744  *        BEQ     LEAMODE1
000022F0                          1745  *        
000022F0                          1746  *        CMP.B   #1,D7
000022F0                          1747  *        BEQ     LEAMODE1
000022F0                          1748  *        CMP.B   #0,D7
000022F0                          1749  *        BEQ     LEAMODE0
000022F0                          1750  *        
000022F0                          1751  *        ***
000022F0  B63C 0007               1752          CMP.B   #%111,D3
000022F4  6600 0028               1753          BNE     LEA_ABS_EA
000022F8                          1754          
000022F8  B63C 0002               1755          CMP.B   #%010,D3
000022FC  6700 0078               1756          BEQ     LEA_INDIR_AN
00002300                          1757          
00002300                          1758  LEAMODE1
00002300  E20B                    1759          LSR.B   #1,D3
00002302  5203                    1760          ADD.B   #1,D3   *ea mode should be set to 111
00002304  B63C 0007               1761          CMP.B   #7,D3   *error check
00002308  6600 0C8C               1762          BNE     INVOP
0000230C  6700 0010               1763          BEQ     LEA_ABS_EA 
00002310                          1764          
00002310                          1765  LEAMODE0
00002310  E20B                    1766          LSR.B   #1,D3   *ea mode should be set to 010
00002312  B63C 0002               1767          CMP.B   #2,D3   *error check
00002316  6600 0C7E               1768          BNE     INVOP
0000231A  6700 005A               1769          BEQ     LEA_INDIR_AN
0000231E                          1770          
0000231E                          1771  LEA_ABS_EA
0000231E                          1772          *MOVE RET LOC INTO A2
0000231E  0C39 0000 000034CE      1773          CMP.B   #$0,bit4
00002326  6700 000E               1774          BEQ     LEAIMD0
0000232A  0C39 0001 000034CE      1775          CMP.B   #$1,bit4
00002332  6700 0010               1776          BEQ     LEAIMD1
00002336                          1777  
00002336                          1778  LEAIMD0
00002336  183C 0001               1779          MOVE.B  #$1,D4
0000233A  45F9 00002352           1780          LEA     CONTPRINTLEA,A2
00002340  6000 0BDA               1781          BRA     DISPEA
00002344                          1782  LEAIMD1 
00002344  183C 0002               1783          MOVE.B  #$2,D4
00002348  45F9 00002352           1784          LEA     CONTPRINTLEA,A2
0000234E  6000 0BCC               1785          BRA     DISPEA  
00002352                          1786          
00002352                          1787  CONTPRINTLEA
00002352  43F9 0000325F           1788          LEA     COMMA,A1
00002358  103C 000E               1789          MOVE.B  #14,D0
0000235C  4E4F                    1790          TRAP    #15
0000235E  43F9 0000326D           1791          LEA     DISPA,A1
00002364  103C 000E               1792          MOVE.B  #14,D0
00002368  4E4F                    1793          TRAP    #15
0000236A  1205                    1794          MOVE.B  D5,D1
0000236C  103C 0003               1795          MOVE.B  #3,D0
00002370  4E4F                    1796          TRAP    #15
00002372  6000 0C94               1797          BRA     ENDNEWLINE
00002376                          1798          
00002376                          1799  LEA_INDIR_AN
00002376  E30E                    1800          LSL.B   #1,D6
00002378  E20E                    1801          LSR.B   #1,D6   *isolate ea register
0000237A                          1802  
0000237A  43F9 00003362           1803          LEA     MLEA, A1
00002380  103C 000E               1804          MOVE.B  #14,D0
00002384  4E4F                    1805          TRAP    #15
00002386                          1806  
00002386  43F9 0000325B           1807          LEA     TAB, A1
0000238C  103C 000E               1808          MOVE.B  #14,D0
00002390  4E4F                    1809          TRAP    #15
00002392                          1810          
00002392  43F9 00003261           1811          LEA     OPENBRA,A1
00002398  103C 000E               1812          MOVE.B  #14,D0
0000239C  4E4F                    1813          TRAP    #15
0000239E                          1814          
0000239E  43F9 0000326D           1815          LEA     DISPA,A1
000023A4  103C 000E               1816          MOVE.B  #14,D0
000023A8  4E4F                    1817          TRAP    #15
000023AA                          1818          
000023AA  1206                    1819          MOVE.B  D6,D1
000023AC  103C 0003               1820          MOVE.B  #3,D0
000023B0  4E4F                    1821          TRAP    #15
000023B2                          1822          
000023B2  43F9 00003263           1823          LEA     CLOSEBRA,A1
000023B8  103C 000E               1824          MOVE.B  #14,D0
000023BC  4E4F                    1825          TRAP    #15
000023BE                          1826          
000023BE  43F9 0000325F           1827          LEA     COMMA,A1
000023C4  103C 000E               1828          MOVE.B  #14,D0
000023C8  4E4F                    1829          TRAP    #15
000023CA                          1830          
000023CA  43F9 0000326D           1831          LEA     DISPA,A1
000023D0  103C 000E               1832          MOVE.B  #14,D0
000023D4  4E4F                    1833          TRAP    #15
000023D6                          1834  
000023D6  1203                    1835          MOVE.B  D3,D1
000023D8  103C 0003               1836          MOVE.B  #3,D0
000023DC  4E4F                    1837          TRAP    #15
000023DE                          1838  
000023DE                          1839  ******************************************************
000023DE                          1840  * RTS
000023DE                          1841  * Return to sub routine
000023DE                          1842  MISCRTS
000023DE  43F9 0000335E           1843          LEA     MRTS,A1
000023E4  103C 000E               1844          MOVE.B  #14,D0
000023E8  4E4F                    1845          TRAP    #15
000023EA                          1846  
000023EA  6000 0C1C               1847          BRA     ENDNEWLINE          Goes to next opcode
000023EE                          1848  
000023EE                          1849  ******************************************************
000023EE                          1850  * NOT
000023EE                          1851  * Reuses some of IMD section to display because they have similar format
000023EE                          1852  *  (I was kinda lazy too)
000023EE                          1853  MISCNOT
000023EE  E20B                    1854          LSR.B   #1,D3
000023F0  6400 0004               1855          BCC     MISCNOT2
000023F4  5404                    1856          ADD.B   #$2,D4
000023F6                          1857  MISCNOT2   
000023F6  E20B                    1858          LSR.B   #1,D3
000023F8  6400 0004               1859          BCC     MISCNOT3
000023FC  5804                    1860          ADD.B   #$4,D4
000023FE                          1861  MISCNOT3   
000023FE  B43C 0007               1862          CMP.B   #$7,D2
00002402  6D00 0006               1863          BLT     MISCNOT4
00002406  5204                    1864          ADD.B   #$1,D4
00002408  5102                    1865          SUB.B   #$8,D2
0000240A                          1866  
0000240A                          1867          *   Stores them into addr
0000240A                          1868  MISCNOT4
0000240A  13C3 000034CC           1869          MOVE.B  D3,bit2
00002410  13C4 000034CD           1870          MOVE.B  D4,bit3
00002416  13C2 000034CE           1871          MOVE.B  D2,bit4
0000241C                          1872  
0000241C  B63C 0000               1873          CMP.B   #$0,D3
00002420  6700 0016               1874          BEQ     MISCBYTE
00002424  B63C 0001               1875          CMP.B   #$1,D3
00002428  6700 0020               1876          BEQ     MISCWORD
0000242C  B63C 0002               1877          CMP.B   #$2,D3
00002430  6700 0028               1878          BEQ     MISCLONG
00002434  6000 0B60               1879          BRA     INVOP
00002438                          1880  *************************************************************
00002438                          1881  * Immediate data operation size BYTE
00002438                          1882  MISCBYTE
00002438  6100 004C               1883          BSR     MISCPRINT
0000243C  43F9 0000327D           1884          LEA     MBYTE,A1
00002442                          1885  
00002442                          1886          * Moves size to D4, needed to use DISPEA
00002442  183C 0001               1887          MOVE.B  #$1,D4
00002446  6000 001E               1888          BRA     MISCEA
0000244A                          1889  
0000244A                          1890  *************************************************************
0000244A                          1891  * Immediate data operation size WORD
0000244A                          1892  MISCWORD
0000244A  6100 003A               1893          BSR     MISCPRINT
0000244E  43F9 00003280           1894          LEA     MWORD,A1
00002454                          1895  
00002454  1803                    1896          MOVE.B  D3,D4
00002456  6000 000E               1897          BRA     MISCEA
0000245A                          1898  
0000245A                          1899  
0000245A                          1900  *************************************************************
0000245A                          1901  * Immediate data operation size LONG
0000245A                          1902  MISCLONG
0000245A  6100 002A               1903          BSR     MISCPRINT
0000245E  43F9 00003283           1904          LEA     MLONG,A1
00002464                          1905  
00002464                          1906          * Moves size to D4, needed to use DISPEA
00002464  1803                    1907          MOVE.B  D3,D4
00002466                          1908  
00002466                          1909  MISCEA
00002466  103C 000E               1910          MOVE.B  #14,D0
0000246A  4E4F                    1911          TRAP    #15
0000246C  43F9 0000325B           1912          LEA     TAB,A1
00002472  103C 000E               1913          MOVE.B  #14,D0
00002476  4E4F                    1914          TRAP    #15
00002478                          1915  
00002478  45F9 00002482           1916          LEA     MISCEA2,A2
0000247E  6000 094C               1917          BRA     SUBEA
00002482                          1918  MISCEA2
00002482  6000 0B84               1919          BRA     ENDNEWLINE
00002486                          1920  
00002486                          1921  *************************************************************
00002486                          1922  * Display IMD op-code
00002486                          1923  MISCPRINT
00002486  0C39 0004 000034CB      1924          CMP.B   #$4,bit1
0000248E  6700 0018               1925          BEQ     MISCPRINTNEG
00002492  0C39 0006 000034CB      1926          CMP.B   #$6,bit1
0000249A  6700 0002               1927          BEQ     MISCPRINTNOT
0000249E                          1928  
0000249E                          1929  MISCPRINTNOT
0000249E  43F9 0000330F           1930          LEA     MNOT,A1
000024A4  6000 000C               1931          BRA     MISCPRINTEND
000024A8                          1932  
000024A8                          1933  MISCPRINTNEG
000024A8  43F9 0000331A           1934          LEA     MNEG,A1
000024AE  6000 0002               1935          BRA     MISCPRINTEND
000024B2                          1936  
000024B2                          1937  MISCPRINTEND
000024B2  103C 000E               1938          MOVE.B  #14,D0
000024B6  4E4F                    1939          TRAP    #15
000024B8  4E75                    1940          RTS
000024BA                          1941  
000024BA                          1942  *******************************************************************************
000024BA                          1943  * ADDQ section 
000024BA                          1944  
000024BA                          1945  ADDQ    
000024BA                          1946  *       BRA     IMD
000024BA                          1947          
000024BA  13C5 000034CB           1948          MOVE.B  D5,bit1
000024C0  141E                    1949          MOVE.B  (A6)+,D2
000024C2                          1950  
000024C2  DE02                    1951          ADD.B   D2,D7
000024C4                          1952  
000024C4  1602                    1953          MOVE.B  D2,D3               *copy data at D2 to D3
000024C6                          1954                                      *get digit in 10's place
000024C6  E80B                    1955          LSR.B   #4,D3               Shifts right to get rid of 1's place
000024C8                          1956                                      *get digit in 1's place
000024C8  E90A                    1957          LSL.B   #4,D2               Shift left to get rid of 10's place
000024CA  E80A                    1958          LSR.B   #4,D2               Shift back right into 1's place
000024CC                          1959  
000024CC                          1960  
000024CC  3806                    1961          MOVE.W  D6,D4
000024CE  E94C                    1962          LSL.W   #$4,D4
000024D0  E04C                    1963          LSR.W   #$8,D4
000024D2  E44C                    1964          LSR.W   #$2,D4
000024D4  13C4 000034CC           1965          MOVE.B  D4,bit2
000024DA                          1966      
000024DA                          1967  
000024DA                          1968  *        BRA     IMD
000024DA  43F9 00003340           1969          LEA     MADDQ,A1
000024E0  103C 000E               1970          MOVE.B  #14,D0
000024E4  4E4F                    1971          TRAP    #15
000024E6                          1972          
000024E6                          1973          *determine size
000024E6  1C39 000034CC           1974          MOVE.B  bit2,D6   *copy to D6 for manip
000024EC  E20B                    1975          LSR.B   #1,D3
000024EE  B63C 0000               1976          CMP.B   #$0,D3
000024F2  6700 0018               1977          BEQ     ADDQB
000024F6  B67C 0001               1978          CMP.W   #$1,D3
000024FA  6700 0020               1979          BEQ     ADDQW
000024FE  B6BC 00000002           1980          CMP.L   #$2,D3
00002504  6700 0028               1981          BEQ     ADDQL
00002508  6000 0A8C               1982          BRA     INVOP
0000250C                          1983  
0000250C                          1984  ADDQB
0000250C  43F9 0000327D           1985          LEA     MBYTE,A1
00002512  103C 000E               1986          MOVE.B  #14,D0
00002516  4E4F                    1987          TRAP    #15
00002518  6000 0026               1988          BRA     ADDQCONT
0000251C                          1989          
0000251C                          1990  ADDQW
0000251C  1803                    1991          MOVE.B  D3,D4
0000251E  43F9 00003280           1992          LEA     MWORD,A1
00002524  103C 000E               1993          MOVE.B  #14,D0
00002528  4E4F                    1994          TRAP    #15
0000252A  6000 0014               1995          BRA     ADDQCONT
0000252E                          1996          
0000252E                          1997  ADDQL        
0000252E  1803                    1998          MOVE.B  D3,D4
00002530  43F9 00003283           1999          LEA     MLONG,A1
00002536  103C 000E               2000          MOVE.B  #14,D0
0000253A  4E4F                    2001          TRAP    #15
0000253C  6000 0002               2002          BRA     ADDQCONT
00002540                          2003          
00002540                          2004  ADDQCONT        
00002540  43F9 0000325B           2005          LEA     TAB,A1
00002546  103C 000E               2006          MOVE.B  #14,D0
0000254A  4E4F                    2007          TRAP    #15
0000254C                          2008  
0000254C  43F9 00003269           2009          LEA     HASH,A1
00002552  103C 000E               2010          MOVE.B  #14,D0
00002556  4E4F                    2011          TRAP    #15
00002558                          2012          
00002558  E20D                    2013          LSR.B   #1,D5
0000255A  1205                    2014          MOVE.B  D5,D1
0000255C  103C 0003               2015          MOVE.B  #3,D0
00002560  4E4F                    2016          TRAP    #15
00002562  43F9 0000325F           2017          LEA     COMMA,A1
00002568  103C 000E               2018          MOVE.B  #14,D0
0000256C  4E4F                    2019          TRAP    #15
0000256E                          2020          
0000256E  6000 0002               2021          BRA     ADDQEA
00002572                          2022          
00002572                          2023  ADDQEA  
00002572  1A03                    2024          MOVE.B  D3,D5       *D5 to now hold size 
00002574  1606                    2025          MOVE.B  D6,D3       
00002576  E50B                    2026          LSL.B   #2,D3
00002578  E20B                    2027          LSR.B   #1,D3           MM0
0000257A                          2028          
0000257A  1C02                    2029          MOVE.B  D2,D6       *hold bit3 copy
0000257C  E30A                    2030          LSL.B   #1,D2
0000257E  E20A                    2031          LSR.B   #1,D2       *D2 should hold eareg
00002580                          2032  
00002580  E60E                    2033          LSR.B   #3,D6
00002582  D606                    2034          ADD.B   D6,D3
00002584                          2035          
00002584  13C2 000034CE           2036          MOVE.B  D2,bit4     *REG?
0000258A  13C3 000034CD           2037          MOVE.B  D3,bit3     *MODE?
00002590  13C5 000034CC           2038          MOVE.B  D5,bit2     *SIZE?
00002596  45F9 00003008           2039          LEA     ENDNEWLINE,A2
0000259C  6000 082E               2040          BRA     SUBEA
000025A0                          2041          ***
000025A0                          2042          
000025A0                          2043          
000025A0  B63C 0000               2044          CMP.B   #$0,D3
000025A4  6700 002A               2045          BEQ     DN_EAM
000025A8  B63C 0001               2046          CMP.B   #$1,D3
000025AC  6700 003A               2047          BEQ     AN_EAM
000025B0  B63C 0002               2048          CMP.B   #$2,D3
000025B4  6700 004A               2049          BEQ     INAN_EAM
000025B8  B63C 0003               2050          CMP.B   #$3,D3
000025BC  6700 0072               2051          BEQ     INC_EAM
000025C0  B63C 0004               2052          CMP.B   #$4,D3
000025C4  6700 00A6               2053          BEQ     DEC_EAM
000025C8  B63C 0007               2054          CMP.B   #$7,D3
000025CC  6700 00DA               2055          BEQ     ABS_EA
000025D0                          2056          
000025D0                          2057  DN_EAM
000025D0  43F9 00003273           2058          LEA     DISPD,A1
000025D6  103C 000E               2059          MOVE.B  #14,D0
000025DA  4E4F                    2060          TRAP    #15
000025DC  1202                    2061          MOVE.B  D2,D1
000025DE  103C 0003               2062          MOVE.B  #3,D0
000025E2  4E4F                    2063          TRAP    #15
000025E4  6000 0A22               2064          BRA     ENDNEWLINE
000025E8                          2065          
000025E8                          2066  AN_EAM
000025E8  43F9 0000326D           2067          LEA     DISPA,A1
000025EE  103C 000E               2068          MOVE.B  #14,D0
000025F2  4E4F                    2069          TRAP    #15
000025F4  1202                    2070          MOVE.B  D2,D1
000025F6  103C 0003               2071          MOVE.B  #3,D0
000025FA  4E4F                    2072          TRAP    #15
000025FC  6000 0A0A               2073          BRA     ENDNEWLINE
00002600                          2074          
00002600                          2075  INAN_EAM
00002600  43F9 00003261           2076          LEA     OPENBRA,A1
00002606  103C 000E               2077          MOVE.B  #14,D0
0000260A  4E4F                    2078          TRAP    #15
0000260C  43F9 0000326D           2079          LEA     DISPA,A1
00002612  103C 000E               2080          MOVE.B  #14,D0
00002616  4E4F                    2081          TRAP    #15
00002618  1202                    2082          MOVE.B  D2,D1
0000261A  103C 0003               2083          MOVE.B  #3,D0
0000261E  4E4F                    2084          TRAP    #15
00002620  43F9 00003263           2085          LEA     CLOSEBRA,A1
00002626  103C 000E               2086          MOVE.B  #14,D0
0000262A  4E4F                    2087          TRAP    #15
0000262C  6000 09DA               2088          BRA     ENDNEWLINE
00002630                          2089          
00002630                          2090  INC_EAM                             *Consider combining inc and dec with in and removing dup com
00002630  43F9 00003261           2091          LEA     OPENBRA,A1
00002636  103C 000E               2092          MOVE.B  #14,D0
0000263A  4E4F                    2093          TRAP    #15
0000263C  43F9 0000326D           2094          LEA     DISPA,A1
00002642  103C 000E               2095          MOVE.B  #14,D0
00002646  4E4F                    2096          TRAP    #15
00002648                          2097          
00002648  3202                    2098          MOVE.W  D2,D1
0000264A  103C 0003               2099          MOVE.B  #3,D0
0000264E  4E4F                    2100          TRAP    #15
00002650                          2101          
00002650  43F9 00003263           2102          LEA     CLOSEBRA,A1
00002656  103C 000E               2103          MOVE.B  #14,D0
0000265A  4E4F                    2104          TRAP    #15
0000265C  43F9 00003265           2105          LEA     POS,A1
00002662  103C 000E               2106          MOVE.B  #14,D0
00002666  4E4F                    2107          TRAP    #15
00002668  6000 099E               2108          BRA     ENDNEWLINE
0000266C                          2109          
0000266C                          2110  DEC_EAM
0000266C  43F9 00003267           2111          LEA     NEG,A1
00002672  103C 000E               2112          MOVE.B  #14,D0
00002676  4E4F                    2113          TRAP    #15
00002678  43F9 00003261           2114          LEA     OPENBRA,A1
0000267E  103C 000E               2115          MOVE.B  #14,D0
00002682  4E4F                    2116          TRAP    #15
00002684  43F9 0000326D           2117          LEA     DISPA,A1
0000268A  103C 000E               2118          MOVE.B  #14,D0
0000268E  4E4F                    2119          TRAP    #15
00002690  1202                    2120          MOVE.B  D2,D1
00002692  103C 0003               2121          MOVE.B  #3,D0
00002696  4E4F                    2122          TRAP    #15
00002698  43F9 00003263           2123          LEA     CLOSEBRA,A1
0000269E  103C 000E               2124          MOVE.B  #14,D0
000026A2  4E4F                    2125          TRAP    #15
000026A4  6000 0962               2126          BRA     ENDNEWLINE
000026A8                          2127          
000026A8                          2128  ABS_EA  
000026A8                          2129          *USE D5 TO SET SIZE APPROPRIATELY AND TO FULFILL REQ TO USE DISPEA SR
000026A8  45F9 000026B2           2130          LEA     ABS_EA2,A2
000026AE  6000 086C               2131          BRA     DISPEA
000026B2                          2132          
000026B2                          2133  ABS_EA2
000026B2  6000 0954               2134          BRA     ENDNEWLINE
000026B6                          2135  
000026B6                          2136  *************************************************************************
000026B6                          2137  * MOVEM stuff
000026B6                          2138          *   D5 is bit1
000026B6                          2139          *   D3 is bit2
000026B6                          2140          *   D2 is bit3
000026B6                          2141  MISCMOVEM
000026B6  1805                    2142          MOVE.B  D5,D4               Gets the dr field and stores it into D5
000026B8  4245                    2143          CLR     D5                  Moves 0 to D5
000026BA  0804 0002               2144          BTST    #2,D4               Checks the bit at spot 2
000026BE  6700 0006               2145          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
000026C2  1A3C 0001               2146          MOVE.B  #1,D5               Else, it will skip it
000026C6                          2147  
000026C6                          2148  MISCMOVEM2
000026C6  4246                    2149          CLR     D6                  Clears D6, setting it to 0
000026C8  1803                    2150          MOVE.B  D3,D4               Gets the size field and stores it into D6
000026CA  0804 0002               2151          BTST    #2,D4               Checks the bit at spot 2
000026CE  6700 0006               2152          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
000026D2  1C3C 0001               2153          MOVE.B  #1,D6               Else, it will skip it. 
000026D6                          2154  
000026D6                          2155  MISCMOVEM3
000026D6  C63C 0003               2156          AND.B   #$3,D3              Gets ride of the first 2 bits
000026DA  E30B                    2157          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
000026DC  0882 0003               2158          BCLR    #3,D2               Checks furthest left bit and set it to 0
000026E0  6700 0006               2159          BEQ     MISCMOVEM4
000026E4  08C3 0000               2160          BSET    #0,D3               If bit was 1, adds 1 to mode
000026E8                          2161  
000026E8                          2162      * bit1 is in D5 dr field
000026E8                          2163      * bit2 is in D6 size
000026E8                          2164      * bit3 is in D3 mode
000026E8                          2165      * bit4 is in D2 reg
000026E8                          2166  MISCMOVEM4
000026E8  13C5 000034CB           2167          MOVE.B  D5,bit1
000026EE  13C6 000034CC           2168          MOVE.B  D6,bit2
000026F4  13C3 000034CD           2169          MOVE.B  D3,bit3
000026FA  13C2 000034CE           2170          MOVE.B  D2,bit4
00002700                          2171  
00002700                          2172      * Prints out MOVEM and size + tab
00002700  43F9 000032DB           2173          LEA     MMOVEM,A1
00002706  103C 000E               2174          MOVE.B  #14,D0
0000270A  4E4F                    2175          TRAP    #15
0000270C                          2176  
0000270C  BC3C 0001               2177          CMP.B   #1,D6
00002710  6700 000C               2178          BEQ     MISCMMSIZEL
00002714  43F9 00003280           2179          LEA     MWORD,A1
0000271A  6000 0008               2180          BRA     MISCMMPRINTSIZE
0000271E                          2181  
0000271E                          2182  MISCMMSIZEL
0000271E  43F9 00003283           2183          LEA     MLONG,A1
00002724                          2184  
00002724                          2185  MISCMMPRINTSIZE
00002724  4E4F                    2186          TRAP    #15
00002726  43F9 0000325B           2187          LEA     TAB,A1
0000272C  4E4F                    2188          TRAP    #15
0000272E                          2189  
0000272E  3C1E                    2190          MOVE.W  (A6)+,D6
00002730  BA3C 0000               2191          CMP.B   #0,D5
00002734  6700 0006               2192          BEQ     MISCMMPREDECCHECK
00002738  6000 007C               2193          BRA     MISCMMPOSTINC
0000273C                          2194  
0000273C                          2195  MISCMMPREDECCHECK
0000273C  B63C 0004               2196          CMP.B   #$4,D3
00002740  6700 0006               2197          BEQ     MISCMMPREDEC
00002744  6000 00DE               2198          BRA     MISCMMREGMEM
00002748                          2199  
00002748                          2200  ******************************************************************
00002748                          2201  * MOVEM Post-decrement
00002748                          2202  * Prints out registers from post-decrement
00002748                          2203  * D6 holds the reg list
00002748                          2204  MISCMMPREDEC
00002748  1806                    2205          MOVE.B  D6,D4
0000274A  3E3C 0008               2206          MOVE.W  #8,D7               Counter
0000274E  123C 000F               2207          MOVE.B  #$F,D1
00002752                          2208  
00002752  49F9 0000326D           2209          LEA     DISPA,A4
00002758  6100 0032               2210          BSR     MISCMMPREDECPRINT
0000275C                          2211  
0000275C  3806                    2212          MOVE.W  D6,D4
0000275E  E04C                    2213          LSR.W   #8,D4
00002760  3E3C 0008               2214          MOVE.W  #8,D7               Counter
00002764  49F9 00003273           2215          LEA     DISPD,A4
0000276A  6100 0020               2216          BSR     MISCMMPREDECPRINT
0000276E  6000 0002               2217          BRA     MISCMMPREDEC2
00002772                          2218  
00002772                          2219  MISCMMPREDEC2
00002772  43F9 0000325F           2220          LEA     COMMA,A1
00002778  103C 000E               2221          MOVE.B  #14,D0
0000277C  4E4F                    2222          TRAP    #15
0000277E                          2223  
0000277E  45F9 00002788           2224          LEA     MISCMMPREDEC3,A2
00002784  6000 0646               2225          BRA     SUBEA
00002788                          2226  
00002788                          2227  MISCMMPREDEC3
00002788  6000 087E               2228          BRA     ENDNEWLINE
0000278C                          2229  
0000278C                          2230  * Prints out reg list
0000278C                          2231  MISCMMPREDECPRINT
0000278C  E30C                    2232          LSL.B   #1,D4
0000278E  6400 001C               2233          BCC     MISCMMPREDECPRINT3
00002792                          2234  
00002792  B23C 000F               2235          CMP.B   #$F,D1
00002796  6700 0008               2236          BEQ     MISCMMPREDECPRINT2
0000279A  4EB9 0000289A           2237          JSR     MISCMMSLASH
000027A0                          2238  
000027A0                          2239  MISCMMPREDECPRINT2
000027A0  224C                    2240          MOVEA.L A4,A1
000027A2  103C 000E               2241          MOVE.B  #14,D0
000027A6  4E4F                    2242          TRAP    #15
000027A8  6100 00E2               2243          BSR     MISCMMPRINTNUM
000027AC                          2244  
000027AC                          2245  MISCMMPREDECPRINT3
000027AC  5307                    2246          SUB.B   #1,D7
000027AE  BE3C 0000               2247          CMP.B   #0,D7
000027B2  66D8                    2248          BNE     MISCMMPREDECPRINT
000027B4  4E75                    2249          RTS
000027B6                          2250  
000027B6                          2251  ******************************************************************
000027B6                          2252  * MOVEM Post-increment
000027B6                          2253  * Prints out registers from post-increment
000027B6                          2254  * D6 holds the reg list
000027B6                          2255  MISCMMPOSTINC
000027B6  45F9 000027C0           2256          LEA     MISCMMPOSTINC2,A2
000027BC  6000 060E               2257          BRA     SUBEA
000027C0                          2258  
000027C0                          2259  MISCMMPOSTINC2
000027C0  43F9 0000325F           2260          LEA     COMMA,A1
000027C6  103C 000E               2261          MOVE.B  #14,D0
000027CA  4E4F                    2262          TRAP    #15
000027CC                          2263  
000027CC  3806                    2264          MOVE.W  D6,D4
000027CE  E04C                    2265          LSR.W   #8,D4
000027D0  3E3C 0008               2266          MOVE.W  #8,D7               Counter
000027D4  123C 000F               2267          MOVE.B  #$F,D1
000027D8                          2268  
000027D8  49F9 0000326D           2269          LEA     DISPA,A4
000027DE  6100 001A               2270          BSR     MISCMMPOSTINCPRINT
000027E2                          2271  
000027E2  1806                    2272          MOVE.B  D6,D4
000027E4  3E3C 0008               2273          MOVE.W  #8,D7               Counter
000027E8  49F9 00003273           2274          LEA     DISPD,A4
000027EE  6100 000A               2275          BSR     MISCMMPOSTINCPRINT
000027F2  6000 0002               2276          BRA     MISCMMPOSTINC3
000027F6                          2277  
000027F6                          2278  MISCMMPOSTINC3
000027F6  6000 0810               2279          BRA     ENDNEWLINE
000027FA                          2280  
000027FA                          2281  * Prints out reg list
000027FA                          2282  MISCMMPOSTINCPRINT
000027FA  E20C                    2283          LSR.B   #1,D4
000027FC  6400 001C               2284          BCC     MISCMMPOSTINCPRINT3
00002800                          2285  
00002800  B23C 000F               2286          CMP.B   #$F,D1
00002804  6700 0008               2287          BEQ     MISCMMPOSTINCPRINT2
00002808  4EB9 0000289A           2288          JSR     MISCMMSLASH
0000280E                          2289  
0000280E                          2290  MISCMMPOSTINCPRINT2
0000280E  224C                    2291          MOVEA.L A4,A1
00002810  103C 000E               2292          MOVE.B  #14,D0
00002814  4E4F                    2293          TRAP    #15
00002816  6100 0074               2294          BSR     MISCMMPRINTNUM
0000281A                          2295  
0000281A                          2296  MISCMMPOSTINCPRINT3
0000281A  5307                    2297          SUB.B   #1,D7
0000281C  BE3C 0000               2298          CMP.B   #0,D7
00002820  66D8                    2299          BNE     MISCMMPOSTINCPRINT
00002822  4E75                    2300          RTS
00002824                          2301  
00002824                          2302  ******************************************************************
00002824                          2303  * MOVEM Post-increment
00002824                          2304  * Prints out registers from post-increment
00002824                          2305  * D6 holds the reg list
00002824                          2306  MISCMMREGMEM
00002824  1806                    2307          MOVE.B  D6,D4
00002826  3E3C 0008               2308          MOVE.W  #8,D7               Counter
0000282A  123C 000F               2309          MOVE.B  #$F,D1
0000282E                          2310  
0000282E  49F9 00003273           2311          LEA     DISPD,A4
00002834  61C4                    2312          BSR     MISCMMPOSTINCPRINT
00002836                          2313  
00002836  3806                    2314          MOVE.W  D6,D4
00002838  E04C                    2315          LSR.W   #8,D4
0000283A  3E3C 0008               2316          MOVE.W  #8,D7               Counter
0000283E  49F9 0000326D           2317          LEA     DISPA,A4
00002844  61B4                    2318          BSR     MISCMMPOSTINCPRINT
00002846  6000 0002               2319          BRA     MISCMMREGMEM2
0000284A                          2320  
0000284A                          2321  MISCMMREGMEM2
0000284A  43F9 0000325F           2322          LEA     COMMA,A1
00002850  103C 000E               2323          MOVE.B  #14,D0
00002854  4E4F                    2324          TRAP    #15
00002856                          2325  
00002856  45F9 00002860           2326          LEA     MISCMMREGMEM3,A2
0000285C  6000 056E               2327          BRA     SUBEA
00002860                          2328  
00002860                          2329  MISCMMREGMEM3
00002860  6000 07A6               2330          BRA     ENDNEWLINE
00002864                          2331  
00002864                          2332  * Prints out reg list
00002864                          2333  MISCMMREGMEMPRINT
00002864  E20C                    2334          LSR.B   #1,D4
00002866  64B2                    2335          BCC     MISCMMPOSTINCPRINT3
00002868                          2336  
00002868  B23C 000F               2337          CMP.B   #$F,D1
0000286C  67A0                    2338          BEQ     MISCMMPOSTINCPRINT2
0000286E  4EB9 0000289A           2339          JSR     MISCMMSLASH
00002874                          2340  
00002874                          2341  MISCMMREGMEMPRINT2
00002874  224C                    2342          MOVEA.L A4,A1
00002876  103C 000E               2343          MOVE.B  #14,D0
0000287A  4E4F                    2344          TRAP    #15
0000287C  6100 000E               2345          BSR     MISCMMPRINTNUM
00002880                          2346  
00002880                          2347  MISCMMREGMEMPRINT3
00002880  5307                    2348          SUB.B   #1,D7
00002882  BE3C 0000               2349          CMP.B   #0,D7
00002886  6600 FF72               2350          BNE     MISCMMPOSTINCPRINT
0000288A  4E75                    2351          RTS
0000288C                          2352  
0000288C                          2353  
0000288C                          2354  
0000288C                          2355  ***********************************************
0000288C                          2356  * Stuff for printing reg list
0000288C                          2357  MISCMMPRINTNUM
0000288C  123C 0008               2358          MOVE.B  #8,D1
00002890  9207                    2359          SUB.B   D7,D1
00002892  103C 0003               2360          MOVE.B  #3,D0
00002896  4E4F                    2361          TRAP    #15
00002898  4E75                    2362          RTS
0000289A                          2363  
0000289A                          2364  MISCMMSLASH
0000289A  43F9 0000326B           2365          LEA     SLASH,A1
000028A0  103C 000E               2366          MOVE.B  #14,D0
000028A4  4E4F                    2367          TRAP    #15
000028A6  4E75                    2368          RTS
000028A8                          2369  
000028A8                          2370  ******************************************************************************************************
000028A8                          2371  * SUB section
000028A8                          2372  
000028A8                          2373          *   Grabs next two nibbles
000028A8  141E                    2374  SUB     MOVE.B  (A6)+,D2
000028AA                          2375  
000028AA  DE02                    2376          ADD.B   D2,D7
000028AC                          2377  
000028AC  1602                    2378          MOVE.B  D2,D3               Copies data at D2 to D3
000028AE                          2379          *   this gets digit in 10's place
000028AE  E80B                    2380          LSR.B   #4,D3               Shifts right to get rid of 1's place
000028B0                          2381          *   this gets digit in 1's place
000028B0  E90A                    2382          LSL.B   #4,D2               Shifts left to get rid of 10's place
000028B2  E80A                    2383          LSR.B   #4,D2               Shifts back right into 1's place
000028B4                          2384  
000028B4                          2385          *   D3 holds digit in 10's place
000028B4                          2386          *   D2 holds digit in 1's place
000028B4                          2387  
000028B4                          2388          
000028B4                          2389          *   Converts nibble into 3-bit parts
000028B4  E20B                    2390          LSR.B   #1,D3
000028B6  6400 0004               2391          BCC     SUB2
000028BA  5404                    2392          ADD.B   #$2,D4
000028BC                          2393          
000028BC  E20B                    2394  SUB2    LSR.B   #1,D3
000028BE  6400 0004               2395          BCC     SUB3
000028C2  5804                    2396          ADD.B   #$4,D4
000028C4                          2397          
000028C4  1205                    2398  SUB3    MOVE.B  D5,D1
000028C6  E209                    2399          LSR.B   #1,D1
000028C8  6400 0004               2400          BCC     SUB4
000028CC  5803                    2401          ADD.B   #$4,D3
000028CE                          2402  
000028CE  B43C 0007               2403  SUB4    CMP.B   #$7,D2
000028D2  6D00 0006               2404          BLT     SUB1
000028D6  5204                    2405          ADD.B   #$1,D4
000028D8  5102                    2406          SUB.B   #$8,D2
000028DA                          2407  
000028DA                          2408          *   Stores them into addr
000028DA  13C1 000034CB           2409  SUB1    MOVE.B  D1,bit1
000028E0  13C3 000034CC           2410          MOVE.B  D3,bit2
000028E6  13C4 000034CD           2411          MOVE.B  D4,bit3
000028EC  13C2 000034CE           2412          MOVE.B  D2,bit4
000028F2                          2413  
000028F2                          2414          * do this later
000028F2  4241                    2415          CLR     D1
000028F4  7400                    2416          MOVE.L  #0,D2
000028F6  7600                    2417          MOVE.L  #0,D3
000028F8  7800                    2418          MOVE.L  #0,D4
000028FA  7A00                    2419          MOVE.L  #0,D5
000028FC  7C00                    2420          MOVE.L  #0,D6
000028FE                          2421  
000028FE                          2422          
000028FE                          2423  ******************************************************************************************************
000028FE                          2424  * After spliting the op-code into SUB's defined groupings
000028FE                          2425  *   This figures out which operation it is and goes to that sub-routine
000028FE                          2426  
000028FE                          2427          * This checks if bit0 is C which is either AND or MULS
000028FE  0C39 000C 000034CA      2428          CMP.B   #$C,bit0
00002906  6600 000E               2429          BNE     SUBACHECK
0000290A  0C39 0007 000034CC      2430          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
00002912  6700 F15E               2431          BEQ     MULSW                       AND will use SUB's routine
00002916                          2432  
00002916                          2433  SUBACHECK
00002916                          2434          * This will display SUBA instead  -- check this later
00002916  0C39 0003 000034CC      2435          CMP.B   #$3,bit2
0000291E  6700 01D6               2436          BEQ     SUBA
00002922  0C39 0007 000034CC      2437          CMP.B   #$7,bit2
0000292A  6700 01CA               2438          BEQ     SUBA
0000292E                          2439  
0000292E                          2440          * This will find the size and stuff
0000292E  0C39 0000 000034CC      2441          CMP.B   #$0,bit2
00002936  6700 003E               2442          BEQ     SUBSIZE1
0000293A  0C39 0001 000034CC      2443          CMP.B   #$1,bit2
00002942  6700 0072               2444          BEQ     SUBSIZE2
00002946  0C39 0002 000034CC      2445          CMP.B   #$2,bit2
0000294E  6700 00A6               2446          BEQ     SUBSIZE3
00002952  0C39 0004 000034CC      2447          CMP.B   #$4,bit2
0000295A  6700 00DA               2448          BEQ     SUBSIZE4
0000295E  0C39 0005 000034CC      2449          CMP.B   #$5,bit2
00002966  6700 010E               2450          BEQ     SUBSIZE5
0000296A  0C39 0006 000034CC      2451          CMP.B   #$6,bit2
00002972  6700 0142               2452          BEQ     SUBSIZE6
00002976                          2453     
00002976                          2454  ******************************************************************************************************
00002976                          2455  *   Displays size, then does operation order
00002976                          2456  
00002976                          2457  *   000 byte    EA,DN
00002976                          2458  SUBSIZE1
00002976  6100 0260               2459          BSR     SUBPRINT
0000297A  43F9 0000327D           2460          LEA     MBYTE,A1
00002980  103C 000E               2461          MOVE.B  #14,D0
00002984  4E4F                    2462          TRAP    #15
00002986  43F9 0000325B           2463          LEA     TAB,A1
0000298C  103C 000E               2464          MOVE.B  #14,D0
00002990  4E4F                    2465          TRAP    #15
00002992                          2466  
00002992  45F9 0000299C           2467          LEA     SUBSIZE11,A2
00002998  6000 0432               2468          BRA     SUBEA
0000299C                          2469  SUBSIZE11
0000299C  45F9 000029B2           2470          LEA     SUBSIZE12,A2
000029A2  43F9 0000325F           2471          LEA     COMMA,A1
000029A8  103C 000E               2472          MOVE.B  #14,D0
000029AC  4E4F                    2473          TRAP    #15
000029AE  6000 02F8               2474          BRA     SUBDN
000029B2                          2475  SUBSIZE12
000029B2  6000 0654               2476          BRA     ENDNEWLINE
000029B6                          2477  
000029B6                          2478  *************************************************
000029B6                          2479  *   001 word    EA,DN
000029B6                          2480  SUBSIZE2
000029B6  6100 0220               2481          BSR     SUBPRINT
000029BA  43F9 00003280           2482          LEA     MWORD,A1
000029C0  103C 000E               2483          MOVE.B  #14,D0
000029C4  4E4F                    2484          TRAP    #15
000029C6  43F9 0000325B           2485          LEA     TAB,A1
000029CC  103C 000E               2486          MOVE.B  #14,D0
000029D0  4E4F                    2487          TRAP    #15
000029D2                          2488  
000029D2  45F9 000029DC           2489          LEA     SUBSIZE21,A2
000029D8  6000 03F2               2490          BRA     SUBEA
000029DC                          2491  SUBSIZE21
000029DC  45F9 000029F2           2492          LEA     SUBSIZE22,A2
000029E2  43F9 0000325F           2493          LEA     COMMA,A1
000029E8  103C 000E               2494          MOVE.B  #14,D0
000029EC  4E4F                    2495          TRAP    #15
000029EE  6000 02B8               2496          BRA     SUBDN
000029F2                          2497  SUBSIZE22
000029F2  6000 0614               2498          BRA     ENDNEWLINE
000029F6                          2499  
000029F6                          2500  *************************************************
000029F6                          2501  *   010 long    EA,DN
000029F6                          2502  SUBSIZE3
000029F6  6100 01E0               2503          BSR     SUBPRINT
000029FA  43F9 00003283           2504          LEA     MLONG,A1
00002A00  103C 000E               2505          MOVE.B  #14,D0
00002A04  4E4F                    2506          TRAP    #15
00002A06  43F9 0000325B           2507          LEA     TAB,A1
00002A0C  103C 000E               2508          MOVE.B  #14,D0
00002A10  4E4F                    2509          TRAP    #15
00002A12                          2510  
00002A12  45F9 00002A1C           2511          LEA     SUBSIZE31,A2
00002A18  6000 03B2               2512          BRA     SUBEA
00002A1C                          2513  SUBSIZE31
00002A1C  45F9 00002A32           2514          LEA     SUBSIZE32,A2
00002A22  43F9 0000325F           2515          LEA     COMMA,A1
00002A28  103C 000E               2516          MOVE.B  #14,D0
00002A2C  4E4F                    2517          TRAP    #15
00002A2E  6000 0278               2518          BRA     SUBDN
00002A32                          2519  SUBSIZE32
00002A32  6000 05D4               2520          BRA     ENDNEWLINE
00002A36                          2521  
00002A36                          2522  *************************************************
00002A36                          2523  *   100 byte    DN,EA
00002A36                          2524  SUBSIZE4
00002A36  6100 01A0               2525          BSR     SUBPRINT
00002A3A  43F9 0000327D           2526          LEA     MBYTE,A1
00002A40  103C 000E               2527          MOVE.B  #14,D0
00002A44  4E4F                    2528          TRAP    #15
00002A46  43F9 0000325B           2529          LEA     TAB,A1
00002A4C  103C 000E               2530          MOVE.B  #14,D0
00002A50  4E4F                    2531          TRAP    #15
00002A52                          2532  
00002A52                          2533          *BSR     SUBERRORTEST1
00002A52                          2534  
00002A52  45F9 00002A5C           2535          LEA     SUBSIZE41,A2
00002A58  6000 024E               2536          BRA     SUBDN
00002A5C                          2537  SUBSIZE41
00002A5C  45F9 00002A72           2538          LEA     SUBSIZE42,A2
00002A62  43F9 0000325F           2539          LEA     COMMA,A1
00002A68  103C 000E               2540          MOVE.B  #14,D0
00002A6C  4E4F                    2541          TRAP    #15
00002A6E  6000 035C               2542          BRA     SUBEA
00002A72                          2543  SUBSIZE42
00002A72  6000 0594               2544          BRA     ENDNEWLINE
00002A76                          2545  
00002A76                          2546  *************************************************
00002A76                          2547  *   101 word    DN,EA
00002A76                          2548  SUBSIZE5
00002A76                          2549          *BSR     SUBERRORTEST1               * This does error testing
00002A76  6100 0160               2550          BSR     SUBPRINT                    * Prints out 'SUB.'
00002A7A  43F9 00003280           2551          LEA     MWORD,A1
00002A80  103C 000E               2552          MOVE.B  #14,D0
00002A84  4E4F                    2553          TRAP    #15
00002A86  43F9 0000325B           2554          LEA     TAB,A1
00002A8C  103C 000E               2555          MOVE.B  #14,D0
00002A90  4E4F                    2556          TRAP    #15
00002A92                          2557  
00002A92  45F9 00002A9C           2558          LEA     SUBSIZE51,A2
00002A98  6000 020E               2559          BRA     SUBDN
00002A9C                          2560  SUBSIZE51
00002A9C  45F9 00002AB2           2561          LEA     SUBSIZE52,A2
00002AA2  43F9 0000325F           2562          LEA     COMMA,A1
00002AA8  103C 000E               2563          MOVE.B  #14,D0
00002AAC  4E4F                    2564          TRAP    #15
00002AAE  6000 031C               2565          BRA     SUBEA
00002AB2                          2566  SUBSIZE52
00002AB2  6000 0554               2567          BRA     ENDNEWLINE
00002AB6                          2568  
00002AB6                          2569  *************************************************
00002AB6                          2570  *   110 long    DN,EA
00002AB6                          2571  SUBSIZE6
00002AB6                          2572          *BSR     SUBERRORTEST1               * This does error testing
00002AB6  6100 0120               2573          BSR     SUBPRINT                    * Prints out 'SUB.'
00002ABA  43F9 00003283           2574          LEA     MLONG,A1
00002AC0  103C 000E               2575          MOVE.B  #14,D0
00002AC4  4E4F                    2576          TRAP    #15
00002AC6  43F9 0000325B           2577          LEA     TAB,A1
00002ACC  103C 000E               2578          MOVE.B  #14,D0
00002AD0  4E4F                    2579          TRAP    #15
00002AD2                          2580  
00002AD2                          2581          *BSR     SUBERRORTEST1
00002AD2                          2582  
00002AD2  45F9 00002ADC           2583          LEA     SUBSIZE61,A2
00002AD8  6000 01CE               2584          BRA     SUBDN
00002ADC                          2585  SUBSIZE61
00002ADC  45F9 00002AF2           2586          LEA     SUBSIZE62,A2
00002AE2  43F9 0000325F           2587          LEA     COMMA,A1
00002AE8  103C 000E               2588          MOVE.B  #14,D0
00002AEC  4E4F                    2589          TRAP    #15
00002AEE  6000 02DC               2590          BRA     SUBEA
00002AF2                          2591  SUBSIZE62
00002AF2  6000 0514               2592          BRA     ENDNEWLINE
00002AF6                          2593  
00002AF6                          2594  ****************************************************************************
00002AF6                          2595  *   This section is for SUBA
00002AF6                          2596  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002AF6                          2597  SUBA
00002AF6  0C39 0009 000034CA      2598          CMP.B   #$9,bit0
00002AFE  6700 001A               2599          BEQ     SUBPRINTSUBA
00002B02  0C39 000B 000034CA      2600          CMP.B   #$B,bit0
00002B0A  6700 001E               2601          BEQ     SUBPRINTCMPA
00002B0E  0C39 000D 000034CA      2602          CMP.B   #$D,bit0
00002B16  6700 0022               2603          BEQ     SUBPRINTADDA
00002B1A                          2604  
00002B1A                          2605  
00002B1A                          2606  SUBPRINTSUBA
00002B1A  43F9 000032F4           2607          LEA     MSUBA,A1                    Displays 'SUBA.'
00002B20  103C 000E               2608          MOVE.B  #14,D0
00002B24  4E4F                    2609          TRAP    #15
00002B26  6000 0022               2610          BRA     SUBACONT
00002B2A                          2611  
00002B2A                          2612  SUBPRINTCMPA
00002B2A  43F9 00003329           2613          LEA     MCMPA,A1                    Displays 'SUBA.'
00002B30  103C 000E               2614          MOVE.B  #14,D0
00002B34  4E4F                    2615          TRAP    #15
00002B36  6000 0012               2616          BRA     SUBACONT
00002B3A                          2617  
00002B3A                          2618  SUBPRINTADDA
00002B3A  43F9 0000333A           2619          LEA     MADDA,A1                    Displays 'SUBA.'
00002B40  103C 000E               2620          MOVE.B  #14,D0
00002B44  4E4F                    2621          TRAP    #15
00002B46  6000 0002               2622          BRA     SUBACONT
00002B4A                          2623  
00002B4A                          2624  SUBACONT
00002B4A                          2625          * Does the rest of SUBA
00002B4A  0C39 0003 000034CC      2626          CMP.B   #$3,bit2
00002B52  6700 000E               2627          BEQ     SUBSIZE7
00002B56  0C39 0007 000034CC      2628          CMP.B   #$7,bit2
00002B5E  6700 003E               2629          BEQ     SUBSIZE8
00002B62                          2630  
00002B62                          2631  *************************************************
00002B62                          2632  *   SUBA Word   ea,An
00002B62                          2633  SUBSIZE7
00002B62  43F9 00003280           2634          LEA     MWORD,A1
00002B68  103C 000E               2635          MOVE.B  #14,D0
00002B6C  4E4F                    2636          TRAP    #15
00002B6E  43F9 0000325B           2637          LEA     TAB,A1
00002B74  103C 000E               2638          MOVE.B  #14,D0
00002B78  4E4F                    2639          TRAP    #15
00002B7A                          2640  
00002B7A  45F9 00002B84           2641          LEA     SUBSIZE71,A2
00002B80  6000 024A               2642          BRA     SUBEA
00002B84                          2643  SUBSIZE71
00002B84  45F9 00002B9A           2644          LEA     SUBSIZE72,A2
00002B8A  43F9 0000325F           2645          LEA     COMMA,A1
00002B90  103C 000E               2646          MOVE.B  #14,D0
00002B94  4E4F                    2647          TRAP    #15
00002B96  6000 0164               2648          BRA     SUBAN2
00002B9A                          2649  SUBSIZE72
00002B9A  6000 046C               2650          BRA     ENDNEWLINE
00002B9E                          2651  
00002B9E                          2652  *************************************************
00002B9E                          2653  *   SUBA longword   ea,An
00002B9E                          2654  SUBSIZE8
00002B9E  43F9 00003283           2655          LEA     MLONG,A1
00002BA4  103C 000E               2656          MOVE.B  #14,D0
00002BA8  4E4F                    2657          TRAP    #15
00002BAA  43F9 0000325B           2658          LEA     TAB,A1
00002BB0  103C 000E               2659          MOVE.B  #14,D0
00002BB4  4E4F                    2660          TRAP    #15
00002BB6                          2661  
00002BB6  45F8 2B84               2662          LEA     SUBSIZE71,A2
00002BBA  6000 0210               2663          BRA     SUBEA
00002BBE                          2664  SUBSIZE81
00002BBE  45F8 2B9A               2665          LEA     SUBSIZE72,A2
00002BC2  43F9 0000325F           2666          LEA     COMMA,A1
00002BC8  103C 000E               2667          MOVE.B  #14,D0
00002BCC  4E4F                    2668          TRAP    #15
00002BCE  6000 012C               2669          BRA     SUBAN2
00002BD2                          2670  SUBSIZE82
00002BD2  6000 0434               2671          BRA     ENDNEWLINE
00002BD6                          2672  
00002BD6                          2673  *************************************************
00002BD6                          2674  * Jumps to memory location at A2
00002BD6                          2675  SUBJMPA2
00002BD6  4ED2                    2676          JMP     (A2)
00002BD8                          2677  
00002BD8                          2678  *************************************************
00002BD8                          2679  * Prints out opcode name
00002BD8                          2680  SUBPRINT
00002BD8  0C39 0009 000034CA      2681          CMP.B   #$9,bit0                Prints SUB
00002BE0  6700 0026               2682          BEQ     SUBPRINTSUB
00002BE4  0C39 000B 000034CA      2683          CMP.B   #$B,bit0                Prints CMP or EOR
00002BEC  6700 004A               2684          BEQ     SUBPRINTB
00002BF0  0C39 000C 000034CA      2685          CMP.B   #$C,bit0                Prints AND
00002BF8  6700 001E               2686          BEQ     SUBPRINTAND
00002BFC  0C39 000D 000034CA      2687          CMP.B   #$D,bit0                Prints ADD
00002C04  6700 0022               2688          BEQ     SUBPRINTADD
00002C08                          2689  
00002C08                          2690  SUBPRINTSUB   * Displays 'SUB.' 
00002C08  43F9 000032EF           2691          LEA     MSUB,A1
00002C0E  103C 000E               2692          MOVE.B  #14,D0
00002C12  4E4F                    2693          TRAP    #15
00002C14  6000 004E               2694          BRA     SUBPRINTEND
00002C18                          2695  
00002C18                          2696  SUBPRINTAND   * Displays 'AND.' 
00002C18  43F9 000032FA           2697          LEA     MAND,A1
00002C1E  103C 000E               2698          MOVE.B  #14,D0
00002C22  4E4F                    2699          TRAP    #15
00002C24  6000 003E               2700          BRA     SUBPRINTEND
00002C28                          2701  
00002C28                          2702  SUBPRINTADD   * Displays 'ADD.' 
00002C28  43F9 000032FF           2703          LEA     MADD,A1
00002C2E  103C 000E               2704          MOVE.B  #14,D0
00002C32  4E4F                    2705          TRAP    #15
00002C34  6000 002E               2706          BRA     SUBPRINTEND
00002C38                          2707  
00002C38                          2708  SUBPRINTB
00002C38  0C39 0004 000034CC      2709          CMP.B   #$4,bit2
00002C40  6D00 0012               2710          BLT     SUBPRINTCMP
00002C44                          2711  
00002C44                          2712  SUBPRINTEOR   * Displays 'EOR.' 
00002C44  43F9 0000332F           2713          LEA     MEOR,A1
00002C4A  103C 000E               2714          MOVE.B  #14,D0
00002C4E  4E4F                    2715          TRAP    #15
00002C50  6000 0012               2716          BRA     SUBPRINTEND
00002C54                          2717  
00002C54                          2718  SUBPRINTCMP   * Displays 'CMP.' 
00002C54  43F9 0000331E           2719          LEA     MCMP,A1
00002C5A  103C 000E               2720          MOVE.B  #14,D0
00002C5E  4E4F                    2721          TRAP    #15
00002C60  6000 0002               2722          BRA     SUBPRINTEND
00002C64                          2723  
00002C64                          2724  SUBPRINTEND
00002C64  4E75                    2725          RTS
00002C66                          2726  
00002C66                          2727  
00002C66                          2728  *******************************************************************
00002C66                          2729  * Error testing for DN->EA operations
00002C66                          2730  *  Data register, address register, and immediate data cannot be destinations
00002C66                          2731  SUBERRORTEST1
00002C66                          2732          * test for DN or AN register, branches to invalid op code if true
00002C66  0C39 0000 000034CD      2733          CMP.B   #0,bit3
00002C6E  6700 0326               2734          BEQ     INVOP
00002C72  0C39 0001 000034CD      2735          CMP.B   #1,bit3
00002C7A  6700 031A               2736          BEQ     INVOP
00002C7E                          2737          
00002C7E                          2738          * check if destination is immediate data
00002C7E  0C39 0007 000034CD      2739          CMP.B   #7,bit3
00002C86  6600 001E               2740          BNE     SUBERRORTEST11
00002C8A  0C39 0000 000034CE      2741          CMP.B   #0,bit4
00002C92  6700 0012               2742          BEQ     SUBERRORTEST11
00002C96  0C39 0001 000034CE      2743          CMP.B   #1,bit4
00002C9E  6700 0006               2744          BEQ     SUBERRORTEST11
00002CA2  6000 02F2               2745          BRA     INVOP
00002CA6                          2746          
00002CA6                          2747  SUBERRORTEST11
00002CA6  4E75                    2748          RTS
00002CA8                          2749  
00002CA8                          2750  
00002CA8                          2751  ******************************************************************************************************
00002CA8                          2752  *   Displays data register
00002CA8                          2753  SUBDN
00002CA8  43F9 00003286           2754          LEA     MDN,A1
00002CAE  103C 000E               2755          MOVE.B  #14,D0
00002CB2  4E4F                    2756          TRAP    #15
00002CB4                          2757  
00002CB4  1239 000034CB           2758          MOVE.B  bit1,D1
00002CBA  103C 0003               2759          MOVE.B  #3,D0
00002CBE  4E4F                    2760          TRAP    #15
00002CC0                          2761          
00002CC0  6000 FF14               2762          BRA     SUBJMPA2
00002CC4                          2763  
00002CC4                          2764  *   Displays data register
00002CC4                          2765  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002CC4                          2766  SUBDN2
00002CC4  43F9 00003286           2767          LEA     MDN,A1
00002CCA  103C 000E               2768          MOVE.B  #14,D0
00002CCE  4E4F                    2769          TRAP    #15
00002CD0                          2770  
00002CD0  1239 000034CE           2771          MOVE.B  bit4,D1
00002CD6  103C 0003               2772          MOVE.B  #3,D0
00002CDA  4E4F                    2773          TRAP    #15
00002CDC                          2774          
00002CDC  6000 FEF8               2775          BRA     SUBJMPA2
00002CE0                          2776  
00002CE0                          2777  *   Displays address register
00002CE0                          2778  SUBAN
00002CE0  43F9 00003288           2779          LEA     MAN,A1
00002CE6  103C 000E               2780          MOVE.B  #14,D0
00002CEA  4E4F                    2781          TRAP    #15
00002CEC                          2782  
00002CEC  1239 000034CE           2783          MOVE.B  bit4,D1
00002CF2  103C 0003               2784          MOVE.B  #3,D0
00002CF6  4E4F                    2785          TRAP    #15
00002CF8                          2786          
00002CF8  6000 FEDC               2787          BRA     SUBJMPA2
00002CFC                          2788  
00002CFC                          2789  *   Displays address register
00002CFC                          2790  *   This is for SUBA, SUBA puts An into bit1
00002CFC                          2791  SUBAN2
00002CFC  43F9 00003288           2792          LEA     MAN,A1
00002D02  103C 000E               2793          MOVE.B  #14,D0
00002D06  4E4F                    2794          TRAP    #15
00002D08                          2795  
00002D08  1239 000034CB           2796          MOVE.B  bit1,D1
00002D0E  103C 0003               2797          MOVE.B  #3,D0
00002D12  4E4F                    2798          TRAP    #15
00002D14                          2799          
00002D14  6000 FEC0               2800          BRA     SUBJMPA2
00002D18                          2801  
00002D18                          2802  
00002D18                          2803  *   Displays indirect address register
00002D18                          2804  SUBANID
00002D18  43F9 00003261           2805          LEA     OPENBRA,A1
00002D1E  103C 000E               2806          MOVE.B  #14,D0
00002D22  4E4F                    2807          TRAP    #15
00002D24                          2808  
00002D24  43F9 00003288           2809          LEA     MAN,A1
00002D2A  103C 000E               2810          MOVE.B  #14,D0
00002D2E  4E4F                    2811          TRAP    #15
00002D30                          2812  
00002D30  1239 000034CE           2813          MOVE.B  bit4,D1
00002D36  103C 0003               2814          MOVE.B  #3,D0
00002D3A  4E4F                    2815          TRAP    #15
00002D3C                          2816  
00002D3C  43F9 00003263           2817          LEA     CLOSEBRA,A1
00002D42  103C 000E               2818          MOVE.B  #14,D0
00002D46  4E4F                    2819          TRAP    #15
00002D48                          2820  
00002D48  6000 FE8C               2821          BRA     SUBJMPA2
00002D4C                          2822  
00002D4C                          2823  *   Displays indirect address register with post increment
00002D4C                          2824  SUBANIDPOS
00002D4C  43F9 00003261           2825          LEA     OPENBRA,A1
00002D52  103C 000E               2826          MOVE.B  #14,D0
00002D56  4E4F                    2827          TRAP    #15
00002D58                          2828  
00002D58  43F9 00003288           2829          LEA     MAN,A1
00002D5E  103C 000E               2830          MOVE.B  #14,D0
00002D62  4E4F                    2831          TRAP    #15
00002D64                          2832  
00002D64  1239 000034CE           2833          MOVE.B  bit4,D1
00002D6A  103C 0003               2834          MOVE.B  #3,D0
00002D6E  4E4F                    2835          TRAP    #15
00002D70                          2836  
00002D70  43F9 00003263           2837          LEA     CLOSEBRA,A1
00002D76  103C 000E               2838          MOVE.B  #14,D0
00002D7A  4E4F                    2839          TRAP    #15
00002D7C                          2840  
00002D7C  43F9 00003265           2841          LEA     POS,A1
00002D82  103C 000E               2842          MOVE.B  #14,D0
00002D86  4E4F                    2843          TRAP    #15
00002D88                          2844  
00002D88  6000 FE4C               2845          BRA     SUBJMPA2
00002D8C                          2846  
00002D8C                          2847  *   Displays indirect address register with pre decrement
00002D8C                          2848  SUBANIDNEG
00002D8C  43F9 00003267           2849          LEA     NEG,A1
00002D92  103C 000E               2850          MOVE.B  #14,D0
00002D96  4E4F                    2851          TRAP    #15
00002D98                          2852  
00002D98  43F9 00003261           2853          LEA     OPENBRA,A1
00002D9E  103C 000E               2854          MOVE.B  #14,D0
00002DA2  4E4F                    2855          TRAP    #15
00002DA4                          2856  
00002DA4  43F9 00003288           2857          LEA     MAN,A1
00002DAA  103C 000E               2858          MOVE.B  #14,D0
00002DAE  4E4F                    2859          TRAP    #15
00002DB0                          2860  
00002DB0  1239 000034CE           2861          MOVE.B  bit4,D1
00002DB6  103C 0003               2862          MOVE.B  #3,D0
00002DBA  4E4F                    2863          TRAP    #15
00002DBC                          2864  
00002DBC  43F9 00003263           2865          LEA     CLOSEBRA,A1
00002DC2  103C 000E               2866          MOVE.B  #14,D0
00002DC6  4E4F                    2867          TRAP    #15
00002DC8                          2868  
00002DC8  6000 FE0C               2869          BRA     SUBJMPA2
00002DCC                          2870  
00002DCC                          2871  
00002DCC                          2872  
00002DCC                          2873  
00002DCC                          2874  ******************************************************************************************************
00002DCC                          2875  * Displays the EA as hex numbers
00002DCC                          2876  * 
00002DCC                          2877  SUBEA
00002DCC                          2878          *   This finds which mode to use
00002DCC  0C39 0000 000034CD      2879          CMP.B   #$0,bit3
00002DD4  6700 FEEE               2880          BEQ     SUBDN2
00002DD8  0C39 0001 000034CD      2881          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002DE0  6700 FEFE               2882          BEQ     SUBAN
00002DE4  0C39 0002 000034CD      2883          CMP.B   #$2,bit3
00002DEC  6700 FF2A               2884          BEQ     SUBANID
00002DF0  0C39 0003 000034CD      2885          CMP.B   #$3,bit3
00002DF8  6700 FF52               2886          BEQ     SUBANIDPOS
00002DFC  0C39 0004 000034CD      2887          CMP.B   #$4,bit3
00002E04  6786                    2888          BEQ     SUBANIDNEG
00002E06  0C39 0005 000034CD      2889          CMP.B   #$5,bit3
00002E0E  6700 0424               2890          BEQ     ERROR
00002E12  0C39 0006 000034CD      2891          CMP.B   #$6,bit3
00002E1A  6700 0418               2892          BEQ     ERROR
00002E1E  0C39 0007 000034CD      2893          CMP.B   #$7,bit3
00002E26  6700 0002               2894          BEQ     SUBEAHEX
00002E2A                          2895  
00002E2A                          2896  SUBEAHEX
00002E2A  0C39 0004 000034CE      2897          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002E32  6700 0086               2898          BEQ     SUBEAID
00002E36                          2899  SUBEAID2
00002E36                          2900          *   Else it will assume it is absolute addressing mode
00002E36  43F9 0000327B           2901          LEA     MHEX,A1
00002E3C  103C 000E               2902          MOVE.B  #14,D0
00002E40  4E4F                    2903          TRAP    #15
00002E42                          2904  
00002E42  0C39 0000 000034CE      2905          CMP.B   #$0,bit4
00002E4A  6700 007E               2906          BEQ     SUBEAHEX1
00002E4E  0C39 0001 000034CE      2907          CMP.B   #$1,bit4
00002E56  6700 007A               2908          BEQ     SUBEAHEX2
00002E5A                          2909  
00002E5A  0C39 0000 000034CC      2910          CMP.B   #$0,bit2            * SUB byte displays as word
00002E62  6700 0066               2911          BEQ     SUBEAHEX1
00002E66  0C39 0004 000034CC      2912          CMP.B   #$4,bit2            * SUB byte displays as word
00002E6E  6700 005A               2913          BEQ     SUBEAHEX1
00002E72  0C39 0001 000034CC      2914          CMP.B   #$1,bit2            * SUB word
00002E7A  6700 004E               2915          BEQ     SUBEAHEX1
00002E7E  0C39 0005 000034CC      2916          CMP.B   #$5,bit2            * SUB word
00002E86  6700 0042               2917          BEQ     SUBEAHEX1
00002E8A  0C39 0003 000034CC      2918          CMP.B   #$3,bit2            * SUBA word
00002E92  6700 0036               2919          BEQ     SUBEAHEX1
00002E96  0C39 0002 000034CC      2920          CMP.B   #$2,bit2            * SUB longword
00002E9E  6700 0032               2921          BEQ     SUBEAHEX2
00002EA2  0C39 0006 000034CC      2922          CMP.B   #$6,bit2            * SUB longword
00002EAA  6700 0026               2923          BEQ     SUBEAHEX2
00002EAE  0C39 0007 000034CC      2924          CMP.B   #$7,bit2            * SUBA longword
00002EB6  6700 001A               2925          BEQ     SUBEAHEX2
00002EBA                          2926  
00002EBA                          2927  SUBEAID
00002EBA  43F9 00003269           2928          LEA     HASH,A1
00002EC0  103C 000E               2929          MOVE.B  #14,D0
00002EC4  4E4F                    2930          TRAP    #15
00002EC6  6000 FF6E               2931          BRA     SUBEAID2
00002ECA                          2932  
00002ECA                          2933  SUBEAHEX1  
00002ECA                          2934          *absolute address word
00002ECA  1E3C 0002               2935          MOVE.B  #2,D7
00002ECE  6000 000A               2936          BRA     SUBEAHEX3
00002ED2                          2937  
00002ED2                          2938  SUBEAHEX2  *absolute address long
00002ED2  1E3C 0004               2939          MOVE.B  #4,D7
00002ED6  6000 0002               2940          BRA     SUBEAHEX3
00002EDA                          2941  
00002EDA                          2942  SUBEAHEX3
00002EDA  BE3C 0000               2943          CMP.B   #0,D7               Compares current addr to ending addr
00002EDE  6700 FCF6               2944          BEQ     SUBJMPA2            Branches to done if they are equal
00002EE2                          2945  
00002EE2                          2946      
00002EE2  141E                    2947          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002EE4                          2948          
00002EE4  1602                    2949          MOVE.B  D2,D3               Copies data at D2 to D3
00002EE6                          2950          *   this gets digit in 10's place
00002EE6  E80B                    2951          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002EE8                          2952          *   this gets digit in 1's place
00002EE8  E90A                    2953          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002EEA  E80A                    2954          LSR.B   #4,D2               Shifts back right into 1's place
00002EEC                          2955  
00002EEC                          2956          
00002EEC                          2957          *   D3 holds digit in 10's place
00002EEC                          2958          *   D2 holds digit in 1's place
00002EEC                          2959          
00002EEC  1203                    2960          MOVE.B  D3,D1               Displays digit in 10's place first
00002EEE                          2961  
00002EEE                          2962          *   converts digits 10+ into letters
00002EEE                          2963  
00002EEE  47F9 00002F02           2964          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002EF4  B23C 0009               2965          CMP.B   #9,D1               Compares digit to 9
00002EF8  6E00 0164               2966          BGT     CONV                Print out letter representation if greater than 9
00002EFC                          2967  
00002EFC  103C 0003               2968          MOVE.B  #3,D0               Displays digit if it is less than A
00002F00  4E4F                    2969          TRAP    #15
00002F02                          2970          
00002F02                          2971  SUBEAHEX4    
00002F02  1202                    2972          MOVE.B  D2,D1               Displays digit in 1's place second
00002F04                          2973  
00002F04                          2974          *   converts digits 10+ into letters
00002F04  47F9 00002F18           2975          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002F0A  B23C 0009               2976          CMP.B   #9,D1               Compares digit to 9
00002F0E  6E00 014E               2977          BGT     CONV                Print out letter representation if greater than 9
00002F12                          2978          
00002F12  103C 0003               2979          MOVE.B  #3,D0               Displays digit if it is less than A
00002F16  4E4F                    2980          TRAP    #15
00002F18                          2981          
00002F18                          2982  SUBEAHEX5         
00002F18                          2983  * Display counter -- creates new line every 8 bytes
00002F18                          2984          * D7 is used as counter
00002F18                          2985          
00002F18  5307                    2986          SUB.B   #1,D7                       
00002F1A  60BE                    2987          BRA     SUBEAHEX3              Loops back to display next address
00002F1C                          2988  
00002F1C                          2989  ***   display EA ends here
00002F1C                          2990  
00002F1C                          2991  ******************************************************************************************************
00002F1C                          2992  * Displays the EA as hex numbers
00002F1C                          2993  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002F1C                          2994  * OUTPUT: Displays size of EA reading from A6
00002F1C                          2995  * Jumps to location stored in A2 when finished
00002F1C                          2996  DISPEA
00002F1C  43F9 0000327B           2997          LEA     MHEX,A1
00002F22  103C 000E               2998          MOVE.B  #14,D0
00002F26  4E4F                    2999          TRAP    #15
00002F28                          3000  
00002F28  B83C 0002               3001          CMP.B   #$2,D4              Branches to longword display if size is 2
00002F2C  6700 000A               3002          BEQ     DISPEALONG          Else it will assume word length
00002F30                          3003  
00002F30                          3004  DISPEAWORD
00002F30                          3005          *absolute address word
00002F30  1E3C 0002               3006          MOVE.B  #2,D7
00002F34  6000 000A               3007          BRA     DISPEA3
00002F38                          3008   
00002F38                          3009  DISPEALONG
00002F38                          3010          *absolute address long
00002F38  1E3C 0004               3011          MOVE.B  #4,D7
00002F3C  6000 0002               3012          BRA     DISPEA3
00002F40                          3013  
00002F40                          3014  DISPEA3
00002F40  BE3C 0000               3015          CMP.B   #0,D7               Compares current addr to ending addr
00002F44  6700 FC90               3016          BEQ     SUBJMPA2            Branches to done if they are equal
00002F48                          3017  
00002F48                          3018      
00002F48  141E                    3019          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002F4A                          3020          
00002F4A  1602                    3021          MOVE.B  D2,D3               Copies data at D2 to D3
00002F4C                          3022          *   this gets digit in 10's place
00002F4C  E80B                    3023          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F4E                          3024          *   this gets digit in 1's place
00002F4E  E90A                    3025          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F50  E80A                    3026          LSR.B   #4,D2               Shifts back right into 1's place
00002F52                          3027  
00002F52                          3028          
00002F52                          3029          *   D3 holds digit in 10's place
00002F52                          3030          *   D2 holds digit in 1's place
00002F52                          3031          
00002F52  1203                    3032          MOVE.B  D3,D1               Displays digit in 10's place first
00002F54                          3033  
00002F54                          3034          *   converts digits 10+ into letters
00002F54                          3035  
00002F54  47F9 00002F68           3036          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002F5A  B23C 0009               3037          CMP.B   #9,D1               Compares digit to 9
00002F5E  6E00 00FE               3038          BGT     CONV                Print out letter representation if greater than 9
00002F62                          3039  
00002F62  103C 0003               3040          MOVE.B  #3,D0               Displays digit if it is less than A
00002F66  4E4F                    3041          TRAP    #15
00002F68                          3042    
00002F68                          3043  DISPEA4
00002F68  1202                    3044          MOVE.B  D2,D1               Displays digit in 1's place second
00002F6A                          3045  
00002F6A                          3046          *   converts digits 10+ into letters
00002F6A  47F9 00002F7E           3047          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002F70  B23C 0009               3048          CMP.B   #9,D1               Compares digit to 9
00002F74  6E00 00E8               3049          BGT     CONV                Print out letter representation if greater than 9
00002F78                          3050          
00002F78  103C 0003               3051          MOVE.B  #3,D0               Displays digit if it is less than A
00002F7C  4E4F                    3052          TRAP    #15
00002F7E                          3053        
00002F7E                          3054  DISPEA5
00002F7E                          3055  * Display counter -- creates new line every 8 bytes
00002F7E                          3056          * D7 is used as counter
00002F7E                          3057          
00002F7E  5307                    3058          SUB.B   #1,D7                       
00002F80  60BE                    3059          BRA     DISPEA3              Loops back to display next address
00002F82                          3060  
00002F82                          3061  ***   display EA ends here
00002F82                          3062  
00002F82                          3063  *******************************************************************
00002F82                          3064  * Clears all of the data registers
00002F82                          3065  CLRDN
00002F82  4280                    3066          CLR.L   D0
00002F84  4281                    3067          CLR.L   D1
00002F86  4282                    3068          CLR.L   D2
00002F88  4283                    3069          CLR.L   D3
00002F8A  4284                    3070          CLR.L   D4
00002F8C  4285                    3071          CLR.L   D5
00002F8E  4286                    3072          CLR.L   D6
00002F90  4287                    3073          CLR.L   D7
00002F92  4E75                    3074          RTS
00002F94                          3075  
00002F94                          3076  ********************************************************************
00002F94                          3077  * Invalid op-code handling
00002F94                          3078  * Displays DATA YYYY
00002F94                          3079  *  YYYY represents the op-code that failed
00002F94                          3080  INVOPCODE
00002F94  DE1E                    3081          ADD.B   (A6)+,D7
00002F96                          3082  
00002F96                          3083  INVOP
00002F96  43F9 000032EA           3084          LEA     MDATA,A1
00002F9C  103C 000E               3085          MOVE.B  #14,D0
00002FA0  4E4F                    3086          TRAP    #15
00002FA2  43F9 0000325B           3087          LEA     TAB,A1
00002FA8  103C 000E               3088          MOVE.B  #14,D0
00002FAC  4E4F                    3089          TRAP    #15
00002FAE  43F9 0000327B           3090          LEA     MHEX,A1
00002FB4  103C 000E               3091          MOVE.B  #14,D0
00002FB8  4E4F                    3092          TRAP    #15
00002FBA                          3093          
00002FBA  1C3C 0002               3094          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002FBE                          3095          
00002FBE  3407                    3096          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002FC0  E04A                    3097          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002FC2  6000 0004               3098          BRA     INVOP2              Skips the second part to do later
00002FC6                          3099  
00002FC6                          3100  INVOP1
00002FC6  1407                    3101          MOVE.B  D7,D2
00002FC8                          3102  INVOP2
00002FC8  1602                    3103          MOVE.B  D2,D3               Copies data at D2 to D3
00002FCA                          3104          *   this gets digit in 10's place
00002FCA  E80B                    3105          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002FCC                          3106          *   this gets digit in 1's place
00002FCC  E90A                    3107          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002FCE  E80A                    3108          LSR.B   #4,D2               Shifts back right into 1's place
00002FD0                          3109  
00002FD0                          3110          
00002FD0                          3111          *   D3 holds digit in 10's place
00002FD0                          3112          *   D2 holds digit in 1's place
00002FD0                          3113          
00002FD0  1203                    3114          MOVE.B  D3,D1               Displays digit in 10's place first
00002FD2                          3115  
00002FD2                          3116          *   converts digits 10+ into letters
00002FD2                          3117  
00002FD2  47F9 00002FE6           3118          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002FD8  B23C 0009               3119          CMP.B   #9,D1               Compares digit to 9
00002FDC  6E00 0080               3120          BGT     CONV                Print out letter representation if greater than 9
00002FE0                          3121  
00002FE0  103C 0003               3122          MOVE.B  #3,D0               Displays digit if it is less than A
00002FE4  4E4F                    3123          TRAP    #15
00002FE6                          3124          
00002FE6                          3125  INVOP3   
00002FE6  1202                    3126          MOVE.B  D2,D1               Displays digit in 1's place second
00002FE8                          3127  
00002FE8                          3128          *   converts digits 10+ into letters
00002FE8  47F9 00002FFC           3129          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002FEE  B23C 0009               3130          CMP.B   #9,D1               Compares digit to 9
00002FF2  6E00 006A               3131          BGT     CONV                Print out letter representation if greater than 9
00002FF6                          3132          
00002FF6  103C 0003               3133          MOVE.B  #3,D0               Displays digit if it is less than A
00002FFA  4E4F                    3134          TRAP    #15
00002FFC                          3135          
00002FFC                          3136  INVOP4
00002FFC                          3137  * Display counter -- creates new line every 8 bytes
00002FFC                          3138          * D6 is used as counter
00002FFC                          3139          
00002FFC  5306                    3140          SUB.B   #1,D6
00002FFE  BC3C 0000               3141          CMP.B   #0,D6
00003002  6700 0004               3142          BEQ     ENDNEWLINE
00003006  60BE                    3143          BRA     INVOP1              Loops back to display next address
00003008                          3144  
00003008                          3145  
00003008                          3146  ******************************************************************************************************
00003008                          3147  * Creates a new line after an op-code is displayed, loops back to start to display next code
00003008                          3148  ENDNEWLINE
00003008  43F9 00003258           3149          LEA     NEWLINE,A1          Creates a new line in output window
0000300E  103C 000E               3150          MOVE.B  #14,D0
00003012  4E4F                    3151          TRAP    #15
00003014                          3152  
00003014  5339 000034C1           3153          SUB.B   #1,dispcount
0000301A  0C39 0000 000034C1      3154          CMP.B   #0,dispcount               Checks if display counter is zero
00003022  6600 E0C2               3155          BNE     NEWADDR
00003026                          3156  
00003026                          3157  * Asks user to press enter to continue
00003026                          3158  * Resets counter
00003026  43F9 00003258           3159          LEA     NEWLINE,A1          Creates a new line in output window
0000302C  103C 000E               3160          MOVE.B  #14,D0
00003030  4E4F                    3161          TRAP    #15
00003032                          3162          
00003032  43F9 000034A5           3163          LEA     MCONT,A1            Asks user to press enter to continue
00003038  103C 000E               3164          MOVE.B  #14,D0
0000303C  4E4F                    3165          TRAP    #15
0000303E                          3166  
0000303E  103C 0004               3167          MOVE.B  #4,D0               Takes in user input
00003042  4E4F                    3168          TRAP    #15
00003044  4281                    3169          CLR.L   D1                  Clears D1 incase user decides to input something
00003046                          3170  
00003046  43F9 00003258           3171          LEA     NEWLINE,A1          Creates a new line in output window
0000304C  103C 000E               3172          MOVE.B  #14,D0
00003050  4E4F                    3173          TRAP    #15
00003052                          3174  
00003052  13FC 001E 000034C1      3175          MOVE.B  #dispnum,dispcount  Resets display counter
0000305A  6000 E08A               3176          BRA     NEWADDR             Loops back to beginning
0000305E                          3177  
0000305E                          3178  
0000305E                          3179  ******************************************************************************************************
0000305E                          3180  * Converts decimal number into hex and displays it
0000305E                          3181  *   converts number 10-15 to A-F
0000305E                          3182  *   INPUT: decimal number in D1
0000305E                          3183  *   OUTPUT: HEX number to output
0000305E  B23C 000A               3184  CONV    CMP.B   #10,D1              Displays 10 as A
00003062  6700 002A               3185          BEQ     HEXA
00003066  B23C 000B               3186          CMP.B   #11,D1              Displays 11 as B
0000306A  6700 002C               3187          BEQ     HEXB
0000306E  B23C 000C               3188          CMP.B   #12,D1              Displays 12 as C
00003072  6700 002E               3189          BEQ     HEXC
00003076  B23C 000D               3190          CMP.B   #13,D1              Displays 13 as D
0000307A  6700 0030               3191          BEQ     HEXD
0000307E  B23C 000E               3192          CMP.B   #14,D1              Displays 14 as E
00003082  6700 0032               3193          BEQ     HEXE
00003086  B23C 000F               3194          CMP.B   #15,D1              Displays 15 as F
0000308A  6700 0034               3195          BEQ     HEXF
0000308E                          3196  
0000308E  43F9 0000326D           3197  HEXA    LEA     DISPA,A1            Loads A character
00003094  6000 0034               3198          BRA     PRINT
00003098                          3199    
00003098  43F9 0000326F           3200  HEXB    LEA     DISPB,A1            Loads B character
0000309E  6000 002A               3201          BRA     PRINT
000030A2                          3202  
000030A2  43F9 00003271           3203  HEXC    LEA     DISPC,A1            Loads C character
000030A8  6000 0020               3204          BRA     PRINT
000030AC                          3205  
000030AC  43F9 00003273           3206  HEXD    LEA     DISPD,A1            Loads D character
000030B2  6000 0016               3207          BRA     PRINT
000030B6                          3208  
000030B6  43F9 00003275           3209  HEXE    LEA     DISPE,A1            Loads E character
000030BC  6000 000C               3210          BRA     PRINT
000030C0                          3211  
000030C0  43F9 00003277           3212  HEXF    LEA     DISPF,A1            Loads F character
000030C6  6000 0002               3213          BRA     PRINT
000030CA                          3214  
000030CA  103C 000E               3215  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000030CE  4E4F                    3216          TRAP    #15                 Prints out message in A1
000030D0  4ED3                    3217          JMP     (A3)
000030D2                          3218  
000030D2                          3219  ******************************************************************************
000030D2                          3220  * Converts decimal input to hex
000030D2                          3221  * INPUT: Decimal inside D2
000030D2                          3222  * OUTPUT: HEX into D3
000030D2                          3223  *   Converts number in decimal to hex        
000030D2                          3224  DEC2HEX
000030D2  B43C 0030               3225          CMP.B   #$30,D2             0
000030D6  6700 00B0               3226          BEQ     D2HZERO
000030DA  B43C 0031               3227          CMP.B   #$31,D2             1
000030DE  6700 00AE               3228          BEQ     D2HONE
000030E2  B43C 0032               3229          CMP.B   #$32,D2             2
000030E6  6700 00AC               3230          BEQ     D2HTWO
000030EA  B43C 0033               3231          CMP.B   #$33,D2             3
000030EE  6700 00AA               3232          BEQ     D2HTHREE
000030F2  B43C 0034               3233          CMP.B   #$34,D2             4
000030F6  6700 00A8               3234          BEQ     D2HFOUR
000030FA  B43C 0035               3235          CMP.B   #$35,D2             5
000030FE  6700 00A6               3236          BEQ     D2HFIVE
00003102  B43C 0036               3237          CMP.B   #$36,D2             6
00003106  6700 00A4               3238          BEQ     D2HSIX
0000310A  B43C 0037               3239          CMP.B   #$37,D2             7
0000310E  6700 00A2               3240          BEQ     D2HSEVEN
00003112  B43C 0038               3241          CMP.B   #$38,D2             8
00003116  6700 00A0               3242          BEQ     D2HEIGHT
0000311A  B43C 0039               3243          CMP.B   #$39,D2             9
0000311E  6700 009E               3244          BEQ     D2HNINE
00003122  B43C 0041               3245          CMP.B   #$41,D2             A
00003126  6700 009C               3246          BEQ     D2HHEXA
0000312A  B43C 0042               3247          CMP.B   #$42,D2             B
0000312E  6700 009A               3248          BEQ     D2HHEXB
00003132  B43C 0043               3249          CMP.B   #$43,D2             C
00003136  6700 0098               3250          BEQ     D2HHEXC
0000313A  B43C 0044               3251          CMP.B   #$44,D2             D
0000313E  6700 0096               3252          BEQ     D2HHEXD
00003142  B43C 0045               3253          CMP.B   #$45,D2             E
00003146  6700 0094               3254          BEQ     D2HHEXE
0000314A  B43C 0046               3255          CMP.B   #$46,D2             F
0000314E  6700 0092               3256          BEQ     D2HHEXF
00003152  B43C 0061               3257          CMP.B   #$61,D2             A
00003156  6700 006C               3258          BEQ     D2HHEXA
0000315A  B43C 0062               3259          CMP.B   #$62,D2             B
0000315E  6700 006A               3260          BEQ     D2HHEXB
00003162  B43C 0063               3261          CMP.B   #$63,D2             C
00003166  6700 0068               3262          BEQ     D2HHEXC
0000316A  B43C 0064               3263          CMP.B   #$64,D2             D
0000316E  6700 0066               3264          BEQ     D2HHEXD
00003172  B43C 0065               3265          CMP.B   #$65,D2             E
00003176  6700 0064               3266          BEQ     D2HHEXE
0000317A  B43C 0066               3267          CMP.B   #$66,D2             F
0000317E  6700 0062               3268          BEQ     D2HHEXF
00003182                          3269  
00003182                          3270          * User entered a non-hex character
00003182                          3271          * Moves F to D1 to indicate error before returning
00003182  123C 000F               3272          MOVE.B  #$F,D1
00003186  4E75                    3273          RTS
00003188                          3274  
00003188                          3275  *   Moves the appropiate hex number to D3
00003188  163C 0000               3276  D2HZERO MOVE.B  #$0,D3
0000318C  4E75                    3277          RTS
0000318E                          3278  
0000318E                          3279  D2HONE
0000318E  163C 0001               3280          MOVE.B  #$1,D3
00003192  4E75                    3281          RTS
00003194                          3282  
00003194                          3283  D2HTWO
00003194  163C 0002               3284          MOVE.B  #$2,D3
00003198  4E75                    3285          RTS
0000319A                          3286  
0000319A                          3287  D2HTHREE
0000319A  163C 0003               3288          MOVE.B  #$3,D3
0000319E  4E75                    3289          RTS
000031A0                          3290  
000031A0                          3291  D2HFOUR
000031A0  163C 0004               3292          MOVE.B  #$4,D3
000031A4  4E75                    3293          RTS
000031A6                          3294  
000031A6                          3295  D2HFIVE
000031A6  163C 0005               3296          MOVE.B  #$5,D3
000031AA  4E75                    3297          RTS
000031AC                          3298  
000031AC                          3299  D2HSIX
000031AC  163C 0006               3300          MOVE.B  #$6,D3
000031B0  4E75                    3301          RTS
000031B2                          3302  
000031B2                          3303  D2HSEVEN
000031B2  163C 0007               3304          MOVE.B  #$7,D3
000031B6  4E75                    3305          RTS
000031B8                          3306  
000031B8                          3307  D2HEIGHT
000031B8  163C 0008               3308          MOVE.B  #$8,D3
000031BC  4E75                    3309          RTS
000031BE                          3310  
000031BE                          3311  D2HNINE
000031BE  163C 0009               3312          MOVE.B  #$9,D3
000031C2  4E75                    3313          RTS
000031C4                          3314  
000031C4                          3315  D2HHEXA
000031C4  163C 000A               3316          MOVE.B  #$A,D3
000031C8  4E75                    3317          RTS
000031CA                          3318  
000031CA                          3319  D2HHEXB
000031CA  163C 000B               3320          MOVE.B  #$B,D3
000031CE  4E75                    3321          RTS
000031D0                          3322  
000031D0                          3323  D2HHEXC
000031D0  163C 000C               3324          MOVE.B  #$C,D3
000031D4  4E75                    3325          RTS
000031D6                          3326  
000031D6                          3327  D2HHEXD
000031D6  163C 000D               3328          MOVE.B  #$D,D3
000031DA  4E75                    3329          RTS
000031DC                          3330  
000031DC                          3331  D2HHEXE
000031DC  163C 000E               3332          MOVE.B  #$E,D3
000031E0  4E75                    3333          RTS
000031E2                          3334  
000031E2                          3335  D2HHEXF
000031E2  163C 000F               3336          MOVE.B  #$F,D3
000031E6  4E75                    3337          RTS
000031E8                          3338  
000031E8                          3339  *************************************************************************************************
000031E8                          3340  ASK4REPEAT
000031E8  43F9 00003258           3341          LEA     NEWLINE,A1          Creates a new line in output window
000031EE  103C 000E               3342          MOVE.B  #14,D0
000031F2  4E4F                    3343          TRAP    #15
000031F4                          3344  ASK4REPEAT2
000031F4  43F9 000033AC           3345          LEA     MREPEAT,A1          Asks user if they want to start over or exit
000031FA  103C 000E               3346          MOVE.B  #14,D0
000031FE  4E4F                    3347          TRAP    #15
00003200                          3348  
00003200  43F9 000034CE           3349          LEA     bit4,A1             User has to enter Y to start over
00003206  103C 0002               3350          MOVE.B  #2,D0               N to exit
0000320A  4E4F                    3351          TRAP    #15
0000320C                          3352  
0000320C  1239 000034CE           3353          MOVE.B  bit4,D1             User input was stored in bit4
00003212  B23C 0059               3354          CMP.B   #$59,D1             Char Y
00003216  6700 DDF4               3355          BEQ     IOSTART
0000321A  B23C 0079               3356          CMP.B   #$79,D1             Char y
0000321E  6700 DDEC               3357          BEQ     IOSTART
00003222  B23C 004E               3358          CMP.B   #$4E,D1             Char N
00003226  6700 001C               3359          BEQ     DONE
0000322A  B23C 006E               3360          CMP.B   #$6E,D1             Char n
0000322E  6700 0014               3361          BEQ     DONE
00003232  60C0                    3362          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00003234                          3363  
00003234                          3364  
00003234                          3365  **************************************************************************************************
00003234  43F9 00003473           3366  ERROR   LEA     MERROR,A1
0000323A  103C 000E               3367          MOVE.B  #14,D0
0000323E  4E4F                    3368          TRAP    #15
00003240  6000 000E               3369          BRA     EXIT
00003244                          3370  
00003244  43F9 0000348A           3371  DONE    LEA     MDONE,A1
0000324A  103C 000E               3372          MOVE.B  #14,D0
0000324E  4E4F                    3373          TRAP    #15
00003250                          3374  
00003250  103C 0009               3375  EXIT    MOVE.B  #9,D0
00003254  4E4F                    3376          TRAP    #15
00003256                          3377  
00003256                          3378  ************************************ Output stuff **************************************
00003256                          3379  * Stuff for output
00003256                          3380  
00003256  =0000000D               3381  CR      EQU     $0D
00003256  =0000000A               3382  LF      EQU     $0A
00003256                          3383  
00003256= 20 00                   3384  SPACE       DC.B    ' ',0
00003258= 0D 0A 00                3385  NEWLINE     DC.B    '',CR,LF,0
0000325B= 20 20 20 00             3386  TAB         DC.B    '   ',0
0000325F= 2C 00                   3387  COMMA       DC.B    ',',0
00003261= 28 00                   3388  OPENBRA     DC.B    '(',0
00003263= 29 00                   3389  CLOSEBRA    DC.B    ')',0
00003265= 2B 00                   3390  POS         DC.B    '+',0
00003267= 2D 00                   3391  NEG         DC.B    '-',0
00003269= 23 00                   3392  HASH        DC.B    '#',0
0000326B= 2F 00                   3393  SLASH       DC.B    '/',0
0000326D                          3394  
0000326D                          3395  
0000326D= 41 00                   3396  DISPA       DC.B    'A',0
0000326F= 42 00                   3397  DISPB       DC.B    'B',0
00003271= 43 00                   3398  DISPC       DC.B    'C',0
00003273= 44 00                   3399  DISPD       DC.B    'D',0
00003275= 45 00                   3400  DISPE       DC.B    'E',0
00003277= 46 00                   3401  DISPF       DC.B    'F',0
00003279                          3402  
00003279= 2E 00                   3403  MDOT        DC.B    '.',0
0000327B= 24 00                   3404  MHEX        DC.B    '$',0
0000327D= 42 20 00                3405  MBYTE       DC.B    'B ',0
00003280= 57 20 00                3406  MWORD       DC.B    'W ',0
00003283= 4C 20 00                3407  MLONG       DC.B    'L ',0
00003286= 44 00                   3408  MDN         DC.B    'D',0
00003288= 41 00                   3409  MAN         DC.B    'A',0
0000328A                          3410  
0000328A= 4A 53 52 00             3411  MJSR        DC.B    'JSR',0
0000328E= 42 54 53 54 00          3412  MBTST       DC.B    'BTST',0
00003293= 52 4F 4C 00             3413  MROL        DC.B    'ROL',0
00003297= 52 4F 52 00             3414  MROR        DC.B    'ROR',0
0000329B= 4C 53 4C 00             3415  MLSL        DC.B    'LSL',0
0000329F= 4C 53 52 00             3416  MLSR        DC.B    'LSR',0
000032A3= 4E 45 47 2E 00          3417  MMNEGW      DC.B    'NEG.',0
000032A8= 44 49 56 53 2E 57 00    3418  MMDIVSW     DC.B    'DIVS.W',0
000032AF= 4D 55 4C 53 2E 57 00    3419  MMULSW      DC.B    'MULS.W',0
000032B6= 4D 4F 56 45 2E 42 00    3420  MMOVEB      DC.B    'MOVE.B',0
000032BD= 4D 4F 56 45 2E 57 00    3421  MMOVEW      DC.B    'MOVE.W',0
000032C4= 4D 4F 56 45 2E 4C 00    3422  MMOVEL      DC.B    'MOVE.L',0
000032CB= 4D 4F 56 45 41 2E ...   3423  MMOVEAW     DC.B    'MOVEA.W',0
000032D3= 4D 4F 56 45 41 2E ...   3424  MMOVEAL     DC.B    'MOVEA.L',0
000032DB= 4D 4F 56 45 4D 2E 00    3425  MMOVEM      DC.B    'MOVEM.',0
000032E2                          3426  
000032E2= 41 53 4C 00             3427  MASL        DC.B    'ASL',0
000032E6= 41 53 52 00             3428  MASR        DC.B    'ASR',0
000032EA= 44 41 54 41 00          3429  MDATA       DC.B    'DATA',0
000032EF= 53 55 42 2E 00          3430  MSUB        DC.B    'SUB.',0
000032F4= 53 55 42 41 2E 00       3431  MSUBA       DC.B    'SUBA.',0
000032FA= 41 4E 44 2E 00          3432  MAND        DC.B    'AND.',0
000032FF= 41 44 44 2E 00          3433  MADD        DC.B    'ADD.',0
00003304= 53 55 42 49 2E 00       3434  MSUBI       DC.B    'SUBI.',0
0000330A= 4F 52 49 2E 00          3435  MORI        DC.B    'ORI.',0
0000330F= 4E 4F 54 2E 00          3436  MNOT        DC.B    'NOT.',0
00003314= 4D 55 4C 53 2E 00       3437  MMUL        DC.B    'MULS.',0
0000331A= 4E 45 47 00             3438  MNEG        DC.B    'NEG',0
0000331E= 43 4D 50 2E 00          3439  MCMP        DC.B    'CMP.',0
00003323= 43 4D 50 49 2E 00       3440  MCMPI       DC.B    'CMPI.',0
00003329= 43 4D 50 41 2E 00       3441  MCMPA       DC.B    'CMPA.',0
0000332F= 45 4F 52 2E 00          3442  MEOR        DC.B    'EOR.',0
00003334= 45 4F 52 49 2E 00       3443  MEORI       DC.B    'EORI.',0
0000333A= 41 44 44 41 2E 00       3444  MADDA       DC.B    'ADDA.',0
00003340= 41 44 44 51 2E 00       3445  MADDQ       DC.B    'ADDQ.',0
00003346                          3446  
00003346= 42 45 51 00             3447  MBEQ        DC.B    'BEQ',0
0000334A= 42 4E 45 00             3448  MBNE        DC.B    'BNE',0
0000334E= 42 4C 54 00             3449  MBLT        DC.B    'BLT',0
00003352= 42 48 49 00             3450  MBHI        DC.B    'BHI',0
00003356= 42 52 41 00             3451  MBRA        DC.B    'BRA',0
0000335A= 4E 4F 50 00             3452  MNOP        DC.B    'NOP',0
0000335E= 52 54 53 00             3453  MRTS        DC.B    'RTS',0
00003362= 4C 45 41 00             3454  MLEA        DC.B    'LEA',0
00003366                          3455  
00003366= 4C 65 6D 6D 65 20 ...   3456  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00003389= 47 69 6D 6D 65 20 ...   3457  MADDR2      DC.B    'Gimme that end address too homie: ',0
000033AC= 54 72 79 6E 61 20 ...   3458  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
000033CC= 45 6E 64 20 61 64 ...   3459  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00003404= 41 64 64 72 65 73 ...   3460  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003437= 52 65 2D 65 6E 74 ...   3461  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00003453= 41 64 64 72 65 73 ...   3462  MIOERR4     DC.B    'Address must be an even number.',0
00003473= 45 52 52 4F 52 3A ...   3463  MERROR      DC.B    'ERROR: Something broke',0
0000348A= 43 4F 4D 50 4C 45 ...   3464  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
000034A5= 2A 2A 50 52 45 53 ...   3465  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
000034C1                          3466  
000034C1                          3467  
000034C1                          3468  ********************************** MEMORY STORAGE **********************************************
000034C1                          3469  * Stores memory locations at the end of the program
000034C1                          3470  * How DS works: Give it a variable name.
000034C1                          3471  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
000034C1                          3472  *   Last is the number of storage you want. 
000034C1                          3473  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
000034C1                          3474  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
000034C1                          3475  *            
000034C1                          3476  
000034C1                          3477  dispcount   DS.B    1           Used to count display lines
000034C2                          3478  
000034C2                          3479  startaddr   DS.L    1
000034C6                          3480  endaddr     DS.L    1
000034CA                          3481  
000034CA                          3482  bit0        DS.B    1           SEE NOTE UP TOP
000034CB                          3483  bit1        DS.B    1           SEE NOTE UP TOP
000034CC                          3484  bit2        DS.B    1           SEE NOTE UP TOP
000034CD                          3485  bit3        DS.B    1           SEE NOTE UP TOP
000034CE                          3486  bit4        DS.B    1           SEE NOTE UP TOP
000034CF                          3487  
000034CF                          3488  
000034CF                          3489      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_EA              26A8
ABS_EA2             26B2
ADDIMD              154A
ADDIMD0             157A
ADDIMD1             1588
ADDIMD4             1596
ADDIMDDES           1604
ADDIMDDES0          1628
ADDIMDDES1          1636
ADDIMDDES4          1644
ADDQ                24BA
ADDQB               250C
ADDQCONT            2540
ADDQEA              2572
ADDQL               252E
ADDQW               251C
ADDR1               7000
ADDR2               726C
AN_EAM              25E8
ASK4REPEAT          31E8
ASK4REPEAT2         31F4
ASLRMEMH            1D64
BCC                 2016
BCCBEQ              2092
BCCBHI              20B0
BCCBLT              20A6
BCCBNE              209C
BCCBRA              2088
BCCDISP             205C
BCCLONG             2044
BCCNEXT             204C
BCCPRINT            20BA
BCCWORD             203C
BIT0                34CA
BIT1                34CB
BIT2                34CC
BIT3                34CD
BIT4                34CE
BTST                1272
BTSTMEM             12EA
CLOSEBRA            3263
CLRDN               2F82
CODE                11BA
COMMA               325F
CONTPRINTLEA        2352
CONV                305E
CR                  D
D2HEIGHT            31B8
D2HFIVE             31A6
D2HFOUR             31A0
D2HHEXA             31C4
D2HHEXB             31CA
D2HHEXC             31D0
D2HHEXD             31D6
D2HHEXE             31DC
D2HHEXF             31E2
D2HNINE             31BE
D2HONE              318E
D2HSEVEN            31B2
D2HSIX              31AC
D2HTHREE            319A
D2HTWO              3194
D2HZERO             3188
DEC2HEX             30D2
DEC_EAM             266C
DISPA               326D
DISPADDR            10BC
DISPADDR1           1104
DISPADDR2           1106
DISPADDR3           113A
DISPADDR4           1150
DISPADDR5           1166
DISPADDR6           117C
DISPADDREND         1186
DISPADDRSTART       10F8
DISPB               326F
DISPC               3271
DISPCOUNT           34C1
DISPD               3273
DISPE               3275
DISPEA              2F1C
DISPEA3             2F40
DISPEA4             2F68
DISPEA5             2F7E
DISPEALONG          2F38
DISPEAWORD          2F30
DISPF               3277
DISPNUM             1E
DIVSW               1AFC
DN_EAM              25D0
DONE                3244
ENDADDR             34C6
ENDNEWLINE          3008
ENDNLINC            1A6E
ERROR               3234
EXIT                3250
HANDLEDES           15AC
HASH                3269
HEXA                308E
HEXB                3098
HEXC                30A2
HEXD                30AC
HEXE                30B6
HEXF                30C0
IMD                 20CA
IMD2                20FC
IMD3                2104
IMD4                2110
IMDBYTE             21AA
IMDEA               21D2
IMDEA2              21FA
IMDEA3              2210
IMDLONG             21C8
IMDPRINT            214A
IMDPRINTCMPI        2198
IMDPRINTEND         21A2
IMDPRINTEORI        218E
IMDPRINTORI         217A
IMDPRINTSUBI        2184
IMDWORD             21BA
INAN_EAM            2600
INC_EAM             2630
INVOP               2F96
INVOP1              2FC6
INVOP2              2FC8
INVOP3              2FE6
INVOP4              2FFC
INVOPCODE           2F94
IOERROR1            107E
IOERROR2            108C
IOERROR3            109C
IOERROR4            10AC
IOGETADDR           1034
IOLOOP              105A
IOSTART             100C
IOSTARTLOOP         1054
JSR                 1226
LEAIMD0             2336
LEAIMD1             2344
LEAMODE0            2310
LEAMODE1            2300
LEA_ABS_EA          231E
LEA_INDIR_AN        2376
LF                  A
LSLR                1CE0
LSLRDESD            195E
LSLRMEM             1EC8
LSLRMEMH            1DE8
LSLRSRCD            1936
MADD                32FF
MADDA               333A
MADDQ               3340
MADDR1              3366
MADDR2              3389
MAN                 3288
MAND                32FA
MASL                32E2
MASR                32E6
MBEQ                3346
MBHI                3352
MBLT                334E
MBNE                334A
MBRA                3356
MBTST               328E
MBYTE               327D
MCMP                331E
MCMPA               3329
MCMPI               3323
MCONT               34A5
MDATA               32EA
MDN                 3286
MDONE               348A
MDOT                3279
MEOR                332F
MEORI               3334
MERROR              3473
MHEX                327B
MIOERR1             33CC
MIOERR2             3404
MIOERR3             3437
MIOERR4             3453
MISC                2214
MISCBIT2            225C
MISCBIT3            2268
MISCBYTE            2438
MISCCHECKM          229C
MISCCHKLEA          227C
MISCEA              2466
MISCEA2             2482
MISCLEA             22CC
MISCLONG            245A
MISCMMPOSTINC       27B6
MISCMMPOSTINC2      27C0
MISCMMPOSTINC3      27F6
MISCMMPOSTINCPRINT  27FA
MISCMMPOSTINCPRINT2  280E
MISCMMPOSTINCPRINT3  281A
MISCMMPREDEC        2748
MISCMMPREDEC2       2772
MISCMMPREDEC3       2788
MISCMMPREDECCHECK   273C
MISCMMPREDECPRINT   278C
MISCMMPREDECPRINT2  27A0
MISCMMPREDECPRINT3  27AC
MISCMMPRINTNUM      288C
MISCMMPRINTSIZE     2724
MISCMMREGMEM        2824
MISCMMREGMEM2       284A
MISCMMREGMEM3       2860
MISCMMREGMEMPRINT   2864
MISCMMREGMEMPRINT2  2874
MISCMMREGMEMPRINT3  2880
MISCMMSIZEL         271E
MISCMMSLASH         289A
MISCMOVEM           26B6
MISCMOVEM2          26C6
MISCMOVEM3          26D6
MISCMOVEM4          26E8
MISCNOP             22BC
MISCNOT             23EE
MISCNOT2            23F6
MISCNOT3            23FE
MISCNOT4            240A
MISCPRINT           2486
MISCPRINTEND        24B2
MISCPRINTNEG        24A8
MISCPRINTNOT        249E
MISCRTS             23DE
MISCWORD            244A
MJSR                328A
MLEA                3362
MLONG               3283
MLSL                329B
MLSR                329F
MMDIVSW             32A8
MMNEGW              32A3
MMOVEAL             32D3
MMOVEAW             32CB
MMOVEB              32B6
MMOVEL              32C4
MMOVEM              32DB
MMOVEW              32BD
MMUL                3314
MMULSW              32AF
MNEG                331A
MNOP                335A
MNOT                330F
MORI                330A
MOVB                14C4
MOVBDN1             18AA
MOVBDN2             1A4A
MOVEAL              1470
MOVEAN1             165A
MOVEAN2             197A
MOVEAW              1390
MOVEIAN1            16CE
MOVEIAND1           180A
MOVEIANI1           1762
MOVIAN2             1996
MOVIAND2            1A0A
MOVIANI2            19CA
MOVL                13E4
MOVW                1304
MREPEAT             33AC
MROL                3293
MROR                3297
MRTS                335E
MSUB                32EF
MSUBA               32F4
MSUBI               3304
MULSW               1A72
MWORD               3280
NEG                 3267
NEGW                1B8A
NEWADDR             10E6
NEWLINE             3258
OPENBRA             3261
POS                 3265
PRINT               30CA
PRINTASL            1D80
PRINTASR            1DB4
PRINTB              1F12
PRINTBYTE           1BE4
PRINTL              1F7A
PRINTLONG           1C8C
PRINTLSL            1E94
PRINTLSLRCOUNT      1FAE
PRINTLSR            1FE2
PRINTROL            1E2C
PRINTROR            1E60
PRINTW              1F46
PRINTWORD           1C38
RORL                1E14
SLASH               326B
SPACE               3256
START               1000
STARTADDR           34C2
SUB                 28A8
SUB1                28DA
SUB2                28BC
SUB3                28C4
SUB4                28CE
SUBA                2AF6
SUBACHECK           2916
SUBACONT            2B4A
SUBAN               2CE0
SUBAN2              2CFC
SUBANID             2D18
SUBANIDNEG          2D8C
SUBANIDPOS          2D4C
SUBDN               2CA8
SUBDN2              2CC4
SUBEA               2DCC
SUBEAHEX            2E2A
SUBEAHEX1           2ECA
SUBEAHEX2           2ED2
SUBEAHEX3           2EDA
SUBEAHEX4           2F02
SUBEAHEX5           2F18
SUBEAID             2EBA
SUBEAID2            2E36
SUBERRORTEST1       2C66
SUBERRORTEST11      2CA6
SUBJMPA2            2BD6
SUBPRINT            2BD8
SUBPRINTADD         2C28
SUBPRINTADDA        2B3A
SUBPRINTAND         2C18
SUBPRINTB           2C38
SUBPRINTCMP         2C54
SUBPRINTCMPA        2B2A
SUBPRINTEND         2C64
SUBPRINTEOR         2C44
SUBPRINTSUB         2C08
SUBPRINTSUBA        2B1A
SUBSIZE1            2976
SUBSIZE11           299C
SUBSIZE12           29B2
SUBSIZE2            29B6
SUBSIZE21           29DC
SUBSIZE22           29F2
SUBSIZE3            29F6
SUBSIZE31           2A1C
SUBSIZE32           2A32
SUBSIZE4            2A36
SUBSIZE41           2A5C
SUBSIZE42           2A72
SUBSIZE5            2A76
SUBSIZE51           2A9C
SUBSIZE52           2AB2
SUBSIZE6            2AB6
SUBSIZE61           2ADC
SUBSIZE62           2AF2
SUBSIZE7            2B62
SUBSIZE71           2B84
SUBSIZE72           2B9A
SUBSIZE8            2B9E
SUBSIZE81           2BBE
SUBSIZE82           2BD2
TAB                 325B
