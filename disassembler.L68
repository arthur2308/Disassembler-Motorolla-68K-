00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 12/1/2015 10:08:10 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * 
00000000                            33  * Display buffer thingy
00000000                            34  *
00000000                            35  * 
00000000                            36  * MOVE      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       1806
00000000                            37  * MOVEA     MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       3846
00000000                            38  * MULS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       CFC6
00000000                            39  * DIVS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       85C3
00000000                            40  * NEG       MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       4443
00000000                            41  * LSL       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E76A
00000000                            42  * LSR       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E66A
00000000                            43  ****************************************************************************
00000000                            44  
00000000                            45  
00000000                            46  * sets start and end address
00000000                            47  * temp hard code
00000000                            48  * make UI later for input
00000000  =00007000                 49  addr1       EQU     $7000
00000000                            50  *addr2   EQU     $703C
00000000  =0000726C                 51  addr2       EQU     $726C
00000000  =0000001E                 52  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            53  
00000000                            54  
00001000                            55      ORG    $1000
00001000                            56  START:                  ; first instruction of program
00001000                            57  
00001000                            58          
00001000                            59  
00001000                            60  
00001000                            61          *   this stores some test EA into memory
00001000                            62          *LEA     addr1,A1
00001000                            63          *MOVE.W  #$0440,(A1)+        *917C
00001000                            64          *MOVE.W  #$917C,(A1)+       
00001000                            65          *MOVE.L  #$5555A7FF,(A1)+
00001000                            66          *MOVE.W  #$9078,(A1)+
00001000                            67          *MOVE.W  #$5555,(A1)+
00001000                            68          
00001000                            69  
00001000                            70          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            71          
00001000                            72          *MOVE.L  #$6700F0D8,$7000
00001000                            73          *MOVE.W  #$4E71,$7000         NOP
00001000                            74  
00001000                            75          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            76          
00001000  31FC E3D3 7000            77          MOVE.W  #$E3D3,$7000
00001006                            78  
00001006                            79          
00001006                            80  ******************************************** displays address location***********************************************
00001006                            81  * This displays the address location of the op-code being worked on
00001006                            82  * A6 is used as current address
00001006                            83  
00001006  2C7C 00007000             84          MOVEA.L #addr1,A6           Moves starting addr into A6 register
0000100C  13FC 001E 00002822        85          MOVE.B  #dispnum,dispcount  Sets display line counter
00001014                            86  
00001014                            87  NEWADDR
00001014  2E0E                      88          MOVE.L  A6,D7               Loads the current address into D7
00001016  BEBC 0000726C             89          CMP.L   #addr2,D7           Compares current address to end address
0000101C  6E00 16E6                 90          BGT     DONE                Branches to done if current address > end address
00001020  45F9 000010B4             91          LEA     DISPADDREND,A2
00001026                            92  
00001026                            93  ************************************************
00001026                            94  * Displays address as HEX
00001026                            95  * INPUT: address stored into D7
00001026                            96  * OUTPUT: prints hex address to output window
00001026                            97  DISPADDRSTART
00001026  1C3C 0002                 98          MOVE.B  #2,D6               D6 is a counter, used for looping
0000102A  2407                      99          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
0000102C  4842                     100          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
0000102E  6000 0004                101          BRA     DISPADDR2           Skips the second part to do later
00001032                           102  
00001032                           103  DISPADDR1
00001032  3407                     104          MOVE.W  D7,D2
00001034                           105  DISPADDR2
00001034  3202                     106          MOVE.W  D2,D1               D1 will be the first byte of the word
00001036  3602                     107          MOVE.W  D2,D3               D3 will be the second byte of the word
00001038  3802                     108          MOVE.W  D2,D4               D4 will be the third byte of the word
0000103A  3A02                     109          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000103C                           110  
0000103C  E049                     111          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000103E  E849                     112          LSR.W   #4,D1
00001040  E94B                     113          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001042  E04B                     114          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001044  E84B                     115          LSR.W   #4,D3
00001046  E14C                     116          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001048  E04C                     117          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
0000104A  E84C                     118          LSR.W   #4,D4
0000104C  E14D                     119          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000104E  E94D                     120          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001050  E04D                     121          LSR.W   #8,D5
00001052  E84D                     122          LSR.W   #4,D5
00001054                           123          
00001054                           124          
00001054  47F9 00001068            125          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
0000105A  B23C 0009                126          CMP.B   #9,D1               Compares digit to 9
0000105E  6E00 1620                127          BGT     CONV                Print out letter representation if greater than 9
00001062                           128  
00001062  103C 0003                129          MOVE.B  #3,D0               Displays digit if it is less than A
00001066  4E4F                     130          TRAP    #15
00001068                           131          
00001068                           132  DISPADDR3   
00001068  1203                     133          MOVE.B  D3,D1               Displays digit in 1's place second
0000106A                           134  
0000106A                           135          *   converts digits 10+ into letters
0000106A  47F9 0000107E            136          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001070  B23C 0009                137          CMP.B   #9,D1               Compares digit to 9
00001074  6E00 160A                138          BGT     CONV                Print out letter representation if greater than 9
00001078                           139          
00001078  103C 0003                140          MOVE.B  #3,D0               Displays digit if it is less than A
0000107C  4E4F                     141          TRAP    #15
0000107E                           142  
0000107E                           143  DISPADDR4
0000107E  1204                     144          MOVE.B  D4,D1               Displays digit in 1's place second
00001080                           145  
00001080                           146          *   converts digits 10+ into letters
00001080  47F9 00001094            147          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001086  B23C 0009                148          CMP.B   #9,D1               Compares digit to 9
0000108A  6E00 15F4                149          BGT     CONV                Print out letter representation if greater than 9
0000108E                           150          
0000108E  103C 0003                151          MOVE.B  #3,D0               Displays digit if it is less than A
00001092  4E4F                     152          TRAP    #15
00001094                           153  
00001094                           154  DISPADDR5
00001094  1205                     155          MOVE.B  D5,D1               Displays digit in 1's place second
00001096                           156  
00001096                           157          *   converts digits 10+ into letters
00001096  47F9 000010AA            158          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000109C  B23C 0009                159          CMP.B   #9,D1               Compares digit to 9
000010A0  6E00 15DE                160          BGT     CONV                Print out letter representation if greater than 9
000010A4                           161          
000010A4  103C 0003                162          MOVE.B  #3,D0               Displays digit if it is less than A
000010A8  4E4F                     163          TRAP    #15
000010AA                           164          
000010AA                           165  DISPADDR6
000010AA                           166  * Display counter -- creates new line every 8 bytes
000010AA                           167          * D6 is used as counter
000010AA                           168          
000010AA  5306                     169          SUB.B   #1,D6
000010AC  BC3C 0000                170          CMP.B   #0,D6
000010B0  6680                     171          BNE     DISPADDR1
000010B2                           172  
000010B2  4ED2                     173          JMP     (A2)                Jumps to address stored in A2 when complete
000010B4                           174  
000010B4                           175  DISPADDREND
000010B4  43F9 0000271B            176          LEA     TAB,A1
000010BA  103C 000E                177          MOVE.B  #14,D0
000010BE  4E4F                     178          TRAP    #15
000010C0                           179          
000010C0                           180  *********************************************************************************************************************
000010C0                           181  * Splits the first byte of the op code into nibbles
000010C0                           182  * then sends it to the branch-table to jump to the appropiate section to be decoded
000010C0                           183  
000010C0  4281                     184          CLR.L   D1                  Clears the data registers
000010C2  4282                     185          CLR.L   D2
000010C4  4283                     186          CLR.L   D3
000010C6  4284                     187          CLR.L   D4
000010C8  4285                     188          CLR.L   D5
000010CA  4286                     189          CLR.L   D6
000010CC  3C16                     190          MOVE.W  (A6),D6
000010CE  141E                     191          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000010D0                           192    
000010D0  1E02                     193          MOVE.B  D2,D7
000010D2  E14F                     194          LSL.W   #8,D7
000010D4                           195          
000010D4  1602                     196          MOVE.B  D2,D3               Copies data at D2 to D3
000010D6                           197          *   this gets digit in 10's place
000010D6  E80B                     198          LSR.B   #4,D3               Shifts right to get rid of 1's place
000010D8                           199          *   this gets digit in 1's place
000010D8  E90A                     200          LSL.B   #4,D2               Shifts left to get rid of 10's place
000010DA  E80A                     201          LSR.B   #4,D2               Shifts back right into 1's place
000010DC                           202          
000010DC                           203          *   D3 holds digit in 10's place
000010DC                           204          *   D2 holds digit in 1's place
000010DC                           205  
000010DC                           206          *   Moves second nibble to D5 to be used later
000010DC  1A02                     207          MOVE.B  D2,D5
000010DE  13C3 00002823            208          MOVE.B  D3,bit0
000010E4                           209          *   Goes to a branch-table to figure out which op code it is
000010E4  6000 0002                210          BRA     CODE
000010E8                           211  
000010E8                           212  ******************************************************************************************************
000010E8                           213  *   This is where the table goes to detirmine which op-code to use
000010E8                           214  CODE    
000010E8  B63C 0000                215          CMP.B   #$0,D3              Goes to immediate operation section
000010EC  6700 0C4E                216          BEQ     IMD
000010F0  B63C 0004                217          CMP.B   #$4,D3              Goes to miscellaneous section
000010F4  6700 0D40                218          BEQ     MISC
000010F8  B63C 0006                219          CMP.B   #$6,D3
000010FC  6700 0B8A                220          BEQ     BCC
00001100  B63C 0009                221          CMP.B   #$9,D3              Goes to sub section
00001104  6700 0E52                222          BEQ     SUB
00001108  B63C 000C                223          CMP.B   #$C,D3              Goes to sub but displays as AND
0000110C  6700 0E4A                224          BEQ     SUB
00001110  B63C 000D                225          CMP.B   #$D,D3              Goes to sub but displays as ADD
00001114  6700 0E42                226          BEQ     SUB
00001118  B63C 0001                227          CMP.B   #$1,D3
0000111C  6700 01E6                228          BEQ     MOVB                Goes to movb
00001120  B63C 0003                229          CMP.B   #$3,D3
00001124  6700 001E                230          BEQ     MOVW                Goes to movb
00001128  B63C 0002                231          CMP.B   #$2,D3
0000112C  6700 00F6                232          BEQ     MOVL                Goes to movb
00001130  B63C 0008                233          CMP.B   #$8,D3
00001134  6700 079E                234          BEQ     DIVSW               Goes to divsw
00001138  B63C 000E                235          CMP.B   #$E,D3
0000113C  6700 097A                236          BEQ     LSLR                Goes to divsw
00001140                           237  
00001140  6000 1480                238          BRA     INVOPCODE
00001144                           239  
00001144                           240  MOVW
00001144  E20A                     241          LSR.B   #1,D2
00001146  13C2 00002824            242          MOVE.B  D2,bit1
0000114C                           243          
0000114C  1416                     244          MOVE.B  (A6),D2
0000114E  EB0A                     245          LSL.B   #5,D2
00001150  EA0A                     246          LSR.B   #5,D2
00001152  13C2 00002827            247          MOVE.B  D2,bit4
00001158                           248          
00001158  141E                     249          MOVE.B  (A6)+,D2
0000115A  E50A                     250          LSL.B   #2,D2
0000115C  EA0A                     251          LSR.B   #5,D2
0000115E  13C2 00002826            252          MOVE.B  D2,bit3
00001164                           253          
00001164  EF4E                     254          LSL.W   #7,D6
00001166  E04E                     255          LSR.W   #8,D6 
00001168  EA4E                     256          LSR.W   #5,D6 
0000116A  13C6 00002825            257          MOVE.B  D6,bit2
00001170                           258  
00001170  0C39 0001 00002825       259          CMP.B   #$1,bit2
00001178  6700 0056                260          BEQ     MOVEAW
0000117C                           261  
0000117C  43F9 0000276A            262          LEA MMOVEW,A1
00001182  103C 000E                263          MOVE.B  #14,D0
00001186  4E4F                     264          TRAP    #15 
00001188                           265  
00001188  0C39 0000 00002826       266          CMP.B   #$0,bit3           
00001190  6700 04F0                267          BEQ     MOVBDN1
00001194  0C39 0001 00002826       268          CMP.B   #$1,bit3
0000119C  6700 029C                269          BEQ     MOVEAN1
000011A0  0C39 0002 00002826       270          CMP.B   #$2,bit3
000011A8  6700 0304                271          BEQ     MOVEIAN1
000011AC  0C39 0003 00002826       272          CMP.B   #$3,bit3
000011B4  6700 038C                273          BEQ     MOVEIANI1
000011B8  0C39 0004 00002826       274          CMP.B   #$4,bit3
000011C0  6700 0420                275          BEQ     MOVEIAND1
000011C4  0C39 0007 00002826       276          CMP.B   #$7,bit3
000011CC  6700 01BA                277          BEQ     ADDIMD
000011D0                           278  
000011D0                           279  MOVEAW
000011D0  43F9 00002778            280          LEA MMOVEAW,A1
000011D6  103C 000E                281          MOVE.B  #14,D0
000011DA  4E4F                     282          TRAP    #15 
000011DC                           283          
000011DC  0C39 0000 00002826       284          CMP.B   #$0,bit3           
000011E4  6700 049C                285          BEQ     MOVBDN1
000011E8  0C39 0001 00002826       286          CMP.B   #$1,bit3
000011F0  6700 0248                287          BEQ     MOVEAN1
000011F4  0C39 0002 00002826       288          CMP.B   #$2,bit3
000011FC  6700 02B0                289          BEQ     MOVEIAN1
00001200  0C39 0003 00002826       290          CMP.B   #$3,bit3
00001208  6700 0338                291          BEQ     MOVEIANI1
0000120C  0C39 0004 00002826       292          CMP.B   #$4,bit3
00001214  6700 03CC                293          BEQ     MOVEIAND1
00001218  0C39 0007 00002826       294          CMP.B   #$7,bit3
00001220  6700 0166                295          BEQ     ADDIMD
00001224                           296  
00001224                           297  MOVL
00001224  E20A                     298          LSR.B   #1,D2
00001226  13C2 00002824            299          MOVE.B  D2,bit1
0000122C                           300          
0000122C  1416                     301          MOVE.B  (A6),D2
0000122E  EB0A                     302          LSL.B   #5,D2
00001230  EA0A                     303          LSR.B   #5,D2
00001232  13C2 00002827            304          MOVE.B  D2,bit4
00001238                           305          
00001238  141E                     306          MOVE.B  (A6)+,D2
0000123A  E50A                     307          LSL.B   #2,D2
0000123C  EA0A                     308          LSR.B   #5,D2
0000123E  13C2 00002826            309          MOVE.B  D2,bit3
00001244                           310          
00001244  EF4E                     311          LSL.W   #7,D6
00001246  E04E                     312          LSR.W   #8,D6 
00001248  EA4E                     313          LSR.W   #5,D6 
0000124A  13C6 00002825            314          MOVE.B  D6,bit2
00001250                           315          
00001250  0C39 0001 00002825       316          CMP.B   #$1,bit2
00001258  6700 0056                317          BEQ     MOVEAL
0000125C                           318  
0000125C  43F9 00002771            319          LEA MMOVEL,A1
00001262  103C 000E                320          MOVE.B  #14,D0
00001266  4E4F                     321          TRAP    #15 
00001268                           322          
00001268  0C39 0000 00002826       323          CMP.B   #$0,bit3           
00001270  6700 0410                324          BEQ     MOVBDN1
00001274  0C39 0001 00002826       325          CMP.B   #$1,bit3
0000127C  6700 01BC                326          BEQ     MOVEAN1
00001280  0C39 0002 00002826       327          CMP.B   #$2,bit3
00001288  6700 0224                328          BEQ     MOVEIAN1
0000128C  0C39 0003 00002826       329          CMP.B   #$3,bit3
00001294  6700 02AC                330          BEQ     MOVEIANI1
00001298  0C39 0004 00002826       331          CMP.B   #$4,bit3
000012A0  6700 0340                332          BEQ     MOVEIAND1
000012A4  0C39 0007 00002826       333          CMP.B   #$7,bit3
000012AC  6700 00DA                334          BEQ     ADDIMD
000012B0                           335  
000012B0                           336  MOVEAL
000012B0  43F9 00002780            337          LEA MMOVEAL,A1
000012B6  103C 000E                338          MOVE.B  #14,D0
000012BA  4E4F                     339          TRAP    #15 
000012BC                           340          
000012BC  0C39 0000 00002826       341          CMP.B   #$0,bit3           
000012C4  6700 03BC                342          BEQ     MOVBDN1
000012C8  0C39 0001 00002826       343          CMP.B   #$1,bit3
000012D0  6700 0168                344          BEQ     MOVEAN1
000012D4  0C39 0002 00002826       345          CMP.B   #$2,bit3
000012DC  6700 01D0                346          BEQ     MOVEIAN1
000012E0  0C39 0003 00002826       347          CMP.B   #$3,bit3
000012E8  6700 0258                348          BEQ     MOVEIANI1
000012EC  0C39 0004 00002826       349          CMP.B   #$4,bit3
000012F4  6700 02EC                350          BEQ     MOVEIAND1
000012F8  0C39 0007 00002826       351          CMP.B   #$7,bit3
00001300  6700 0086                352          BEQ     ADDIMD        
00001304                           353  
00001304                           354  MOVB
00001304  43F9 00002763            355          LEA MMOVEB,A1
0000130A  103C 000E                356          MOVE.B  #14,D0
0000130E  4E4F                     357          TRAP    #15 
00001310                           358          
00001310  E20A                     359          LSR.B   #1,D2
00001312  13C2 00002824            360          MOVE.B  D2,bit1
00001318                           361          
00001318  1416                     362          MOVE.B  (A6),D2
0000131A  EB0A                     363          LSL.B   #5,D2
0000131C  EA0A                     364          LSR.B   #5,D2
0000131E  13C2 00002827            365          MOVE.B  D2,bit4
00001324                           366          
00001324  141E                     367          MOVE.B  (A6)+,D2
00001326  E50A                     368          LSL.B   #2,D2
00001328  EA0A                     369          LSR.B   #5,D2
0000132A  13C2 00002826            370          MOVE.B  D2,bit3
00001330                           371          
00001330  EF4E                     372          LSL.W   #7,D6
00001332  E04E                     373          LSR.W   #8,D6 
00001334  EA4E                     374          LSR.W   #5,D6 
00001336  13C6 00002825            375          MOVE.B  D6,bit2
0000133C                           376          
0000133C                           377          *MOVE.B  #$1,D4
0000133C                           378          
0000133C  0C39 0000 00002826       379          CMP.B   #$0,bit3           
00001344  6700 033C                380          BEQ     MOVBDN1
00001348  0C39 0001 00002826       381          CMP.B   #$1,bit3
00001350  6700 00E8                382          BEQ     MOVEAN1
00001354  0C39 0002 00002826       383          CMP.B   #$2,bit3
0000135C  6700 0150                384          BEQ     MOVEIAN1
00001360  0C39 0003 00002826       385          CMP.B   #$3,bit3
00001368  6700 01D8                386          BEQ     MOVEIANI1
0000136C  0C39 0004 00002826       387          CMP.B   #$4,bit3
00001374  6700 026C                388          BEQ     MOVEIAND1
00001378  0C39 0007 00002826       389          CMP.B   #$7,bit3
00001380  6700 0006                390          BEQ     ADDIMD
00001384                           391          
00001384  6000 123E                392          BRA     INVOP
00001388                           393  
00001388                           394  ADDIMD
00001388  43F9 0000271B            395      LEA     TAB,A1
0000138E  103C 000E                396      MOVE.B  #14,D0
00001392  4E4F                     397      TRAP    #15
00001394                           398      
00001394  0C39 0000 00002827       399      CMP.B   #$0,bit4
0000139C  6700 001A                400      BEQ     ADDIMD0
000013A0  0C39 0001 00002827       401      CMP.B   #$1,bit4
000013A8  6700 001C                402      BEQ     ADDIMD1
000013AC  0C39 0004 00002827       403      CMP.B   #$4,bit4
000013B4  6700 001E                404      BEQ     ADDIMD4
000013B8                           405  
000013B8                           406  ADDIMD0
000013B8  183C 0001                407      MOVE.B  #$1,D4
000013BC  45F9 000013EA            408      LEA     HANDLEDES,A2
000013C2  6000 1198                409      BRA     DISPEA
000013C6                           410  ADDIMD1 
000013C6  183C 0002                411      MOVE.B  #$2,D4
000013CA  45F9 000013EA            412      LEA     HANDLEDES,A2
000013D0  6000 118A                413      BRA     DISPEA
000013D4                           414  ADDIMD4
000013D4  43F9 00002729            415      LEA     HASH,A1
000013DA  103C 000E                416      MOVE.B  #14,D0
000013DE  4E4F                     417      TRAP    #15
000013E0                           418      
000013E0  45F9 000013EA            419      LEA     HANDLEDES,A2
000013E6  6000 1174                420      BRA     DISPEA 
000013EA                           421      
000013EA                           422  HANDLEDES
000013EA  43F9 0000271F            423      LEA     COMMA,A1
000013F0  103C 000E                424      MOVE.B  #14,D0
000013F4  4E4F                     425      TRAP    #15
000013F6                           426      
000013F6  0C39 0000 00002825       427      CMP.B   #$0,bit2
000013FE  6700 0422                428      BEQ     MOVBDN2
00001402  0C39 0001 00002825       429      CMP.B   #$1,bit2
0000140A  6700 0346                430      BEQ     MOVEAN2
0000140E  0C39 0002 00002825       431      CMP.B   #$2,bit2 
00001416  6700 0356                432      BEQ     MOVIAN2
0000141A  0C39 0003 00002825       433      CMP.B   #$3,bit2 
00001422  6700 037E                434      BEQ     MOVIANI2
00001426  0C39 0004 00002825       435      CMP.B   #$4,bit2 
0000142E  6700 03B2                436      BEQ     MOVIAND2
00001432  BA3C 0005                437      CMP.B   #$5,D5
00001436  6700 03EA                438      BEQ     MOVBDN2
0000143A                           439  MOVEAN1
0000143A  43F9 0000271B            440      LEA TAB,A1
00001440  103C 000E                441      MOVE.B  #14,D0
00001444  4E4F                     442      TRAP    #15
00001446                           443  
00001446  43F9 0000272B            444      LEA DISPA,A1
0000144C  103C 000E                445      MOVE.B  #14,D0
00001450  4E4F                     446      TRAP    #15
00001452                           447      
00001452  1239 00002827            448      MOVE.B  bit4,D1
00001458  103C 0003                449      MOVE.B  #3,D0
0000145C  4E4F                     450      TRAP    #15
0000145E                           451      
0000145E  43F9 0000271F            452      LEA COMMA,A1
00001464  103C 000E                453      MOVE.B  #14,D0
00001468  4E4F                     454      TRAP    #15
0000146A                           455      
0000146A  0C39 0000 00002825       456      CMP.B   #$0,bit2
00001472  6700 03AE                457      BEQ     MOVBDN2
00001476  0C39 0001 00002825       458      CMP.B   #$1,bit2
0000147E  6700 02D2                459      BEQ     MOVEAN2
00001482  0C39 0002 00002825       460      CMP.B   #$2,bit2 
0000148A  6700 02E2                461      BEQ     MOVIAN2
0000148E  0C39 0003 00002825       462      CMP.B   #$3,bit2 
00001496  6700 030A                463      BEQ     MOVIANI2
0000149A  0C39 0004 00002825       464      CMP.B   #$4,bit2 
000014A2  6700 033E                465      BEQ     MOVIAND2
000014A6  BA3C 0005                466      CMP.B   #$5,D5
000014AA  6700 0376                467      BEQ     MOVBDN2
000014AE                           468      
000014AE                           469  MOVEIAN1
000014AE  43F9 0000271B            470      LEA TAB,A1
000014B4  103C 000E                471      MOVE.B  #14,D0
000014B8  4E4F                     472      TRAP    #15
000014BA                           473      
000014BA  43F9 00002721            474      LEA OPENBRA,A1
000014C0  103C 000E                475      MOVE.B  #14,D0
000014C4  4E4F                     476      TRAP    #15
000014C6                           477  
000014C6  43F9 0000272B            478      LEA DISPA,A1
000014CC  103C 000E                479      MOVE.B  #14,D0
000014D0  4E4F                     480      TRAP    #15
000014D2                           481      
000014D2  1239 00002827            482      MOVE.B  bit4,D1
000014D8  103C 0003                483      MOVE.B  #3,D0
000014DC  4E4F                     484      TRAP    #15
000014DE                           485      
000014DE  43F9 00002723            486      LEA CLOSEBRA,A1
000014E4  103C 000E                487      MOVE.B  #14,D0
000014E8  4E4F                     488      TRAP    #15
000014EA                           489      
000014EA  B83C 0003                490      CMP.B   #$3,D4
000014EE  6700 1146                491      BEQ     ENDNEWLINE
000014F2                           492      
000014F2  43F9 0000271F            493      LEA COMMA,A1
000014F8  103C 000E                494      MOVE.B  #14,D0
000014FC  4E4F                     495      TRAP    #15
000014FE                           496      
000014FE  0C39 0000 00002825       497      CMP.B   #$0,bit2
00001506  6700 031A                498      BEQ     MOVBDN2
0000150A  0C39 0001 00002825       499      CMP.B   #$1,bit2
00001512  6700 023E                500      BEQ     MOVEAN2
00001516  0C39 0002 00002825       501      CMP.B   #$2,bit2 
0000151E  6700 024E                502      BEQ     MOVIAN2
00001522  0C39 0003 00002825       503      CMP.B   #$3,bit2 
0000152A  6700 0276                504      BEQ     MOVIANI2
0000152E  0C39 0004 00002825       505      CMP.B   #$4,bit2 
00001536  6700 02AA                506      BEQ     MOVIAND2
0000153A  BA3C 0005                507      CMP.B   #$5,D5
0000153E  6700 02E2                508      BEQ     MOVBDN2
00001542                           509  
00001542                           510  MOVEIANI1
00001542  43F9 0000271B            511      LEA TAB,A1
00001548  103C 000E                512      MOVE.B  #14,D0
0000154C  4E4F                     513      TRAP    #15
0000154E                           514      
0000154E  43F9 00002721            515      LEA OPENBRA,A1
00001554  103C 000E                516      MOVE.B  #14,D0
00001558  4E4F                     517      TRAP    #15
0000155A                           518  
0000155A  43F9 0000272B            519      LEA DISPA,A1
00001560  103C 000E                520      MOVE.B  #14,D0
00001564  4E4F                     521      TRAP    #15
00001566                           522      
00001566  1239 00002827            523      MOVE.B  bit4,D1
0000156C  103C 0003                524      MOVE.B  #3,D0
00001570  4E4F                     525      TRAP    #15
00001572                           526      
00001572  43F9 00002723            527      LEA CLOSEBRA,A1
00001578  103C 000E                528      MOVE.B  #14,D0
0000157C  4E4F                     529      TRAP    #15
0000157E                           530      
0000157E  43F9 00002725            531      LEA POS,A1
00001584  103C 000E                532      MOVE.B  #14,D0
00001588  4E4F                     533      TRAP    #15
0000158A                           534      
0000158A  BA3C 0003                535      CMP.B   #$3,D5
0000158E  6700 10A6                536      BEQ     ENDNEWLINE
00001592                           537          
00001592  43F9 0000271F            538      LEA COMMA,A1
00001598  103C 000E                539      MOVE.B  #14,D0
0000159C  4E4F                     540      TRAP    #15
0000159E                           541      
0000159E  0C39 0000 00002825       542      CMP.B   #$0,bit2
000015A6  6700 027A                543      BEQ     MOVBDN2
000015AA  0C39 0001 00002825       544      CMP.B   #$1,bit2
000015B2  6700 019E                545      BEQ     MOVEAN2
000015B6  0C39 0002 00002825       546      CMP.B   #$2,bit2 
000015BE  6700 01AE                547      BEQ     MOVIAN2
000015C2  0C39 0003 00002825       548      CMP.B   #$3,bit2 
000015CA  6700 01D6                549      BEQ     MOVIANI2
000015CE  0C39 0004 00002825       550      CMP.B   #$4,bit2 
000015D6  6700 020A                551      BEQ     MOVIAND2
000015DA  BA3C 0005                552      CMP.B   #$5,D5
000015DE  6700 0242                553      BEQ     MOVBDN2
000015E2                           554  
000015E2                           555  MOVEIAND1
000015E2  43F9 0000271B            556      LEA TAB,A1
000015E8  103C 000E                557      MOVE.B  #14,D0
000015EC  4E4F                     558      TRAP    #15
000015EE                           559      
000015EE  43F9 00002727            560      LEA NEG,A1
000015F4  103C 000E                561      MOVE.B  #14,D0
000015F8  4E4F                     562      TRAP    #15
000015FA                           563      
000015FA  43F9 00002721            564      LEA OPENBRA,A1
00001600  103C 000E                565      MOVE.B  #14,D0
00001604  4E4F                     566      TRAP    #15
00001606                           567  
00001606  43F9 0000272B            568      LEA DISPA,A1
0000160C  103C 000E                569      MOVE.B  #14,D0
00001610  4E4F                     570      TRAP    #15
00001612                           571      
00001612  1239 00002827            572      MOVE.B  bit4,D1
00001618  103C 0003                573      MOVE.B  #3,D0
0000161C  4E4F                     574      TRAP    #15
0000161E                           575      
0000161E  43F9 00002723            576      LEA CLOSEBRA,A1
00001624  103C 000E                577      MOVE.B  #14,D0
00001628  4E4F                     578      TRAP    #15
0000162A                           579      
0000162A  BA3C 0004                580      CMP.B   #$4,D5
0000162E  6700 1006                581      BEQ     ENDNEWLINE
00001632                           582      
00001632  43F9 0000271F            583      LEA COMMA,A1
00001638  103C 000E                584      MOVE.B  #14,D0
0000163C  4E4F                     585      TRAP    #15
0000163E                           586      
0000163E  0C39 0000 00002825       587      CMP.B   #$0,bit2
00001646  6700 01DA                588      BEQ     MOVBDN2
0000164A  0C39 0001 00002825       589      CMP.B   #$1,bit2
00001652  6700 00FE                590      BEQ     MOVEAN2
00001656  0C39 0002 00002825       591      CMP.B   #$2,bit2 
0000165E  6700 010E                592      BEQ     MOVIAN2
00001662  0C39 0003 00002825       593      CMP.B   #$3,bit2 
0000166A  6700 0136                594      BEQ     MOVIANI2
0000166E  0C39 0004 00002825       595      CMP.B   #$4,bit2 
00001676  6700 016A                596      BEQ     MOVIAND2
0000167A  BA3C 0005                597      CMP.B   #$5,D5
0000167E  6700 01A2                598      BEQ     MOVBDN2
00001682                           599  
00001682                           600  MOVBDN1
00001682  43F9 0000271B            601      LEA TAB,A1
00001688  103C 000E                602      MOVE.B  #14,D0
0000168C  4E4F                     603      TRAP    #15
0000168E                           604  
0000168E  BA3C 0006                605      CMP.B   #$6,D5             * Data Reg for LSLR
00001692  6700 007A                606      BEQ     LSLRSRCD
00001696                           607  
00001696  43F9 00002731            608      LEA DISPD,A1
0000169C  103C 000E                609      MOVE.B  #14,D0
000016A0  4E4F                     610      TRAP    #15
000016A2                           611      
000016A2  1239 00002827            612      MOVE.B  bit4,D1
000016A8  103C 0003                613      MOVE.B  #3,D0
000016AC  4E4F                     614      TRAP    #15
000016AE                           615  
000016AE  BA3C 0004                616      CMP.B   #$4,D5
000016B2  6700 0192                617      BEQ     ENDNLINC
000016B6                           618  
000016B6  43F9 0000271F            619      LEA COMMA,A1
000016BC  103C 000E                620      MOVE.B  #14,D0
000016C0  4E4F                     621      TRAP    #15
000016C2                           622  
000016C2  BA3C 0006                623      CMP.B   #$6,D5             * Data Reg for LSLR
000016C6  6700 006E                624      BEQ     LSLRDESD
000016CA  0C39 0000 00002825       625      CMP.B   #$0,bit2
000016D2  6700 014E                626      BEQ     MOVBDN2
000016D6  0C39 0001 00002825       627      CMP.B   #$1,bit2
000016DE  6700 0072                628      BEQ     MOVEAN2
000016E2  0C39 0002 00002825       629      CMP.B   #$2,bit2 
000016EA  6700 0082                630      BEQ     MOVIAN2
000016EE  0C39 0003 00002825       631      CMP.B   #$3,bit2 
000016F6  6700 00AA                632      BEQ     MOVIANI2
000016FA  0C39 0004 00002825       633      CMP.B   #$4,bit2 
00001702  6700 00DE                634      BEQ     MOVIAND2
00001706  BA3C 0005                635      CMP.B   #$5,D5
0000170A  6700 0116                636      BEQ     MOVBDN2
0000170E                           637      
0000170E                           638  LSLRSRCD
0000170E  43F9 00002731            639      LEA DISPD,A1
00001714  103C 000E                640      MOVE.B  #14,D0
00001718  4E4F                     641      TRAP    #15
0000171A                           642          
0000171A  1239 00002823            643      MOVE.B  bit0,D1
00001720  103C 0003                644      MOVE.B  #3,D0
00001724  4E4F                     645      TRAP    #15    
00001726                           646  
00001726  43F9 0000271F            647      LEA COMMA,A1
0000172C  103C 000E                648      MOVE.B  #14,D0
00001730  4E4F                     649      TRAP    #15  
00001732                           650      
00001732  6000 0002                651      BRA     LSLRDESD
00001736                           652      
00001736                           653  LSLRDESD
00001736  43F9 00002731            654      LEA DISPD,A1
0000173C  103C 000E                655      MOVE.B  #14,D0
00001740  4E4F                     656      TRAP    #15
00001742                           657          
00001742  1239 00002827            658      MOVE.B  bit4,D1
00001748  103C 0003                659      MOVE.B  #3,D0
0000174C  4E4F                     660      TRAP    #15      
0000174E                           661      
0000174E                           662      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000174E  6000 0EE6                663      BRA     ENDNEWLINE       
00001752                           664  
00001752                           665  MOVEAN2
00001752  43F9 0000272B            666      LEA DISPA,A1
00001758  103C 000E                667      MOVE.B  #14,D0
0000175C  4E4F                     668      TRAP    #15
0000175E                           669      
0000175E  1239 00002824            670      MOVE.B  bit1,D1
00001764  103C 0003                671      MOVE.B  #3,D0
00001768  4E4F                     672      TRAP    #15
0000176A                           673  
0000176A                           674      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000176A  6000 0ECA                675      BRA     ENDNEWLINE    
0000176E                           676  
0000176E                           677  MOVIAN2
0000176E  43F9 00002721            678      LEA OPENBRA,A1
00001774  103C 000E                679      MOVE.B  #14,D0
00001778  4E4F                     680      TRAP    #15
0000177A                           681  
0000177A  43F9 0000272B            682      LEA DISPA,A1
00001780  103C 000E                683      MOVE.B  #14,D0
00001784  4E4F                     684      TRAP    #15
00001786                           685      
00001786  1239 00002824            686      MOVE.B  bit1,D1
0000178C  103C 0003                687      MOVE.B  #3,D0
00001790  4E4F                     688      TRAP    #15
00001792                           689      
00001792  43F9 00002723            690      LEA CLOSEBRA,A1
00001798  103C 000E                691      MOVE.B  #14,D0
0000179C  4E4F                     692      TRAP    #15
0000179E                           693      
0000179E                           694      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000179E  6000 0E96                695      BRA     ENDNEWLINE
000017A2                           696  
000017A2                           697  MOVIANI2
000017A2  43F9 00002721            698      LEA OPENBRA,A1
000017A8  103C 000E                699      MOVE.B  #14,D0
000017AC  4E4F                     700      TRAP    #15
000017AE                           701  
000017AE  43F9 0000272B            702      LEA DISPA,A1
000017B4  103C 000E                703      MOVE.B  #14,D0
000017B8  4E4F                     704      TRAP    #15
000017BA                           705      
000017BA  1239 00002824            706      MOVE.B  bit1,D1
000017C0  103C 0003                707      MOVE.B  #3,D0
000017C4  4E4F                     708      TRAP    #15
000017C6                           709      
000017C6  43F9 00002723            710      LEA CLOSEBRA,A1
000017CC  103C 000E                711      MOVE.B  #14,D0
000017D0  4E4F                     712      TRAP    #15
000017D2                           713      
000017D2  43F9 00002725            714      LEA POS,A1
000017D8  103C 000E                715      MOVE.B  #14,D0
000017DC  4E4F                     716      TRAP    #15
000017DE                           717      
000017DE                           718      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000017DE  6000 0E56                719      BRA     ENDNEWLINE
000017E2                           720  
000017E2                           721  MOVIAND2
000017E2  43F9 00002727            722      LEA NEG,A1
000017E8  103C 000E                723      MOVE.B  #14,D0
000017EC  4E4F                     724      TRAP    #15
000017EE                           725      
000017EE  43F9 00002721            726      LEA OPENBRA,A1
000017F4  103C 000E                727      MOVE.B  #14,D0
000017F8  4E4F                     728      TRAP    #15
000017FA                           729  
000017FA  43F9 0000272B            730      LEA DISPA,A1
00001800  103C 000E                731      MOVE.B  #14,D0
00001804  4E4F                     732      TRAP    #15
00001806                           733      
00001806  1239 00002824            734      MOVE.B  bit1,D1
0000180C  103C 0003                735      MOVE.B  #3,D0
00001810  4E4F                     736      TRAP    #15
00001812                           737      
00001812  43F9 00002723            738      LEA CLOSEBRA,A1
00001818  103C 000E                739      MOVE.B  #14,D0
0000181C  4E4F                     740      TRAP    #15
0000181E                           741  
0000181E                           742      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000181E  6000 0E16                743      BRA     ENDNEWLINE
00001822                           744  
00001822                           745  MOVBDN2
00001822  43F9 00002731            746      LEA DISPD,A1
00001828  103C 000E                747      MOVE.B  #14,D0
0000182C  4E4F                     748      TRAP    #15
0000182E                           749          
0000182E  1239 00002824            750      MOVE.B  bit1,D1
00001834  103C 0003                751      MOVE.B  #3,D0
00001838  4E4F                     752      TRAP    #15   
0000183A                           753      
0000183A  B83C 0000                754      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
0000183E  6700 0DF6                755      BEQ     ENDNEWLINE
00001842                           756      
00001842                           757      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001842  6000 0DF2                758      BRA     ENDNEWLINE
00001846                           759      
00001846                           760      
00001846                           761  ENDNLINC
00001846                           762      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001846  6000 0DEE                763      BRA     ENDNEWLINE    
0000184A                           764      
0000184A                           765  MULSW
0000184A  1407                     766          MOVE.B  D7,D2
0000184C  EB0A                     767          LSL.B   #5,D2
0000184E  EA0A                     768          LSR.B   #5,D2
00001850  13C2 00002827            769          MOVE.B  D2,bit4
00001856                           770          
00001856  1407                     771          MOVE.B  D7,D2
00001858  E50A                     772          LSL.B   #2,D2
0000185A  EA0A                     773          LSR.B   #5,D2
0000185C  13C2 00002826            774          MOVE.B  D2,bit3
00001862                           775          
00001862  3C07                     776          MOVE.W  D7,D6
00001864  EF4E                     777          LSL.W   #7,D6
00001866  E04E                     778          LSR.W   #8,D6 
00001868  EA4E                     779          LSR.W   #5,D6 
0000186A  13C6 00002825            780          MOVE.B  D6,bit2
00001870                           781          
00001870  E94F                     782          LSL.W   #4,D7
00001872  E04F                     783          LSR.W   #8,D7 
00001874  EA4F                     784          LSR.W   #5,D7 
00001876  13C7 00002824            785          MOVE.B  D7,bit1
0000187C                           786          
0000187C  43F9 0000275C            787          LEA MMULSW,A1
00001882  323C 000E                788          MOVE    #14,D1
00001886  4E4F                     789          TRAP    #15
00001888                           790          
00001888  1A3C 0005                791          MOVE.B  #$5,D5 
0000188C                           792          
0000188C  0C39 0000 00002826       793          CMP.B   #$0,bit3           
00001894  6700 FDEC                794          BEQ     MOVBDN1
00001898  0C39 0001 00002826       795          CMP.B   #$1,bit3
000018A0  6700 FB98                796          BEQ     MOVEAN1
000018A4  0C39 0002 00002826       797          CMP.B   #$2,bit3
000018AC  6700 FC00                798          BEQ     MOVEIAN1
000018B0  0C39 0003 00002826       799          CMP.B   #$3,bit3
000018B8  6700 FC88                800          BEQ     MOVEIANI1
000018BC  0C39 0004 00002826       801          CMP.B   #$4,bit3
000018C4  6700 FD1C                802          BEQ     MOVEIAND1
000018C8  0C39 0007 00002826       803          CMP.B   #$7,bit3
000018D0  6700 FAB6                804          BEQ     ADDIMD
000018D4                           805  
000018D4                           806           
000018D4                           807  DIVSW               
000018D4                           808          *MOVE.B  D6,D2
000018D4  141E                     809          MOVE.B  (A6)+,D2
000018D6  EB0A                     810          LSL.B   #5,D2
000018D8  EA0A                     811          LSR.B   #5,D2
000018DA  13C2 00002827            812          MOVE.B  D2,bit4
000018E0                           813          
000018E0  1406                     814          MOVE.B  D6,D2
000018E2  E50A                     815          LSL.B   #2,D2
000018E4  EA0A                     816          LSR.B   #5,D2
000018E6  13C2 00002826            817          MOVE.B  D2,bit3
000018EC                           818          
000018EC  3E06                     819          MOVE.W  D6,D7
000018EE  EF4F                     820          LSL.W   #7,D7
000018F0  E04F                     821          LSR.W   #8,D7 
000018F2  EA4F                     822          LSR.W   #5,D7 
000018F4  13C7 00002825            823          MOVE.B  D7,bit2
000018FA                           824          
000018FA  E94E                     825          LSL.W   #4,D6
000018FC  E04E                     826          LSR.W   #8,D6 
000018FE  EA4E                     827          LSR.W   #5,D6 
00001900  13C6 00002824            828          MOVE.B  D6,bit1
00001906                           829          
00001906  43F9 00002755            830          LEA MMDIVSW,A1
0000190C  323C 000E                831          MOVE    #14,D1
00001910  4E4F                     832          TRAP    #15
00001912                           833          
00001912  1A3C 0005                834          MOVE.B  #$5,D5 
00001916  183C 0004                835          MOVE.B  #$4,D4
0000191A                           836          
0000191A  0C39 0000 00002826       837          CMP.B   #$0,bit3           
00001922  6700 FD5E                838          BEQ     MOVBDN1
00001926  0C39 0001 00002826       839          CMP.B   #$1,bit3
0000192E  6700 FB0A                840          BEQ     MOVEAN1
00001932  0C39 0002 00002826       841          CMP.B   #$2,bit3
0000193A  6700 FB72                842          BEQ     MOVEIAN1
0000193E  0C39 0003 00002826       843          CMP.B   #$3,bit3
00001946  6700 FBFA                844          BEQ     MOVEIANI1
0000194A  0C39 0004 00002826       845          CMP.B   #$4,bit3
00001952  6700 FC8E                846          BEQ     MOVEIAND1
00001956  0C39 0007 00002826       847          CMP.B   #$7,bit3
0000195E  6700 FA28                848          BEQ     ADDIMD
00001962                           849  
00001962                           850  NEGW
00001962  1406                     851          MOVE.B  D6,D2
00001964  EB0A                     852          LSL.B   #5,D2
00001966  EA0A                     853          LSR.B   #5,D2
00001968  13C2 00002827            854          MOVE.B  D2,bit4
0000196E                           855          
0000196E  1406                     856          MOVE.B  D6,D2
00001970  E50A                     857          LSL.B   #2,D2
00001972  EA0A                     858          LSR.B   #5,D2
00001974  13C2 00002826            859          MOVE.B  D2,bit3
0000197A                           860          
0000197A  3E06                     861          MOVE.W  D6,D7
0000197C  E14F                     862          LSL.W   #8,D7
0000197E  E04F                     863          LSR.W   #8,D7 
00001980  EC4F                     864          LSR.W   #6,D7 
00001982  13C7 00002825            865          MOVE.B  D7,bit2
00001988                           866          
00001988  43F9 00002750            867          LEA MMNEGW,A1
0000198E  323C 000E                868          MOVE    #14,D1
00001992  4E4F                     869          TRAP    #15
00001994                           870          
00001994  183C 0003                871          MOVE.B  #$3,D4
00001998                           872          
00001998  0C39 0000 00002825       873          CMP.B   #$0,bit2
000019A0  6700 001A                874          BEQ     PRINTBYTE
000019A4  0C39 0001 00002825       875          CMP.B   #$1,bit2
000019AC  6700 0062                876          BEQ     PRINTWORD
000019B0  0C39 0002 00002825       877          CMP.B   #$2,bit2
000019B8  6700 00AA                878          BEQ     PRINTLONG
000019BC                           879          
000019BC                           880  PRINTBYTE
000019BC  43F9 0000273B            881      LEA MBYTE,A1
000019C2  323C 000E                882      MOVE    #14,D1
000019C6  4E4F                     883      TRAP    #15
000019C8                           884  
000019C8  0C39 0000 00002826       885      CMP.B   #$0,bit3           
000019D0  6700 FCB0                886          BEQ     MOVBDN1
000019D4  0C39 0001 00002826       887          CMP.B   #$1,bit3
000019DC  6700 FA5C                888          BEQ     MOVEAN1
000019E0  0C39 0002 00002826       889          CMP.B   #$2,bit3
000019E8  6700 FAC4                890          BEQ     MOVEIAN1
000019EC  0C39 0003 00002826       891          CMP.B   #$3,bit3
000019F4  6700 FB4C                892          BEQ     MOVEIANI1
000019F8  0C39 0004 00002826       893          CMP.B   #$4,bit3
00001A00  6700 FBE0                894          BEQ     MOVEIAND1
00001A04  0C39 0007 00002826       895          CMP.B   #$7,bit3
00001A0C  6700 F97A                896          BEQ     ADDIMD
00001A10                           897      
00001A10                           898  PRINTWORD
00001A10  43F9 0000273E            899      LEA MWORD,A1
00001A16  323C 000E                900      MOVE    #14,D1
00001A1A  4E4F                     901      TRAP    #15
00001A1C                           902  
00001A1C  0C39 0000 00002826       903      CMP.B   #$0,bit3           
00001A24  6700 FC5C                904          BEQ     MOVBDN1
00001A28  0C39 0001 00002826       905          CMP.B   #$1,bit3
00001A30  6700 FA08                906          BEQ     MOVEAN1
00001A34  0C39 0002 00002826       907          CMP.B   #$2,bit3
00001A3C  6700 FA70                908          BEQ     MOVEIAN1
00001A40  0C39 0003 00002826       909          CMP.B   #$3,bit3
00001A48  6700 FAF8                910          BEQ     MOVEIANI1
00001A4C  0C39 0004 00002826       911          CMP.B   #$4,bit3
00001A54  6700 FB8C                912          BEQ     MOVEIAND1
00001A58  0C39 0007 00002826       913          CMP.B   #$7,bit3
00001A60  6700 F926                914          BEQ     ADDIMD
00001A64                           915      
00001A64                           916  PRINTLONG
00001A64  43F9 00002741            917      LEA MLONG,A1
00001A6A  323C 000E                918      MOVE    #14,D1
00001A6E  4E4F                     919      TRAP    #15
00001A70                           920   
00001A70  0C39 0000 00002826       921      CMP.B   #$0,bit3           
00001A78  6700 FC08                922          BEQ     MOVBDN1
00001A7C  0C39 0001 00002826       923          CMP.B   #$1,bit3
00001A84  6700 F9B4                924          BEQ     MOVEAN1
00001A88  0C39 0002 00002826       925          CMP.B   #$2,bit3
00001A90  6700 FA1C                926          BEQ     MOVEIAN1
00001A94  0C39 0003 00002826       927          CMP.B   #$3,bit3
00001A9C  6700 FAA4                928          BEQ     MOVEIANI1
00001AA0  0C39 0004 00002826       929          CMP.B   #$4,bit3
00001AA8  6700 FB38                930          BEQ     MOVEIAND1
00001AAC  0C39 0007 00002826       931          CMP.B   #$7,bit3
00001AB4  6700 F8D2                932          BEQ     ADDIMD
00001AB8                           933          
00001AB8                           934  LSLR
00001AB8                           935          *MOVE.B  D6,D2
00001AB8  141E                     936          MOVE.B  (A6)+,D2
00001ABA  EB0A                     937          LSL.B   #5,D2
00001ABC  EA0A                     938          LSR.B   #5,D2
00001ABE  13C2 00002827            939          MOVE.B  D2,bit4
00001AC4                           940          
00001AC4  1406                     941          MOVE.B  D6,D2
00001AC6  E50A                     942          LSL.B   #2,D2
00001AC8  EE0A                     943          LSR.B   #7,D2
00001ACA  13C2 00002826            944          MOVE.B  D2,bit3
00001AD0                           945          
00001AD0  3E06                     946          MOVE.W  D6,D7
00001AD2  E14F                     947          LSL.W   #8,D7
00001AD4  E04F                     948          LSR.W   #8,D7 
00001AD6  EC4F                     949          LSR.W   #6,D7 
00001AD8  13C7 00002825            950          MOVE.B  D7,bit2
00001ADE                           951          
00001ADE  3E06                     952          MOVE.W  D6,D7
00001AE0  EF4F                     953          LSL.W   #7,D7
00001AE2  E04F                     954          LSR.W   #8,D7 
00001AE4  EE4F                     955          LSR.W   #7,D7
00001AE6  13C7 00002824            956          MOVE.B  D7,bit1   
00001AEC                           957      
00001AEC  1806                     958          MOVE.B  D6,D4
00001AEE                           959          
00001AEE  E94E                     960          LSL.W   #4,D6
00001AF0  E04E                     961          LSR.W   #8,D6 
00001AF2  EA4E                     962          LSR.W   #5,D6
00001AF4  13C6 00002823            963          MOVE.B  D6,bit0 
00001AFA                           964          
00001AFA  0C39 0001 00002824       965          CMP.B   #$1,bit1
00001B02  6700 000E                966          BEQ     PRINTLSL
00001B06  0C39 0000 00002824       967          CMP.B   #$0,bit1
00001B0E  6700 0144                968          BEQ     PRINTLSR
00001B12                           969          
00001B12                           970  PRINTLSL
00001B12  43F9 00002748            971          LEA MLSL,A1
00001B18  303C 000E                972          MOVE    #14,D0
00001B1C  4E4F                     973          TRAP    #15
00001B1E                           974          
00001B1E  0C39 0000 00002825       975          CMP.B   #$0,bit2
00001B26  6700 005C                976          BEQ     PRINTB
00001B2A  0C39 0001 00002825       977          CMP.B   #$1,bit2
00001B32  6700 0084                978          BEQ     PRINTW
00001B36  0C39 0002 00002825       979          CMP.B   #$2,bit2
00001B3E  6700 00AC                980          BEQ     PRINTL
00001B42  6000 0002                981          BRA     LSLRMEM
00001B46                           982          
00001B46                           983  LSLRMEM
00001B46                           984          
00001B46  E50C                     985          LSL.B   #2,D4
00001B48  EA0C                     986          LSR.B   #5,D4
00001B4A  13C4 00002826            987          MOVE.B  D4,bit3
00001B50                           988          
00001B50  183C 0003                989          MOVE.B  #$3,D4
00001B54                           990          
00001B54  0C39 0002 00002826       991          CMP.B   #$2,bit3
00001B5C  6700 F950                992          BEQ     MOVEIAN1
00001B60  0C39 0003 00002826       993          CMP.B   #$3,bit3
00001B68  6700 F9D8                994          BEQ     MOVEIANI1
00001B6C  0C39 0004 00002826       995          CMP.B   #$4,bit3
00001B74  6700 FA6C                996          BEQ     MOVEIAND1
00001B78  0C39 0007 00002826       997          CMP.B   #$7,bit3
00001B80  6700 F806                998          BEQ     ADDIMD
00001B84                           999  PRINTB
00001B84  43F9 00002737           1000          LEA MDOT,A1
00001B8A  303C 000E               1001          MOVE    #14,D0
00001B8E  4E4F                    1002          TRAP    #15
00001B90                          1003  
00001B90  43F9 0000273B           1004          LEA MBYTE,A1
00001B96  303C 000E               1005          MOVE    #14,D0
00001B9A  4E4F                    1006          TRAP    #15
00001B9C                          1007          
00001B9C  3A3C 0006               1008          MOVE #$6,D5
00001BA0                          1009          
00001BA0  0C39 0000 00002826      1010          CMP.B   #0,bit3
00001BA8  6700 0076               1011          BEQ     PRINTLSLRCOUNT
00001BAC  0C39 0001 00002826      1012          CMP.B   #1,bit3
00001BB4  6700 FACC               1013          BEQ     MOVBDN1
00001BB8                          1014  
00001BB8                          1015  PRINTW 
00001BB8  43F9 00002737           1016          LEA MDOT,A1
00001BBE  303C 000E               1017          MOVE    #14,D0
00001BC2  4E4F                    1018          TRAP    #15
00001BC4                          1019  
00001BC4  43F9 0000273E           1020          LEA MWORD,A1
00001BCA  303C 000E               1021          MOVE    #14,D0
00001BCE  4E4F                    1022          TRAP    #15
00001BD0                          1023          
00001BD0  3A3C 0006               1024          MOVE #$6,D5
00001BD4                          1025          
00001BD4  0C39 0000 00002826      1026          CMP.B   #0,bit3
00001BDC  6700 0042               1027          BEQ     PRINTLSLRCOUNT
00001BE0  0C39 0001 00002826      1028          CMP.B   #1,bit3
00001BE8  6700 FA98               1029          BEQ     MOVBDN1
00001BEC                          1030  
00001BEC                          1031  PRINTL
00001BEC  43F9 00002737           1032          LEA MDOT,A1
00001BF2  303C 000E               1033          MOVE    #14,D0
00001BF6  4E4F                    1034          TRAP    #15
00001BF8                          1035  
00001BF8  43F9 00002741           1036          LEA MLONG,A1
00001BFE  303C 000E               1037          MOVE    #14,D0
00001C02  4E4F                    1038          TRAP    #15
00001C04                          1039  
00001C04  3A3C 0006               1040          MOVE #$6,D5
00001C08                          1041          
00001C08  0C39 0000 00002826      1042          CMP.B   #0,bit3
00001C10  6700 000E               1043          BEQ     PRINTLSLRCOUNT
00001C14  0C39 0001 00002826      1044          CMP.B   #1,bit3
00001C1C  6700 FA64               1045          BEQ     MOVBDN1    
00001C20                          1046  
00001C20                          1047  PRINTLSLRCOUNT
00001C20  43F9 0000271B           1048          LEA TAB,A1
00001C26  303C 000E               1049          MOVE    #14,D0
00001C2A  4E4F                    1050          TRAP    #15
00001C2C                          1051          
00001C2C  43F9 00002729           1052          LEA HASH,A1
00001C32  303C 000E               1053          MOVE    #14,D0
00001C36  4E4F                    1054          TRAP    #15
00001C38                          1055          
00001C38  1239 00002823           1056          MOVE.B  bit0,D1
00001C3E  303C 0003               1057          MOVE    #3,D0
00001C42  4E4F                    1058          TRAP    #15
00001C44                          1059          
00001C44  43F9 0000271F           1060          LEA COMMA,A1
00001C4A  303C 000E               1061          MOVE    #14,D0
00001C4E  4E4F                    1062          TRAP    #15
00001C50                          1063          
00001C50  6000 FAE4               1064          BRA LSLRDESD
00001C54                          1065    
00001C54                          1066  PRINTLSR
00001C54  43F9 0000274C           1067          LEA MLSR,A1
00001C5A  323C 000E               1068          MOVE    #14,D1
00001C5E  4E4F                    1069          TRAP    #15
00001C60                          1070          
00001C60  0C39 0000 00002825      1071          CMP.B   #$0,bit2
00001C68  6700 FF1A               1072          BEQ     PRINTB
00001C6C  0C39 0001 00002825      1073          CMP.B   #$1,bit2
00001C74  6700 FF42               1074          BEQ     PRINTW
00001C78  0C39 0002 00002825      1075          CMP.B   #$2,bit2
00001C80  6700 FF6A               1076          BEQ     PRINTL
00001C84  6000 FEC0               1077          BRA     LSLRMEM
00001C88                          1078  
00001C88                          1079  ******************************************************************************************************
00001C88                          1080  *   Branch, branch to subroutine, and branch conditionally
00001C88                          1081  *   BRA, BSR, Bcc
00001C88                          1082  
00001C88                          1083  BCC
00001C88  13C5 00002824           1084          MOVE.B  D5,bit1             Moves condition code to bit1
00001C8E  1A1E                    1085          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001C90  13C5 00002825           1086          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001C96  280E                    1087          MOVE.L  A6,D4               Moves current address to D4 register
00001C98                          1088  
00001C98  BA3C 0000               1089          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001C9C  6700 0010               1090          BEQ     BCCWORD
00001CA0  BA3C 00FF               1091          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001CA4  6700 0010               1092          BEQ     BCCLONG             Else, displacement is 8-bits
00001CA8                          1093  
00001CA8                          1094          * Calculates 8-bit displacement
00001CA8                          1095          * 8-bit displacement is already in D5
00001CA8                          1096          * Adds displacement to current address
00001CA8  D805                    1097          ADD.B   D5,D4               Adds the displacement to current address
00001CAA  6000 0012               1098          BRA     BCCNEXT
00001CAE                          1099  
00001CAE                          1100  * Calculates 16-bit displacement
00001CAE                          1101  BCCWORD
00001CAE  3A1E                    1102          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001CB0  D845                    1103          ADD.W   D5,D4               Adds the displacement to current address
00001CB2  6000 000A               1104          BRA     BCCNEXT
00001CB6                          1105  
00001CB6                          1106  * Calculates 32-bit displacement
00001CB6                          1107  BCCLONG
00001CB6  2A1E                    1108          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001CB8  D885                    1109          ADD.L   D5,D4               Adds the displacement to current address
00001CBA  6000 0002               1110          BRA     BCCNEXT
00001CBE                          1111  
00001CBE                          1112  * Does the actual calculation
00001CBE                          1113  * Adds the displacement to the current address
00001CBE                          1114  BCCNEXT
00001CBE  6100 000E               1115          BSR     BCCDISP             Displays branch op-code
00001CC2  45F9 00002636           1116          LEA     ENDNEWLINE,A2
00001CC8  2E04                    1117          MOVE.L  D4,D7
00001CCA  6000 F35A               1118          BRA     DISPADDRSTART
00001CCE                          1119  
00001CCE                          1120  BCCDISP
00001CCE  B43C 0000               1121          CMP.B   #$0,D2
00001CD2  6700 0026               1122          BEQ     BCCBRA
00001CD6  B43C 0007               1123          CMP.B   #$7,D2
00001CDA  6700 0028               1124          BEQ     BCCBEQ
00001CDE  B43C 0006               1125          CMP.B   #$6,D2
00001CE2  6700 002A               1126          BEQ     BCCBNE
00001CE6  B43C 000D               1127          CMP.B   #$D,D2
00001CEA  6700 002C               1128          BEQ     BCCBLT
00001CEE  B43C 0002               1129          CMP.B   #$2,D2
00001CF2  6700 002E               1130          BEQ     BCCBHI
00001CF6                          1131  
00001CF6  6000 08CC               1132          BRA     INVOP
00001CFA                          1133  
00001CFA                          1134  BCCBRA
00001CFA  43F9 000027CC           1135          LEA     MBRA,A1
00001D00  6000 002A               1136          BRA     BCCPRINT
00001D04                          1137  BCCBEQ
00001D04  43F9 000027BC           1138          LEA     MBEQ,A1
00001D0A  6000 0020               1139          BRA     BCCPRINT
00001D0E                          1140  BCCBNE
00001D0E  43F9 000027C0           1141          LEA     MBNE,A1
00001D14  6000 0016               1142          BRA     BCCPRINT
00001D18                          1143  BCCBLT
00001D18  43F9 000027C4           1144          LEA     MBLT,A1
00001D1E  6000 000C               1145          BRA     BCCPRINT
00001D22                          1146  BCCBHI
00001D22  43F9 000027C8           1147          LEA     MBHI,A1
00001D28  6000 0002               1148          BRA     BCCPRINT
00001D2C                          1149  BCCPRINT
00001D2C  103C 000E               1150          MOVE.B  #14,D0
00001D30  4E4F                    1151          TRAP    #15
00001D32  43F9 0000271B           1152          LEA     TAB,A1
00001D38  4E4F                    1153          TRAP    #15
00001D3A  4E75                    1154          RTS
00001D3C                          1155  
00001D3C                          1156  ******************************************************************************************************
00001D3C                          1157  *   Immediate data arithmetic operations
00001D3C                          1158  *   SUBI
00001D3C                          1159  
00001D3C  13C5 00002824           1160  IMD     MOVE.B  D5,bit1
00001D42  141E                    1161          MOVE.B  (A6)+,D2
00001D44                          1162  
00001D44  DE02                    1163          ADD.B   D2,D7
00001D46                          1164  
00001D46  1602                    1165          MOVE.B  D2,D3               Copies data at D2 to D3
00001D48                          1166          *   this gets digit in 10's place
00001D48  E80B                    1167          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001D4A                          1168          *   this gets digit in 1's place
00001D4A  E90A                    1169          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001D4C  E80A                    1170          LSR.B   #4,D2               Shifts back right into 1's place
00001D4E                          1171  
00001D4E                          1172          *   D3 holds digit in 10's place
00001D4E                          1173          *   D2 holds digit in 1's place
00001D4E                          1174  
00001D4E  E20B                    1175          LSR.B   #1,D3
00001D50  6400 0004               1176          BCC     IMD2
00001D54  5404                    1177          ADD.B   #$2,D4
00001D56  E20B                    1178  IMD2    LSR.B   #1,D3
00001D58  6400 0004               1179          BCC     IMD3
00001D5C  5804                    1180          ADD.B   #$4,D4
00001D5E  B43C 0007               1181  IMD3    CMP.B   #$7,D2
00001D62  6D00 0006               1182          BLT     IMD4
00001D66  5204                    1183          ADD.B   #$1,D4
00001D68  5102                    1184          SUB.B   #$8,D2
00001D6A                          1185  
00001D6A                          1186          *   Stores them into addr
00001D6A  13C3 00002825           1187  IMD4    MOVE.B  D3,bit2
00001D70  13C4 00002826           1188          MOVE.B  D4,bit3
00001D76  13C2 00002827           1189          MOVE.B  D2,bit4
00001D7C                          1190  
00001D7C                          1191  **************************
00001D7C                          1192  * This finds the size of the operation
00001D7C                          1193  
00001D7C  0C39 0000 00002825      1194          CMP.B   #$0,bit2
00001D84  6700 0052               1195          BEQ     IMDBYTE
00001D88  0C39 0001 00002825      1196          CMP.B   #$1,bit2
00001D90  6700 0056               1197          BEQ     IMDWORD
00001D94  0C39 0002 00002825      1198          CMP.B   #$2,bit2
00001D9C  6700 0058               1199          BEQ     IMDLONG
00001DA0  6000 0822               1200          BRA     INVOP
00001DA4                          1201  
00001DA4                          1202  *************************************************************
00001DA4                          1203  * Display IMD op-code
00001DA4                          1204  IMDPRINT
00001DA4  0C39 0000 00002824      1205          CMP.B   #$0,bit1
00001DAC  6700 000E               1206          BEQ     IMDPRINTORI
00001DB0  0C39 0004 00002824      1207          CMP.B   #$4,bit1
00001DB8  6700 000C               1208          BEQ     IMDPRINTSUBI
00001DBC                          1209  
00001DBC                          1210  IMDPRINTORI
00001DBC  43F9 000027A8           1211          LEA     MORI,A1
00001DC2  6000 000C               1212          BRA     IMDPRINTEND
00001DC6                          1213  
00001DC6                          1214  IMDPRINTSUBI
00001DC6  43F9 000027A2           1215          LEA     MSUBI,A1
00001DCC  6000 0002               1216          BRA     IMDPRINTEND
00001DD0                          1217  
00001DD0                          1218  IMDPRINTEND
00001DD0  103C 000E               1219          MOVE.B  #14,D0
00001DD4  4E4F                    1220          TRAP    #15
00001DD6  4E75                    1221          RTS
00001DD8                          1222  
00001DD8                          1223  *************************************************************
00001DD8                          1224  * Immediate data operation size BYTE
00001DD8                          1225  IMDBYTE
00001DD8  61CA                    1226          BSR     IMDPRINT
00001DDA  43F9 0000273B           1227          LEA     MBYTE,A1
00001DE0                          1228  
00001DE0                          1229          * Moves size to D4, needed to use DISPEA
00001DE0  183C 0001               1230          MOVE.B  #$1,D4
00001DE4  6000 001A               1231          BRA     IMDEA
00001DE8                          1232  
00001DE8                          1233  *************************************************************
00001DE8                          1234  * Immediate data operation size WORD
00001DE8                          1235  IMDWORD
00001DE8  61BA                    1236          BSR     IMDPRINT
00001DEA  43F9 0000273E           1237          LEA     MWORD,A1
00001DF0                          1238  
00001DF0  1803                    1239          MOVE.B  D3,D4
00001DF2  6000 000C               1240          BRA     IMDEA
00001DF6                          1241  
00001DF6                          1242  
00001DF6                          1243  *************************************************************
00001DF6                          1244  * Immediate data operation size LONG
00001DF6                          1245  IMDLONG
00001DF6  61AC                    1246          BSR     IMDPRINT
00001DF8  43F9 00002741           1247          LEA     MLONG,A1
00001DFE                          1248          
00001DFE                          1249  
00001DFE                          1250          * Moves size to D4, needed to use DISPEA
00001DFE  1803                    1251          MOVE.B  D3,D4
00001E00                          1252  
00001E00                          1253  IMDEA
00001E00                          1254          * This prints out the size and creates tab
00001E00  103C 000E               1255          MOVE.B  #14,D0
00001E04  4E4F                    1256          TRAP    #15
00001E06  43F9 0000271B           1257          LEA     TAB,A1
00001E0C  103C 000E               1258          MOVE.B  #14,D0
00001E10  4E4F                    1259          TRAP    #15
00001E12                          1260          * Loads return address into A2
00001E12  45F9 00001E1C           1261          LEA     IMDEA2,A2
00001E18  6000 0742               1262          BRA     DISPEA
00001E1C                          1263  IMDEA2
00001E1C  43F9 0000271F           1264          LEA     COMMA,A1
00001E22  103C 000E               1265          MOVE.B  #14,D0
00001E26  4E4F                    1266          TRAP    #15
00001E28                          1267  
00001E28  45F9 00001E32           1268          LEA     IMDEA3,A2
00001E2E  6000 05DC               1269          BRA     SUBEA
00001E32                          1270  IMDEA3
00001E32  6000 0802               1271          BRA     ENDNEWLINE
00001E36                          1272  
00001E36                          1273  ******************************************************************************************************
00001E36                          1274  * Miscellaneous section
00001E36                          1275  *   Not goes here
00001E36                          1276  
00001E36                          1277  MISC
00001E36  13C5 00002824           1278          MOVE.B  D5,bit1
00001E3C  141E                    1279          MOVE.B  (A6)+,D2
00001E3E                          1280  
00001E3E  DE02                    1281          ADD.B   D2,D7
00001E40                          1282  
00001E40  1602                    1283          MOVE.B  D2,D3               Copies data at D2 to D3
00001E42                          1284          *   this gets digit in 10's place
00001E42  E80B                    1285          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001E44                          1286          *   this gets digit in 1's place
00001E44  E90A                    1287          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001E46  E80A                    1288          LSR.B   #4,D2               Shifts back right into 1's place
00001E48                          1289  
00001E48                          1290          *   D5 is bit1
00001E48                          1291          *   D3 is bit2
00001E48                          1292          *   D2 is bit3
00001E48                          1293  
00001E48                          1294  **************************
00001E48                          1295  * This finds the size of the operation
00001E48                          1296          * D5 is bit1
00001E48  BA3C 0004               1297          CMP.B   #$4,D5
00001E4C  6700 FB14               1298          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00001E50  BA3C 0006               1299          CMP.B   #$6,D5              Branches to NOT section
00001E54  6700 0036               1300          BEQ     MISCNOT
00001E58  BA3C 000E               1301          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00001E5C  6700 0006               1302          BEQ     MISCBIT2
00001E60  6000 0762               1303          BRA     INVOP
00001E64                          1304  
00001E64                          1305  MISCBIT2
00001E64                          1306          * D3 is bit2
00001E64  B63C 0007               1307          CMP.B   #$7,D3              Branches to NOP
00001E68  6700 0006               1308          BEQ     MISCBIT3
00001E6C  6000 0756               1309          BRA     INVOP
00001E70                          1310  
00001E70                          1311  MISCBIT3
00001E70                          1312          * D2 is bit3
00001E70  B43C 0001               1313          CMP.B   #$1,D2              Branches to NOP
00001E74  6700 0006               1314          BEQ     MISCNOP
00001E78  6000 074A               1315          BRA     INVOP
00001E7C                          1316  
00001E7C                          1317  ******************************************************
00001E7C                          1318  * NOP
00001E7C                          1319  * No operation
00001E7C                          1320  MISCNOP
00001E7C  43F9 000027D0           1321          LEA     MNOP,A1
00001E82  103C 000E               1322          MOVE.B  #14,D0
00001E86  4E4F                    1323          TRAP    #15
00001E88                          1324  
00001E88  6000 07AC               1325          BRA     ENDNEWLINE          Goes to next opcode
00001E8C                          1326  
00001E8C                          1327  ******************************************************
00001E8C                          1328  * NOT
00001E8C                          1329  * Reuses some of IMD section to display because they have similar format
00001E8C                          1330  *  (I was kinda lazy too)
00001E8C                          1331  MISCNOT
00001E8C  E20B                    1332          LSR.B   #1,D3
00001E8E  6400 0004               1333          BCC     MISCNOT2
00001E92  5404                    1334          ADD.B   #$2,D4
00001E94                          1335  MISCNOT2   
00001E94  E20B                    1336          LSR.B   #1,D3
00001E96  6400 0004               1337          BCC     MISCNOT3
00001E9A  5804                    1338          ADD.B   #$4,D4
00001E9C                          1339  MISCNOT3   
00001E9C  B43C 0007               1340          CMP.B   #$7,D2
00001EA0  6D00 0006               1341          BLT     MISCNOT4
00001EA4  5204                    1342          ADD.B   #$1,D4
00001EA6  5102                    1343          SUB.B   #$8,D2
00001EA8                          1344  
00001EA8                          1345          *   Stores them into addr
00001EA8                          1346  MISCNOT4
00001EA8  13C3 00002825           1347          MOVE.B  D3,bit2
00001EAE  13C4 00002826           1348          MOVE.B  D4,bit3
00001EB4  13C2 00002827           1349          MOVE.B  D2,bit4
00001EBA                          1350  
00001EBA  B63C 0000               1351          CMP.B   #$0,D3
00001EBE  6700 0016               1352          BEQ     MISCBYTE
00001EC2  B63C 0001               1353          CMP.B   #$1,D3
00001EC6  6700 0020               1354          BEQ     MISCWORD
00001ECA  B63C 0002               1355          CMP.B   #$2,D3
00001ECE  6700 0028               1356          BEQ     MISCLONG
00001ED2  6000 06F0               1357          BRA     INVOP
00001ED6                          1358  *************************************************************
00001ED6                          1359  * Immediate data operation size BYTE
00001ED6                          1360  MISCBYTE
00001ED6  6100 004C               1361          BSR     MISCPRINT
00001EDA  43F9 0000273B           1362          LEA     MBYTE,A1
00001EE0                          1363  
00001EE0                          1364          * Moves size to D4, needed to use DISPEA
00001EE0  183C 0001               1365          MOVE.B  #$1,D4
00001EE4  6000 001E               1366          BRA     MISCEA
00001EE8                          1367  
00001EE8                          1368  *************************************************************
00001EE8                          1369  * Immediate data operation size WORD
00001EE8                          1370  MISCWORD
00001EE8  6100 003A               1371          BSR     MISCPRINT
00001EEC  43F9 0000273E           1372          LEA     MWORD,A1
00001EF2                          1373  
00001EF2  1803                    1374          MOVE.B  D3,D4
00001EF4  6000 000E               1375          BRA     MISCEA
00001EF8                          1376  
00001EF8                          1377  
00001EF8                          1378  *************************************************************
00001EF8                          1379  * Immediate data operation size LONG
00001EF8                          1380  MISCLONG
00001EF8  6100 002A               1381          BSR     MISCPRINT
00001EFC  43F9 00002741           1382          LEA     MLONG,A1
00001F02                          1383  
00001F02                          1384          * Moves size to D4, needed to use DISPEA
00001F02  1803                    1385          MOVE.B  D3,D4
00001F04                          1386  
00001F04                          1387  MISCEA
00001F04  103C 000E               1388          MOVE.B  #14,D0
00001F08  4E4F                    1389          TRAP    #15
00001F0A  43F9 0000271B           1390          LEA     TAB,A1
00001F10  103C 000E               1391          MOVE.B  #14,D0
00001F14  4E4F                    1392          TRAP    #15
00001F16                          1393  
00001F16  45F9 00001F20           1394          LEA     MISCEA2,A2
00001F1C  6000 04EE               1395          BRA     SUBEA
00001F20                          1396  MISCEA2
00001F20  6000 0714               1397          BRA     ENDNEWLINE
00001F24                          1398  
00001F24                          1399  *************************************************************
00001F24                          1400  * Display IMD op-code
00001F24                          1401  MISCPRINT
00001F24  0C39 0004 00002824      1402          CMP.B   #$4,bit1
00001F2C  6700 0018               1403          BEQ     MISCPRINTNEG
00001F30  0C39 0006 00002824      1404          CMP.B   #$6,bit1
00001F38  6700 0002               1405          BEQ     MISCPRINTNOT
00001F3C                          1406  
00001F3C                          1407  MISCPRINTNOT
00001F3C  43F9 000027AD           1408          LEA     MNOT,A1
00001F42  6000 000C               1409          BRA     MISCPRINTEND
00001F46                          1410  
00001F46                          1411  MISCPRINTNEG
00001F46  43F9 000027B8           1412          LEA     MNEG,A1
00001F4C  6000 0002               1413          BRA     MISCPRINTEND
00001F50                          1414  
00001F50                          1415  MISCPRINTEND
00001F50  103C 000E               1416          MOVE.B  #14,D0
00001F54  4E4F                    1417          TRAP    #15
00001F56  4E75                    1418          RTS
00001F58                          1419  
00001F58                          1420  
00001F58                          1421  ******************************************************************************************************
00001F58                          1422  * SUB section
00001F58                          1423  
00001F58                          1424          *   Grabs next two nibbles
00001F58  141E                    1425  SUB     MOVE.B  (A6)+,D2
00001F5A                          1426  
00001F5A  DE02                    1427          ADD.B   D2,D7
00001F5C                          1428  
00001F5C  1602                    1429          MOVE.B  D2,D3               Copies data at D2 to D3
00001F5E                          1430          *   this gets digit in 10's place
00001F5E  E80B                    1431          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001F60                          1432          *   this gets digit in 1's place
00001F60  E90A                    1433          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001F62  E80A                    1434          LSR.B   #4,D2               Shifts back right into 1's place
00001F64                          1435  
00001F64                          1436          *   D3 holds digit in 10's place
00001F64                          1437          *   D2 holds digit in 1's place
00001F64                          1438  
00001F64                          1439          
00001F64                          1440          *   Converts nibble into 3-bit parts
00001F64  E20B                    1441          LSR.B   #1,D3
00001F66  6400 0004               1442          BCC     SUB2
00001F6A  5404                    1443          ADD.B   #$2,D4
00001F6C                          1444          
00001F6C  E20B                    1445  SUB2    LSR.B   #1,D3
00001F6E  6400 0004               1446          BCC     SUB3
00001F72  5804                    1447          ADD.B   #$4,D4
00001F74                          1448          
00001F74  1205                    1449  SUB3    MOVE.B  D5,D1
00001F76  E209                    1450          LSR.B   #1,D1
00001F78  6400 0004               1451          BCC     SUB4
00001F7C  5803                    1452          ADD.B   #$4,D3
00001F7E                          1453  
00001F7E  B43C 0007               1454  SUB4    CMP.B   #$7,D2
00001F82  6D00 0006               1455          BLT     SUB1
00001F86  5204                    1456          ADD.B   #$1,D4
00001F88  5102                    1457          SUB.B   #$8,D2
00001F8A                          1458  
00001F8A                          1459          *   Stores them into addr
00001F8A  13C1 00002824           1460  SUB1    MOVE.B  D1,bit1
00001F90  13C3 00002825           1461          MOVE.B  D3,bit2
00001F96  13C4 00002826           1462          MOVE.B  D4,bit3
00001F9C  13C2 00002827           1463          MOVE.B  D2,bit4
00001FA2                          1464  
00001FA2                          1465          * do this later
00001FA2  4241                    1466          CLR     D1
00001FA4  7400                    1467          MOVE.L  #0,D2
00001FA6  7600                    1468          MOVE.L  #0,D3
00001FA8  7800                    1469          MOVE.L  #0,D4
00001FAA  7A00                    1470          MOVE.L  #0,D5
00001FAC  7C00                    1471          MOVE.L  #0,D6
00001FAE                          1472  
00001FAE                          1473          
00001FAE                          1474  ******************************************************************************************************
00001FAE                          1475  * After spliting the op-code into SUB's defined groupings
00001FAE                          1476  *   This figures out which operation it is and goes to that sub-routine
00001FAE                          1477  
00001FAE                          1478          * This checks if bit0 is C which is either AND or MULS
00001FAE  0C39 000C 00002823      1479          CMP.B   #$C,bit0
00001FB6  6600 000E               1480          BNE     SUBACHECK
00001FBA  0C39 0007 00002825      1481          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
00001FC2  6700 F886               1482          BEQ     MULSW                       AND will use SUB's routine
00001FC6                          1483  
00001FC6                          1484  SUBACHECK
00001FC6                          1485          * This will display SUBA instead  -- check this later
00001FC6  0C39 0003 00002825      1486          CMP.B   #$3,bit2
00001FCE  6700 01E6               1487          BEQ     SUBA
00001FD2  0C39 0007 00002825      1488          CMP.B   #$7,bit2
00001FDA  6700 01DA               1489          BEQ     SUBA
00001FDE                          1490  
00001FDE                          1491          * This will find the size and stuff
00001FDE  0C39 0000 00002825      1492          CMP.B   #$0,bit2
00001FE6  6700 003E               1493          BEQ     SUBSIZE1
00001FEA  0C39 0001 00002825      1494          CMP.B   #$1,bit2
00001FF2  6700 0072               1495          BEQ     SUBSIZE2
00001FF6  0C39 0002 00002825      1496          CMP.B   #$2,bit2
00001FFE  6700 00A6               1497          BEQ     SUBSIZE3
00002002  0C39 0004 00002825      1498          CMP.B   #$4,bit2
0000200A  6700 00DA               1499          BEQ     SUBSIZE4
0000200E  0C39 0005 00002825      1500          CMP.B   #$5,bit2
00002016  6700 0112               1501          BEQ     SUBSIZE5
0000201A  0C39 0006 00002825      1502          CMP.B   #$6,bit2
00002022  6700 014A               1503          BEQ     SUBSIZE6
00002026                          1504     
00002026                          1505  ******************************************************************************************************
00002026                          1506  *   Displays size, then does operation order
00002026                          1507  
00002026                          1508  *   000 byte    EA,DN
00002026                          1509  SUBSIZE1
00002026  6100 0228               1510          BSR     SUBPRINT
0000202A  43F9 0000273B           1511          LEA     MBYTE,A1
00002030  103C 000E               1512          MOVE.B  #14,D0
00002034  4E4F                    1513          TRAP    #15
00002036  43F9 0000271B           1514          LEA     TAB,A1
0000203C  103C 000E               1515          MOVE.B  #14,D0
00002040  4E4F                    1516          TRAP    #15
00002042                          1517  
00002042  45F9 0000204C           1518          LEA     SUBSIZE11,A2
00002048  6000 03C2               1519          BRA     SUBEA
0000204C                          1520  SUBSIZE11
0000204C  45F9 00002062           1521          LEA     SUBSIZE12,A2
00002052  43F9 0000271F           1522          LEA     COMMA,A1
00002058  103C 000E               1523          MOVE.B  #14,D0
0000205C  4E4F                    1524          TRAP    #15
0000205E  6000 0288               1525          BRA     SUBDN
00002062                          1526  SUBSIZE12
00002062  6000 05D2               1527          BRA     ENDNEWLINE
00002066                          1528  
00002066                          1529  *************************************************
00002066                          1530  *   001 word    EA,DN
00002066                          1531  SUBSIZE2
00002066  6100 01E8               1532          BSR     SUBPRINT
0000206A  43F9 0000273E           1533          LEA     MWORD,A1
00002070  103C 000E               1534          MOVE.B  #14,D0
00002074  4E4F                    1535          TRAP    #15
00002076  43F9 0000271B           1536          LEA     TAB,A1
0000207C  103C 000E               1537          MOVE.B  #14,D0
00002080  4E4F                    1538          TRAP    #15
00002082                          1539  
00002082  45F9 0000208C           1540          LEA     SUBSIZE21,A2
00002088  6000 0382               1541          BRA     SUBEA
0000208C                          1542  SUBSIZE21
0000208C  45F9 000020A2           1543          LEA     SUBSIZE22,A2
00002092  43F9 0000271F           1544          LEA     COMMA,A1
00002098  103C 000E               1545          MOVE.B  #14,D0
0000209C  4E4F                    1546          TRAP    #15
0000209E  6000 0248               1547          BRA     SUBDN
000020A2                          1548  SUBSIZE22
000020A2  6000 0592               1549          BRA     ENDNEWLINE
000020A6                          1550  
000020A6                          1551  *************************************************
000020A6                          1552  *   010 long    EA,DN
000020A6                          1553  SUBSIZE3
000020A6  6100 01A8               1554          BSR     SUBPRINT
000020AA  43F9 00002741           1555          LEA     MLONG,A1
000020B0  103C 000E               1556          MOVE.B  #14,D0
000020B4  4E4F                    1557          TRAP    #15
000020B6  43F9 0000271B           1558          LEA     TAB,A1
000020BC  103C 000E               1559          MOVE.B  #14,D0
000020C0  4E4F                    1560          TRAP    #15
000020C2                          1561  
000020C2  45F9 000020CC           1562          LEA     SUBSIZE31,A2
000020C8  6000 0342               1563          BRA     SUBEA
000020CC                          1564  SUBSIZE31
000020CC  45F9 000020E2           1565          LEA     SUBSIZE32,A2
000020D2  43F9 0000271F           1566          LEA     COMMA,A1
000020D8  103C 000E               1567          MOVE.B  #14,D0
000020DC  4E4F                    1568          TRAP    #15
000020DE  6000 0208               1569          BRA     SUBDN
000020E2                          1570  SUBSIZE32
000020E2  6000 0552               1571          BRA     ENDNEWLINE
000020E6                          1572  
000020E6                          1573  *************************************************
000020E6                          1574  *   100 byte    DN,EA
000020E6                          1575  SUBSIZE4
000020E6  6100 0168               1576          BSR     SUBPRINT
000020EA  43F9 0000273B           1577          LEA     MBYTE,A1
000020F0  103C 000E               1578          MOVE.B  #14,D0
000020F4  4E4F                    1579          TRAP    #15
000020F6  43F9 0000271B           1580          LEA     TAB,A1
000020FC  103C 000E               1581          MOVE.B  #14,D0
00002100  4E4F                    1582          TRAP    #15
00002102                          1583  
00002102  6100 01A2               1584          BSR     SUBERRORTEST1
00002106                          1585  
00002106  45F9 00002110           1586          LEA     SUBSIZE41,A2
0000210C  6000 01DA               1587          BRA     SUBDN
00002110                          1588  SUBSIZE41
00002110  45F9 00002126           1589          LEA     SUBSIZE42,A2
00002116  43F9 0000271F           1590          LEA     COMMA,A1
0000211C  103C 000E               1591          MOVE.B  #14,D0
00002120  4E4F                    1592          TRAP    #15
00002122  6000 02E8               1593          BRA     SUBEA
00002126                          1594  SUBSIZE42
00002126  6000 050E               1595          BRA     ENDNEWLINE
0000212A                          1596  
0000212A                          1597  *************************************************
0000212A                          1598  *   101 word    DN,EA
0000212A                          1599  SUBSIZE5
0000212A  6100 017A               1600          BSR     SUBERRORTEST1               * This does error testing
0000212E  6100 0120               1601          BSR     SUBPRINT                    * Prints out 'SUB.'
00002132  43F9 0000273E           1602          LEA     MWORD,A1
00002138  103C 000E               1603          MOVE.B  #14,D0
0000213C  4E4F                    1604          TRAP    #15
0000213E  43F9 0000271B           1605          LEA     TAB,A1
00002144  103C 000E               1606          MOVE.B  #14,D0
00002148  4E4F                    1607          TRAP    #15
0000214A                          1608  
0000214A  45F9 00002154           1609          LEA     SUBSIZE51,A2
00002150  6000 0196               1610          BRA     SUBDN
00002154                          1611  SUBSIZE51
00002154  45F9 0000216A           1612          LEA     SUBSIZE52,A2
0000215A  43F9 0000271F           1613          LEA     COMMA,A1
00002160  103C 000E               1614          MOVE.B  #14,D0
00002164  4E4F                    1615          TRAP    #15
00002166  6000 02A4               1616          BRA     SUBEA
0000216A                          1617  SUBSIZE52
0000216A  6000 04CA               1618          BRA     ENDNEWLINE
0000216E                          1619  
0000216E                          1620  *************************************************
0000216E                          1621  *   110 long    DN,EA
0000216E                          1622  SUBSIZE6
0000216E  6100 0136               1623          BSR     SUBERRORTEST1               * This does error testing
00002172  6100 00DC               1624          BSR     SUBPRINT                    * Prints out 'SUB.'
00002176  43F9 00002741           1625          LEA     MLONG,A1
0000217C  103C 000E               1626          MOVE.B  #14,D0
00002180  4E4F                    1627          TRAP    #15
00002182  43F9 0000271B           1628          LEA     TAB,A1
00002188  103C 000E               1629          MOVE.B  #14,D0
0000218C  4E4F                    1630          TRAP    #15
0000218E                          1631  
0000218E  6100 0116               1632          BSR     SUBERRORTEST1
00002192                          1633  
00002192  45F9 0000219C           1634          LEA     SUBSIZE61,A2
00002198  6000 014E               1635          BRA     SUBDN
0000219C                          1636  SUBSIZE61
0000219C  45F9 000021B2           1637          LEA     SUBSIZE62,A2
000021A2  43F9 0000271F           1638          LEA     COMMA,A1
000021A8  103C 000E               1639          MOVE.B  #14,D0
000021AC  4E4F                    1640          TRAP    #15
000021AE  6000 025C               1641          BRA     SUBEA
000021B2                          1642  SUBSIZE62
000021B2  6000 0482               1643          BRA     ENDNEWLINE
000021B6                          1644  
000021B6                          1645  ****************************************************************************
000021B6                          1646  *   This section is for SUBA
000021B6                          1647  *   Displays 'SUBA.' then decodes the op-code as SUBA
000021B6                          1648  SUBA
000021B6  43F9 00002792           1649          LEA     MSUBA,A1                    Displays 'SUBA.'
000021BC  103C 000E               1650          MOVE.B  #14,D0
000021C0  4E4F                    1651          TRAP    #15
000021C2                          1652          
000021C2                          1653          * Does the rest of SUBA
000021C2  0C39 0003 00002825      1654          CMP.B   #$3,bit2
000021CA  6700 000E               1655          BEQ     SUBSIZE7
000021CE  0C39 0007 00002825      1656          CMP.B   #$7,bit2
000021D6  6700 003E               1657          BEQ     SUBSIZE8
000021DA                          1658  
000021DA                          1659  *************************************************
000021DA                          1660  *   SUBA Word   ea,An
000021DA                          1661  SUBSIZE7
000021DA  43F9 0000273E           1662          LEA     MWORD,A1
000021E0  103C 000E               1663          MOVE.B  #14,D0
000021E4  4E4F                    1664          TRAP    #15
000021E6  43F9 0000271B           1665          LEA     TAB,A1
000021EC  103C 000E               1666          MOVE.B  #14,D0
000021F0  4E4F                    1667          TRAP    #15
000021F2                          1668  
000021F2  45F9 000021FC           1669          LEA     SUBSIZE71,A2
000021F8  6000 0212               1670          BRA     SUBEA
000021FC                          1671  SUBSIZE71
000021FC  45F9 00002212           1672          LEA     SUBSIZE72,A2
00002202  43F9 0000271F           1673          LEA     COMMA,A1
00002208  103C 000E               1674          MOVE.B  #14,D0
0000220C  4E4F                    1675          TRAP    #15
0000220E  6000 012C               1676          BRA     SUBAN2
00002212                          1677  SUBSIZE72
00002212  6000 0422               1678          BRA     ENDNEWLINE
00002216                          1679  
00002216                          1680  *************************************************
00002216                          1681  *   SUBA longword   ea,An
00002216                          1682  SUBSIZE8
00002216  43F9 00002741           1683          LEA     MLONG,A1
0000221C  103C 000E               1684          MOVE.B  #14,D0
00002220  4E4F                    1685          TRAP    #15
00002222  43F9 0000271B           1686          LEA     TAB,A1
00002228  103C 000E               1687          MOVE.B  #14,D0
0000222C  4E4F                    1688          TRAP    #15
0000222E                          1689  
0000222E  45F8 21FC               1690          LEA     SUBSIZE71,A2
00002232  6000 01D8               1691          BRA     SUBEA
00002236                          1692  SUBSIZE81
00002236  45F8 2212               1693          LEA     SUBSIZE72,A2
0000223A  43F9 0000271F           1694          LEA     COMMA,A1
00002240  103C 000E               1695          MOVE.B  #14,D0
00002244  4E4F                    1696          TRAP    #15
00002246  6000 00F4               1697          BRA     SUBAN2
0000224A                          1698  SUBSIZE82
0000224A  6000 03EA               1699          BRA     ENDNEWLINE
0000224E                          1700  
0000224E                          1701  *************************************************
0000224E                          1702  * Jumps to memory location at A2
0000224E                          1703  SUBJMPA2
0000224E  4ED2                    1704          JMP     (A2)
00002250                          1705  
00002250                          1706  *************************************************
00002250                          1707  * Prints out opcode name
00002250                          1708  SUBPRINT
00002250  0C39 0009 00002823      1709          CMP.B   #$9,bit0                Prints SUB
00002258  6700 001A               1710          BEQ     SUBPRINTSUB
0000225C  0C39 000C 00002823      1711          CMP.B   #$C,bit0                Prints AND
00002264  6700 001E               1712          BEQ     SUBPRINTAND
00002268  0C39 000D 00002823      1713          CMP.B   #$D,bit0                Prints ADD
00002270  6700 0022               1714          BEQ     SUBPRINTADD
00002274                          1715  
00002274                          1716  SUBPRINTSUB   * Displays 'SUB.' 
00002274  43F9 0000278D           1717          LEA     MSUB,A1
0000227A  103C 000E               1718          MOVE.B  #14,D0
0000227E  4E4F                    1719          TRAP    #15
00002280  6000 0022               1720          BRA     SUBPRINTEND
00002284                          1721  
00002284                          1722  SUBPRINTAND   * Displays 'AND.' 
00002284  43F9 00002798           1723          LEA     MAND,A1
0000228A  103C 000E               1724          MOVE.B  #14,D0
0000228E  4E4F                    1725          TRAP    #15
00002290  6000 0012               1726          BRA     SUBPRINTEND
00002294                          1727  
00002294                          1728  SUBPRINTADD   * Displays 'ADD.' 
00002294  43F9 0000279D           1729          LEA     MADD,A1
0000229A  103C 000E               1730          MOVE.B  #14,D0
0000229E  4E4F                    1731          TRAP    #15
000022A0  6000 0002               1732          BRA     SUBPRINTEND
000022A4                          1733  
000022A4                          1734  SUBPRINTEND
000022A4  4E75                    1735          RTS
000022A6                          1736  
000022A6                          1737  
000022A6                          1738  *******************************************************************
000022A6                          1739  * Error testing for DN->EA operations
000022A6                          1740  *  Data register, address register, and immediate data cannot be destinations
000022A6                          1741  SUBERRORTEST1
000022A6                          1742          * test for DN or AN register, branches to invalid op code if true
000022A6  0C39 0000 00002826      1743          CMP.B   #0,bit3
000022AE  6700 0314               1744          BEQ     INVOP
000022B2  0C39 0001 00002826      1745          CMP.B   #1,bit3
000022BA  6700 0308               1746          BEQ     INVOP
000022BE                          1747          
000022BE                          1748          * check if destination is immediate data
000022BE  0C39 0007 00002826      1749          CMP.B   #7,bit3
000022C6  6600 001E               1750          BNE     SUBERRORTEST11
000022CA  0C39 0000 00002827      1751          CMP.B   #0,bit4
000022D2  6700 0012               1752          BEQ     SUBERRORTEST11
000022D6  0C39 0001 00002827      1753          CMP.B   #1,bit4
000022DE  6700 0006               1754          BEQ     SUBERRORTEST11
000022E2  6000 02E0               1755          BRA     INVOP
000022E6                          1756          
000022E6                          1757  SUBERRORTEST11
000022E6  4E75                    1758          RTS
000022E8                          1759  
000022E8                          1760  
000022E8                          1761  ******************************************************************************************************
000022E8                          1762  *   Displays data register
000022E8                          1763  SUBDN
000022E8  43F9 00002744           1764          LEA     MDN,A1
000022EE  103C 000E               1765          MOVE.B  #14,D0
000022F2  4E4F                    1766          TRAP    #15
000022F4                          1767  
000022F4  1239 00002824           1768          MOVE.B  bit1,D1
000022FA  103C 0003               1769          MOVE.B  #3,D0
000022FE  4E4F                    1770          TRAP    #15
00002300                          1771          
00002300  6000 FF4C               1772          BRA     SUBJMPA2
00002304                          1773  
00002304                          1774  *   Displays data register
00002304                          1775  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002304                          1776  SUBDN2
00002304  43F9 00002744           1777          LEA     MDN,A1
0000230A  103C 000E               1778          MOVE.B  #14,D0
0000230E  4E4F                    1779          TRAP    #15
00002310                          1780  
00002310  1239 00002827           1781          MOVE.B  bit4,D1
00002316  103C 0003               1782          MOVE.B  #3,D0
0000231A  4E4F                    1783          TRAP    #15
0000231C                          1784          
0000231C  6000 FF30               1785          BRA     SUBJMPA2
00002320                          1786  
00002320                          1787  *   Displays address register
00002320                          1788  SUBAN
00002320  43F9 00002746           1789          LEA     MAN,A1
00002326  103C 000E               1790          MOVE.B  #14,D0
0000232A  4E4F                    1791          TRAP    #15
0000232C                          1792  
0000232C  1239 00002827           1793          MOVE.B  bit4,D1
00002332  103C 0003               1794          MOVE.B  #3,D0
00002336  4E4F                    1795          TRAP    #15
00002338                          1796          
00002338  6000 FF14               1797          BRA     SUBJMPA2
0000233C                          1798  
0000233C                          1799  *   Displays address register
0000233C                          1800  *   This is for SUBA, SUBA puts An into bit1
0000233C                          1801  SUBAN2
0000233C  43F9 00002746           1802          LEA     MAN,A1
00002342  103C 000E               1803          MOVE.B  #14,D0
00002346  4E4F                    1804          TRAP    #15
00002348                          1805  
00002348  1239 00002824           1806          MOVE.B  bit1,D1
0000234E  103C 0003               1807          MOVE.B  #3,D0
00002352  4E4F                    1808          TRAP    #15
00002354                          1809          
00002354  6000 FEF8               1810          BRA     SUBJMPA2
00002358                          1811  
00002358                          1812  
00002358                          1813  *   Displays indirect address register
00002358                          1814  SUBANID
00002358  43F9 00002721           1815          LEA     OPENBRA,A1
0000235E  103C 000E               1816          MOVE.B  #14,D0
00002362  4E4F                    1817          TRAP    #15
00002364                          1818  
00002364  43F9 00002746           1819          LEA     MAN,A1
0000236A  103C 000E               1820          MOVE.B  #14,D0
0000236E  4E4F                    1821          TRAP    #15
00002370                          1822  
00002370  1239 00002827           1823          MOVE.B  bit4,D1
00002376  103C 0003               1824          MOVE.B  #3,D0
0000237A  4E4F                    1825          TRAP    #15
0000237C                          1826  
0000237C  43F9 00002723           1827          LEA     CLOSEBRA,A1
00002382  103C 000E               1828          MOVE.B  #14,D0
00002386  4E4F                    1829          TRAP    #15
00002388                          1830  
00002388  6000 FEC4               1831          BRA     SUBJMPA2
0000238C                          1832  
0000238C                          1833  *   Displays indirect address register with post increment
0000238C                          1834  SUBANIDPOS
0000238C  43F9 00002721           1835          LEA     OPENBRA,A1
00002392  103C 000E               1836          MOVE.B  #14,D0
00002396  4E4F                    1837          TRAP    #15
00002398                          1838  
00002398  43F9 00002746           1839          LEA     MAN,A1
0000239E  103C 000E               1840          MOVE.B  #14,D0
000023A2  4E4F                    1841          TRAP    #15
000023A4                          1842  
000023A4  1239 00002827           1843          MOVE.B  bit4,D1
000023AA  103C 0003               1844          MOVE.B  #3,D0
000023AE  4E4F                    1845          TRAP    #15
000023B0                          1846  
000023B0  43F9 00002723           1847          LEA     CLOSEBRA,A1
000023B6  103C 000E               1848          MOVE.B  #14,D0
000023BA  4E4F                    1849          TRAP    #15
000023BC                          1850  
000023BC  43F9 00002725           1851          LEA     POS,A1
000023C2  103C 000E               1852          MOVE.B  #14,D0
000023C6  4E4F                    1853          TRAP    #15
000023C8                          1854  
000023C8  6000 FE84               1855          BRA     SUBJMPA2
000023CC                          1856  
000023CC                          1857  *   Displays indirect address register with pre decrement
000023CC                          1858  SUBANIDNEG
000023CC  43F9 00002727           1859          LEA     NEG,A1
000023D2  103C 000E               1860          MOVE.B  #14,D0
000023D6  4E4F                    1861          TRAP    #15
000023D8                          1862  
000023D8  43F9 00002721           1863          LEA     OPENBRA,A1
000023DE  103C 000E               1864          MOVE.B  #14,D0
000023E2  4E4F                    1865          TRAP    #15
000023E4                          1866  
000023E4  43F9 00002746           1867          LEA     MAN,A1
000023EA  103C 000E               1868          MOVE.B  #14,D0
000023EE  4E4F                    1869          TRAP    #15
000023F0                          1870  
000023F0  1239 00002827           1871          MOVE.B  bit4,D1
000023F6  103C 0003               1872          MOVE.B  #3,D0
000023FA  4E4F                    1873          TRAP    #15
000023FC                          1874  
000023FC  43F9 00002723           1875          LEA     CLOSEBRA,A1
00002402  103C 000E               1876          MOVE.B  #14,D0
00002406  4E4F                    1877          TRAP    #15
00002408                          1878  
00002408  6000 FE44               1879          BRA     SUBJMPA2
0000240C                          1880  
0000240C                          1881  
0000240C                          1882  
0000240C                          1883  
0000240C                          1884  ******************************************************************************************************
0000240C                          1885  * Displays the EA as hex numbers
0000240C                          1886  * 
0000240C                          1887  SUBEA
0000240C                          1888          *   This finds which mode to use
0000240C  0C39 0000 00002826      1889          CMP.B   #$0,bit3
00002414  6700 FEEE               1890          BEQ     SUBDN2
00002418  0C39 0001 00002826      1891          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002420  6700 FEFE               1892          BEQ     SUBAN
00002424  0C39 0002 00002826      1893          CMP.B   #$2,bit3
0000242C  6700 FF2A               1894          BEQ     SUBANID
00002430  0C39 0003 00002826      1895          CMP.B   #$3,bit3
00002438  6700 FF52               1896          BEQ     SUBANIDPOS
0000243C  0C39 0004 00002826      1897          CMP.B   #$4,bit3
00002444  6786                    1898          BEQ     SUBANIDNEG
00002446  0C39 0005 00002826      1899          CMP.B   #$5,bit3
0000244E  6700 02A4               1900          BEQ     ERROR
00002452  0C39 0006 00002826      1901          CMP.B   #$6,bit3
0000245A  6700 0298               1902          BEQ     ERROR
0000245E  0C39 0007 00002826      1903          CMP.B   #$7,bit3
00002466  6700 0002               1904          BEQ     SUBEAHEX
0000246A                          1905  
0000246A                          1906  SUBEAHEX
0000246A  0C39 0004 00002827      1907          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002472  6700 0086               1908          BEQ     SUBEAID
00002476                          1909  SUBEAID2
00002476                          1910          *   Else it will assume it is absolute addressing mode
00002476  43F9 00002739           1911          LEA     MHEX,A1
0000247C  103C 000E               1912          MOVE.B  #14,D0
00002480  4E4F                    1913          TRAP    #15
00002482                          1914  
00002482  0C39 0000 00002827      1915          CMP.B   #$0,bit4
0000248A  6700 007E               1916          BEQ     SUBEAHEX1
0000248E  0C39 0001 00002827      1917          CMP.B   #$1,bit4
00002496  6700 007A               1918          BEQ     SUBEAHEX2
0000249A                          1919  
0000249A  0C39 0000 00002825      1920          CMP.B   #$0,bit2            * SUB byte displays as word
000024A2  6700 0066               1921          BEQ     SUBEAHEX1
000024A6  0C39 0004 00002825      1922          CMP.B   #$4,bit2            * SUB byte displays as word
000024AE  6700 005A               1923          BEQ     SUBEAHEX1
000024B2  0C39 0001 00002825      1924          CMP.B   #$1,bit2            * SUB word
000024BA  6700 004E               1925          BEQ     SUBEAHEX1
000024BE  0C39 0005 00002825      1926          CMP.B   #$5,bit2            * SUB word
000024C6  6700 0042               1927          BEQ     SUBEAHEX1
000024CA  0C39 0003 00002825      1928          CMP.B   #$3,bit2            * SUBA word
000024D2  6700 0036               1929          BEQ     SUBEAHEX1
000024D6  0C39 0002 00002825      1930          CMP.B   #$2,bit2            * SUB longword
000024DE  6700 0032               1931          BEQ     SUBEAHEX2
000024E2  0C39 0006 00002825      1932          CMP.B   #$6,bit2            * SUB longword
000024EA  6700 0026               1933          BEQ     SUBEAHEX2
000024EE  0C39 0007 00002825      1934          CMP.B   #$7,bit2            * SUBA longword
000024F6  6700 001A               1935          BEQ     SUBEAHEX2
000024FA                          1936  
000024FA                          1937  SUBEAID
000024FA  43F9 00002729           1938          LEA     HASH,A1
00002500  103C 000E               1939          MOVE.B  #14,D0
00002504  4E4F                    1940          TRAP    #15
00002506  6000 FF6E               1941          BRA     SUBEAID2
0000250A                          1942  
0000250A                          1943  SUBEAHEX1  
0000250A                          1944          *absolute address word
0000250A  1E3C 0002               1945          MOVE.B  #2,D7
0000250E  6000 000A               1946          BRA     SUBEAHEX3
00002512                          1947  
00002512                          1948  SUBEAHEX2  *absolute address long
00002512  1E3C 0004               1949          MOVE.B  #4,D7
00002516  6000 0002               1950          BRA     SUBEAHEX3
0000251A                          1951  
0000251A                          1952  SUBEAHEX3
0000251A  BE3C 0000               1953          CMP.B   #0,D7               Compares current addr to ending addr
0000251E  6700 FD2E               1954          BEQ     SUBJMPA2            Branches to done if they are equal
00002522                          1955  
00002522                          1956      
00002522  141E                    1957          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002524                          1958          
00002524  1602                    1959          MOVE.B  D2,D3               Copies data at D2 to D3
00002526                          1960          *   this gets digit in 10's place
00002526  E80B                    1961          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002528                          1962          *   this gets digit in 1's place
00002528  E90A                    1963          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000252A  E80A                    1964          LSR.B   #4,D2               Shifts back right into 1's place
0000252C                          1965  
0000252C                          1966          
0000252C                          1967          *   D3 holds digit in 10's place
0000252C                          1968          *   D2 holds digit in 1's place
0000252C                          1969          
0000252C  1203                    1970          MOVE.B  D3,D1               Displays digit in 10's place first
0000252E                          1971  
0000252E                          1972          *   converts digits 10+ into letters
0000252E                          1973  
0000252E  47F9 00002542           1974          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002534  B23C 0009               1975          CMP.B   #9,D1               Compares digit to 9
00002538  6E00 0146               1976          BGT     CONV                Print out letter representation if greater than 9
0000253C                          1977  
0000253C  103C 0003               1978          MOVE.B  #3,D0               Displays digit if it is less than A
00002540  4E4F                    1979          TRAP    #15
00002542                          1980          
00002542                          1981  SUBEAHEX4    
00002542  1202                    1982          MOVE.B  D2,D1               Displays digit in 1's place second
00002544                          1983  
00002544                          1984          *   converts digits 10+ into letters
00002544  47F9 00002558           1985          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
0000254A  B23C 0009               1986          CMP.B   #9,D1               Compares digit to 9
0000254E  6E00 0130               1987          BGT     CONV                Print out letter representation if greater than 9
00002552                          1988          
00002552  103C 0003               1989          MOVE.B  #3,D0               Displays digit if it is less than A
00002556  4E4F                    1990          TRAP    #15
00002558                          1991          
00002558                          1992  SUBEAHEX5         
00002558                          1993  * Display counter -- creates new line every 8 bytes
00002558                          1994          * D7 is used as counter
00002558                          1995          
00002558  5307                    1996          SUB.B   #1,D7                       
0000255A  60BE                    1997          BRA     SUBEAHEX3              Loops back to display next address
0000255C                          1998  
0000255C                          1999  ***   display EA ends here
0000255C                          2000  
0000255C                          2001  ******************************************************************************************************
0000255C                          2002  * Displays the EA as hex numbers
0000255C                          2003  * INPUT: Size of EA in D4; 1 = word, 2 = longword
0000255C                          2004  * OUTPUT: Displays size of EA reading from A6
0000255C                          2005  * Jumps to location stored in A2 when finished
0000255C                          2006  DISPEA
0000255C  43F9 00002739           2007          LEA     MHEX,A1
00002562  103C 000E               2008          MOVE.B  #14,D0
00002566  4E4F                    2009          TRAP    #15
00002568                          2010  
00002568  B83C 0002               2011          CMP.B   #$2,D4              Branches to longword display if size is 2
0000256C  6700 000A               2012          BEQ     DISPEALONG          Else it will assume word length
00002570                          2013  
00002570                          2014  DISPEAWORD
00002570                          2015          *absolute address word
00002570  1E3C 0002               2016          MOVE.B  #2,D7
00002574  6000 000A               2017          BRA     DISPEA3
00002578                          2018   
00002578                          2019  DISPEALONG
00002578                          2020          *absolute address long
00002578  1E3C 0004               2021          MOVE.B  #4,D7
0000257C  6000 0002               2022          BRA     DISPEA3
00002580                          2023  
00002580                          2024  DISPEA3
00002580  BE3C 0000               2025          CMP.B   #0,D7               Compares current addr to ending addr
00002584  6700 FCC8               2026          BEQ     SUBJMPA2            Branches to done if they are equal
00002588                          2027  
00002588                          2028      
00002588  141E                    2029          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000258A                          2030          
0000258A  1602                    2031          MOVE.B  D2,D3               Copies data at D2 to D3
0000258C                          2032          *   this gets digit in 10's place
0000258C  E80B                    2033          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000258E                          2034          *   this gets digit in 1's place
0000258E  E90A                    2035          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002590  E80A                    2036          LSR.B   #4,D2               Shifts back right into 1's place
00002592                          2037  
00002592                          2038          
00002592                          2039          *   D3 holds digit in 10's place
00002592                          2040          *   D2 holds digit in 1's place
00002592                          2041          
00002592  1203                    2042          MOVE.B  D3,D1               Displays digit in 10's place first
00002594                          2043  
00002594                          2044          *   converts digits 10+ into letters
00002594                          2045  
00002594  47F9 000025A8           2046          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
0000259A  B23C 0009               2047          CMP.B   #9,D1               Compares digit to 9
0000259E  6E00 00E0               2048          BGT     CONV                Print out letter representation if greater than 9
000025A2                          2049  
000025A2  103C 0003               2050          MOVE.B  #3,D0               Displays digit if it is less than A
000025A6  4E4F                    2051          TRAP    #15
000025A8                          2052    
000025A8                          2053  DISPEA4
000025A8  1202                    2054          MOVE.B  D2,D1               Displays digit in 1's place second
000025AA                          2055  
000025AA                          2056          *   converts digits 10+ into letters
000025AA  47F9 000025BE           2057          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
000025B0  B23C 0009               2058          CMP.B   #9,D1               Compares digit to 9
000025B4  6E00 00CA               2059          BGT     CONV                Print out letter representation if greater than 9
000025B8                          2060          
000025B8  103C 0003               2061          MOVE.B  #3,D0               Displays digit if it is less than A
000025BC  4E4F                    2062          TRAP    #15
000025BE                          2063        
000025BE                          2064  DISPEA5
000025BE                          2065  * Display counter -- creates new line every 8 bytes
000025BE                          2066          * D7 is used as counter
000025BE                          2067          
000025BE  5307                    2068          SUB.B   #1,D7                       
000025C0  60BE                    2069          BRA     DISPEA3              Loops back to display next address
000025C2                          2070  
000025C2                          2071  ***   display EA ends here
000025C2                          2072  
000025C2                          2073  
000025C2                          2074  ********************************************************************
000025C2                          2075  * Invalid op-code handling
000025C2                          2076  * Displays DATA YYYY
000025C2                          2077  *  YYYY represents the op-code that failed
000025C2                          2078  INVOPCODE
000025C2  DE1E                    2079          ADD.B   (A6)+,D7
000025C4                          2080  
000025C4                          2081  INVOP
000025C4  43F9 00002788           2082          LEA     MDATA,A1
000025CA  103C 000E               2083          MOVE.B  #14,D0
000025CE  4E4F                    2084          TRAP    #15
000025D0  43F9 0000271B           2085          LEA     TAB,A1
000025D6  103C 000E               2086          MOVE.B  #14,D0
000025DA  4E4F                    2087          TRAP    #15
000025DC  43F9 00002739           2088          LEA     MHEX,A1
000025E2  103C 000E               2089          MOVE.B  #14,D0
000025E6  4E4F                    2090          TRAP    #15
000025E8                          2091          
000025E8  1C3C 0002               2092          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
000025EC                          2093          
000025EC  3407                    2094          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
000025EE  E04A                    2095          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
000025F0  6000 0004               2096          BRA     INVOP2              Skips the second part to do later
000025F4                          2097  
000025F4                          2098  INVOP1
000025F4  1407                    2099          MOVE.B  D7,D2
000025F6                          2100  INVOP2
000025F6  1602                    2101          MOVE.B  D2,D3               Copies data at D2 to D3
000025F8                          2102          *   this gets digit in 10's place
000025F8  E80B                    2103          LSR.B   #4,D3               Shifts right to get rid of 1's place
000025FA                          2104          *   this gets digit in 1's place
000025FA  E90A                    2105          LSL.B   #4,D2               Shifts left to get rid of 10's place
000025FC  E80A                    2106          LSR.B   #4,D2               Shifts back right into 1's place
000025FE                          2107  
000025FE                          2108          
000025FE                          2109          *   D3 holds digit in 10's place
000025FE                          2110          *   D2 holds digit in 1's place
000025FE                          2111          
000025FE  1203                    2112          MOVE.B  D3,D1               Displays digit in 10's place first
00002600                          2113  
00002600                          2114          *   converts digits 10+ into letters
00002600                          2115  
00002600  47F9 00002614           2116          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002606  B23C 0009               2117          CMP.B   #9,D1               Compares digit to 9
0000260A  6E00 0074               2118          BGT     CONV                Print out letter representation if greater than 9
0000260E                          2119  
0000260E  103C 0003               2120          MOVE.B  #3,D0               Displays digit if it is less than A
00002612  4E4F                    2121          TRAP    #15
00002614                          2122          
00002614                          2123  INVOP3   
00002614  1202                    2124          MOVE.B  D2,D1               Displays digit in 1's place second
00002616                          2125  
00002616                          2126          *   converts digits 10+ into letters
00002616  47F9 0000262A           2127          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
0000261C  B23C 0009               2128          CMP.B   #9,D1               Compares digit to 9
00002620  6E00 005E               2129          BGT     CONV                Print out letter representation if greater than 9
00002624                          2130          
00002624  103C 0003               2131          MOVE.B  #3,D0               Displays digit if it is less than A
00002628  4E4F                    2132          TRAP    #15
0000262A                          2133          
0000262A                          2134  INVOP4
0000262A                          2135  * Display counter -- creates new line every 8 bytes
0000262A                          2136          * D6 is used as counter
0000262A                          2137          
0000262A  5306                    2138          SUB.B   #1,D6
0000262C  BC3C 0000               2139          CMP.B   #0,D6
00002630  6700 0004               2140          BEQ     ENDNEWLINE
00002634  60BE                    2141          BRA     INVOP1              Loops back to display next address
00002636                          2142  
00002636                          2143  
00002636                          2144  ******************************************************************************************************
00002636                          2145  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002636                          2146  ENDNEWLINE
00002636  43F9 00002718           2147          LEA     NEWLINE,A1          Creates a new line in output window
0000263C  103C 000E               2148          MOVE.B  #14,D0
00002640  4E4F                    2149          TRAP    #15
00002642                          2150  
00002642  5339 00002822           2151          SUB.B   #1,dispcount
00002648  0C39 0000 00002822      2152          CMP.B   #0,dispcount               Checks if display counter is zero
00002650  6600 E9C2               2153          BNE     NEWADDR
00002654                          2154  
00002654                          2155  * Asks user to press enter to continue
00002654                          2156  * Resets counter
00002654  43F9 00002718           2157          LEA     NEWLINE,A1          Creates a new line in output window
0000265A  103C 000E               2158          MOVE.B  #14,D0
0000265E  4E4F                    2159          TRAP    #15
00002660                          2160          
00002660  43F9 00002806           2161          LEA     MCONT,A1            Asks user to press enter to continue
00002666  103C 000E               2162          MOVE.B  #14,D0
0000266A  4E4F                    2163          TRAP    #15
0000266C                          2164  
0000266C  103C 0004               2165          MOVE.B  #4,D0               Takes in user input
00002670  4E4F                    2166          TRAP    #15
00002672  4281                    2167          CLR.L   D1                  Clears D1 incase user decides to input something
00002674                          2168  
00002674  13FC 001E 00002822      2169          MOVE.B  #dispnum,dispcount  Resets display counter
0000267C  6000 E996               2170          BRA     NEWADDR             Loops back to beginning
00002680                          2171  
00002680                          2172  
00002680                          2173  ******************************************************************************************************
00002680                          2174  * Converts decimal number into hex and displays it
00002680                          2175  *   converts number 10-15 to A-F
00002680                          2176  *   INPUT: decimal number in D1
00002680                          2177  *   OUTPUT: HEX number to output
00002680  B23C 000A               2178  CONV    CMP.B   #10,D1              Displays 10 as A
00002684  6700 002A               2179          BEQ     HEXA
00002688  B23C 000B               2180          CMP.B   #11,D1              Displays 11 as B
0000268C  6700 002C               2181          BEQ     HEXB
00002690  B23C 000C               2182          CMP.B   #12,D1              Displays 12 as C
00002694  6700 002E               2183          BEQ     HEXC
00002698  B23C 000D               2184          CMP.B   #13,D1              Displays 13 as D
0000269C  6700 0030               2185          BEQ     HEXD
000026A0  B23C 000E               2186          CMP.B   #14,D1              Displays 14 as E
000026A4  6700 0032               2187          BEQ     HEXE
000026A8  B23C 000F               2188          CMP.B   #15,D1              Displays 15 as F
000026AC  6700 0034               2189          BEQ     HEXF
000026B0                          2190  
000026B0  43F9 0000272B           2191  HEXA    LEA     DISPA,A1            Loads A character
000026B6  6000 0034               2192          BRA     PRINT
000026BA                          2193    
000026BA  43F9 0000272D           2194  HEXB    LEA     DISPB,A1            Loads B character
000026C0  6000 002A               2195          BRA     PRINT
000026C4                          2196  
000026C4  43F9 0000272F           2197  HEXC    LEA     DISPC,A1            Loads C character
000026CA  6000 0020               2198          BRA     PRINT
000026CE                          2199  
000026CE  43F9 00002731           2200  HEXD    LEA     DISPD,A1            Loads D character
000026D4  6000 0016               2201          BRA     PRINT
000026D8                          2202  
000026D8  43F9 00002733           2203  HEXE    LEA     DISPE,A1            Loads E character
000026DE  6000 000C               2204          BRA     PRINT
000026E2                          2205  
000026E2  43F9 00002735           2206  HEXF    LEA     DISPF,A1            Loads F character
000026E8  6000 0002               2207          BRA     PRINT
000026EC                          2208  
000026EC  103C 000E               2209  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000026F0  4E4F                    2210          TRAP    #15                 Prints out message in A1
000026F2  4ED3                    2211          JMP     (A3)
000026F4                          2212  
000026F4  43F9 000027D4           2213  ERROR   LEA     MERROR,A1
000026FA  103C 000E               2214          MOVE.B  #14,D0
000026FE  4E4F                    2215          TRAP    #15
00002700  6000 000E               2216          BRA     EXIT
00002704                          2217  
00002704  43F9 000027EB           2218  DONE    LEA     MDONE,A1
0000270A  103C 000E               2219          MOVE.B  #14,D0
0000270E  4E4F                    2220          TRAP    #15
00002710                          2221  
00002710  103C 0009               2222  EXIT    MOVE.B  #9,D0
00002714  4E4F                    2223          TRAP    #15
00002716                          2224  
00002716                          2225  ************************************ Output stuff **************************************
00002716                          2226  * Stuff for output
00002716                          2227  
00002716  =0000000D               2228  CR      EQU     $0D
00002716  =0000000A               2229  LF      EQU     $0A
00002716                          2230  
00002716= 20 00                   2231  SPACE       DC.B    ' ',0
00002718= 0D 0A 00                2232  NEWLINE     DC.B    '',CR,LF,0
0000271B= 20 20 20 00             2233  TAB         DC.B    '   ',0
0000271F= 2C 00                   2234  COMMA       DC.B    ',',0
00002721= 28 00                   2235  OPENBRA     DC.B    '(',0
00002723= 29 00                   2236  CLOSEBRA    DC.B    ')',0
00002725= 2B 00                   2237  POS         DC.B    '+',0
00002727= 2D 00                   2238  NEG         DC.B    '-',0
00002729= 23 00                   2239  HASH        DC.B    '#',0
0000272B                          2240  
0000272B                          2241  
0000272B= 41 00                   2242  DISPA       DC.B    'A',0
0000272D= 42 00                   2243  DISPB       DC.B    'B',0
0000272F= 43 00                   2244  DISPC       DC.B    'C',0
00002731= 44 00                   2245  DISPD       DC.B    'D',0
00002733= 45 00                   2246  DISPE       DC.B    'E',0
00002735= 46 00                   2247  DISPF       DC.B    'F',0
00002737                          2248  
00002737= 2E 00                   2249  MDOT        DC.B    '.',0
00002739= 24 00                   2250  MHEX        DC.B    '$',0
0000273B= 42 20 00                2251  MBYTE       DC.B    'B ',0
0000273E= 57 20 00                2252  MWORD       DC.B    'W ',0
00002741= 4C 20 00                2253  MLONG       DC.B    'L ',0
00002744= 44 00                   2254  MDN         DC.B    'D',0
00002746= 41 00                   2255  MAN         DC.B    'A',0
00002748                          2256  
00002748= 4C 53 4C 00             2257  MLSL        DC.B    'LSL',0
0000274C= 4C 53 52 00             2258  MLSR        DC.B    'LSR',0
00002750= 4E 45 47 2E 00          2259  MMNEGW      DC.B    'NEG.',0
00002755= 44 49 56 53 2E 57 00    2260  MMDIVSW     DC.B    'DIVS.W',0
0000275C= 4D 55 4C 53 2E 57 00    2261  MMULSW      DC.B    'MULS.W',0
00002763= 4D 4F 56 45 2E 42 00    2262  MMOVEB      DC.B    'MOVE.B',0
0000276A= 4D 4F 56 45 2E 57 00    2263  MMOVEW      DC.B    'MOVE.W',0
00002771= 4D 4F 56 45 2E 4C 00    2264  MMOVEL      DC.B    'MOVE.L',0
00002778= 4D 4F 56 45 41 2E ...   2265  MMOVEAW     DC.B    'MOVEA.W',0
00002780= 4D 4F 56 45 41 2E ...   2266  MMOVEAL     DC.B    'MOVEA.L',0
00002788                          2267  
00002788= 44 41 54 41 00          2268  MDATA       DC.B    'DATA',0
0000278D= 53 55 42 2E 00          2269  MSUB        DC.B    'SUB.',0
00002792= 53 55 42 41 2E 00       2270  MSUBA       DC.B    'SUBA.',0
00002798= 41 4E 44 2E 00          2271  MAND        DC.B    'AND.',0
0000279D= 41 44 44 2E 00          2272  MADD        DC.B    'ADD.',0
000027A2= 53 55 42 49 2E 00       2273  MSUBI       DC.B    'SUBI.',0
000027A8= 4F 52 49 2E 00          2274  MORI        DC.B    'ORI.',0
000027AD= 4E 4F 54 2E 00          2275  MNOT        DC.B    'NOT.',0
000027B2= 4D 55 4C 53 2E 00       2276  MMUL        DC.B    'MULS.',0
000027B8= 4E 45 47 00             2277  MNEG        DC.B    'NEG',0
000027BC                          2278  
000027BC= 42 45 51 00             2279  MBEQ        DC.B    'BEQ',0
000027C0= 42 4E 45 00             2280  MBNE        DC.B    'BNE',0
000027C4= 42 4C 54 00             2281  MBLT        DC.B    'BLT',0
000027C8= 42 48 49 00             2282  MBHI        DC.B    'BHI',0
000027CC= 42 52 41 00             2283  MBRA        DC.B    'BRA',0
000027D0= 4E 4F 50 00             2284  MNOP        DC.B    'NOP',0
000027D4                          2285  
000027D4= 45 52 52 4F 52 3A ...   2286  MERROR      DC.B    'ERROR: Something broke',0
000027EB= 43 4F 4D 50 4C 45 ...   2287  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00002806= 2A 2A 50 52 45 53 ...   2288  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00002822                          2289  
00002822                          2290  
00002822                          2291  ********************************** MEMORY STORAGE **********************************************
00002822                          2292  * Stores memory locations at the end of the program
00002822                          2293  * How DS works: Give it a variable name.
00002822                          2294  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00002822                          2295  *   Last is the number of storage you want. 
00002822                          2296  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00002822                          2297  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00002822                          2298  *            
00002822                          2299  
00002822                          2300  dispcount   DS.B    1           Used to count display lines
00002823                          2301  
00002823                          2302  bit0        DS.B    1           SEE NOTE UP TOP
00002824                          2303  bit1        DS.B    1           SEE NOTE UP TOP
00002825                          2304  bit2        DS.B    1           SEE NOTE UP TOP
00002826                          2305  bit3        DS.B    1           SEE NOTE UP TOP
00002827                          2306  bit4        DS.B    1           SEE NOTE UP TOP
00002828                          2307  
00002828                          2308  
00002828                          2309      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1388
ADDIMD0             13B8
ADDIMD1             13C6
ADDIMD4             13D4
ADDR1               7000
ADDR2               726C
BCC                 1C88
BCCBEQ              1D04
BCCBHI              1D22
BCCBLT              1D18
BCCBNE              1D0E
BCCBRA              1CFA
BCCDISP             1CCE
BCCLONG             1CB6
BCCNEXT             1CBE
BCCPRINT            1D2C
BCCWORD             1CAE
BIT0                2823
BIT1                2824
BIT2                2825
BIT3                2826
BIT4                2827
CLOSEBRA            2723
CODE                10E8
COMMA               271F
CONV                2680
CR                  D
DISPA               272B
DISPADDR1           1032
DISPADDR2           1034
DISPADDR3           1068
DISPADDR4           107E
DISPADDR5           1094
DISPADDR6           10AA
DISPADDREND         10B4
DISPADDRSTART       1026
DISPB               272D
DISPC               272F
DISPCOUNT           2822
DISPD               2731
DISPE               2733
DISPEA              255C
DISPEA3             2580
DISPEA4             25A8
DISPEA5             25BE
DISPEALONG          2578
DISPEAWORD          2570
DISPF               2735
DISPNUM             1E
DIVSW               18D4
DONE                2704
ENDNEWLINE          2636
ENDNLINC            1846
ERROR               26F4
EXIT                2710
HANDLEDES           13EA
HASH                2729
HEXA                26B0
HEXB                26BA
HEXC                26C4
HEXD                26CE
HEXE                26D8
HEXF                26E2
IMD                 1D3C
IMD2                1D56
IMD3                1D5E
IMD4                1D6A
IMDBYTE             1DD8
IMDEA               1E00
IMDEA2              1E1C
IMDEA3              1E32
IMDLONG             1DF6
IMDPRINT            1DA4
IMDPRINTEND         1DD0
IMDPRINTORI         1DBC
IMDPRINTSUBI        1DC6
IMDWORD             1DE8
INVOP               25C4
INVOP1              25F4
INVOP2              25F6
INVOP3              2614
INVOP4              262A
INVOPCODE           25C2
LF                  A
LSLR                1AB8
LSLRDESD            1736
LSLRMEM             1B46
LSLRSRCD            170E
MADD                279D
MAN                 2746
MAND                2798
MBEQ                27BC
MBHI                27C8
MBLT                27C4
MBNE                27C0
MBRA                27CC
MBYTE               273B
MCONT               2806
MDATA               2788
MDN                 2744
MDONE               27EB
MDOT                2737
MERROR              27D4
MHEX                2739
MISC                1E36
MISCBIT2            1E64
MISCBIT3            1E70
MISCBYTE            1ED6
MISCEA              1F04
MISCEA2             1F20
MISCLONG            1EF8
MISCNOP             1E7C
MISCNOT             1E8C
MISCNOT2            1E94
MISCNOT3            1E9C
MISCNOT4            1EA8
MISCPRINT           1F24
MISCPRINTEND        1F50
MISCPRINTNEG        1F46
MISCPRINTNOT        1F3C
MISCWORD            1EE8
MLONG               2741
MLSL                2748
MLSR                274C
MMDIVSW             2755
MMNEGW              2750
MMOVEAL             2780
MMOVEAW             2778
MMOVEB              2763
MMOVEL              2771
MMOVEW              276A
MMUL                27B2
MMULSW              275C
MNEG                27B8
MNOP                27D0
MNOT                27AD
MORI                27A8
MOVB                1304
MOVBDN1             1682
MOVBDN2             1822
MOVEAL              12B0
MOVEAN1             143A
MOVEAN2             1752
MOVEAW              11D0
MOVEIAN1            14AE
MOVEIAND1           15E2
MOVEIANI1           1542
MOVIAN2             176E
MOVIAND2            17E2
MOVIANI2            17A2
MOVL                1224
MOVW                1144
MSUB                278D
MSUBA               2792
MSUBI               27A2
MULSW               184A
MWORD               273E
NEG                 2727
NEGW                1962
NEWADDR             1014
NEWLINE             2718
OPENBRA             2721
POS                 2725
PRINT               26EC
PRINTB              1B84
PRINTBYTE           19BC
PRINTL              1BEC
PRINTLONG           1A64
PRINTLSL            1B12
PRINTLSLRCOUNT      1C20
PRINTLSR            1C54
PRINTW              1BB8
PRINTWORD           1A10
SPACE               2716
START               1000
SUB                 1F58
SUB1                1F8A
SUB2                1F6C
SUB3                1F74
SUB4                1F7E
SUBA                21B6
SUBACHECK           1FC6
SUBAN               2320
SUBAN2              233C
SUBANID             2358
SUBANIDNEG          23CC
SUBANIDPOS          238C
SUBDN               22E8
SUBDN2              2304
SUBEA               240C
SUBEAHEX            246A
SUBEAHEX1           250A
SUBEAHEX2           2512
SUBEAHEX3           251A
SUBEAHEX4           2542
SUBEAHEX5           2558
SUBEAID             24FA
SUBEAID2            2476
SUBERRORTEST1       22A6
SUBERRORTEST11      22E6
SUBJMPA2            224E
SUBPRINT            2250
SUBPRINTADD         2294
SUBPRINTAND         2284
SUBPRINTEND         22A4
SUBPRINTSUB         2274
SUBSIZE1            2026
SUBSIZE11           204C
SUBSIZE12           2062
SUBSIZE2            2066
SUBSIZE21           208C
SUBSIZE22           20A2
SUBSIZE3            20A6
SUBSIZE31           20CC
SUBSIZE32           20E2
SUBSIZE4            20E6
SUBSIZE41           2110
SUBSIZE42           2126
SUBSIZE5            212A
SUBSIZE51           2154
SUBSIZE52           216A
SUBSIZE6            216E
SUBSIZE61           219C
SUBSIZE62           21B2
SUBSIZE7            21DA
SUBSIZE71           21FC
SUBSIZE72           2212
SUBSIZE8            2216
SUBSIZE81           2236
SUBSIZE82           224A
TAB                 271B
