00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/4/2015 10:21:40 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL
00000000                            53  * ROR
00000000                            54  * BTST     EXTRA TAB    IMMEDIATE DATA 0702
00000000                            55  ****************************************************************************
00000000                            56  
00000000                            57  
00000000                            58  * sets start and end address
00000000                            59  * temp hard code
00000000                            60  * make UI later for input
00000000  =00007000                 61  addr1       EQU     $7000
00000000                            62  *addr2   EQU     $703C
00000000  =0000726C                 63  addr2       EQU     $726C
00000000  =0000001E                 64  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            65  
00000000                            66  
00001000                            67      ORG    $1000
00001000                            68  START:                  ; first instruction of program
00001000                            69  
00001000                            70          
00001000                            71  
00001000                            72  
00001000                            73          *   this stores some test EA into memory m,
00001000                            74          *LEA     addr1,A1
00001000                            75          *MOVE.W  #$0440,(A1)+        *917C
00001000                            76          *MOVE.W  #$917C,(A1)+       
00001000                            77          *MOVE.L  #$5555A7FF,(A1)+
00001000                            78          *MOVE.W  #$9078,(A1)+
00001000                            79          *MOVE.W  #$5555,(A1)+
00001000                            80          
00001000                            81  
00001000                            82          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            83          
00001000                            84          *MOVE.L  #$6700F0D8,$7000
00001000                            85          *MOVE.W  #$4E71,$7000         NOP
00001000                            86  
00001000                            87          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            88  
00001000  21FC 48E3FAF5 7000        89          MOVE.L  #$48E3FAF5,$7000
00001008  21FC 4CF8CDD9 7004        90          MOVE.L  #$4CF8CDD9,$7004
00001010  31FC 4000 7008            91          MOVE.W  #$4000,$7008
00001016                            92  
00001016                            93  *********************************************************************************************************************
00001016                            94  * Takes in user start and end address
00001016                            95  
00001016                            96  IOSTART
00001016                            97  *   Displays message asking for address
00001016  43F9 00002ECE             98          LEA     MADDR1,A1           Loads message to retrieve first number
0000101C  6100 0020                 99          BSR     IOGETADDR
00001020                           100  
00001020  0804 0000                101          BTST    #0,D4               Checks of the starting address is an odd number
00001024  6600 0090                102          BNE     IOERROR4            Throws an error if it is because it will crash
00001028                           103  
00001028  2E04                     104          MOVE.L  D4,D7               Moves starting address to D7 for now
0000102A  43F9 00002EF1            105          LEA     MADDR2,A1           Then grabs the ending address
00001030  6100 000C                106          BSR     IOGETADDR
00001034  B887                     107          CMP.L   D7,D4               Compares the start address to end address
00001036  6E00 008E                108          BGT     DISPADDR            Continues if start < end
0000103A  6000 004C                109          BRA     IOERROR1            Error if not
0000103E                           110  
0000103E                           111  IOGETADDR
0000103E  2649                     112          MOVEA.L A1,A3               Saves the message incase of an error
00001040  103C 000E                113          MOVE.B  #14,D0              Prepares to display message
00001044  4E4F                     114          TRAP    #15                 Displays message
00001046                           115  
00001046  4244                     116          CLR     D4                  Clears D4 register to prevent errors
00001048                           117  
00001048  43F9 0000302A            118          LEA     startaddr,A1        Uses this memory location to store the data
0000104E  103C 0002                119          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001052  4E4F                     120          TRAP    #15
00001054                           121  
00001054  B23C 0008                122          CMP.B   #8,D1               Throws an error if the input is longer than a longword
00001058  6E00 003C                123          BGT     IOERROR2
0000105C  1A01                     124          MOVE.B  D1,D5               Moves the length of the input to D5
0000105E                           125  
0000105E                           126  IOSTARTLOOP
0000105E  45F9 0000302A            127          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
00001064                           128  
00001064                           129  IOLOOP
00001064  141A                     130          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001066  5305                     131          SUB.B   #1,D5               Subtract 1 from counter
00001068  6100 1BE2                132          BSR     DEC2HEX             Converts decimal to hex number
0000106C  B23C 000F                133          CMP.B   #$F,D1
00001070  6700 0034                134          BEQ     IOERROR3
00001074                           135  
00001074  1C05                     136          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001076  CDFC 0004                137          MULS    #4,D6               Multiply by 4 to find number of shifts left
0000107A                           138          
0000107A  EDAB                     139          LSL.L   D6,D3               Shifts hex left
0000107C  D883                     140          ADD.L   D3,D4               Adds number to new total
0000107E                           141          
0000107E  7600                     142          MOVE.L  #0,D3               Clears D3 to prevent errors
00001080                           143          
00001080  BA3C 0000                144          CMP.B   #0,D5               Compares counter to 0    
00001084  66DE                     145          BNE     IOLOOP              Otherwise will loop
00001086  4E75                     146          RTS
00001088                           147  
00001088                           148  * Error message for start address greater than end address
00001088                           149  IOERROR1
00001088  43F9 00002F34            150          LEA     MIOERR1,A1
0000108E  103C 000D                151          MOVE.B  #13,D0
00001092  4E4F                     152          TRAP    #15
00001094  6080                     153          BRA     IOSTART
00001096                           154  
00001096                           155  * Error message if user input address is longer than longword
00001096                           156  IOERROR2
00001096  43F9 00002F6C            157          LEA     MIOERR2,A1
0000109C  103C 000D                158          MOVE.B  #13,D0
000010A0  4E4F                     159          TRAP    #15
000010A2  224B                     160          MOVEA.L A3,A1
000010A4  6098                     161          BRA     IOGETADDR
000010A6                           162  
000010A6                           163  * Error message if user enters non-valid hex numbers
000010A6                           164  IOERROR3
000010A6  43F9 00002F9F            165          LEA     MIOERR3,A1
000010AC  103C 000D                166          MOVE.B  #13,D0
000010B0  4E4F                     167          TRAP    #15
000010B2  224B                     168          MOVEA.L A3,A1
000010B4  6088                     169          BRA     IOGETADDR
000010B6                           170  
000010B6                           171  * Error message for odd numbered addresses
000010B6                           172  IOERROR4
000010B6  43F9 00002FBB            173          LEA     MIOERR4,A1
000010BC  103C 000D                174          MOVE.B  #13,D0
000010C0  4E4F                     175          TRAP    #15
000010C2  6000 FF52                176          BRA     IOSTART
000010C6                           177  
000010C6                           178  ******************************************** displays address location***********************************************
000010C6                           179  * This displays the address location of the op-code being worked on
000010C6                           180  * A6 is used as current address
000010C6                           181  DISPADDR
000010C6  23C7 0000302A            182          MOVE.L  D7,startaddr
000010CC  23C4 0000302E            183          MOVE.L  D4,endaddr
000010D2  6100 1A28                184          BSR     CLRDN
000010D6  2C79 0000302A            185          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010DC  13FC 001E 00003029       186          MOVE.B  #dispnum,dispcount  Sets display line counter
000010E4                           187  
000010E4  43F9 00002DD2            188          LEA     NEWLINE,A1          Creates a new line in output window
000010EA  103C 000E                189          MOVE.B  #14,D0
000010EE  4E4F                     190          TRAP    #15
000010F0                           191  
000010F0                           192  NEWADDR
000010F0  2E0E                     193          MOVE.L  A6,D7               Loads the current address into D7
000010F2  BEB9 0000302E            194          CMP.L   endaddr,D7          Compares current address to end address
000010F8  6E00 1C68                195          BGT     ASK4REPEAT          Branches to done if current address > end address
000010FC  45F9 00001190            196          LEA     DISPADDREND,A2
00001102                           197  
00001102                           198  ************************************************
00001102                           199  * Displays address as HEX
00001102                           200  * INPUT: address stored into D7
00001102                           201  * OUTPUT: prints hex address to output window
00001102                           202  DISPADDRSTART
00001102  1C3C 0002                203          MOVE.B  #2,D6               D6 is a counter, used for looping
00001106  2407                     204          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
00001108  4842                     205          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
0000110A  6000 0004                206          BRA     DISPADDR2           Skips the second part to do later
0000110E                           207  
0000110E                           208  DISPADDR1
0000110E  3407                     209          MOVE.W  D7,D2
00001110                           210  DISPADDR2
00001110  3202                     211          MOVE.W  D2,D1               D1 will be the first byte of the word
00001112  3602                     212          MOVE.W  D2,D3               D3 will be the second byte of the word
00001114  3802                     213          MOVE.W  D2,D4               D4 will be the third byte of the word
00001116  3A02                     214          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001118                           215  
00001118  E049                     216          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000111A  E849                     217          LSR.W   #4,D1
0000111C  E94B                     218          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
0000111E  E04B                     219          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001120  E84B                     220          LSR.W   #4,D3
00001122  E14C                     221          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001124  E04C                     222          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001126  E84C                     223          LSR.W   #4,D4
00001128  E14D                     224          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000112A  E94D                     225          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000112C  E04D                     226          LSR.W   #8,D5
0000112E  E84D                     227          LSR.W   #4,D5
00001130                           228          
00001130                           229          
00001130  47F9 00001144            230          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001136  B23C 0009                231          CMP.B   #9,D1               Compares digit to 9
0000113A  6E00 1A9C                232          BGT     CONV                Print out letter representation if greater than 9
0000113E                           233  
0000113E  103C 0003                234          MOVE.B  #3,D0               Displays digit if it is less than A
00001142  4E4F                     235          TRAP    #15
00001144                           236          
00001144                           237  DISPADDR3   
00001144  1203                     238          MOVE.B  D3,D1               Displays digit in 1's place second
00001146                           239  
00001146                           240          *   converts digits 10+ into letters
00001146  47F9 0000115A            241          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
0000114C  B23C 0009                242          CMP.B   #9,D1               Compares digit to 9
00001150  6E00 1A86                243          BGT     CONV                Print out letter representation if greater than 9
00001154                           244          
00001154  103C 0003                245          MOVE.B  #3,D0               Displays digit if it is less than A
00001158  4E4F                     246          TRAP    #15
0000115A                           247  
0000115A                           248  DISPADDR4
0000115A  1204                     249          MOVE.B  D4,D1               Displays digit in 1's place second
0000115C                           250  
0000115C                           251          *   converts digits 10+ into letters
0000115C  47F9 00001170            252          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001162  B23C 0009                253          CMP.B   #9,D1               Compares digit to 9
00001166  6E00 1A70                254          BGT     CONV                Print out letter representation if greater than 9
0000116A                           255          
0000116A  103C 0003                256          MOVE.B  #3,D0               Displays digit if it is less than A
0000116E  4E4F                     257          TRAP    #15
00001170                           258  
00001170                           259  DISPADDR5
00001170  1205                     260          MOVE.B  D5,D1               Displays digit in 1's place second
00001172                           261  
00001172                           262          *   converts digits 10+ into letters
00001172  47F9 00001186            263          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
00001178  B23C 0009                264          CMP.B   #9,D1               Compares digit to 9
0000117C  6E00 1A5A                265          BGT     CONV                Print out letter representation if greater than 9
00001180                           266          
00001180  103C 0003                267          MOVE.B  #3,D0               Displays digit if it is less than A
00001184  4E4F                     268          TRAP    #15
00001186                           269          
00001186                           270  DISPADDR6
00001186                           271  * Display counter -- creates new line every 8 bytes
00001186                           272          * D6 is used as counter
00001186                           273          
00001186  5306                     274          SUB.B   #1,D6
00001188  BC3C 0000                275          CMP.B   #0,D6
0000118C  6680                     276          BNE     DISPADDR1
0000118E                           277  
0000118E  4ED2                     278          JMP     (A2)                Jumps to address stored in A2 when complete
00001190                           279  
00001190                           280  DISPADDREND
00001190  43F9 00002DD5            281          LEA     TAB,A1
00001196  103C 000E                282          MOVE.B  #14,D0
0000119A  4E4F                     283          TRAP    #15
0000119C                           284          
0000119C                           285  *********************************************************************************************************************
0000119C                           286  * Splits the first byte of the op code into nibbles
0000119C                           287  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000119C                           288  
0000119C  4281                     289          CLR.L   D1                  Clears the data registers
0000119E  4282                     290          CLR.L   D2
000011A0  4283                     291          CLR.L   D3
000011A2  4284                     292          CLR.L   D4
000011A4  4285                     293          CLR.L   D5
000011A6  4286                     294          CLR.L   D6
000011A8  3C16                     295          MOVE.W  (A6),D6
000011AA  141E                     296          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000011AC                           297    
000011AC  1E02                     298          MOVE.B  D2,D7
000011AE  E14F                     299          LSL.W   #8,D7
000011B0                           300          
000011B0  1602                     301          MOVE.B  D2,D3               Copies data at D2 to D3
000011B2                           302          *   this gets digit in 10's place
000011B2  E80B                     303          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011B4                           304          *   this gets digit in 1's place
000011B4  E90A                     305          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011B6  E80A                     306          LSR.B   #4,D2               Shifts back right into 1's place
000011B8                           307          
000011B8                           308          *   D3 holds digit in 10's place
000011B8                           309          *   D2 holds digit in 1's place
000011B8                           310  
000011B8                           311          *   Moves second nibble to D5 to be used later
000011B8  1A02                     312          MOVE.B  D2,D5
000011BA  13C3 00003032            313          MOVE.B  D3,bit0
000011C0                           314          *   Goes to a branch-table to figure out which op code it is
000011C0  6000 0002                315          BRA     CODE
000011C4                           316  
000011C4                           317  ******************************************************************************************************
000011C4                           318  *   This is where the table goes to detirmine which op-code to use
000011C4                           319  CODE    
000011C4  B63C 0000                320          CMP.B   #$0,D3              Goes to immediate operation section
000011C8  6700 0E32                321          BEQ     IMD
000011CC  B63C 0004                322          CMP.B   #$4,D3              Goes to miscellaneous section
000011D0  6700 0F5E                323          BEQ     MISC
000011D4  B63C 0006                324          CMP.B   #$6,D3
000011D8  6700 0D6E                325          BEQ     BCC
000011DC  B63C 0009                326          CMP.B   #$9,D3              Goes to sub section
000011E0  6700 1240                327          BEQ     SUB
000011E4  B63C 000C                328          CMP.B   #$C,D3              Goes to sub but displays as AND
000011E8  6700 1238                329          BEQ     SUB
000011EC  B63C 000D                330          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011F0  6700 1230                331          BEQ     SUB
000011F4  B63C 000B                332          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011F8  6700 1228                333          BEQ     SUB
000011FC  B63C 0001                334          CMP.B   #$1,D3
00001200  6700 02D4                335          BEQ     MOVB                Goes to movb
00001204  B63C 0003                336          CMP.B   #$3,D3
00001208  6700 010C                337          BEQ     MOVW                Goes to movb
0000120C  B63C 0002                338          CMP.B   #$2,D3
00001210  6700 01E4                339          BEQ     MOVL                Goes to movb
00001214  B63C 0008                340          CMP.B   #$8,D3
00001218  6700 08EA                341          BEQ     DIVSW               Goes to divsw
0000121C  B63C 000E                342          CMP.B   #$E,D3
00001220  6700 0AC6                343          BEQ     LSLR                Goes to divsw
00001224                           344  
00001224  6000 18E8                345          BRA     INVOPCODE
00001228                           346          
00001228                           347  JSR
00001228  43F9 00002E04            348          LEA MJSR,A1
0000122E  103C 000E                349          MOVE.B  #14,D0
00001232  4E4F                     350          TRAP    #15 
00001234                           351          
00001234  1406                     352          MOVE.B  D6,D2
00001236  EB0A                     353          LSL.B   #5,D2
00001238  EA0A                     354          LSR.B   #5,D2
0000123A  13C2 00003036            355          MOVE.B  D2,bit4
00001240                           356          
00001240  1406                     357          MOVE.B  D6,D2
00001242  E50A                     358          LSL.B   #2,D2
00001244  EA0A                     359          LSR.B   #5,D2
00001246  13C2 00003035            360          MOVE.B  D2,bit3
0000124C                           361  
0000124C  183C 0003                362          MOVE.B  #$3,D4
00001250                           363  
00001250  0C39 0002 00003035       364          CMP.B   #$2,bit3
00001258  6700 0484                365          BEQ     MOVEIAN1
0000125C  0C39 0007 00003035       366          CMP.B   #$7,bit3
00001264  6700 02F4                367          BEQ     ADDIMD
00001268                           368          
00001268                           369  BTST 
00001268  43F9 00002E08            370          LEA MBTST,A1
0000126E  103C 000E                371          MOVE.B  #14,D0
00001272  4E4F                     372          TRAP    #15 
00001274                           373          
00001274  1406                     374          MOVE.B  D6,D2
00001276  EB0A                     375          LSL.B   #5,D2
00001278  EA0A                     376          LSR.B   #5,D2
0000127A  13C2 00003036            377          MOVE.B  D2,bit4
00001280                           378          
00001280  1406                     379          MOVE.B  D6,D2
00001282  E50A                     380          LSL.B   #2,D2
00001284  EA0A                     381          LSR.B   #5,D2
00001286  13C2 00003035            382          MOVE.B  D2,bit3
0000128C                           383          
0000128C  3406                     384          MOVE.W  D6,D2
0000128E  E94A                     385          LSL.W   #4,D2
00001290  E04A                     386          LSR.W   #8,D2
00001292  EA4A                     387          LSR.W   #5,D2
00001294  13C2 00003033            388          MOVE.B  D2,bit1
0000129A                           389          
0000129A  43F9 00002DD5            390          LEA TAB,A1
000012A0  103C 000E                391          MOVE.B  #14,D0
000012A4  4E4F                     392          TRAP    #15
000012A6                           393  
000012A6  43F9 00002DED            394          LEA DISPD,A1
000012AC  103C 000E                395          MOVE.B  #14,D0
000012B0  4E4F                     396          TRAP    #15
000012B2                           397          
000012B2  1A3C 0004                398          MOVE.B   #$4,D5
000012B6                           399          
000012B6  1239 00003033            400          MOVE.B  bit1,D1
000012BC  103C 0003                401          MOVE.B  #3,D0
000012C0  4E4F                     402          TRAP    #15
000012C2                           403          
000012C2  43F9 00002DD9            404          LEA COMMA,A1
000012C8  103C 000E                405          MOVE.B  #14,D0
000012CC  4E4F                     406          TRAP    #15
000012CE                           407          
000012CE  0C39 0000 00003035       408          CMP.B   #$0,bit3           
000012D6  6700 05DA                409          BEQ     MOVBDN1
000012DA  0C39 0001 00003035       410          CMP.B   #$1,bit3
000012E2  6700 0386                411          BEQ     MOVEAN1
000012E6  0C39 0002 00003035       412          CMP.B   #$2,bit3
000012EE  6700 03EE                413          BEQ     MOVEIAN1
000012F2  0C39 0003 00003035       414          CMP.B   #$3,bit3
000012FA  6700 0476                415          BEQ     MOVEIANI1
000012FE  0C39 0004 00003035       416          CMP.B   #$4,bit3
00001306  6700 050A                417          BEQ     MOVEIAND1
0000130A  0C39 0007 00003035       418          CMP.B   #$7,bit3
00001312  6700 0246                419          BEQ     ADDIMD
00001316                           420  MOVW
00001316  E20A                     421          LSR.B   #1,D2
00001318  13C2 00003033            422          MOVE.B  D2,bit1
0000131E                           423          
0000131E  1416                     424          MOVE.B  (A6),D2
00001320  EB0A                     425          LSL.B   #5,D2
00001322  EA0A                     426          LSR.B   #5,D2
00001324  13C2 00003036            427          MOVE.B  D2,bit4
0000132A                           428          
0000132A  141E                     429          MOVE.B  (A6)+,D2
0000132C  E50A                     430          LSL.B   #2,D2
0000132E  EA0A                     431          LSR.B   #5,D2
00001330  13C2 00003035            432          MOVE.B  D2,bit3
00001336                           433          
00001336  EF4E                     434          LSL.W   #7,D6
00001338  E04E                     435          LSR.W   #8,D6 
0000133A  EA4E                     436          LSR.W   #5,D6 
0000133C  13C6 00003034            437          MOVE.B  D6,bit2
00001342                           438  
00001342  0C39 0001 00003034       439          CMP.B   #$1,bit2
0000134A  6700 0056                440          BEQ     MOVEAW
0000134E                           441  
0000134E  43F9 00002E37            442          LEA MMOVEW,A1
00001354  103C 000E                443          MOVE.B  #14,D0
00001358  4E4F                     444          TRAP    #15 
0000135A                           445  
0000135A  0C39 0000 00003035       446          CMP.B   #$0,bit3           
00001362  6700 054E                447          BEQ     MOVBDN1
00001366  0C39 0001 00003035       448          CMP.B   #$1,bit3
0000136E  6700 02FA                449          BEQ     MOVEAN1
00001372  0C39 0002 00003035       450          CMP.B   #$2,bit3
0000137A  6700 0362                451          BEQ     MOVEIAN1
0000137E  0C39 0003 00003035       452          CMP.B   #$3,bit3
00001386  6700 03EA                453          BEQ     MOVEIANI1
0000138A  0C39 0004 00003035       454          CMP.B   #$4,bit3
00001392  6700 047E                455          BEQ     MOVEIAND1
00001396  0C39 0007 00003035       456          CMP.B   #$7,bit3
0000139E  6700 01BA                457          BEQ     ADDIMD
000013A2                           458  
000013A2                           459  MOVEAW
000013A2  43F9 00002E45            460          LEA MMOVEAW,A1
000013A8  103C 000E                461          MOVE.B  #14,D0
000013AC  4E4F                     462          TRAP    #15 
000013AE                           463          
000013AE  0C39 0000 00003035       464          CMP.B   #$0,bit3           
000013B6  6700 04FA                465          BEQ     MOVBDN1
000013BA  0C39 0001 00003035       466          CMP.B   #$1,bit3
000013C2  6700 02A6                467          BEQ     MOVEAN1
000013C6  0C39 0002 00003035       468          CMP.B   #$2,bit3
000013CE  6700 030E                469          BEQ     MOVEIAN1
000013D2  0C39 0003 00003035       470          CMP.B   #$3,bit3
000013DA  6700 0396                471          BEQ     MOVEIANI1
000013DE  0C39 0004 00003035       472          CMP.B   #$4,bit3
000013E6  6700 042A                473          BEQ     MOVEIAND1
000013EA  0C39 0007 00003035       474          CMP.B   #$7,bit3
000013F2  6700 0166                475          BEQ     ADDIMD
000013F6                           476  
000013F6                           477  MOVL
000013F6  E20A                     478          LSR.B   #1,D2
000013F8  13C2 00003033            479          MOVE.B  D2,bit1
000013FE                           480          
000013FE  1416                     481          MOVE.B  (A6),D2
00001400  EB0A                     482          LSL.B   #5,D2
00001402  EA0A                     483          LSR.B   #5,D2
00001404  13C2 00003036            484          MOVE.B  D2,bit4
0000140A                           485          
0000140A  141E                     486          MOVE.B  (A6)+,D2
0000140C  E50A                     487          LSL.B   #2,D2
0000140E  EA0A                     488          LSR.B   #5,D2
00001410  13C2 00003035            489          MOVE.B  D2,bit3
00001416                           490          
00001416  EF4E                     491          LSL.W   #7,D6
00001418  E04E                     492          LSR.W   #8,D6 
0000141A  EA4E                     493          LSR.W   #5,D6 
0000141C  13C6 00003034            494          MOVE.B  D6,bit2
00001422                           495          
00001422  0C39 0001 00003034       496          CMP.B   #$1,bit2
0000142A  6700 0056                497          BEQ     MOVEAL
0000142E                           498  
0000142E  43F9 00002E3E            499          LEA MMOVEL,A1
00001434  103C 000E                500          MOVE.B  #14,D0
00001438  4E4F                     501          TRAP    #15 
0000143A                           502          
0000143A  0C39 0000 00003035       503          CMP.B   #$0,bit3           
00001442  6700 046E                504          BEQ     MOVBDN1
00001446  0C39 0001 00003035       505          CMP.B   #$1,bit3
0000144E  6700 021A                506          BEQ     MOVEAN1
00001452  0C39 0002 00003035       507          CMP.B   #$2,bit3
0000145A  6700 0282                508          BEQ     MOVEIAN1
0000145E  0C39 0003 00003035       509          CMP.B   #$3,bit3
00001466  6700 030A                510          BEQ     MOVEIANI1
0000146A  0C39 0004 00003035       511          CMP.B   #$4,bit3
00001472  6700 039E                512          BEQ     MOVEIAND1
00001476  0C39 0007 00003035       513          CMP.B   #$7,bit3
0000147E  6700 00DA                514          BEQ     ADDIMD
00001482                           515  
00001482                           516  MOVEAL
00001482  43F9 00002E4D            517          LEA MMOVEAL,A1
00001488  103C 000E                518          MOVE.B  #14,D0
0000148C  4E4F                     519          TRAP    #15 
0000148E                           520          
0000148E  0C39 0000 00003035       521          CMP.B   #$0,bit3           
00001496  6700 041A                522          BEQ     MOVBDN1
0000149A  0C39 0001 00003035       523          CMP.B   #$1,bit3
000014A2  6700 01C6                524          BEQ     MOVEAN1
000014A6  0C39 0002 00003035       525          CMP.B   #$2,bit3
000014AE  6700 022E                526          BEQ     MOVEIAN1
000014B2  0C39 0003 00003035       527          CMP.B   #$3,bit3
000014BA  6700 02B6                528          BEQ     MOVEIANI1
000014BE  0C39 0004 00003035       529          CMP.B   #$4,bit3
000014C6  6700 034A                530          BEQ     MOVEIAND1
000014CA  0C39 0007 00003035       531          CMP.B   #$7,bit3
000014D2  6700 0086                532          BEQ     ADDIMD        
000014D6                           533  
000014D6                           534  MOVB
000014D6  43F9 00002E30            535          LEA MMOVEB,A1
000014DC  103C 000E                536          MOVE.B  #14,D0
000014E0  4E4F                     537          TRAP    #15 
000014E2                           538          
000014E2  E20A                     539          LSR.B   #1,D2
000014E4  13C2 00003033            540          MOVE.B  D2,bit1
000014EA                           541          
000014EA  1416                     542          MOVE.B  (A6),D2
000014EC  EB0A                     543          LSL.B   #5,D2
000014EE  EA0A                     544          LSR.B   #5,D2
000014F0  13C2 00003036            545          MOVE.B  D2,bit4
000014F6                           546          
000014F6  141E                     547          MOVE.B  (A6)+,D2
000014F8  E50A                     548          LSL.B   #2,D2
000014FA  EA0A                     549          LSR.B   #5,D2
000014FC  13C2 00003035            550          MOVE.B  D2,bit3
00001502                           551          
00001502  EF4E                     552          LSL.W   #7,D6
00001504  E04E                     553          LSR.W   #8,D6 
00001506  EA4E                     554          LSR.W   #5,D6 
00001508  13C6 00003034            555          MOVE.B  D6,bit2
0000150E                           556          
0000150E                           557          *MOVE.B  #$1,D4
0000150E                           558          
0000150E  0C39 0000 00003035       559          CMP.B   #$0,bit3           
00001516  6700 039A                560          BEQ     MOVBDN1
0000151A  0C39 0001 00003035       561          CMP.B   #$1,bit3
00001522  6700 0146                562          BEQ     MOVEAN1
00001526  0C39 0002 00003035       563          CMP.B   #$2,bit3
0000152E  6700 01AE                564          BEQ     MOVEIAN1
00001532  0C39 0003 00003035       565          CMP.B   #$3,bit3
0000153A  6700 0236                566          BEQ     MOVEIANI1
0000153E  0C39 0004 00003035       567          CMP.B   #$4,bit3
00001546  6700 02CA                568          BEQ     MOVEIAND1
0000154A  0C39 0007 00003035       569          CMP.B   #$7,bit3
00001552  6700 0006                570          BEQ     ADDIMD
00001556                           571          
00001556  6000 15B8                572          BRA     INVOP
0000155A                           573  
0000155A                           574  ADDIMD
0000155A  43F9 00002DD5            575      LEA     TAB,A1
00001560  103C 000E                576      MOVE.B  #14,D0
00001564  4E4F                     577      TRAP    #15
00001566                           578      
00001566  0C39 0000 00003036       579      CMP.B   #$0,bit4
0000156E  6700 001A                580      BEQ     ADDIMD0
00001572  0C39 0001 00003036       581      CMP.B   #$1,bit4
0000157A  6700 001C                582      BEQ     ADDIMD1
0000157E  0C39 0004 00003036       583      CMP.B   #$4,bit4
00001586  6700 001E                584      BEQ     ADDIMD4
0000158A                           585  
0000158A                           586  ADDIMD0
0000158A  183C 0001                587      MOVE.B  #$1,D4
0000158E  45F9 000015BC            588      LEA     HANDLEDES,A2
00001594  6000 1500                589      BRA     DISPEA
00001598                           590  ADDIMD1 
00001598  183C 0002                591      MOVE.B  #$2,D4
0000159C  45F9 000015BC            592      LEA     HANDLEDES,A2
000015A2  6000 14F2                593      BRA     DISPEA
000015A6                           594  ADDIMD4
000015A6  43F9 00002DE3            595      LEA     HASH,A1
000015AC  103C 000E                596      MOVE.B  #14,D0
000015B0  4E4F                     597      TRAP    #15
000015B2                           598      
000015B2  45F9 000015BC            599      LEA     HANDLEDES,A2
000015B8  6000 14DC                600      BRA     DISPEA 
000015BC                           601      
000015BC                           602  HANDLEDES
000015BC  43F9 00002DD9            603      LEA     COMMA,A1
000015C2  103C 000E                604      MOVE.B  #14,D0
000015C6  4E4F                     605      TRAP    #15
000015C8                           606      
000015C8  0C39 0000 00003034       607      CMP.B   #$0,bit2
000015D0  6700 0480                608      BEQ     MOVBDN2
000015D4  0C39 0001 00003034       609      CMP.B   #$1,bit2
000015DC  6700 03A4                610      BEQ     MOVEAN2
000015E0  0C39 0002 00003034       611      CMP.B   #$2,bit2 
000015E8  6700 03B4                612      BEQ     MOVIAN2
000015EC  0C39 0003 00003034       613      CMP.B   #$3,bit2 
000015F4  6700 03DC                614      BEQ     MOVIANI2
000015F8  0C39 0004 00003034       615      CMP.B   #$4,bit2 
00001600  6700 0410                616      BEQ     MOVIAND2
00001604  BA3C 0005                617      CMP.B   #$5,D5
00001608  6700 0448                618      BEQ     MOVBDN2
0000160C  BA3C 0007                619      CMP.B   #$7,D5
00001610  6700 0002                620      BEQ     ADDIMDDES
00001614                           621  
00001614                           622  ADDIMDDES
00001614  0C39 0000 00003036       623      CMP.B   #$0,bit4
0000161C  6700 001A                624      BEQ     ADDIMDDES0
00001620  0C39 0001 00003036       625      CMP.B   #$1,bit4
00001628  6700 001C                626      BEQ     ADDIMDDES1
0000162C  0C39 0004 00003036       627      CMP.B   #$4,bit4
00001634  6700 001E                628      BEQ     ADDIMDDES4
00001638                           629      
00001638                           630  ADDIMDDES0
00001638  183C 0001                631      MOVE.B  #$1,D4
0000163C  45F9 00002B82            632      LEA     ENDNEWLINE,A2
00001642  6000 1452                633      BRA     DISPEA
00001646                           634      
00001646                           635  ADDIMDDES1
00001646  183C 0002                636      MOVE.B  #$2,D4
0000164A  45F9 00002B82            637      LEA     ENDNEWLINE,A2
00001650  6000 1444                638      BRA     DISPEA
00001654                           639      
00001654                           640  ADDIMDDES4    
00001654  43F9 00002DE3            641      LEA     HASH,A1
0000165A  103C 000E                642      MOVE.B  #14,D0
0000165E  4E4F                     643      TRAP    #15
00001660                           644      
00001660  45F9 00002B82            645      LEA     ENDNEWLINE,A2
00001666  6000 142E                646      BRA     DISPEA 
0000166A                           647          
0000166A                           648  MOVEAN1
0000166A  43F9 00002DD5            649      LEA TAB,A1
00001670  103C 000E                650      MOVE.B  #14,D0
00001674  4E4F                     651      TRAP    #15
00001676                           652  
00001676  43F9 00002DE7            653      LEA DISPA,A1
0000167C  103C 000E                654      MOVE.B  #14,D0
00001680  4E4F                     655      TRAP    #15
00001682                           656      
00001682  1239 00003036            657      MOVE.B  bit4,D1
00001688  103C 0003                658      MOVE.B  #3,D0
0000168C  4E4F                     659      TRAP    #15
0000168E                           660      
0000168E  43F9 00002DD9            661      LEA COMMA,A1
00001694  103C 000E                662      MOVE.B  #14,D0
00001698  4E4F                     663      TRAP    #15
0000169A                           664      
0000169A  0C39 0000 00003034       665      CMP.B   #$0,bit2
000016A2  6700 03AE                666      BEQ     MOVBDN2
000016A6  0C39 0001 00003034       667      CMP.B   #$1,bit2
000016AE  6700 02D2                668      BEQ     MOVEAN2
000016B2  0C39 0002 00003034       669      CMP.B   #$2,bit2 
000016BA  6700 02E2                670      BEQ     MOVIAN2
000016BE  0C39 0003 00003034       671      CMP.B   #$3,bit2 
000016C6  6700 030A                672      BEQ     MOVIANI2
000016CA  0C39 0004 00003034       673      CMP.B   #$4,bit2 
000016D2  6700 033E                674      BEQ     MOVIAND2
000016D6  BA3C 0005                675      CMP.B   #$5,D5
000016DA  6700 0376                676      BEQ     MOVBDN2
000016DE                           677      
000016DE                           678  MOVEIAN1
000016DE  43F9 00002DD5            679      LEA TAB,A1
000016E4  103C 000E                680      MOVE.B  #14,D0
000016E8  4E4F                     681      TRAP    #15
000016EA                           682      
000016EA  43F9 00002DDB            683      LEA OPENBRA,A1
000016F0  103C 000E                684      MOVE.B  #14,D0
000016F4  4E4F                     685      TRAP    #15
000016F6                           686  
000016F6  43F9 00002DE7            687      LEA DISPA,A1
000016FC  103C 000E                688      MOVE.B  #14,D0
00001700  4E4F                     689      TRAP    #15
00001702                           690      
00001702  1239 00003036            691      MOVE.B  bit4,D1
00001708  103C 0003                692      MOVE.B  #3,D0
0000170C  4E4F                     693      TRAP    #15
0000170E                           694      
0000170E  43F9 00002DDD            695      LEA CLOSEBRA,A1
00001714  103C 000E                696      MOVE.B  #14,D0
00001718  4E4F                     697      TRAP    #15
0000171A                           698      
0000171A  B83C 0003                699      CMP.B   #$3,D4
0000171E  6700 1462                700      BEQ     ENDNEWLINE
00001722                           701      
00001722  43F9 00002DD9            702      LEA COMMA,A1
00001728  103C 000E                703      MOVE.B  #14,D0
0000172C  4E4F                     704      TRAP    #15
0000172E                           705      
0000172E  0C39 0000 00003034       706      CMP.B   #$0,bit2
00001736  6700 031A                707      BEQ     MOVBDN2
0000173A  0C39 0001 00003034       708      CMP.B   #$1,bit2
00001742  6700 023E                709      BEQ     MOVEAN2
00001746  0C39 0002 00003034       710      CMP.B   #$2,bit2 
0000174E  6700 024E                711      BEQ     MOVIAN2
00001752  0C39 0003 00003034       712      CMP.B   #$3,bit2 
0000175A  6700 0276                713      BEQ     MOVIANI2
0000175E  0C39 0004 00003034       714      CMP.B   #$4,bit2 
00001766  6700 02AA                715      BEQ     MOVIAND2
0000176A  BA3C 0005                716      CMP.B   #$5,D5
0000176E  6700 02E2                717      BEQ     MOVBDN2
00001772                           718  
00001772                           719  MOVEIANI1
00001772  43F9 00002DD5            720      LEA TAB,A1
00001778  103C 000E                721      MOVE.B  #14,D0
0000177C  4E4F                     722      TRAP    #15
0000177E                           723      
0000177E  43F9 00002DDB            724      LEA OPENBRA,A1
00001784  103C 000E                725      MOVE.B  #14,D0
00001788  4E4F                     726      TRAP    #15
0000178A                           727  
0000178A  43F9 00002DE7            728      LEA DISPA,A1
00001790  103C 000E                729      MOVE.B  #14,D0
00001794  4E4F                     730      TRAP    #15
00001796                           731      
00001796  1239 00003036            732      MOVE.B  bit4,D1
0000179C  103C 0003                733      MOVE.B  #3,D0
000017A0  4E4F                     734      TRAP    #15
000017A2                           735      
000017A2  43F9 00002DDD            736      LEA CLOSEBRA,A1
000017A8  103C 000E                737      MOVE.B  #14,D0
000017AC  4E4F                     738      TRAP    #15
000017AE                           739      
000017AE  43F9 00002DDF            740      LEA POS,A1
000017B4  103C 000E                741      MOVE.B  #14,D0
000017B8  4E4F                     742      TRAP    #15
000017BA                           743      
000017BA  BA3C 0003                744      CMP.B   #$3,D5
000017BE  6700 13C2                745      BEQ     ENDNEWLINE
000017C2                           746          
000017C2  43F9 00002DD9            747      LEA COMMA,A1
000017C8  103C 000E                748      MOVE.B  #14,D0
000017CC  4E4F                     749      TRAP    #15
000017CE                           750      
000017CE  0C39 0000 00003034       751      CMP.B   #$0,bit2
000017D6  6700 027A                752      BEQ     MOVBDN2
000017DA  0C39 0001 00003034       753      CMP.B   #$1,bit2
000017E2  6700 019E                754      BEQ     MOVEAN2
000017E6  0C39 0002 00003034       755      CMP.B   #$2,bit2 
000017EE  6700 01AE                756      BEQ     MOVIAN2
000017F2  0C39 0003 00003034       757      CMP.B   #$3,bit2 
000017FA  6700 01D6                758      BEQ     MOVIANI2
000017FE  0C39 0004 00003034       759      CMP.B   #$4,bit2 
00001806  6700 020A                760      BEQ     MOVIAND2
0000180A  BA3C 0005                761      CMP.B   #$5,D5
0000180E  6700 0242                762      BEQ     MOVBDN2
00001812                           763  
00001812                           764  MOVEIAND1
00001812  43F9 00002DD5            765      LEA TAB,A1
00001818  103C 000E                766      MOVE.B  #14,D0
0000181C  4E4F                     767      TRAP    #15
0000181E                           768      
0000181E  43F9 00002DE1            769      LEA NEG,A1
00001824  103C 000E                770      MOVE.B  #14,D0
00001828  4E4F                     771      TRAP    #15
0000182A                           772      
0000182A  43F9 00002DDB            773      LEA OPENBRA,A1
00001830  103C 000E                774      MOVE.B  #14,D0
00001834  4E4F                     775      TRAP    #15
00001836                           776  
00001836  43F9 00002DE7            777      LEA DISPA,A1
0000183C  103C 000E                778      MOVE.B  #14,D0
00001840  4E4F                     779      TRAP    #15
00001842                           780      
00001842  1239 00003036            781      MOVE.B  bit4,D1
00001848  103C 0003                782      MOVE.B  #3,D0
0000184C  4E4F                     783      TRAP    #15
0000184E                           784      
0000184E  43F9 00002DDD            785      LEA CLOSEBRA,A1
00001854  103C 000E                786      MOVE.B  #14,D0
00001858  4E4F                     787      TRAP    #15
0000185A                           788      
0000185A  BA3C 0004                789      CMP.B   #$4,D5
0000185E  6700 1322                790      BEQ     ENDNEWLINE
00001862                           791      
00001862  43F9 00002DD9            792      LEA COMMA,A1
00001868  103C 000E                793      MOVE.B  #14,D0
0000186C  4E4F                     794      TRAP    #15
0000186E                           795      
0000186E  0C39 0000 00003034       796      CMP.B   #$0,bit2
00001876  6700 01DA                797      BEQ     MOVBDN2
0000187A  0C39 0001 00003034       798      CMP.B   #$1,bit2
00001882  6700 00FE                799      BEQ     MOVEAN2
00001886  0C39 0002 00003034       800      CMP.B   #$2,bit2 
0000188E  6700 010E                801      BEQ     MOVIAN2
00001892  0C39 0003 00003034       802      CMP.B   #$3,bit2 
0000189A  6700 0136                803      BEQ     MOVIANI2
0000189E  0C39 0004 00003034       804      CMP.B   #$4,bit2 
000018A6  6700 016A                805      BEQ     MOVIAND2
000018AA  BA3C 0005                806      CMP.B   #$5,D5
000018AE  6700 01A2                807      BEQ     MOVBDN2
000018B2                           808  
000018B2                           809  MOVBDN1
000018B2  43F9 00002DD5            810      LEA TAB,A1
000018B8  103C 000E                811      MOVE.B  #14,D0
000018BC  4E4F                     812      TRAP    #15
000018BE                           813  
000018BE  BA3C 0006                814      CMP.B   #$6,D5             * Data Reg for LSLR
000018C2  6700 007A                815      BEQ     LSLRSRCD
000018C6                           816  
000018C6  43F9 00002DED            817      LEA DISPD,A1
000018CC  103C 000E                818      MOVE.B  #14,D0
000018D0  4E4F                     819      TRAP    #15
000018D2                           820      
000018D2  1239 00003036            821      MOVE.B  bit4,D1
000018D8  103C 0003                822      MOVE.B  #3,D0
000018DC  4E4F                     823      TRAP    #15
000018DE                           824  
000018DE  BA3C 0004                825      CMP.B   #$4,D5
000018E2  6700 0192                826      BEQ     ENDNLINC
000018E6                           827  
000018E6  43F9 00002DD9            828      LEA COMMA,A1
000018EC  103C 000E                829      MOVE.B  #14,D0
000018F0  4E4F                     830      TRAP    #15
000018F2                           831  
000018F2  BA3C 0006                832      CMP.B   #$6,D5             * Data Reg for LSLR
000018F6  6700 006E                833      BEQ     LSLRDESD
000018FA  0C39 0000 00003034       834      CMP.B   #$0,bit2
00001902  6700 014E                835      BEQ     MOVBDN2
00001906  0C39 0001 00003034       836      CMP.B   #$1,bit2
0000190E  6700 0072                837      BEQ     MOVEAN2
00001912  0C39 0002 00003034       838      CMP.B   #$2,bit2 
0000191A  6700 0082                839      BEQ     MOVIAN2
0000191E  0C39 0003 00003034       840      CMP.B   #$3,bit2 
00001926  6700 00AA                841      BEQ     MOVIANI2
0000192A  0C39 0004 00003034       842      CMP.B   #$4,bit2 
00001932  6700 00DE                843      BEQ     MOVIAND2
00001936  BA3C 0005                844      CMP.B   #$5,D5
0000193A  6700 0116                845      BEQ     MOVBDN2
0000193E                           846      
0000193E                           847  LSLRSRCD
0000193E  43F9 00002DED            848      LEA DISPD,A1
00001944  103C 000E                849      MOVE.B  #14,D0
00001948  4E4F                     850      TRAP    #15
0000194A                           851          
0000194A  1239 00003032            852      MOVE.B  bit0,D1
00001950  103C 0003                853      MOVE.B  #3,D0
00001954  4E4F                     854      TRAP    #15    
00001956                           855  
00001956  43F9 00002DD9            856      LEA COMMA,A1
0000195C  103C 000E                857      MOVE.B  #14,D0
00001960  4E4F                     858      TRAP    #15  
00001962                           859      
00001962  6000 0002                860      BRA     LSLRDESD
00001966                           861      
00001966                           862  LSLRDESD
00001966  43F9 00002DED            863      LEA DISPD,A1
0000196C  103C 000E                864      MOVE.B  #14,D0
00001970  4E4F                     865      TRAP    #15
00001972                           866          
00001972  1239 00003036            867      MOVE.B  bit4,D1
00001978  103C 0003                868      MOVE.B  #3,D0
0000197C  4E4F                     869      TRAP    #15      
0000197E                           870      
0000197E                           871      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000197E  6000 1202                872      BRA     ENDNEWLINE       
00001982                           873  
00001982                           874  MOVEAN2
00001982  43F9 00002DE7            875      LEA DISPA,A1
00001988  103C 000E                876      MOVE.B  #14,D0
0000198C  4E4F                     877      TRAP    #15
0000198E                           878      
0000198E  1239 00003033            879      MOVE.B  bit1,D1
00001994  103C 0003                880      MOVE.B  #3,D0
00001998  4E4F                     881      TRAP    #15
0000199A                           882  
0000199A                           883      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000199A  6000 11E6                884      BRA     ENDNEWLINE    
0000199E                           885  
0000199E                           886  MOVIAN2
0000199E  43F9 00002DDB            887      LEA OPENBRA,A1
000019A4  103C 000E                888      MOVE.B  #14,D0
000019A8  4E4F                     889      TRAP    #15
000019AA                           890  
000019AA  43F9 00002DE7            891      LEA DISPA,A1
000019B0  103C 000E                892      MOVE.B  #14,D0
000019B4  4E4F                     893      TRAP    #15
000019B6                           894      
000019B6  1239 00003033            895      MOVE.B  bit1,D1
000019BC  103C 0003                896      MOVE.B  #3,D0
000019C0  4E4F                     897      TRAP    #15
000019C2                           898      
000019C2  43F9 00002DDD            899      LEA CLOSEBRA,A1
000019C8  103C 000E                900      MOVE.B  #14,D0
000019CC  4E4F                     901      TRAP    #15
000019CE                           902      
000019CE                           903      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019CE  6000 11B2                904      BRA     ENDNEWLINE
000019D2                           905  
000019D2                           906  MOVIANI2
000019D2  43F9 00002DDB            907      LEA OPENBRA,A1
000019D8  103C 000E                908      MOVE.B  #14,D0
000019DC  4E4F                     909      TRAP    #15
000019DE                           910  
000019DE  43F9 00002DE7            911      LEA DISPA,A1
000019E4  103C 000E                912      MOVE.B  #14,D0
000019E8  4E4F                     913      TRAP    #15
000019EA                           914      
000019EA  1239 00003033            915      MOVE.B  bit1,D1
000019F0  103C 0003                916      MOVE.B  #3,D0
000019F4  4E4F                     917      TRAP    #15
000019F6                           918      
000019F6  43F9 00002DDD            919      LEA CLOSEBRA,A1
000019FC  103C 000E                920      MOVE.B  #14,D0
00001A00  4E4F                     921      TRAP    #15
00001A02                           922      
00001A02  43F9 00002DDF            923      LEA POS,A1
00001A08  103C 000E                924      MOVE.B  #14,D0
00001A0C  4E4F                     925      TRAP    #15
00001A0E                           926      
00001A0E                           927      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A0E  6000 1172                928      BRA     ENDNEWLINE
00001A12                           929  
00001A12                           930  MOVIAND2
00001A12  43F9 00002DE1            931      LEA NEG,A1
00001A18  103C 000E                932      MOVE.B  #14,D0
00001A1C  4E4F                     933      TRAP    #15
00001A1E                           934      
00001A1E  43F9 00002DDB            935      LEA OPENBRA,A1
00001A24  103C 000E                936      MOVE.B  #14,D0
00001A28  4E4F                     937      TRAP    #15
00001A2A                           938  
00001A2A  43F9 00002DE7            939      LEA DISPA,A1
00001A30  103C 000E                940      MOVE.B  #14,D0
00001A34  4E4F                     941      TRAP    #15
00001A36                           942      
00001A36  1239 00003033            943      MOVE.B  bit1,D1
00001A3C  103C 0003                944      MOVE.B  #3,D0
00001A40  4E4F                     945      TRAP    #15
00001A42                           946      
00001A42  43F9 00002DDD            947      LEA CLOSEBRA,A1
00001A48  103C 000E                948      MOVE.B  #14,D0
00001A4C  4E4F                     949      TRAP    #15
00001A4E                           950  
00001A4E                           951      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A4E  6000 1132                952      BRA     ENDNEWLINE
00001A52                           953  
00001A52                           954  MOVBDN2
00001A52  43F9 00002DED            955      LEA DISPD,A1
00001A58  103C 000E                956      MOVE.B  #14,D0
00001A5C  4E4F                     957      TRAP    #15
00001A5E                           958          
00001A5E  1239 00003033            959      MOVE.B  bit1,D1
00001A64  103C 0003                960      MOVE.B  #3,D0
00001A68  4E4F                     961      TRAP    #15   
00001A6A                           962      
00001A6A  B83C 0000                963      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A6E  6700 1112                964      BEQ     ENDNEWLINE
00001A72                           965      
00001A72                           966      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A72  6000 110E                967      BRA     ENDNEWLINE
00001A76                           968      
00001A76                           969      
00001A76                           970  ENDNLINC
00001A76                           971      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A76  6000 110A                972      BRA     ENDNEWLINE    
00001A7A                           973      
00001A7A                           974  MULSW
00001A7A  1407                     975          MOVE.B  D7,D2
00001A7C  EB0A                     976          LSL.B   #5,D2
00001A7E  EA0A                     977          LSR.B   #5,D2
00001A80  13C2 00003036            978          MOVE.B  D2,bit4
00001A86                           979          
00001A86  1407                     980          MOVE.B  D7,D2
00001A88  E50A                     981          LSL.B   #2,D2
00001A8A  EA0A                     982          LSR.B   #5,D2
00001A8C  13C2 00003035            983          MOVE.B  D2,bit3
00001A92                           984          
00001A92  3C07                     985          MOVE.W  D7,D6
00001A94  EF4E                     986          LSL.W   #7,D6
00001A96  E04E                     987          LSR.W   #8,D6 
00001A98  EA4E                     988          LSR.W   #5,D6 
00001A9A  13C6 00003034            989          MOVE.B  D6,bit2
00001AA0                           990          
00001AA0  E94F                     991          LSL.W   #4,D7
00001AA2  E04F                     992          LSR.W   #8,D7 
00001AA4  EA4F                     993          LSR.W   #5,D7 
00001AA6  13C7 00003033            994          MOVE.B  D7,bit1
00001AAC                           995          
00001AAC  43F9 00002E29            996          LEA MMULSW,A1
00001AB2  323C 000E                997          MOVE    #14,D1
00001AB6  4E4F                     998          TRAP    #15
00001AB8                           999          
00001AB8  1A3C 0005               1000          MOVE.B  #$5,D5 
00001ABC                          1001          
00001ABC  0C39 0000 00003035      1002          CMP.B   #$0,bit3           
00001AC4  6700 FDEC               1003          BEQ     MOVBDN1
00001AC8  0C39 0001 00003035      1004          CMP.B   #$1,bit3
00001AD0  6700 FB98               1005          BEQ     MOVEAN1
00001AD4  0C39 0002 00003035      1006          CMP.B   #$2,bit3
00001ADC  6700 FC00               1007          BEQ     MOVEIAN1
00001AE0  0C39 0003 00003035      1008          CMP.B   #$3,bit3
00001AE8  6700 FC88               1009          BEQ     MOVEIANI1
00001AEC  0C39 0004 00003035      1010          CMP.B   #$4,bit3
00001AF4  6700 FD1C               1011          BEQ     MOVEIAND1
00001AF8  0C39 0007 00003035      1012          CMP.B   #$7,bit3
00001B00  6700 FA58               1013          BEQ     ADDIMD
00001B04                          1014  
00001B04                          1015           
00001B04                          1016  DIVSW               
00001B04                          1017          *MOVE.B  D6,D2
00001B04  141E                    1018          MOVE.B  (A6)+,D2
00001B06  EB0A                    1019          LSL.B   #5,D2
00001B08  EA0A                    1020          LSR.B   #5,D2
00001B0A  13C2 00003036           1021          MOVE.B  D2,bit4
00001B10                          1022          
00001B10  1406                    1023          MOVE.B  D6,D2
00001B12  E50A                    1024          LSL.B   #2,D2
00001B14  EA0A                    1025          LSR.B   #5,D2
00001B16  13C2 00003035           1026          MOVE.B  D2,bit3
00001B1C                          1027          
00001B1C  3E06                    1028          MOVE.W  D6,D7
00001B1E  EF4F                    1029          LSL.W   #7,D7
00001B20  E04F                    1030          LSR.W   #8,D7 
00001B22  EA4F                    1031          LSR.W   #5,D7 
00001B24  13C7 00003034           1032          MOVE.B  D7,bit2
00001B2A                          1033          
00001B2A  E94E                    1034          LSL.W   #4,D6
00001B2C  E04E                    1035          LSR.W   #8,D6 
00001B2E  EA4E                    1036          LSR.W   #5,D6 
00001B30  13C6 00003033           1037          MOVE.B  D6,bit1
00001B36                          1038          
00001B36  43F9 00002E22           1039          LEA MMDIVSW,A1
00001B3C  323C 000E               1040          MOVE    #14,D1
00001B40  4E4F                    1041          TRAP    #15
00001B42                          1042          
00001B42  1A3C 0005               1043          MOVE.B  #$5,D5 
00001B46  183C 0004               1044          MOVE.B  #$4,D4
00001B4A                          1045          
00001B4A  0C39 0000 00003035      1046          CMP.B   #$0,bit3           
00001B52  6700 FD5E               1047          BEQ     MOVBDN1
00001B56  0C39 0001 00003035      1048          CMP.B   #$1,bit3
00001B5E  6700 FB0A               1049          BEQ     MOVEAN1
00001B62  0C39 0002 00003035      1050          CMP.B   #$2,bit3
00001B6A  6700 FB72               1051          BEQ     MOVEIAN1
00001B6E  0C39 0003 00003035      1052          CMP.B   #$3,bit3
00001B76  6700 FBFA               1053          BEQ     MOVEIANI1
00001B7A  0C39 0004 00003035      1054          CMP.B   #$4,bit3
00001B82  6700 FC8E               1055          BEQ     MOVEIAND1
00001B86  0C39 0007 00003035      1056          CMP.B   #$7,bit3
00001B8E  6700 F9CA               1057          BEQ     ADDIMD
00001B92                          1058  
00001B92                          1059  NEGW
00001B92  1406                    1060          MOVE.B  D6,D2
00001B94  EB0A                    1061          LSL.B   #5,D2
00001B96  EA0A                    1062          LSR.B   #5,D2
00001B98  13C2 00003036           1063          MOVE.B  D2,bit4
00001B9E                          1064          
00001B9E  1406                    1065          MOVE.B  D6,D2
00001BA0  E50A                    1066          LSL.B   #2,D2
00001BA2  EA0A                    1067          LSR.B   #5,D2
00001BA4  13C2 00003035           1068          MOVE.B  D2,bit3
00001BAA                          1069          
00001BAA  3E06                    1070          MOVE.W  D6,D7
00001BAC  E14F                    1071          LSL.W   #8,D7
00001BAE  E04F                    1072          LSR.W   #8,D7 
00001BB0  EC4F                    1073          LSR.W   #6,D7 
00001BB2  13C7 00003034           1074          MOVE.B  D7,bit2
00001BB8                          1075          
00001BB8  43F9 00002E1D           1076          LEA MMNEGW,A1
00001BBE  323C 000E               1077          MOVE    #14,D1
00001BC2  4E4F                    1078          TRAP    #15
00001BC4                          1079          
00001BC4  183C 0003               1080          MOVE.B  #$3,D4
00001BC8                          1081          
00001BC8  0C39 0000 00003034      1082          CMP.B   #$0,bit2
00001BD0  6700 001A               1083          BEQ     PRINTBYTE
00001BD4  0C39 0001 00003034      1084          CMP.B   #$1,bit2
00001BDC  6700 0062               1085          BEQ     PRINTWORD
00001BE0  0C39 0002 00003034      1086          CMP.B   #$2,bit2
00001BE8  6700 00AA               1087          BEQ     PRINTLONG
00001BEC                          1088          
00001BEC                          1089  PRINTBYTE
00001BEC  43F9 00002DF7           1090      LEA MBYTE,A1
00001BF2  323C 000E               1091      MOVE    #14,D1
00001BF6  4E4F                    1092      TRAP    #15
00001BF8                          1093  
00001BF8  0C39 0000 00003035      1094      CMP.B   #$0,bit3           
00001C00  6700 FCB0               1095          BEQ     MOVBDN1
00001C04  0C39 0001 00003035      1096          CMP.B   #$1,bit3
00001C0C  6700 FA5C               1097          BEQ     MOVEAN1
00001C10  0C39 0002 00003035      1098          CMP.B   #$2,bit3
00001C18  6700 FAC4               1099          BEQ     MOVEIAN1
00001C1C  0C39 0003 00003035      1100          CMP.B   #$3,bit3
00001C24  6700 FB4C               1101          BEQ     MOVEIANI1
00001C28  0C39 0004 00003035      1102          CMP.B   #$4,bit3
00001C30  6700 FBE0               1103          BEQ     MOVEIAND1
00001C34  0C39 0007 00003035      1104          CMP.B   #$7,bit3
00001C3C  6700 F91C               1105          BEQ     ADDIMD
00001C40                          1106      
00001C40                          1107  PRINTWORD
00001C40  43F9 00002DFA           1108      LEA MWORD,A1
00001C46  323C 000E               1109      MOVE    #14,D1
00001C4A  4E4F                    1110      TRAP    #15
00001C4C                          1111  
00001C4C  0C39 0000 00003035      1112      CMP.B   #$0,bit3           
00001C54  6700 FC5C               1113          BEQ     MOVBDN1
00001C58  0C39 0001 00003035      1114          CMP.B   #$1,bit3
00001C60  6700 FA08               1115          BEQ     MOVEAN1
00001C64  0C39 0002 00003035      1116          CMP.B   #$2,bit3
00001C6C  6700 FA70               1117          BEQ     MOVEIAN1
00001C70  0C39 0003 00003035      1118          CMP.B   #$3,bit3
00001C78  6700 FAF8               1119          BEQ     MOVEIANI1
00001C7C  0C39 0004 00003035      1120          CMP.B   #$4,bit3
00001C84  6700 FB8C               1121          BEQ     MOVEIAND1
00001C88  0C39 0007 00003035      1122          CMP.B   #$7,bit3
00001C90  6700 F8C8               1123          BEQ     ADDIMD
00001C94                          1124      
00001C94                          1125  PRINTLONG
00001C94  43F9 00002DFD           1126      LEA MLONG,A1
00001C9A  323C 000E               1127      MOVE    #14,D1
00001C9E  4E4F                    1128      TRAP    #15
00001CA0                          1129   
00001CA0  0C39 0000 00003035      1130      CMP.B   #$0,bit3           
00001CA8  6700 FC08               1131          BEQ     MOVBDN1
00001CAC  0C39 0001 00003035      1132          CMP.B   #$1,bit3
00001CB4  6700 F9B4               1133          BEQ     MOVEAN1
00001CB8  0C39 0002 00003035      1134          CMP.B   #$2,bit3
00001CC0  6700 FA1C               1135          BEQ     MOVEIAN1
00001CC4  0C39 0003 00003035      1136          CMP.B   #$3,bit3
00001CCC  6700 FAA4               1137          BEQ     MOVEIANI1
00001CD0  0C39 0004 00003035      1138          CMP.B   #$4,bit3
00001CD8  6700 FB38               1139          BEQ     MOVEIAND1
00001CDC  0C39 0007 00003035      1140          CMP.B   #$7,bit3
00001CE4  6700 F874               1141          BEQ     ADDIMD
00001CE8                          1142          
00001CE8                          1143  LSLR
00001CE8                          1144          *MOVE.B  D6,D2
00001CE8  141E                    1145          MOVE.B  (A6)+,D2
00001CEA  EB0A                    1146          LSL.B   #5,D2
00001CEC  EA0A                    1147          LSR.B   #5,D2
00001CEE  13C2 00003036           1148          MOVE.B  D2,bit4
00001CF4                          1149          
00001CF4                          1150          
00001CF4                          1151          
00001CF4  1406                    1152          MOVE.B  D6,D2
00001CF6  E50A                    1153          LSL.B   #2,D2
00001CF8  EE0A                    1154          LSR.B   #7,D2
00001CFA  13C2 00003035           1155          MOVE.B  D2,bit3
00001D00                          1156          
00001D00  3E06                    1157          MOVE.W  D6,D7
00001D02  E14F                    1158          LSL.W   #8,D7
00001D04  E04F                    1159          LSR.W   #8,D7 
00001D06  EC4F                    1160          LSR.W   #6,D7 
00001D08  13C7 00003034           1161          MOVE.B  D7,bit2
00001D0E                          1162          
00001D0E  3E06                    1163          MOVE.W  D6,D7
00001D10  EF4F                    1164          LSL.W   #7,D7
00001D12  E04F                    1165          LSR.W   #8,D7 
00001D14  EE4F                    1166          LSR.W   #7,D7
00001D16  13C7 00003033           1167          MOVE.B  D7,bit1   
00001D1C                          1168      
00001D1C  1806                    1169          MOVE.B  D6,D4
00001D1E                          1170          
00001D1E  3E06                    1171          MOVE.W  D6,D7
00001D20  E94F                    1172          LSL.W   #4,D7
00001D22  E04F                    1173          LSR.W   #8,D7 
00001D24  EA4F                    1174          LSR.W   #5,D7
00001D26  13C7 00003032           1175          MOVE.B  D7,bit0 
00001D2C                          1176          
00001D2C  1606                    1177          MOVE.B  D6,D3
00001D2E  E70B                    1178          LSL.B   #3,D3
00001D30  EC0B                    1179          LSR.B   #6,D3
00001D32  B63C 0003               1180          CMP.B   #3,D3
00001D36  6700 001A               1181          BEQ     RORL
00001D3A                          1182          
00001D3A  0C39 0001 00003033      1183          CMP.B   #$1,bit1
00001D42  6700 008E               1184          BEQ     PRINTLSL
00001D46  0C39 0000 00003033      1185          CMP.B   #$0,bit1
00001D4E  6700 01C4               1186          BEQ     PRINTLSR
00001D52                          1187          
00001D52                          1188  RORL
00001D52  0C39 0001 00003033      1189          CMP.B   #$1,bit1
00001D5A  6700 000E               1190          BEQ     PRINTROL
00001D5E  0C39 0000 00003033      1191          CMP.B   #$0,bit1
00001D66  6700 0036               1192          BEQ     PRINTROR
00001D6A                          1193  PRINTROL
00001D6A  43F9 00002E0D           1194          LEA MROL,A1
00001D70  303C 000E               1195          MOVE    #14,D0
00001D74  4E4F                    1196          TRAP    #15
00001D76                          1197          
00001D76  0C39 0000 00003034      1198          CMP.B   #$0,bit2
00001D7E  6700 00C4               1199          BEQ     PRINTB
00001D82  0C39 0001 00003034      1200          CMP.B   #$1,bit2
00001D8A  6700 00EC               1201          BEQ     PRINTW
00001D8E  0C39 0002 00003034      1202          CMP.B   #$2,bit2
00001D96  6700 0114               1203          BEQ     PRINTL
00001D9A  6000 006A               1204          BRA     LSLRMEM
00001D9E                          1205  PRINTROR
00001D9E  43F9 00002E11           1206          LEA MROR,A1
00001DA4  323C 000E               1207          MOVE    #14,D1
00001DA8  4E4F                    1208          TRAP    #15
00001DAA                          1209          
00001DAA  0C39 0000 00003034      1210          CMP.B   #$0,bit2
00001DB2  6700 0090               1211          BEQ     PRINTB
00001DB6  0C39 0001 00003034      1212          CMP.B   #$1,bit2
00001DBE  6700 00B8               1213          BEQ     PRINTW
00001DC2  0C39 0002 00003034      1214          CMP.B   #$2,bit2
00001DCA  6700 00E0               1215          BEQ     PRINTL
00001DCE  6000 0036               1216          BRA     LSLRMEM
00001DD2                          1217  PRINTLSL
00001DD2  43F9 00002E15           1218          LEA MLSL,A1
00001DD8  303C 000E               1219          MOVE    #14,D0
00001DDC  4E4F                    1220          TRAP    #15
00001DDE                          1221          
00001DDE  0C39 0000 00003034      1222          CMP.B   #$0,bit2
00001DE6  6700 005C               1223          BEQ     PRINTB
00001DEA  0C39 0001 00003034      1224          CMP.B   #$1,bit2
00001DF2  6700 0084               1225          BEQ     PRINTW
00001DF6  0C39 0002 00003034      1226          CMP.B   #$2,bit2
00001DFE  6700 00AC               1227          BEQ     PRINTL
00001E02  6000 0002               1228          BRA     LSLRMEM
00001E06                          1229          
00001E06                          1230  LSLRMEM
00001E06                          1231          
00001E06  E50C                    1232          LSL.B   #2,D4
00001E08  EA0C                    1233          LSR.B   #5,D4
00001E0A  13C4 00003035           1234          MOVE.B  D4,bit3
00001E10                          1235          
00001E10  183C 0003               1236          MOVE.B  #$3,D4
00001E14                          1237          
00001E14  0C39 0002 00003035      1238          CMP.B   #$2,bit3
00001E1C  6700 F8C0               1239          BEQ     MOVEIAN1
00001E20  0C39 0003 00003035      1240          CMP.B   #$3,bit3
00001E28  6700 F948               1241          BEQ     MOVEIANI1
00001E2C  0C39 0004 00003035      1242          CMP.B   #$4,bit3
00001E34  6700 F9DC               1243          BEQ     MOVEIAND1
00001E38  0C39 0007 00003035      1244          CMP.B   #$7,bit3
00001E40  6700 F718               1245          BEQ     ADDIMD
00001E44                          1246  PRINTB
00001E44  43F9 00002DF3           1247          LEA MDOT,A1
00001E4A  303C 000E               1248          MOVE    #14,D0
00001E4E  4E4F                    1249          TRAP    #15
00001E50                          1250  
00001E50  43F9 00002DF7           1251          LEA MBYTE,A1
00001E56  303C 000E               1252          MOVE    #14,D0
00001E5A  4E4F                    1253          TRAP    #15
00001E5C                          1254          
00001E5C  3A3C 0006               1255          MOVE #$6,D5
00001E60                          1256          
00001E60  0C39 0000 00003035      1257          CMP.B   #0,bit3
00001E68  6700 0076               1258          BEQ     PRINTLSLRCOUNT
00001E6C  0C39 0001 00003035      1259          CMP.B   #1,bit3
00001E74  6700 FA3C               1260          BEQ     MOVBDN1
00001E78                          1261  
00001E78                          1262  PRINTW 
00001E78  43F9 00002DF3           1263          LEA MDOT,A1
00001E7E  303C 000E               1264          MOVE    #14,D0
00001E82  4E4F                    1265          TRAP    #15
00001E84                          1266  
00001E84  43F9 00002DFA           1267          LEA MWORD,A1
00001E8A  303C 000E               1268          MOVE    #14,D0
00001E8E  4E4F                    1269          TRAP    #15
00001E90                          1270          
00001E90  3A3C 0006               1271          MOVE #$6,D5
00001E94                          1272          
00001E94  0C39 0000 00003035      1273          CMP.B   #0,bit3
00001E9C  6700 0042               1274          BEQ     PRINTLSLRCOUNT
00001EA0  0C39 0001 00003035      1275          CMP.B   #1,bit3
00001EA8  6700 FA08               1276          BEQ     MOVBDN1
00001EAC                          1277  
00001EAC                          1278  PRINTL
00001EAC  43F9 00002DF3           1279          LEA MDOT,A1
00001EB2  303C 000E               1280          MOVE    #14,D0
00001EB6  4E4F                    1281          TRAP    #15
00001EB8                          1282  
00001EB8  43F9 00002DFD           1283          LEA MLONG,A1
00001EBE  303C 000E               1284          MOVE    #14,D0
00001EC2  4E4F                    1285          TRAP    #15
00001EC4                          1286  
00001EC4  3A3C 0006               1287          MOVE #$6,D5
00001EC8                          1288          
00001EC8  0C39 0000 00003035      1289          CMP.B   #0,bit3
00001ED0  6700 000E               1290          BEQ     PRINTLSLRCOUNT
00001ED4  0C39 0001 00003035      1291          CMP.B   #1,bit3
00001EDC  6700 F9D4               1292          BEQ     MOVBDN1    
00001EE0                          1293  
00001EE0                          1294  PRINTLSLRCOUNT
00001EE0  43F9 00002DD5           1295          LEA TAB,A1
00001EE6  303C 000E               1296          MOVE    #14,D0
00001EEA  4E4F                    1297          TRAP    #15
00001EEC                          1298          
00001EEC  43F9 00002DE3           1299          LEA HASH,A1
00001EF2  303C 000E               1300          MOVE    #14,D0
00001EF6  4E4F                    1301          TRAP    #15
00001EF8                          1302          
00001EF8  1239 00003032           1303          MOVE.B  bit0,D1
00001EFE  303C 0003               1304          MOVE    #3,D0
00001F02  4E4F                    1305          TRAP    #15
00001F04                          1306          
00001F04  43F9 00002DD9           1307          LEA COMMA,A1
00001F0A  303C 000E               1308          MOVE    #14,D0
00001F0E  4E4F                    1309          TRAP    #15
00001F10                          1310          
00001F10  6000 FA54               1311          BRA LSLRDESD
00001F14                          1312    
00001F14                          1313  PRINTLSR
00001F14  43F9 00002E19           1314          LEA MLSR,A1
00001F1A  323C 000E               1315          MOVE    #14,D1
00001F1E  4E4F                    1316          TRAP    #15
00001F20                          1317          
00001F20  0C39 0000 00003034      1318          CMP.B   #$0,bit2
00001F28  6700 FF1A               1319          BEQ     PRINTB
00001F2C  0C39 0001 00003034      1320          CMP.B   #$1,bit2
00001F34  6700 FF42               1321          BEQ     PRINTW
00001F38  0C39 0002 00003034      1322          CMP.B   #$2,bit2
00001F40  6700 FF6A               1323          BEQ     PRINTL
00001F44  6000 FEC0               1324          BRA     LSLRMEM
00001F48                          1325  
00001F48                          1326  ******************************************************************************************************
00001F48                          1327  *   Branch, branch to subroutine, and branch conditionally
00001F48                          1328  *   BRA, BSR, Bcc
00001F48                          1329  
00001F48                          1330  BCC
00001F48  13C5 00003033           1331          MOVE.B  D5,bit1             Moves condition code to bit1
00001F4E  1A1E                    1332          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001F50  13C5 00003034           1333          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001F56  280E                    1334          MOVE.L  A6,D4               Moves current address to D4 register
00001F58                          1335  
00001F58  BA3C 0000               1336          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001F5C  6700 0010               1337          BEQ     BCCWORD
00001F60  BA3C 00FF               1338          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001F64  6700 0010               1339          BEQ     BCCLONG             Else, displacement is 8-bits
00001F68                          1340  
00001F68                          1341          * Calculates 8-bit displacement
00001F68                          1342          * 8-bit displacement is already in D5
00001F68                          1343          * Adds displacement to current address
00001F68  D805                    1344          ADD.B   D5,D4               Adds the displacement to current address
00001F6A  6000 0012               1345          BRA     BCCNEXT
00001F6E                          1346  
00001F6E                          1347  * Calculates 16-bit displacement
00001F6E                          1348  BCCWORD
00001F6E  3A1E                    1349          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001F70  D845                    1350          ADD.W   D5,D4               Adds the displacement to current address
00001F72  6000 000A               1351          BRA     BCCNEXT
00001F76                          1352  
00001F76                          1353  * Calculates 32-bit displacement
00001F76                          1354  BCCLONG
00001F76  2A1E                    1355          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001F78  D885                    1356          ADD.L   D5,D4               Adds the displacement to current address
00001F7A  6000 0002               1357          BRA     BCCNEXT
00001F7E                          1358  
00001F7E                          1359  * Does the actual calculation
00001F7E                          1360  * Adds the displacement to the current address
00001F7E                          1361  BCCNEXT
00001F7E  6100 000E               1362          BSR     BCCDISP             Displays branch op-code
00001F82  45F9 00002B82           1363          LEA     ENDNEWLINE,A2
00001F88  2E04                    1364          MOVE.L  D4,D7
00001F8A  6000 F176               1365          BRA     DISPADDRSTART
00001F8E                          1366  
00001F8E                          1367  BCCDISP
00001F8E  B43C 0000               1368          CMP.B   #$0,D2
00001F92  6700 0026               1369          BEQ     BCCBRA
00001F96  B43C 0007               1370          CMP.B   #$7,D2
00001F9A  6700 0028               1371          BEQ     BCCBEQ
00001F9E  B43C 0006               1372          CMP.B   #$6,D2
00001FA2  6700 002A               1373          BEQ     BCCBNE
00001FA6  B43C 000D               1374          CMP.B   #$D,D2
00001FAA  6700 002C               1375          BEQ     BCCBLT
00001FAE  B43C 0002               1376          CMP.B   #$2,D2
00001FB2  6700 002E               1377          BEQ     BCCBHI
00001FB6                          1378  
00001FB6  6000 0B58               1379          BRA     INVOP
00001FBA                          1380  
00001FBA                          1381  BCCBRA
00001FBA  43F9 00002EC2           1382          LEA     MBRA,A1
00001FC0  6000 002A               1383          BRA     BCCPRINT
00001FC4                          1384  BCCBEQ
00001FC4  43F9 00002EB2           1385          LEA     MBEQ,A1
00001FCA  6000 0020               1386          BRA     BCCPRINT
00001FCE                          1387  BCCBNE
00001FCE  43F9 00002EB6           1388          LEA     MBNE,A1
00001FD4  6000 0016               1389          BRA     BCCPRINT
00001FD8                          1390  BCCBLT
00001FD8  43F9 00002EBA           1391          LEA     MBLT,A1
00001FDE  6000 000C               1392          BRA     BCCPRINT
00001FE2                          1393  BCCBHI
00001FE2  43F9 00002EBE           1394          LEA     MBHI,A1
00001FE8  6000 0002               1395          BRA     BCCPRINT
00001FEC                          1396  BCCPRINT
00001FEC  103C 000E               1397          MOVE.B  #14,D0
00001FF0  4E4F                    1398          TRAP    #15
00001FF2  43F9 00002DD5           1399          LEA     TAB,A1
00001FF8  4E4F                    1400          TRAP    #15
00001FFA  4E75                    1401          RTS
00001FFC                          1402  
00001FFC                          1403  ******************************************************************************************************
00001FFC                          1404  *   Immediate data arithmetic operations
00001FFC                          1405  *   SUBI
00001FFC                          1406  
00001FFC  13C5 00003033           1407  IMD     MOVE.B  D5,bit1
00002002  141E                    1408          MOVE.B  (A6)+,D2
00002004                          1409          
00002004  3805                    1410          MOVE    D5,D4
00002006  C83C 0001               1411          AND.B   #$0001,D4
0000200A  B83C 0001               1412          CMP.B   #$1,D4
0000200E  6700 F258               1413          BEQ     BTST
00002012                          1414  
00002012  DE02                    1415          ADD.B   D2,D7
00002014                          1416  
00002014  1602                    1417          MOVE.B  D2,D3               Copies data at D2 to D3
00002016                          1418          *   this gets digit in 10's place
00002016  E80B                    1419          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002018                          1420          *   this gets digit in 1's place
00002018  E90A                    1421          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000201A  E80A                    1422          LSR.B   #4,D2               Shifts back right into 1's place
0000201C                          1423  
0000201C                          1424          *   D3 holds digit in 10's place
0000201C                          1425          *   D2 holds digit in 1's place
0000201C                          1426  
0000201C  E20B                    1427          LSR.B   #1,D3
0000201E  6400 0004               1428          BCC     IMD2
00002022  5404                    1429          ADD.B   #$2,D4
00002024  E20B                    1430  IMD2    LSR.B   #1,D3
00002026  6400 0004               1431          BCC     IMD3
0000202A  5804                    1432          ADD.B   #$4,D4
0000202C  B43C 0007               1433  IMD3    CMP.B   #$7,D2
00002030  6D00 0006               1434          BLT     IMD4
00002034  5204                    1435          ADD.B   #$1,D4
00002036  5102                    1436          SUB.B   #$8,D2
00002038                          1437  
00002038                          1438          *   Stores them into addr
00002038  13C3 00003034           1439  IMD4    MOVE.B  D3,bit2
0000203E  13C4 00003035           1440          MOVE.B  D4,bit3
00002044  13C2 00003036           1441          MOVE.B  D2,bit4
0000204A                          1442  
0000204A                          1443  **************************
0000204A                          1444  * This finds the size of the operation
0000204A                          1445  
0000204A  0C39 0000 00003034      1446          CMP.B   #$0,bit2
00002052  6700 007E               1447          BEQ     IMDBYTE
00002056  0C39 0001 00003034      1448          CMP.B   #$1,bit2
0000205E  6700 0082               1449          BEQ     IMDWORD
00002062  0C39 0002 00003034      1450          CMP.B   #$2,bit2
0000206A  6700 0084               1451          BEQ     IMDLONG
0000206E  6000 0AA0               1452          BRA     INVOP
00002072                          1453  
00002072                          1454  *************************************************************
00002072                          1455  * Display IMD op-code
00002072                          1456  IMDPRINT
00002072  0C39 0000 00003033      1457          CMP.B   #$0,bit1
0000207A  6700 0026               1458          BEQ     IMDPRINTORI
0000207E  0C39 0004 00003033      1459          CMP.B   #$4,bit1
00002086  6700 0024               1460          BEQ     IMDPRINTSUBI
0000208A  0C39 000A 00003033      1461          CMP.B   #$A,bit1
00002092  6700 0022               1462          BEQ     IMDPRINTEORI
00002096  0C39 000C 00003033      1463          CMP.B   #$C,bit1
0000209E  6700 0020               1464          BEQ     IMDPRINTCMPI
000020A2                          1465  
000020A2                          1466  IMDPRINTORI
000020A2  43F9 00002E7C           1467          LEA     MORI,A1
000020A8  6000 0020               1468          BRA     IMDPRINTEND
000020AC                          1469  
000020AC                          1470  IMDPRINTSUBI
000020AC  43F9 00002E76           1471          LEA     MSUBI,A1
000020B2  6000 0016               1472          BRA     IMDPRINTEND
000020B6                          1473  
000020B6                          1474  IMDPRINTEORI
000020B6  43F9 00002EA6           1475          LEA     MEORI,A1
000020BC  6000 000C               1476          BRA     IMDPRINTEND
000020C0                          1477  
000020C0                          1478  IMDPRINTCMPI
000020C0  43F9 00002E95           1479          LEA     MCMPI,A1
000020C6  6000 0002               1480          BRA     IMDPRINTEND
000020CA                          1481  
000020CA                          1482  IMDPRINTEND
000020CA  103C 000E               1483          MOVE.B  #14,D0
000020CE  4E4F                    1484          TRAP    #15
000020D0  4E75                    1485          RTS
000020D2                          1486  
000020D2                          1487  *************************************************************
000020D2                          1488  * Immediate data operation size BYTE
000020D2                          1489  IMDBYTE
000020D2  619E                    1490          BSR     IMDPRINT
000020D4  43F9 00002DF7           1491          LEA     MBYTE,A1
000020DA                          1492  
000020DA                          1493          * Moves size to D4, needed to use DISPEA
000020DA  183C 0001               1494          MOVE.B  #$1,D4
000020DE  6000 001A               1495          BRA     IMDEA
000020E2                          1496  
000020E2                          1497  *************************************************************
000020E2                          1498  * Immediate data operation size WORD
000020E2                          1499  IMDWORD
000020E2  618E                    1500          BSR     IMDPRINT
000020E4  43F9 00002DFA           1501          LEA     MWORD,A1
000020EA                          1502  
000020EA  1803                    1503          MOVE.B  D3,D4
000020EC  6000 000C               1504          BRA     IMDEA
000020F0                          1505  
000020F0                          1506  
000020F0                          1507  *************************************************************
000020F0                          1508  * Immediate data operation size LONG
000020F0                          1509  IMDLONG
000020F0  6180                    1510          BSR     IMDPRINT
000020F2  43F9 00002DFD           1511          LEA     MLONG,A1
000020F8                          1512          
000020F8                          1513  
000020F8                          1514          * Moves size to D4, needed to use DISPEA
000020F8  1803                    1515          MOVE.B  D3,D4
000020FA                          1516  
000020FA                          1517  IMDEA
000020FA                          1518          * This prints out the size and creates tab
000020FA  103C 000E               1519          MOVE.B  #14,D0
000020FE  4E4F                    1520          TRAP    #15
00002100  43F9 00002DD5           1521          LEA     TAB,A1
00002106  103C 000E               1522          MOVE.B  #14,D0
0000210A  4E4F                    1523          TRAP    #15
0000210C                          1524          * Loads return address into A2
0000210C  45F9 00002116           1525          LEA     IMDEA2,A2
00002112  6000 0982               1526          BRA     DISPEA
00002116                          1527  IMDEA2
00002116  43F9 00002DD9           1528          LEA     COMMA,A1
0000211C  103C 000E               1529          MOVE.B  #14,D0
00002120  4E4F                    1530          TRAP    #15
00002122                          1531  
00002122  45F9 0000212C           1532          LEA     IMDEA3,A2
00002128  6000 081C               1533          BRA     SUBEA
0000212C                          1534  IMDEA3
0000212C  6000 0A54               1535          BRA     ENDNEWLINE
00002130                          1536  
00002130                          1537  ******************************************************************************************************
00002130                          1538  * Miscellaneous section
00002130                          1539  *   Not goes here
00002130                          1540  
00002130                          1541  MISC
00002130  13C5 00003033           1542          MOVE.B  D5,bit1
00002136  141E                    1543          MOVE.B  (A6)+,D2
00002138                          1544  
00002138  DE02                    1545          ADD.B   D2,D7
0000213A                          1546  
0000213A  1602                    1547          MOVE.B  D2,D3               Copies data at D2 to D3
0000213C                          1548          *   this gets digit in 10's place
0000213C  E80B                    1549          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000213E                          1550          *   this gets digit in 1's place
0000213E  E90A                    1551          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002140  E80A                    1552          LSR.B   #4,D2               Shifts back right into 1's place
00002142                          1553  
00002142                          1554  
00002142  3806                    1555          MOVE.W  D6,D4
00002144  E94C                    1556          LSL.W   #$4,D4
00002146  E04C                    1557          LSR.W   #$8,D4
00002148  E44C                    1558          LSR.W   #$2,D4
0000214A  13C4 00003034           1559          MOVE.B  D4,bit2
00002150  0C39 003A 00003034      1560          CMP.B   #$3A,bit2
00002158  6700 F0CE               1561          BEQ     JSR
0000215C                          1562          *   D5 is bit1
0000215C                          1563          *   D3 is bit2
0000215C                          1564          *   D2 is bit3
0000215C                          1565  
0000215C                          1566  **************************
0000215C                          1567  * This finds the size of the operation
0000215C                          1568          * D5 is bit1
0000215C  BA3C 0004               1569          CMP.B   #$4,D5
00002160  6700 FA30               1570          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00002164  BA3C 0006               1571          CMP.B   #$6,D5              Branches to NOT section
00002168  6700 006E               1572          BEQ     MISCNOT
0000216C  BA3C 000E               1573          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00002170  6700 0006               1574          BEQ     MISCBIT2
00002174  6000 0022               1575          BRA     MISCCHECKM
00002178                          1576  
00002178                          1577  MISCBIT2
00002178                          1578          * D3 is bit2
00002178  B63C 0007               1579          CMP.B   #$7,D3              Branches to NOP
0000217C  6700 0006               1580          BEQ     MISCBIT3
00002180  6000 098E               1581          BRA     INVOP
00002184                          1582  
00002184                          1583  MISCBIT3
00002184                          1584          * D2 is bit3
00002184  B43C 0001               1585          CMP.B   #$1,D2              Branches to NOP
00002188  6700 002E               1586          BEQ     MISCNOP
0000218C  B43C 0005               1587          CMP.B   #$5,D2              Branches to NOP
00002190  6700 0036               1588          BEQ     MISCRTS
00002194  6000 097A               1589          BRA     INVOP
00002198                          1590  
00002198                          1591  
00002198                          1592  MISCCHECKM
00002198  1805                    1593          MOVE.B  D5,D4
0000219A  C83C 0008               1594          AND.B   #$8,D4
0000219E  B83C 0008               1595          CMP.B   #$8,D4
000021A2  6600 096C               1596          BNE     INVOP
000021A6  1803                    1597          MOVE.B  D3,D4
000021A8  C83C 0008               1598          AND.B   #$8,D4
000021AC  B83C 0008               1599          CMP.B   #$8,D4
000021B0  6600 095E               1600          BNE     INVOP
000021B4  6000 00EE               1601          BRA     MISCMOVEM
000021B8                          1602  
000021B8                          1603  ******************************************************
000021B8                          1604  * NOP
000021B8                          1605  * No operation
000021B8                          1606  MISCNOP
000021B8  43F9 00002EC6           1607          LEA     MNOP,A1
000021BE  103C 000E               1608          MOVE.B  #14,D0
000021C2  4E4F                    1609          TRAP    #15
000021C4                          1610  
000021C4  6000 09BC               1611          BRA     ENDNEWLINE          Goes to next opcode
000021C8                          1612  
000021C8                          1613  ******************************************************
000021C8                          1614  * RTS
000021C8                          1615  * Return to sub routine
000021C8                          1616  MISCRTS
000021C8  43F9 00002ECA           1617          LEA     MRTS,A1
000021CE  103C 000E               1618          MOVE.B  #14,D0
000021D2  4E4F                    1619          TRAP    #15
000021D4                          1620  
000021D4  6000 09AC               1621          BRA     ENDNEWLINE          Goes to next opcode
000021D8                          1622  
000021D8                          1623  ******************************************************
000021D8                          1624  * NOT
000021D8                          1625  * Reuses some of IMD section to display because they have similar format
000021D8                          1626  *  (I was kinda lazy too)
000021D8                          1627  MISCNOT
000021D8  E20B                    1628          LSR.B   #1,D3
000021DA  6400 0004               1629          BCC     MISCNOT2
000021DE  5404                    1630          ADD.B   #$2,D4
000021E0                          1631  MISCNOT2   
000021E0  E20B                    1632          LSR.B   #1,D3
000021E2  6400 0004               1633          BCC     MISCNOT3
000021E6  5804                    1634          ADD.B   #$4,D4
000021E8                          1635  MISCNOT3   
000021E8  B43C 0007               1636          CMP.B   #$7,D2
000021EC  6D00 0006               1637          BLT     MISCNOT4
000021F0  5204                    1638          ADD.B   #$1,D4
000021F2  5102                    1639          SUB.B   #$8,D2
000021F4                          1640  
000021F4                          1641          *   Stores them into addr
000021F4                          1642  MISCNOT4
000021F4  13C3 00003034           1643          MOVE.B  D3,bit2
000021FA  13C4 00003035           1644          MOVE.B  D4,bit3
00002200  13C2 00003036           1645          MOVE.B  D2,bit4
00002206                          1646  
00002206  B63C 0000               1647          CMP.B   #$0,D3
0000220A  6700 0016               1648          BEQ     MISCBYTE
0000220E  B63C 0001               1649          CMP.B   #$1,D3
00002212  6700 0020               1650          BEQ     MISCWORD
00002216  B63C 0002               1651          CMP.B   #$2,D3
0000221A  6700 0028               1652          BEQ     MISCLONG
0000221E  6000 08F0               1653          BRA     INVOP
00002222                          1654  *************************************************************
00002222                          1655  * Immediate data operation size BYTE
00002222                          1656  MISCBYTE
00002222  6100 004C               1657          BSR     MISCPRINT
00002226  43F9 00002DF7           1658          LEA     MBYTE,A1
0000222C                          1659  
0000222C                          1660          * Moves size to D4, needed to use DISPEA
0000222C  183C 0001               1661          MOVE.B  #$1,D4
00002230  6000 001E               1662          BRA     MISCEA
00002234                          1663  
00002234                          1664  *************************************************************
00002234                          1665  * Immediate data operation size WORD
00002234                          1666  MISCWORD
00002234  6100 003A               1667          BSR     MISCPRINT
00002238  43F9 00002DFA           1668          LEA     MWORD,A1
0000223E                          1669  
0000223E  1803                    1670          MOVE.B  D3,D4
00002240  6000 000E               1671          BRA     MISCEA
00002244                          1672  
00002244                          1673  
00002244                          1674  *************************************************************
00002244                          1675  * Immediate data operation size LONG
00002244                          1676  MISCLONG
00002244  6100 002A               1677          BSR     MISCPRINT
00002248  43F9 00002DFD           1678          LEA     MLONG,A1
0000224E                          1679  
0000224E                          1680          * Moves size to D4, needed to use DISPEA
0000224E  1803                    1681          MOVE.B  D3,D4
00002250                          1682  
00002250                          1683  MISCEA
00002250  103C 000E               1684          MOVE.B  #14,D0
00002254  4E4F                    1685          TRAP    #15
00002256  43F9 00002DD5           1686          LEA     TAB,A1
0000225C  103C 000E               1687          MOVE.B  #14,D0
00002260  4E4F                    1688          TRAP    #15
00002262                          1689  
00002262  45F9 0000226C           1690          LEA     MISCEA2,A2
00002268  6000 06DC               1691          BRA     SUBEA
0000226C                          1692  MISCEA2
0000226C  6000 0914               1693          BRA     ENDNEWLINE
00002270                          1694  
00002270                          1695  *************************************************************
00002270                          1696  * Display IMD op-code
00002270                          1697  MISCPRINT
00002270  0C39 0004 00003033      1698          CMP.B   #$4,bit1
00002278  6700 0018               1699          BEQ     MISCPRINTNEG
0000227C  0C39 0006 00003033      1700          CMP.B   #$6,bit1
00002284  6700 0002               1701          BEQ     MISCPRINTNOT
00002288                          1702  
00002288                          1703  MISCPRINTNOT
00002288  43F9 00002E81           1704          LEA     MNOT,A1
0000228E  6000 000C               1705          BRA     MISCPRINTEND
00002292                          1706  
00002292                          1707  MISCPRINTNEG
00002292  43F9 00002E8C           1708          LEA     MNEG,A1
00002298  6000 0002               1709          BRA     MISCPRINTEND
0000229C                          1710  
0000229C                          1711  MISCPRINTEND
0000229C  103C 000E               1712          MOVE.B  #14,D0
000022A0  4E4F                    1713          TRAP    #15
000022A2  4E75                    1714          RTS
000022A4                          1715  
000022A4                          1716  
000022A4                          1717  *************************************************************************
000022A4                          1718  * MOVEM stuff
000022A4                          1719          *   D5 is bit1
000022A4                          1720          *   D3 is bit2
000022A4                          1721          *   D2 is bit3
000022A4                          1722  MISCMOVEM
000022A4  1805                    1723          MOVE.B  D5,D4               Gets the dr field and stores it into D5
000022A6  4245                    1724          CLR     D5                  Moves 0 to D5
000022A8  0804 0002               1725          BTST    #2,D4               Checks the bit at spot 2
000022AC  6700 0006               1726          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
000022B0  1A3C 0001               1727          MOVE.B  #1,D5               Else, it will skip it
000022B4                          1728  
000022B4                          1729  MISCMOVEM2
000022B4  4246                    1730          CLR     D6                  Clears D6, setting it to 0
000022B6  1803                    1731          MOVE.B  D3,D4               Gets the size field and stores it into D6
000022B8  0804 0002               1732          BTST    #2,D4               Checks the bit at spot 2
000022BC  6700 0006               1733          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
000022C0  1C3C 0001               1734          MOVE.B  #1,D6               Else, it will skip it. 
000022C4                          1735  
000022C4                          1736  MISCMOVEM3
000022C4  C63C 0003               1737          AND.B   #$3,D3              Gets ride of the first 2 bits
000022C8  E30B                    1738          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
000022CA  0882 0003               1739          BCLR    #3,D2               Checks furthest left bit and set it to 0
000022CE  6700 0006               1740          BEQ     MISCMOVEM4
000022D2  08C3 0000               1741          BSET    #0,D3               If bit was 1, adds 1 to mode
000022D6                          1742  
000022D6                          1743      * bit1 is in D5 dr field
000022D6                          1744      * bit2 is in D6 size
000022D6                          1745      * bit3 is in D3 mode
000022D6                          1746      * bit4 is in D2 reg
000022D6                          1747  MISCMOVEM4
000022D6  13C5 00003033           1748          MOVE.B  D5,bit1
000022DC  13C6 00003034           1749          MOVE.B  D6,bit2
000022E2  13C3 00003035           1750          MOVE.B  D3,bit3
000022E8  13C2 00003036           1751          MOVE.B  D2,bit4
000022EE                          1752  
000022EE                          1753      * Prints out MOVEM and size + tab
000022EE  43F9 00002E55           1754          LEA     MMOVEM,A1
000022F4  103C 000E               1755          MOVE.B  #14,D0
000022F8  4E4F                    1756          TRAP    #15
000022FA                          1757  
000022FA  BC3C 0001               1758          CMP.B   #1,D6
000022FE  6700 000C               1759          BEQ     MISCMMSIZEL
00002302  43F9 00002DFA           1760          LEA     MWORD,A1
00002308  6000 0008               1761          BRA     MISCMMPRINTSIZE
0000230C                          1762  
0000230C                          1763  MISCMMSIZEL
0000230C  43F9 00002DFD           1764          LEA     MLONG,A1
00002312                          1765  
00002312                          1766  MISCMMPRINTSIZE
00002312  4E4F                    1767          TRAP    #15
00002314  43F9 00002DD5           1768          LEA     TAB,A1
0000231A  4E4F                    1769          TRAP    #15
0000231C                          1770  
0000231C  3C1E                    1771          MOVE.W  (A6)+,D6
0000231E  BA3C 0000               1772          CMP.B   #0,D5
00002322  6700 0006               1773          BEQ     MISCMMPREDEC
00002326  6000 0070               1774          BRA     MISCMMPOSTINC
0000232A                          1775  
0000232A                          1776  ******************************************************************
0000232A                          1777  * MOVEM Post-decrement
0000232A                          1778  * Prints out registers from post-decrement
0000232A                          1779  * D6 holds the reg list
0000232A                          1780  MISCMMPREDEC
0000232A  1806                    1781          MOVE.B  D6,D4
0000232C  3E3C 0008               1782          MOVE.W  #8,D7               Counter
00002330  123C 000F               1783          MOVE.B  #$F,D1
00002334                          1784  
00002334  49F9 00002DE7           1785          LEA     DISPA,A4
0000233A  6100 0032               1786          BSR     MISCMMPREDECPRINT
0000233E                          1787  
0000233E  3806                    1788          MOVE.W  D6,D4
00002340  E04C                    1789          LSR.W   #8,D4
00002342  3E3C 0008               1790          MOVE.W  #8,D7               Counter
00002346  49F9 00002DED           1791          LEA     DISPD,A4
0000234C  6100 0020               1792          BSR     MISCMMPREDECPRINT
00002350  6000 0002               1793          BRA     MISCMMPREDEC2
00002354                          1794  
00002354                          1795  MISCMMPREDEC2
00002354  43F9 00002DD9           1796          LEA     COMMA,A1
0000235A  103C 000E               1797          MOVE.B  #14,D0
0000235E  4E4F                    1798          TRAP    #15
00002360                          1799  
00002360  45F9 0000236A           1800          LEA     MISCMMPREDEC3,A2
00002366  6000 05DE               1801          BRA     SUBEA
0000236A                          1802  
0000236A                          1803  MISCMMPREDEC3
0000236A  6000 0816               1804          BRA     ENDNEWLINE
0000236E                          1805  
0000236E                          1806  * Prints out reg list
0000236E                          1807  MISCMMPREDECPRINT
0000236E  E30C                    1808          LSL.B   #1,D4
00002370  6400 001C               1809          BCC     MISCMMPREDECPRINT3
00002374                          1810  
00002374  B23C 000F               1811          CMP.B   #$F,D1
00002378  6700 0008               1812          BEQ     MISCMMPREDECPRINT2
0000237C  4EB9 00002414           1813          JSR     MISCMMSLASH
00002382                          1814  
00002382                          1815  MISCMMPREDECPRINT2
00002382  224C                    1816          MOVEA.L A4,A1
00002384  103C 000E               1817          MOVE.B  #14,D0
00002388  4E4F                    1818          TRAP    #15
0000238A  6100 007A               1819          BSR     MISCMMPRINTNUM
0000238E                          1820  
0000238E                          1821  MISCMMPREDECPRINT3
0000238E  5307                    1822          SUB.B   #1,D7
00002390  BE3C 0000               1823          CMP.B   #0,D7
00002394  66D8                    1824          BNE     MISCMMPREDECPRINT
00002396  4E75                    1825          RTS
00002398                          1826  
00002398                          1827  ******************************************************************
00002398                          1828  * MOVEM Post-increment
00002398                          1829  * Prints out registers from post-increment
00002398                          1830  * D6 holds the reg list
00002398                          1831  MISCMMPOSTINC
00002398  45F9 000023A2           1832          LEA     MISCMMPOSTINC2,A2
0000239E  6000 05A6               1833          BRA     SUBEA
000023A2                          1834  
000023A2                          1835  MISCMMPOSTINC2
000023A2  43F9 00002DD9           1836          LEA     COMMA,A1
000023A8  103C 000E               1837          MOVE.B  #14,D0
000023AC  4E4F                    1838          TRAP    #15
000023AE                          1839  
000023AE  3806                    1840          MOVE.W  D6,D4
000023B0  E04C                    1841          LSR.W   #8,D4
000023B2  3E3C 0008               1842          MOVE.W  #8,D7               Counter
000023B6  123C 000F               1843          MOVE.B  #$F,D1
000023BA                          1844  
000023BA  49F9 00002DE7           1845          LEA     DISPA,A4
000023C0  6100 001A               1846          BSR     MISCMMPOSTINCPRINT
000023C4                          1847  
000023C4  1806                    1848          MOVE.B  D6,D4
000023C6  3E3C 0008               1849          MOVE.W  #8,D7               Counter
000023CA  49F9 00002DED           1850          LEA     DISPD,A4
000023D0  6100 000A               1851          BSR     MISCMMPOSTINCPRINT
000023D4  6000 0002               1852          BRA     MISCMMPOSTINC3
000023D8                          1853  
000023D8                          1854  MISCMMPOSTINC3
000023D8  6000 07A8               1855          BRA     ENDNEWLINE
000023DC                          1856  
000023DC                          1857  * Prints out reg list
000023DC                          1858  MISCMMPOSTINCPRINT
000023DC  E20C                    1859          LSR.B   #1,D4
000023DE  6400 001C               1860          BCC     MISCMMPOSTINCPRINT3
000023E2                          1861  
000023E2  B23C 000F               1862          CMP.B   #$F,D1
000023E6  6700 0008               1863          BEQ     MISCMMPOSTINCPRINT2
000023EA  4EB9 00002414           1864          JSR     MISCMMSLASH
000023F0                          1865  
000023F0                          1866  MISCMMPOSTINCPRINT2
000023F0  224C                    1867          MOVEA.L A4,A1
000023F2  103C 000E               1868          MOVE.B  #14,D0
000023F6  4E4F                    1869          TRAP    #15
000023F8  6100 000C               1870          BSR     MISCMMPRINTNUM
000023FC                          1871  
000023FC                          1872  MISCMMPOSTINCPRINT3
000023FC  5307                    1873          SUB.B   #1,D7
000023FE  BE3C 0000               1874          CMP.B   #0,D7
00002402  66D8                    1875          BNE     MISCMMPOSTINCPRINT
00002404  4E75                    1876          RTS
00002406                          1877  
00002406                          1878  ***********************************************
00002406                          1879  * Stuff for printing reg list
00002406                          1880  MISCMMPRINTNUM
00002406  123C 0008               1881          MOVE.B  #8,D1
0000240A  9207                    1882          SUB.B   D7,D1
0000240C  103C 0003               1883          MOVE.B  #3,D0
00002410  4E4F                    1884          TRAP    #15
00002412  4E75                    1885          RTS
00002414                          1886  
00002414                          1887  MISCMMSLASH
00002414  43F9 00002DE5           1888          LEA     SLASH,A1
0000241A  103C 000E               1889          MOVE.B  #14,D0
0000241E  4E4F                    1890          TRAP    #15
00002420  4E75                    1891          RTS
00002422                          1892  
00002422                          1893  ******************************************************************************************************
00002422                          1894  * SUB section
00002422                          1895  
00002422                          1896          *   Grabs next two nibbles
00002422  141E                    1897  SUB     MOVE.B  (A6)+,D2
00002424                          1898  
00002424  DE02                    1899          ADD.B   D2,D7
00002426                          1900  
00002426  1602                    1901          MOVE.B  D2,D3               Copies data at D2 to D3
00002428                          1902          *   this gets digit in 10's place
00002428  E80B                    1903          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000242A                          1904          *   this gets digit in 1's place
0000242A  E90A                    1905          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000242C  E80A                    1906          LSR.B   #4,D2               Shifts back right into 1's place
0000242E                          1907  
0000242E                          1908          *   D3 holds digit in 10's place
0000242E                          1909          *   D2 holds digit in 1's place
0000242E                          1910  
0000242E                          1911          
0000242E                          1912          *   Converts nibble into 3-bit parts
0000242E  E20B                    1913          LSR.B   #1,D3
00002430  6400 0004               1914          BCC     SUB2
00002434  5404                    1915          ADD.B   #$2,D4
00002436                          1916          
00002436  E20B                    1917  SUB2    LSR.B   #1,D3
00002438  6400 0004               1918          BCC     SUB3
0000243C  5804                    1919          ADD.B   #$4,D4
0000243E                          1920          
0000243E  1205                    1921  SUB3    MOVE.B  D5,D1
00002440  E209                    1922          LSR.B   #1,D1
00002442  6400 0004               1923          BCC     SUB4
00002446  5803                    1924          ADD.B   #$4,D3
00002448                          1925  
00002448  B43C 0007               1926  SUB4    CMP.B   #$7,D2
0000244C  6D00 0006               1927          BLT     SUB1
00002450  5204                    1928          ADD.B   #$1,D4
00002452  5102                    1929          SUB.B   #$8,D2
00002454                          1930  
00002454                          1931          *   Stores them into addr
00002454  13C1 00003033           1932  SUB1    MOVE.B  D1,bit1
0000245A  13C3 00003034           1933          MOVE.B  D3,bit2
00002460  13C4 00003035           1934          MOVE.B  D4,bit3
00002466  13C2 00003036           1935          MOVE.B  D2,bit4
0000246C                          1936  
0000246C                          1937          * do this later
0000246C  4241                    1938          CLR     D1
0000246E  7400                    1939          MOVE.L  #0,D2
00002470  7600                    1940          MOVE.L  #0,D3
00002472  7800                    1941          MOVE.L  #0,D4
00002474  7A00                    1942          MOVE.L  #0,D5
00002476  7C00                    1943          MOVE.L  #0,D6
00002478                          1944  
00002478                          1945          
00002478                          1946  ******************************************************************************************************
00002478                          1947  * After spliting the op-code into SUB's defined groupings
00002478                          1948  *   This figures out which operation it is and goes to that sub-routine
00002478                          1949  
00002478                          1950          * This checks if bit0 is C which is either AND or MULS
00002478  0C39 000C 00003032      1951          CMP.B   #$C,bit0
00002480  6600 000E               1952          BNE     SUBACHECK
00002484  0C39 0007 00003034      1953          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
0000248C  6700 F5EC               1954          BEQ     MULSW                       AND will use SUB's routine
00002490                          1955  
00002490                          1956  SUBACHECK
00002490                          1957          * This will display SUBA instead  -- check this later
00002490  0C39 0003 00003034      1958          CMP.B   #$3,bit2
00002498  6700 01D6               1959          BEQ     SUBA
0000249C  0C39 0007 00003034      1960          CMP.B   #$7,bit2
000024A4  6700 01CA               1961          BEQ     SUBA
000024A8                          1962  
000024A8                          1963          * This will find the size and stuff
000024A8  0C39 0000 00003034      1964          CMP.B   #$0,bit2
000024B0  6700 003E               1965          BEQ     SUBSIZE1
000024B4  0C39 0001 00003034      1966          CMP.B   #$1,bit2
000024BC  6700 0072               1967          BEQ     SUBSIZE2
000024C0  0C39 0002 00003034      1968          CMP.B   #$2,bit2
000024C8  6700 00A6               1969          BEQ     SUBSIZE3
000024CC  0C39 0004 00003034      1970          CMP.B   #$4,bit2
000024D4  6700 00DA               1971          BEQ     SUBSIZE4
000024D8  0C39 0005 00003034      1972          CMP.B   #$5,bit2
000024E0  6700 010E               1973          BEQ     SUBSIZE5
000024E4  0C39 0006 00003034      1974          CMP.B   #$6,bit2
000024EC  6700 0142               1975          BEQ     SUBSIZE6
000024F0                          1976     
000024F0                          1977  ******************************************************************************************************
000024F0                          1978  *   Displays size, then does operation order
000024F0                          1979  
000024F0                          1980  *   000 byte    EA,DN
000024F0                          1981  SUBSIZE1
000024F0  6100 0260               1982          BSR     SUBPRINT
000024F4  43F9 00002DF7           1983          LEA     MBYTE,A1
000024FA  103C 000E               1984          MOVE.B  #14,D0
000024FE  4E4F                    1985          TRAP    #15
00002500  43F9 00002DD5           1986          LEA     TAB,A1
00002506  103C 000E               1987          MOVE.B  #14,D0
0000250A  4E4F                    1988          TRAP    #15
0000250C                          1989  
0000250C  45F9 00002516           1990          LEA     SUBSIZE11,A2
00002512  6000 0432               1991          BRA     SUBEA
00002516                          1992  SUBSIZE11
00002516  45F9 0000252C           1993          LEA     SUBSIZE12,A2
0000251C  43F9 00002DD9           1994          LEA     COMMA,A1
00002522  103C 000E               1995          MOVE.B  #14,D0
00002526  4E4F                    1996          TRAP    #15
00002528  6000 02F8               1997          BRA     SUBDN
0000252C                          1998  SUBSIZE12
0000252C  6000 0654               1999          BRA     ENDNEWLINE
00002530                          2000  
00002530                          2001  *************************************************
00002530                          2002  *   001 word    EA,DN
00002530                          2003  SUBSIZE2
00002530  6100 0220               2004          BSR     SUBPRINT
00002534  43F9 00002DFA           2005          LEA     MWORD,A1
0000253A  103C 000E               2006          MOVE.B  #14,D0
0000253E  4E4F                    2007          TRAP    #15
00002540  43F9 00002DD5           2008          LEA     TAB,A1
00002546  103C 000E               2009          MOVE.B  #14,D0
0000254A  4E4F                    2010          TRAP    #15
0000254C                          2011  
0000254C  45F9 00002556           2012          LEA     SUBSIZE21,A2
00002552  6000 03F2               2013          BRA     SUBEA
00002556                          2014  SUBSIZE21
00002556  45F9 0000256C           2015          LEA     SUBSIZE22,A2
0000255C  43F9 00002DD9           2016          LEA     COMMA,A1
00002562  103C 000E               2017          MOVE.B  #14,D0
00002566  4E4F                    2018          TRAP    #15
00002568  6000 02B8               2019          BRA     SUBDN
0000256C                          2020  SUBSIZE22
0000256C  6000 0614               2021          BRA     ENDNEWLINE
00002570                          2022  
00002570                          2023  *************************************************
00002570                          2024  *   010 long    EA,DN
00002570                          2025  SUBSIZE3
00002570  6100 01E0               2026          BSR     SUBPRINT
00002574  43F9 00002DFD           2027          LEA     MLONG,A1
0000257A  103C 000E               2028          MOVE.B  #14,D0
0000257E  4E4F                    2029          TRAP    #15
00002580  43F9 00002DD5           2030          LEA     TAB,A1
00002586  103C 000E               2031          MOVE.B  #14,D0
0000258A  4E4F                    2032          TRAP    #15
0000258C                          2033  
0000258C  45F9 00002596           2034          LEA     SUBSIZE31,A2
00002592  6000 03B2               2035          BRA     SUBEA
00002596                          2036  SUBSIZE31
00002596  45F9 000025AC           2037          LEA     SUBSIZE32,A2
0000259C  43F9 00002DD9           2038          LEA     COMMA,A1
000025A2  103C 000E               2039          MOVE.B  #14,D0
000025A6  4E4F                    2040          TRAP    #15
000025A8  6000 0278               2041          BRA     SUBDN
000025AC                          2042  SUBSIZE32
000025AC  6000 05D4               2043          BRA     ENDNEWLINE
000025B0                          2044  
000025B0                          2045  *************************************************
000025B0                          2046  *   100 byte    DN,EA
000025B0                          2047  SUBSIZE4
000025B0  6100 01A0               2048          BSR     SUBPRINT
000025B4  43F9 00002DF7           2049          LEA     MBYTE,A1
000025BA  103C 000E               2050          MOVE.B  #14,D0
000025BE  4E4F                    2051          TRAP    #15
000025C0  43F9 00002DD5           2052          LEA     TAB,A1
000025C6  103C 000E               2053          MOVE.B  #14,D0
000025CA  4E4F                    2054          TRAP    #15
000025CC                          2055  
000025CC                          2056          *BSR     SUBERRORTEST1
000025CC                          2057  
000025CC  45F9 000025D6           2058          LEA     SUBSIZE41,A2
000025D2  6000 024E               2059          BRA     SUBDN
000025D6                          2060  SUBSIZE41
000025D6  45F9 000025EC           2061          LEA     SUBSIZE42,A2
000025DC  43F9 00002DD9           2062          LEA     COMMA,A1
000025E2  103C 000E               2063          MOVE.B  #14,D0
000025E6  4E4F                    2064          TRAP    #15
000025E8  6000 035C               2065          BRA     SUBEA
000025EC                          2066  SUBSIZE42
000025EC  6000 0594               2067          BRA     ENDNEWLINE
000025F0                          2068  
000025F0                          2069  *************************************************
000025F0                          2070  *   101 word    DN,EA
000025F0                          2071  SUBSIZE5
000025F0                          2072          *BSR     SUBERRORTEST1               * This does error testing
000025F0  6100 0160               2073          BSR     SUBPRINT                    * Prints out 'SUB.'
000025F4  43F9 00002DFA           2074          LEA     MWORD,A1
000025FA  103C 000E               2075          MOVE.B  #14,D0
000025FE  4E4F                    2076          TRAP    #15
00002600  43F9 00002DD5           2077          LEA     TAB,A1
00002606  103C 000E               2078          MOVE.B  #14,D0
0000260A  4E4F                    2079          TRAP    #15
0000260C                          2080  
0000260C  45F9 00002616           2081          LEA     SUBSIZE51,A2
00002612  6000 020E               2082          BRA     SUBDN
00002616                          2083  SUBSIZE51
00002616  45F9 0000262C           2084          LEA     SUBSIZE52,A2
0000261C  43F9 00002DD9           2085          LEA     COMMA,A1
00002622  103C 000E               2086          MOVE.B  #14,D0
00002626  4E4F                    2087          TRAP    #15
00002628  6000 031C               2088          BRA     SUBEA
0000262C                          2089  SUBSIZE52
0000262C  6000 0554               2090          BRA     ENDNEWLINE
00002630                          2091  
00002630                          2092  *************************************************
00002630                          2093  *   110 long    DN,EA
00002630                          2094  SUBSIZE6
00002630                          2095          *BSR     SUBERRORTEST1               * This does error testing
00002630  6100 0120               2096          BSR     SUBPRINT                    * Prints out 'SUB.'
00002634  43F9 00002DFD           2097          LEA     MLONG,A1
0000263A  103C 000E               2098          MOVE.B  #14,D0
0000263E  4E4F                    2099          TRAP    #15
00002640  43F9 00002DD5           2100          LEA     TAB,A1
00002646  103C 000E               2101          MOVE.B  #14,D0
0000264A  4E4F                    2102          TRAP    #15
0000264C                          2103  
0000264C                          2104          *BSR     SUBERRORTEST1
0000264C                          2105  
0000264C  45F9 00002656           2106          LEA     SUBSIZE61,A2
00002652  6000 01CE               2107          BRA     SUBDN
00002656                          2108  SUBSIZE61
00002656  45F9 0000266C           2109          LEA     SUBSIZE62,A2
0000265C  43F9 00002DD9           2110          LEA     COMMA,A1
00002662  103C 000E               2111          MOVE.B  #14,D0
00002666  4E4F                    2112          TRAP    #15
00002668  6000 02DC               2113          BRA     SUBEA
0000266C                          2114  SUBSIZE62
0000266C  6000 0514               2115          BRA     ENDNEWLINE
00002670                          2116  
00002670                          2117  ****************************************************************************
00002670                          2118  *   This section is for SUBA
00002670                          2119  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002670                          2120  SUBA
00002670  0C39 0009 00003032      2121          CMP.B   #$9,bit0
00002678  6700 001A               2122          BEQ     SUBPRINTSUBA
0000267C  0C39 000B 00003032      2123          CMP.B   #$B,bit0
00002684  6700 001E               2124          BEQ     SUBPRINTCMPA
00002688  0C39 000D 00003032      2125          CMP.B   #$D,bit0
00002690  6700 0022               2126          BEQ     SUBPRINTADDA
00002694                          2127  
00002694                          2128  
00002694                          2129  SUBPRINTSUBA
00002694  43F9 00002E66           2130          LEA     MSUBA,A1                    Displays 'SUBA.'
0000269A  103C 000E               2131          MOVE.B  #14,D0
0000269E  4E4F                    2132          TRAP    #15
000026A0  6000 0022               2133          BRA     SUBACONT
000026A4                          2134  
000026A4                          2135  SUBPRINTCMPA
000026A4  43F9 00002E9B           2136          LEA     MCMPA,A1                    Displays 'SUBA.'
000026AA  103C 000E               2137          MOVE.B  #14,D0
000026AE  4E4F                    2138          TRAP    #15
000026B0  6000 0012               2139          BRA     SUBACONT
000026B4                          2140  
000026B4                          2141  SUBPRINTADDA
000026B4  43F9 00002EAC           2142          LEA     MADDA,A1                    Displays 'SUBA.'
000026BA  103C 000E               2143          MOVE.B  #14,D0
000026BE  4E4F                    2144          TRAP    #15
000026C0  6000 0002               2145          BRA     SUBACONT
000026C4                          2146  
000026C4                          2147  SUBACONT
000026C4                          2148          * Does the rest of SUBA
000026C4  0C39 0003 00003034      2149          CMP.B   #$3,bit2
000026CC  6700 000E               2150          BEQ     SUBSIZE7
000026D0  0C39 0007 00003034      2151          CMP.B   #$7,bit2
000026D8  6700 003E               2152          BEQ     SUBSIZE8
000026DC                          2153  
000026DC                          2154  *************************************************
000026DC                          2155  *   SUBA Word   ea,An
000026DC                          2156  SUBSIZE7
000026DC  43F9 00002DFA           2157          LEA     MWORD,A1
000026E2  103C 000E               2158          MOVE.B  #14,D0
000026E6  4E4F                    2159          TRAP    #15
000026E8  43F9 00002DD5           2160          LEA     TAB,A1
000026EE  103C 000E               2161          MOVE.B  #14,D0
000026F2  4E4F                    2162          TRAP    #15
000026F4                          2163  
000026F4  45F9 000026FE           2164          LEA     SUBSIZE71,A2
000026FA  6000 024A               2165          BRA     SUBEA
000026FE                          2166  SUBSIZE71
000026FE  45F9 00002714           2167          LEA     SUBSIZE72,A2
00002704  43F9 00002DD9           2168          LEA     COMMA,A1
0000270A  103C 000E               2169          MOVE.B  #14,D0
0000270E  4E4F                    2170          TRAP    #15
00002710  6000 0164               2171          BRA     SUBAN2
00002714                          2172  SUBSIZE72
00002714  6000 046C               2173          BRA     ENDNEWLINE
00002718                          2174  
00002718                          2175  *************************************************
00002718                          2176  *   SUBA longword   ea,An
00002718                          2177  SUBSIZE8
00002718  43F9 00002DFD           2178          LEA     MLONG,A1
0000271E  103C 000E               2179          MOVE.B  #14,D0
00002722  4E4F                    2180          TRAP    #15
00002724  43F9 00002DD5           2181          LEA     TAB,A1
0000272A  103C 000E               2182          MOVE.B  #14,D0
0000272E  4E4F                    2183          TRAP    #15
00002730                          2184  
00002730  45F8 26FE               2185          LEA     SUBSIZE71,A2
00002734  6000 0210               2186          BRA     SUBEA
00002738                          2187  SUBSIZE81
00002738  45F8 2714               2188          LEA     SUBSIZE72,A2
0000273C  43F9 00002DD9           2189          LEA     COMMA,A1
00002742  103C 000E               2190          MOVE.B  #14,D0
00002746  4E4F                    2191          TRAP    #15
00002748  6000 012C               2192          BRA     SUBAN2
0000274C                          2193  SUBSIZE82
0000274C  6000 0434               2194          BRA     ENDNEWLINE
00002750                          2195  
00002750                          2196  *************************************************
00002750                          2197  * Jumps to memory location at A2
00002750                          2198  SUBJMPA2
00002750  4ED2                    2199          JMP     (A2)
00002752                          2200  
00002752                          2201  *************************************************
00002752                          2202  * Prints out opcode name
00002752                          2203  SUBPRINT
00002752  0C39 0009 00003032      2204          CMP.B   #$9,bit0                Prints SUB
0000275A  6700 0026               2205          BEQ     SUBPRINTSUB
0000275E  0C39 000B 00003032      2206          CMP.B   #$B,bit0                Prints CMP or EOR
00002766  6700 004A               2207          BEQ     SUBPRINTB
0000276A  0C39 000C 00003032      2208          CMP.B   #$C,bit0                Prints AND
00002772  6700 001E               2209          BEQ     SUBPRINTAND
00002776  0C39 000D 00003032      2210          CMP.B   #$D,bit0                Prints ADD
0000277E  6700 0022               2211          BEQ     SUBPRINTADD
00002782                          2212  
00002782                          2213  SUBPRINTSUB   * Displays 'SUB.' 
00002782  43F9 00002E61           2214          LEA     MSUB,A1
00002788  103C 000E               2215          MOVE.B  #14,D0
0000278C  4E4F                    2216          TRAP    #15
0000278E  6000 004E               2217          BRA     SUBPRINTEND
00002792                          2218  
00002792                          2219  SUBPRINTAND   * Displays 'AND.' 
00002792  43F9 00002E6C           2220          LEA     MAND,A1
00002798  103C 000E               2221          MOVE.B  #14,D0
0000279C  4E4F                    2222          TRAP    #15
0000279E  6000 003E               2223          BRA     SUBPRINTEND
000027A2                          2224  
000027A2                          2225  SUBPRINTADD   * Displays 'ADD.' 
000027A2  43F9 00002E71           2226          LEA     MADD,A1
000027A8  103C 000E               2227          MOVE.B  #14,D0
000027AC  4E4F                    2228          TRAP    #15
000027AE  6000 002E               2229          BRA     SUBPRINTEND
000027B2                          2230  
000027B2                          2231  SUBPRINTB
000027B2  0C39 0004 00003034      2232          CMP.B   #$4,bit2
000027BA  6D00 0012               2233          BLT     SUBPRINTEOR
000027BE                          2234  
000027BE                          2235  SUBPRINTCMP   * Displays 'CMP.' 
000027BE  43F9 00002E90           2236          LEA     MCMP,A1
000027C4  103C 000E               2237          MOVE.B  #14,D0
000027C8  4E4F                    2238          TRAP    #15
000027CA  6000 0012               2239          BRA     SUBPRINTEND
000027CE                          2240  
000027CE                          2241  SUBPRINTEOR   * Displays 'EOR.' 
000027CE  43F9 00002EA1           2242          LEA     MEOR,A1
000027D4  103C 000E               2243          MOVE.B  #14,D0
000027D8  4E4F                    2244          TRAP    #15
000027DA  6000 0002               2245          BRA     SUBPRINTEND
000027DE                          2246  
000027DE                          2247  SUBPRINTEND
000027DE  4E75                    2248          RTS
000027E0                          2249  
000027E0                          2250  
000027E0                          2251  *******************************************************************
000027E0                          2252  * Error testing for DN->EA operations
000027E0                          2253  *  Data register, address register, and immediate data cannot be destinations
000027E0                          2254  SUBERRORTEST1
000027E0                          2255          * test for DN or AN register, branches to invalid op code if true
000027E0  0C39 0000 00003035      2256          CMP.B   #0,bit3
000027E8  6700 0326               2257          BEQ     INVOP
000027EC  0C39 0001 00003035      2258          CMP.B   #1,bit3
000027F4  6700 031A               2259          BEQ     INVOP
000027F8                          2260          
000027F8                          2261          * check if destination is immediate data
000027F8  0C39 0007 00003035      2262          CMP.B   #7,bit3
00002800  6600 001E               2263          BNE     SUBERRORTEST11
00002804  0C39 0000 00003036      2264          CMP.B   #0,bit4
0000280C  6700 0012               2265          BEQ     SUBERRORTEST11
00002810  0C39 0001 00003036      2266          CMP.B   #1,bit4
00002818  6700 0006               2267          BEQ     SUBERRORTEST11
0000281C  6000 02F2               2268          BRA     INVOP
00002820                          2269          
00002820                          2270  SUBERRORTEST11
00002820  4E75                    2271          RTS
00002822                          2272  
00002822                          2273  
00002822                          2274  ******************************************************************************************************
00002822                          2275  *   Displays data register
00002822                          2276  SUBDN
00002822  43F9 00002E00           2277          LEA     MDN,A1
00002828  103C 000E               2278          MOVE.B  #14,D0
0000282C  4E4F                    2279          TRAP    #15
0000282E                          2280  
0000282E  1239 00003033           2281          MOVE.B  bit1,D1
00002834  103C 0003               2282          MOVE.B  #3,D0
00002838  4E4F                    2283          TRAP    #15
0000283A                          2284          
0000283A  6000 FF14               2285          BRA     SUBJMPA2
0000283E                          2286  
0000283E                          2287  *   Displays data register
0000283E                          2288  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
0000283E                          2289  SUBDN2
0000283E  43F9 00002E00           2290          LEA     MDN,A1
00002844  103C 000E               2291          MOVE.B  #14,D0
00002848  4E4F                    2292          TRAP    #15
0000284A                          2293  
0000284A  1239 00003036           2294          MOVE.B  bit4,D1
00002850  103C 0003               2295          MOVE.B  #3,D0
00002854  4E4F                    2296          TRAP    #15
00002856                          2297          
00002856  6000 FEF8               2298          BRA     SUBJMPA2
0000285A                          2299  
0000285A                          2300  *   Displays address register
0000285A                          2301  SUBAN
0000285A  43F9 00002E02           2302          LEA     MAN,A1
00002860  103C 000E               2303          MOVE.B  #14,D0
00002864  4E4F                    2304          TRAP    #15
00002866                          2305  
00002866  1239 00003036           2306          MOVE.B  bit4,D1
0000286C  103C 0003               2307          MOVE.B  #3,D0
00002870  4E4F                    2308          TRAP    #15
00002872                          2309          
00002872  6000 FEDC               2310          BRA     SUBJMPA2
00002876                          2311  
00002876                          2312  *   Displays address register
00002876                          2313  *   This is for SUBA, SUBA puts An into bit1
00002876                          2314  SUBAN2
00002876  43F9 00002E02           2315          LEA     MAN,A1
0000287C  103C 000E               2316          MOVE.B  #14,D0
00002880  4E4F                    2317          TRAP    #15
00002882                          2318  
00002882  1239 00003033           2319          MOVE.B  bit1,D1
00002888  103C 0003               2320          MOVE.B  #3,D0
0000288C  4E4F                    2321          TRAP    #15
0000288E                          2322          
0000288E  6000 FEC0               2323          BRA     SUBJMPA2
00002892                          2324  
00002892                          2325  
00002892                          2326  *   Displays indirect address register
00002892                          2327  SUBANID
00002892  43F9 00002DDB           2328          LEA     OPENBRA,A1
00002898  103C 000E               2329          MOVE.B  #14,D0
0000289C  4E4F                    2330          TRAP    #15
0000289E                          2331  
0000289E  43F9 00002E02           2332          LEA     MAN,A1
000028A4  103C 000E               2333          MOVE.B  #14,D0
000028A8  4E4F                    2334          TRAP    #15
000028AA                          2335  
000028AA  1239 00003036           2336          MOVE.B  bit4,D1
000028B0  103C 0003               2337          MOVE.B  #3,D0
000028B4  4E4F                    2338          TRAP    #15
000028B6                          2339  
000028B6  43F9 00002DDD           2340          LEA     CLOSEBRA,A1
000028BC  103C 000E               2341          MOVE.B  #14,D0
000028C0  4E4F                    2342          TRAP    #15
000028C2                          2343  
000028C2  6000 FE8C               2344          BRA     SUBJMPA2
000028C6                          2345  
000028C6                          2346  *   Displays indirect address register with post increment
000028C6                          2347  SUBANIDPOS
000028C6  43F9 00002DDB           2348          LEA     OPENBRA,A1
000028CC  103C 000E               2349          MOVE.B  #14,D0
000028D0  4E4F                    2350          TRAP    #15
000028D2                          2351  
000028D2  43F9 00002E02           2352          LEA     MAN,A1
000028D8  103C 000E               2353          MOVE.B  #14,D0
000028DC  4E4F                    2354          TRAP    #15
000028DE                          2355  
000028DE  1239 00003036           2356          MOVE.B  bit4,D1
000028E4  103C 0003               2357          MOVE.B  #3,D0
000028E8  4E4F                    2358          TRAP    #15
000028EA                          2359  
000028EA  43F9 00002DDD           2360          LEA     CLOSEBRA,A1
000028F0  103C 000E               2361          MOVE.B  #14,D0
000028F4  4E4F                    2362          TRAP    #15
000028F6                          2363  
000028F6  43F9 00002DDF           2364          LEA     POS,A1
000028FC  103C 000E               2365          MOVE.B  #14,D0
00002900  4E4F                    2366          TRAP    #15
00002902                          2367  
00002902  6000 FE4C               2368          BRA     SUBJMPA2
00002906                          2369  
00002906                          2370  *   Displays indirect address register with pre decrement
00002906                          2371  SUBANIDNEG
00002906  43F9 00002DE1           2372          LEA     NEG,A1
0000290C  103C 000E               2373          MOVE.B  #14,D0
00002910  4E4F                    2374          TRAP    #15
00002912                          2375  
00002912  43F9 00002DDB           2376          LEA     OPENBRA,A1
00002918  103C 000E               2377          MOVE.B  #14,D0
0000291C  4E4F                    2378          TRAP    #15
0000291E                          2379  
0000291E  43F9 00002E02           2380          LEA     MAN,A1
00002924  103C 000E               2381          MOVE.B  #14,D0
00002928  4E4F                    2382          TRAP    #15
0000292A                          2383  
0000292A  1239 00003036           2384          MOVE.B  bit4,D1
00002930  103C 0003               2385          MOVE.B  #3,D0
00002934  4E4F                    2386          TRAP    #15
00002936                          2387  
00002936  43F9 00002DDD           2388          LEA     CLOSEBRA,A1
0000293C  103C 000E               2389          MOVE.B  #14,D0
00002940  4E4F                    2390          TRAP    #15
00002942                          2391  
00002942  6000 FE0C               2392          BRA     SUBJMPA2
00002946                          2393  
00002946                          2394  
00002946                          2395  
00002946                          2396  
00002946                          2397  ******************************************************************************************************
00002946                          2398  * Displays the EA as hex numbers
00002946                          2399  * 
00002946                          2400  SUBEA
00002946                          2401          *   This finds which mode to use
00002946  0C39 0000 00003035      2402          CMP.B   #$0,bit3
0000294E  6700 FEEE               2403          BEQ     SUBDN2
00002952  0C39 0001 00003035      2404          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
0000295A  6700 FEFE               2405          BEQ     SUBAN
0000295E  0C39 0002 00003035      2406          CMP.B   #$2,bit3
00002966  6700 FF2A               2407          BEQ     SUBANID
0000296A  0C39 0003 00003035      2408          CMP.B   #$3,bit3
00002972  6700 FF52               2409          BEQ     SUBANIDPOS
00002976  0C39 0004 00003035      2410          CMP.B   #$4,bit3
0000297E  6786                    2411          BEQ     SUBANIDNEG
00002980  0C39 0005 00003035      2412          CMP.B   #$5,bit3
00002988  6700 0424               2413          BEQ     ERROR
0000298C  0C39 0006 00003035      2414          CMP.B   #$6,bit3
00002994  6700 0418               2415          BEQ     ERROR
00002998  0C39 0007 00003035      2416          CMP.B   #$7,bit3
000029A0  6700 0002               2417          BEQ     SUBEAHEX
000029A4                          2418  
000029A4                          2419  SUBEAHEX
000029A4  0C39 0004 00003036      2420          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
000029AC  6700 0086               2421          BEQ     SUBEAID
000029B0                          2422  SUBEAID2
000029B0                          2423          *   Else it will assume it is absolute addressing mode
000029B0  43F9 00002DF5           2424          LEA     MHEX,A1
000029B6  103C 000E               2425          MOVE.B  #14,D0
000029BA  4E4F                    2426          TRAP    #15
000029BC                          2427  
000029BC  0C39 0000 00003036      2428          CMP.B   #$0,bit4
000029C4  6700 007E               2429          BEQ     SUBEAHEX1
000029C8  0C39 0001 00003036      2430          CMP.B   #$1,bit4
000029D0  6700 007A               2431          BEQ     SUBEAHEX2
000029D4                          2432  
000029D4  0C39 0000 00003034      2433          CMP.B   #$0,bit2            * SUB byte displays as word
000029DC  6700 0066               2434          BEQ     SUBEAHEX1
000029E0  0C39 0004 00003034      2435          CMP.B   #$4,bit2            * SUB byte displays as word
000029E8  6700 005A               2436          BEQ     SUBEAHEX1
000029EC  0C39 0001 00003034      2437          CMP.B   #$1,bit2            * SUB word
000029F4  6700 004E               2438          BEQ     SUBEAHEX1
000029F8  0C39 0005 00003034      2439          CMP.B   #$5,bit2            * SUB word
00002A00  6700 0042               2440          BEQ     SUBEAHEX1
00002A04  0C39 0003 00003034      2441          CMP.B   #$3,bit2            * SUBA word
00002A0C  6700 0036               2442          BEQ     SUBEAHEX1
00002A10  0C39 0002 00003034      2443          CMP.B   #$2,bit2            * SUB longword
00002A18  6700 0032               2444          BEQ     SUBEAHEX2
00002A1C  0C39 0006 00003034      2445          CMP.B   #$6,bit2            * SUB longword
00002A24  6700 0026               2446          BEQ     SUBEAHEX2
00002A28  0C39 0007 00003034      2447          CMP.B   #$7,bit2            * SUBA longword
00002A30  6700 001A               2448          BEQ     SUBEAHEX2
00002A34                          2449  
00002A34                          2450  SUBEAID
00002A34  43F9 00002DE3           2451          LEA     HASH,A1
00002A3A  103C 000E               2452          MOVE.B  #14,D0
00002A3E  4E4F                    2453          TRAP    #15
00002A40  6000 FF6E               2454          BRA     SUBEAID2
00002A44                          2455  
00002A44                          2456  SUBEAHEX1  
00002A44                          2457          *absolute address word
00002A44  1E3C 0002               2458          MOVE.B  #2,D7
00002A48  6000 000A               2459          BRA     SUBEAHEX3
00002A4C                          2460  
00002A4C                          2461  SUBEAHEX2  *absolute address long
00002A4C  1E3C 0004               2462          MOVE.B  #4,D7
00002A50  6000 0002               2463          BRA     SUBEAHEX3
00002A54                          2464  
00002A54                          2465  SUBEAHEX3
00002A54  BE3C 0000               2466          CMP.B   #0,D7               Compares current addr to ending addr
00002A58  6700 FCF6               2467          BEQ     SUBJMPA2            Branches to done if they are equal
00002A5C                          2468  
00002A5C                          2469      
00002A5C  141E                    2470          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002A5E                          2471          
00002A5E  1602                    2472          MOVE.B  D2,D3               Copies data at D2 to D3
00002A60                          2473          *   this gets digit in 10's place
00002A60  E80B                    2474          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002A62                          2475          *   this gets digit in 1's place
00002A62  E90A                    2476          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002A64  E80A                    2477          LSR.B   #4,D2               Shifts back right into 1's place
00002A66                          2478  
00002A66                          2479          
00002A66                          2480          *   D3 holds digit in 10's place
00002A66                          2481          *   D2 holds digit in 1's place
00002A66                          2482          
00002A66  1203                    2483          MOVE.B  D3,D1               Displays digit in 10's place first
00002A68                          2484  
00002A68                          2485          *   converts digits 10+ into letters
00002A68                          2486  
00002A68  47F9 00002A7C           2487          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002A6E  B23C 0009               2488          CMP.B   #9,D1               Compares digit to 9
00002A72  6E00 0164               2489          BGT     CONV                Print out letter representation if greater than 9
00002A76                          2490  
00002A76  103C 0003               2491          MOVE.B  #3,D0               Displays digit if it is less than A
00002A7A  4E4F                    2492          TRAP    #15
00002A7C                          2493          
00002A7C                          2494  SUBEAHEX4    
00002A7C  1202                    2495          MOVE.B  D2,D1               Displays digit in 1's place second
00002A7E                          2496  
00002A7E                          2497          *   converts digits 10+ into letters
00002A7E  47F9 00002A92           2498          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002A84  B23C 0009               2499          CMP.B   #9,D1               Compares digit to 9
00002A88  6E00 014E               2500          BGT     CONV                Print out letter representation if greater than 9
00002A8C                          2501          
00002A8C  103C 0003               2502          MOVE.B  #3,D0               Displays digit if it is less than A
00002A90  4E4F                    2503          TRAP    #15
00002A92                          2504          
00002A92                          2505  SUBEAHEX5         
00002A92                          2506  * Display counter -- creates new line every 8 bytes
00002A92                          2507          * D7 is used as counter
00002A92                          2508          
00002A92  5307                    2509          SUB.B   #1,D7                       
00002A94  60BE                    2510          BRA     SUBEAHEX3              Loops back to display next address
00002A96                          2511  
00002A96                          2512  ***   display EA ends here
00002A96                          2513  
00002A96                          2514  ******************************************************************************************************
00002A96                          2515  * Displays the EA as hex numbers
00002A96                          2516  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002A96                          2517  * OUTPUT: Displays size of EA reading from A6
00002A96                          2518  * Jumps to location stored in A2 when finished
00002A96                          2519  DISPEA
00002A96  43F9 00002DF5           2520          LEA     MHEX,A1
00002A9C  103C 000E               2521          MOVE.B  #14,D0
00002AA0  4E4F                    2522          TRAP    #15
00002AA2                          2523  
00002AA2  B83C 0002               2524          CMP.B   #$2,D4              Branches to longword display if size is 2
00002AA6  6700 000A               2525          BEQ     DISPEALONG          Else it will assume word length
00002AAA                          2526  
00002AAA                          2527  DISPEAWORD
00002AAA                          2528          *absolute address word
00002AAA  1E3C 0002               2529          MOVE.B  #2,D7
00002AAE  6000 000A               2530          BRA     DISPEA3
00002AB2                          2531   
00002AB2                          2532  DISPEALONG
00002AB2                          2533          *absolute address long
00002AB2  1E3C 0004               2534          MOVE.B  #4,D7
00002AB6  6000 0002               2535          BRA     DISPEA3
00002ABA                          2536  
00002ABA                          2537  DISPEA3
00002ABA  BE3C 0000               2538          CMP.B   #0,D7               Compares current addr to ending addr
00002ABE  6700 FC90               2539          BEQ     SUBJMPA2            Branches to done if they are equal
00002AC2                          2540  
00002AC2                          2541      
00002AC2  141E                    2542          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002AC4                          2543          
00002AC4  1602                    2544          MOVE.B  D2,D3               Copies data at D2 to D3
00002AC6                          2545          *   this gets digit in 10's place
00002AC6  E80B                    2546          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002AC8                          2547          *   this gets digit in 1's place
00002AC8  E90A                    2548          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002ACA  E80A                    2549          LSR.B   #4,D2               Shifts back right into 1's place
00002ACC                          2550  
00002ACC                          2551          
00002ACC                          2552          *   D3 holds digit in 10's place
00002ACC                          2553          *   D2 holds digit in 1's place
00002ACC                          2554          
00002ACC  1203                    2555          MOVE.B  D3,D1               Displays digit in 10's place first
00002ACE                          2556  
00002ACE                          2557          *   converts digits 10+ into letters
00002ACE                          2558  
00002ACE  47F9 00002AE2           2559          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002AD4  B23C 0009               2560          CMP.B   #9,D1               Compares digit to 9
00002AD8  6E00 00FE               2561          BGT     CONV                Print out letter representation if greater than 9
00002ADC                          2562  
00002ADC  103C 0003               2563          MOVE.B  #3,D0               Displays digit if it is less than A
00002AE0  4E4F                    2564          TRAP    #15
00002AE2                          2565    
00002AE2                          2566  DISPEA4
00002AE2  1202                    2567          MOVE.B  D2,D1               Displays digit in 1's place second
00002AE4                          2568  
00002AE4                          2569          *   converts digits 10+ into letters
00002AE4  47F9 00002AF8           2570          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002AEA  B23C 0009               2571          CMP.B   #9,D1               Compares digit to 9
00002AEE  6E00 00E8               2572          BGT     CONV                Print out letter representation if greater than 9
00002AF2                          2573          
00002AF2  103C 0003               2574          MOVE.B  #3,D0               Displays digit if it is less than A
00002AF6  4E4F                    2575          TRAP    #15
00002AF8                          2576        
00002AF8                          2577  DISPEA5
00002AF8                          2578  * Display counter -- creates new line every 8 bytes
00002AF8                          2579          * D7 is used as counter
00002AF8                          2580          
00002AF8  5307                    2581          SUB.B   #1,D7                       
00002AFA  60BE                    2582          BRA     DISPEA3              Loops back to display next address
00002AFC                          2583  
00002AFC                          2584  ***   display EA ends here
00002AFC                          2585  
00002AFC                          2586  *******************************************************************
00002AFC                          2587  * Clears all of the data registers
00002AFC                          2588  CLRDN
00002AFC  4280                    2589          CLR.L   D0
00002AFE  4281                    2590          CLR.L   D1
00002B00  4282                    2591          CLR.L   D2
00002B02  4283                    2592          CLR.L   D3
00002B04  4284                    2593          CLR.L   D4
00002B06  4285                    2594          CLR.L   D5
00002B08  4286                    2595          CLR.L   D6
00002B0A  4287                    2596          CLR.L   D7
00002B0C  4E75                    2597          RTS
00002B0E                          2598  
00002B0E                          2599  ********************************************************************
00002B0E                          2600  * Invalid op-code handling
00002B0E                          2601  * Displays DATA YYYY
00002B0E                          2602  *  YYYY represents the op-code that failed
00002B0E                          2603  INVOPCODE
00002B0E  DE1E                    2604          ADD.B   (A6)+,D7
00002B10                          2605  
00002B10                          2606  INVOP
00002B10  43F9 00002E5C           2607          LEA     MDATA,A1
00002B16  103C 000E               2608          MOVE.B  #14,D0
00002B1A  4E4F                    2609          TRAP    #15
00002B1C  43F9 00002DD5           2610          LEA     TAB,A1
00002B22  103C 000E               2611          MOVE.B  #14,D0
00002B26  4E4F                    2612          TRAP    #15
00002B28  43F9 00002DF5           2613          LEA     MHEX,A1
00002B2E  103C 000E               2614          MOVE.B  #14,D0
00002B32  4E4F                    2615          TRAP    #15
00002B34                          2616          
00002B34  1C3C 0002               2617          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002B38                          2618          
00002B38  3407                    2619          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002B3A  E04A                    2620          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002B3C  6000 0004               2621          BRA     INVOP2              Skips the second part to do later
00002B40                          2622  
00002B40                          2623  INVOP1
00002B40  1407                    2624          MOVE.B  D7,D2
00002B42                          2625  INVOP2
00002B42  1602                    2626          MOVE.B  D2,D3               Copies data at D2 to D3
00002B44                          2627          *   this gets digit in 10's place
00002B44  E80B                    2628          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002B46                          2629          *   this gets digit in 1's place
00002B46  E90A                    2630          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002B48  E80A                    2631          LSR.B   #4,D2               Shifts back right into 1's place
00002B4A                          2632  
00002B4A                          2633          
00002B4A                          2634          *   D3 holds digit in 10's place
00002B4A                          2635          *   D2 holds digit in 1's place
00002B4A                          2636          
00002B4A  1203                    2637          MOVE.B  D3,D1               Displays digit in 10's place first
00002B4C                          2638  
00002B4C                          2639          *   converts digits 10+ into letters
00002B4C                          2640  
00002B4C  47F9 00002B60           2641          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002B52  B23C 0009               2642          CMP.B   #9,D1               Compares digit to 9
00002B56  6E00 0080               2643          BGT     CONV                Print out letter representation if greater than 9
00002B5A                          2644  
00002B5A  103C 0003               2645          MOVE.B  #3,D0               Displays digit if it is less than A
00002B5E  4E4F                    2646          TRAP    #15
00002B60                          2647          
00002B60                          2648  INVOP3   
00002B60  1202                    2649          MOVE.B  D2,D1               Displays digit in 1's place second
00002B62                          2650  
00002B62                          2651          *   converts digits 10+ into letters
00002B62  47F9 00002B76           2652          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002B68  B23C 0009               2653          CMP.B   #9,D1               Compares digit to 9
00002B6C  6E00 006A               2654          BGT     CONV                Print out letter representation if greater than 9
00002B70                          2655          
00002B70  103C 0003               2656          MOVE.B  #3,D0               Displays digit if it is less than A
00002B74  4E4F                    2657          TRAP    #15
00002B76                          2658          
00002B76                          2659  INVOP4
00002B76                          2660  * Display counter -- creates new line every 8 bytes
00002B76                          2661          * D6 is used as counter
00002B76                          2662          
00002B76  5306                    2663          SUB.B   #1,D6
00002B78  BC3C 0000               2664          CMP.B   #0,D6
00002B7C  6700 0004               2665          BEQ     ENDNEWLINE
00002B80  60BE                    2666          BRA     INVOP1              Loops back to display next address
00002B82                          2667  
00002B82                          2668  
00002B82                          2669  ******************************************************************************************************
00002B82                          2670  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002B82                          2671  ENDNEWLINE
00002B82  43F9 00002DD2           2672          LEA     NEWLINE,A1          Creates a new line in output window
00002B88  103C 000E               2673          MOVE.B  #14,D0
00002B8C  4E4F                    2674          TRAP    #15
00002B8E                          2675  
00002B8E  5339 00003029           2676          SUB.B   #1,dispcount
00002B94  0C39 0000 00003029      2677          CMP.B   #0,dispcount               Checks if display counter is zero
00002B9C  6600 E552               2678          BNE     NEWADDR
00002BA0                          2679  
00002BA0                          2680  * Asks user to press enter to continue
00002BA0                          2681  * Resets counter
00002BA0  43F9 00002DD2           2682          LEA     NEWLINE,A1          Creates a new line in output window
00002BA6  103C 000E               2683          MOVE.B  #14,D0
00002BAA  4E4F                    2684          TRAP    #15
00002BAC                          2685          
00002BAC  43F9 0000300D           2686          LEA     MCONT,A1            Asks user to press enter to continue
00002BB2  103C 000E               2687          MOVE.B  #14,D0
00002BB6  4E4F                    2688          TRAP    #15
00002BB8                          2689  
00002BB8  103C 0004               2690          MOVE.B  #4,D0               Takes in user input
00002BBC  4E4F                    2691          TRAP    #15
00002BBE  4281                    2692          CLR.L   D1                  Clears D1 incase user decides to input something
00002BC0                          2693  
00002BC0  43F9 00002DD2           2694          LEA     NEWLINE,A1          Creates a new line in output window
00002BC6  103C 000E               2695          MOVE.B  #14,D0
00002BCA  4E4F                    2696          TRAP    #15
00002BCC                          2697  
00002BCC  13FC 001E 00003029      2698          MOVE.B  #dispnum,dispcount  Resets display counter
00002BD4  6000 E51A               2699          BRA     NEWADDR             Loops back to beginning
00002BD8                          2700  
00002BD8                          2701  
00002BD8                          2702  ******************************************************************************************************
00002BD8                          2703  * Converts decimal number into hex and displays it
00002BD8                          2704  *   converts number 10-15 to A-F
00002BD8                          2705  *   INPUT: decimal number in D1
00002BD8                          2706  *   OUTPUT: HEX number to output
00002BD8  B23C 000A               2707  CONV    CMP.B   #10,D1              Displays 10 as A
00002BDC  6700 002A               2708          BEQ     HEXA
00002BE0  B23C 000B               2709          CMP.B   #11,D1              Displays 11 as B
00002BE4  6700 002C               2710          BEQ     HEXB
00002BE8  B23C 000C               2711          CMP.B   #12,D1              Displays 12 as C
00002BEC  6700 002E               2712          BEQ     HEXC
00002BF0  B23C 000D               2713          CMP.B   #13,D1              Displays 13 as D
00002BF4  6700 0030               2714          BEQ     HEXD
00002BF8  B23C 000E               2715          CMP.B   #14,D1              Displays 14 as E
00002BFC  6700 0032               2716          BEQ     HEXE
00002C00  B23C 000F               2717          CMP.B   #15,D1              Displays 15 as F
00002C04  6700 0034               2718          BEQ     HEXF
00002C08                          2719  
00002C08  43F9 00002DE7           2720  HEXA    LEA     DISPA,A1            Loads A character
00002C0E  6000 0034               2721          BRA     PRINT
00002C12                          2722    
00002C12  43F9 00002DE9           2723  HEXB    LEA     DISPB,A1            Loads B character
00002C18  6000 002A               2724          BRA     PRINT
00002C1C                          2725  
00002C1C  43F9 00002DEB           2726  HEXC    LEA     DISPC,A1            Loads C character
00002C22  6000 0020               2727          BRA     PRINT
00002C26                          2728  
00002C26  43F9 00002DED           2729  HEXD    LEA     DISPD,A1            Loads D character
00002C2C  6000 0016               2730          BRA     PRINT
00002C30                          2731  
00002C30  43F9 00002DEF           2732  HEXE    LEA     DISPE,A1            Loads E character
00002C36  6000 000C               2733          BRA     PRINT
00002C3A                          2734  
00002C3A  43F9 00002DF1           2735  HEXF    LEA     DISPF,A1            Loads F character
00002C40  6000 0002               2736          BRA     PRINT
00002C44                          2737  
00002C44  103C 000E               2738  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002C48  4E4F                    2739          TRAP    #15                 Prints out message in A1
00002C4A  4ED3                    2740          JMP     (A3)
00002C4C                          2741  
00002C4C                          2742  ******************************************************************************
00002C4C                          2743  * Converts decimal input to hex
00002C4C                          2744  * INPUT: Decimal inside D2
00002C4C                          2745  * OUTPUT: HEX into D3
00002C4C                          2746  *   Converts number in decimal to hex        
00002C4C                          2747  DEC2HEX
00002C4C  B43C 0030               2748          CMP.B   #$30,D2             0
00002C50  6700 00B0               2749          BEQ     D2HZERO
00002C54  B43C 0031               2750          CMP.B   #$31,D2             1
00002C58  6700 00AE               2751          BEQ     D2HONE
00002C5C  B43C 0032               2752          CMP.B   #$32,D2             2
00002C60  6700 00AC               2753          BEQ     D2HTWO
00002C64  B43C 0033               2754          CMP.B   #$33,D2             3
00002C68  6700 00AA               2755          BEQ     D2HTHREE
00002C6C  B43C 0034               2756          CMP.B   #$34,D2             4
00002C70  6700 00A8               2757          BEQ     D2HFOUR
00002C74  B43C 0035               2758          CMP.B   #$35,D2             5
00002C78  6700 00A6               2759          BEQ     D2HFIVE
00002C7C  B43C 0036               2760          CMP.B   #$36,D2             6
00002C80  6700 00A4               2761          BEQ     D2HSIX
00002C84  B43C 0037               2762          CMP.B   #$37,D2             7
00002C88  6700 00A2               2763          BEQ     D2HSEVEN
00002C8C  B43C 0038               2764          CMP.B   #$38,D2             8
00002C90  6700 00A0               2765          BEQ     D2HEIGHT
00002C94  B43C 0039               2766          CMP.B   #$39,D2             9
00002C98  6700 009E               2767          BEQ     D2HNINE
00002C9C  B43C 0041               2768          CMP.B   #$41,D2             A
00002CA0  6700 009C               2769          BEQ     D2HHEXA
00002CA4  B43C 0042               2770          CMP.B   #$42,D2             B
00002CA8  6700 009A               2771          BEQ     D2HHEXB
00002CAC  B43C 0043               2772          CMP.B   #$43,D2             C
00002CB0  6700 0098               2773          BEQ     D2HHEXC
00002CB4  B43C 0044               2774          CMP.B   #$44,D2             D
00002CB8  6700 0096               2775          BEQ     D2HHEXD
00002CBC  B43C 0045               2776          CMP.B   #$45,D2             E
00002CC0  6700 0094               2777          BEQ     D2HHEXE
00002CC4  B43C 0046               2778          CMP.B   #$46,D2             F
00002CC8  6700 0092               2779          BEQ     D2HHEXF
00002CCC  B43C 0061               2780          CMP.B   #$61,D2             A
00002CD0  6700 006C               2781          BEQ     D2HHEXA
00002CD4  B43C 0062               2782          CMP.B   #$62,D2             B
00002CD8  6700 006A               2783          BEQ     D2HHEXB
00002CDC  B43C 0063               2784          CMP.B   #$63,D2             C
00002CE0  6700 0068               2785          BEQ     D2HHEXC
00002CE4  B43C 0064               2786          CMP.B   #$64,D2             D
00002CE8  6700 0066               2787          BEQ     D2HHEXD
00002CEC  B43C 0065               2788          CMP.B   #$65,D2             E
00002CF0  6700 0064               2789          BEQ     D2HHEXE
00002CF4  B43C 0066               2790          CMP.B   #$66,D2             F
00002CF8  6700 0062               2791          BEQ     D2HHEXF
00002CFC                          2792  
00002CFC                          2793          * User entered a non-hex character
00002CFC                          2794          * Moves F to D1 to indicate error before returning
00002CFC  123C 000F               2795          MOVE.B  #$F,D1
00002D00  4E75                    2796          RTS
00002D02                          2797  
00002D02                          2798  *   Moves the appropiate hex number to D3
00002D02  163C 0000               2799  D2HZERO MOVE.B  #$0,D3
00002D06  4E75                    2800          RTS
00002D08                          2801  
00002D08                          2802  D2HONE
00002D08  163C 0001               2803          MOVE.B  #$1,D3
00002D0C  4E75                    2804          RTS
00002D0E                          2805  
00002D0E                          2806  D2HTWO
00002D0E  163C 0002               2807          MOVE.B  #$2,D3
00002D12  4E75                    2808          RTS
00002D14                          2809  
00002D14                          2810  D2HTHREE
00002D14  163C 0003               2811          MOVE.B  #$3,D3
00002D18  4E75                    2812          RTS
00002D1A                          2813  
00002D1A                          2814  D2HFOUR
00002D1A  163C 0004               2815          MOVE.B  #$4,D3
00002D1E  4E75                    2816          RTS
00002D20                          2817  
00002D20                          2818  D2HFIVE
00002D20  163C 0005               2819          MOVE.B  #$5,D3
00002D24  4E75                    2820          RTS
00002D26                          2821  
00002D26                          2822  D2HSIX
00002D26  163C 0006               2823          MOVE.B  #$6,D3
00002D2A  4E75                    2824          RTS
00002D2C                          2825  
00002D2C                          2826  D2HSEVEN
00002D2C  163C 0007               2827          MOVE.B  #$7,D3
00002D30  4E75                    2828          RTS
00002D32                          2829  
00002D32                          2830  D2HEIGHT
00002D32  163C 0008               2831          MOVE.B  #$8,D3
00002D36  4E75                    2832          RTS
00002D38                          2833  
00002D38                          2834  D2HNINE
00002D38  163C 0009               2835          MOVE.B  #$9,D3
00002D3C  4E75                    2836          RTS
00002D3E                          2837  
00002D3E                          2838  D2HHEXA
00002D3E  163C 000A               2839          MOVE.B  #$A,D3
00002D42  4E75                    2840          RTS
00002D44                          2841  
00002D44                          2842  D2HHEXB
00002D44  163C 000B               2843          MOVE.B  #$B,D3
00002D48  4E75                    2844          RTS
00002D4A                          2845  
00002D4A                          2846  D2HHEXC
00002D4A  163C 000C               2847          MOVE.B  #$C,D3
00002D4E  4E75                    2848          RTS
00002D50                          2849  
00002D50                          2850  D2HHEXD
00002D50  163C 000D               2851          MOVE.B  #$D,D3
00002D54  4E75                    2852          RTS
00002D56                          2853  
00002D56                          2854  D2HHEXE
00002D56  163C 000E               2855          MOVE.B  #$E,D3
00002D5A  4E75                    2856          RTS
00002D5C                          2857  
00002D5C                          2858  D2HHEXF
00002D5C  163C 000F               2859          MOVE.B  #$F,D3
00002D60  4E75                    2860          RTS
00002D62                          2861  
00002D62                          2862  *************************************************************************************************
00002D62                          2863  ASK4REPEAT
00002D62  43F9 00002DD2           2864          LEA     NEWLINE,A1          Creates a new line in output window
00002D68  103C 000E               2865          MOVE.B  #14,D0
00002D6C  4E4F                    2866          TRAP    #15
00002D6E                          2867  ASK4REPEAT2
00002D6E  43F9 00002F14           2868          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00002D74  103C 000E               2869          MOVE.B  #14,D0
00002D78  4E4F                    2870          TRAP    #15
00002D7A                          2871  
00002D7A  43F9 00003036           2872          LEA     bit4,A1             User has to enter Y to start over
00002D80  103C 0002               2873          MOVE.B  #2,D0               N to exit
00002D84  4E4F                    2874          TRAP    #15
00002D86                          2875  
00002D86  1239 00003036           2876          MOVE.B  bit4,D1             User input was stored in bit4
00002D8C  B23C 0059               2877          CMP.B   #$59,D1             Char Y
00002D90  6700 E284               2878          BEQ     IOSTART
00002D94  B23C 0079               2879          CMP.B   #$79,D1             Char y
00002D98  6700 E27C               2880          BEQ     IOSTART
00002D9C  B23C 004E               2881          CMP.B   #$4E,D1             Char N
00002DA0  6700 001C               2882          BEQ     DONE
00002DA4  B23C 006E               2883          CMP.B   #$6E,D1             Char n
00002DA8  6700 0014               2884          BEQ     DONE
00002DAC  60C0                    2885          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00002DAE                          2886  
00002DAE                          2887  
00002DAE                          2888  **************************************************************************************************
00002DAE  43F9 00002FDB           2889  ERROR   LEA     MERROR,A1
00002DB4  103C 000E               2890          MOVE.B  #14,D0
00002DB8  4E4F                    2891          TRAP    #15
00002DBA  6000 000E               2892          BRA     EXIT
00002DBE                          2893  
00002DBE  43F9 00002FF2           2894  DONE    LEA     MDONE,A1
00002DC4  103C 000E               2895          MOVE.B  #14,D0
00002DC8  4E4F                    2896          TRAP    #15
00002DCA                          2897  
00002DCA  103C 0009               2898  EXIT    MOVE.B  #9,D0
00002DCE  4E4F                    2899          TRAP    #15
00002DD0                          2900  
00002DD0                          2901  ************************************ Output stuff **************************************
00002DD0                          2902  * Stuff for output
00002DD0                          2903  
00002DD0  =0000000D               2904  CR      EQU     $0D
00002DD0  =0000000A               2905  LF      EQU     $0A
00002DD0                          2906  
00002DD0= 20 00                   2907  SPACE       DC.B    ' ',0
00002DD2= 0D 0A 00                2908  NEWLINE     DC.B    '',CR,LF,0
00002DD5= 20 20 20 00             2909  TAB         DC.B    '   ',0
00002DD9= 2C 00                   2910  COMMA       DC.B    ',',0
00002DDB= 28 00                   2911  OPENBRA     DC.B    '(',0
00002DDD= 29 00                   2912  CLOSEBRA    DC.B    ')',0
00002DDF= 2B 00                   2913  POS         DC.B    '+',0
00002DE1= 2D 00                   2914  NEG         DC.B    '-',0
00002DE3= 23 00                   2915  HASH        DC.B    '#',0
00002DE5= 2F 00                   2916  SLASH       DC.B    '/',0
00002DE7                          2917  
00002DE7                          2918  
00002DE7= 41 00                   2919  DISPA       DC.B    'A',0
00002DE9= 42 00                   2920  DISPB       DC.B    'B',0
00002DEB= 43 00                   2921  DISPC       DC.B    'C',0
00002DED= 44 00                   2922  DISPD       DC.B    'D',0
00002DEF= 45 00                   2923  DISPE       DC.B    'E',0
00002DF1= 46 00                   2924  DISPF       DC.B    'F',0
00002DF3                          2925  
00002DF3= 2E 00                   2926  MDOT        DC.B    '.',0
00002DF5= 24 00                   2927  MHEX        DC.B    '$',0
00002DF7= 42 20 00                2928  MBYTE       DC.B    'B ',0
00002DFA= 57 20 00                2929  MWORD       DC.B    'W ',0
00002DFD= 4C 20 00                2930  MLONG       DC.B    'L ',0
00002E00= 44 00                   2931  MDN         DC.B    'D',0
00002E02= 41 00                   2932  MAN         DC.B    'A',0
00002E04                          2933  
00002E04= 4A 53 52 00             2934  MJSR        DC.B    'JSR',0
00002E08= 42 54 53 54 00          2935  MBTST       DC.B    'BTST',0
00002E0D= 52 4F 4C 00             2936  MROL        DC.B    'ROL',0
00002E11= 52 4F 52 00             2937  MROR        DC.B    'ROR',0
00002E15= 4C 53 4C 00             2938  MLSL        DC.B    'LSL',0
00002E19= 4C 53 52 00             2939  MLSR        DC.B    'LSR',0
00002E1D= 4E 45 47 2E 00          2940  MMNEGW      DC.B    'NEG.',0
00002E22= 44 49 56 53 2E 57 00    2941  MMDIVSW     DC.B    'DIVS.W',0
00002E29= 4D 55 4C 53 2E 57 00    2942  MMULSW      DC.B    'MULS.W',0
00002E30= 4D 4F 56 45 2E 42 00    2943  MMOVEB      DC.B    'MOVE.B',0
00002E37= 4D 4F 56 45 2E 57 00    2944  MMOVEW      DC.B    'MOVE.W',0
00002E3E= 4D 4F 56 45 2E 4C 00    2945  MMOVEL      DC.B    'MOVE.L',0
00002E45= 4D 4F 56 45 41 2E ...   2946  MMOVEAW     DC.B    'MOVEA.W',0
00002E4D= 4D 4F 56 45 41 2E ...   2947  MMOVEAL     DC.B    'MOVEA.L',0
00002E55= 4D 4F 56 45 4D 2E 00    2948  MMOVEM      DC.B    'MOVEM.',0
00002E5C                          2949  
00002E5C= 44 41 54 41 00          2950  MDATA       DC.B    'DATA',0
00002E61= 53 55 42 2E 00          2951  MSUB        DC.B    'SUB.',0
00002E66= 53 55 42 41 2E 00       2952  MSUBA       DC.B    'SUBA.',0
00002E6C= 41 4E 44 2E 00          2953  MAND        DC.B    'AND.',0
00002E71= 41 44 44 2E 00          2954  MADD        DC.B    'ADD.',0
00002E76= 53 55 42 49 2E 00       2955  MSUBI       DC.B    'SUBI.',0
00002E7C= 4F 52 49 2E 00          2956  MORI        DC.B    'ORI.',0
00002E81= 4E 4F 54 2E 00          2957  MNOT        DC.B    'NOT.',0
00002E86= 4D 55 4C 53 2E 00       2958  MMUL        DC.B    'MULS.',0
00002E8C= 4E 45 47 00             2959  MNEG        DC.B    'NEG',0
00002E90= 43 4D 50 2E 00          2960  MCMP        DC.B    'CMP.',0
00002E95= 43 4D 50 49 2E 00       2961  MCMPI       DC.B    'CMPI.',0
00002E9B= 43 4D 50 41 2E 00       2962  MCMPA       DC.B    'CMPA.',0
00002EA1= 45 4F 52 2E 00          2963  MEOR        DC.B    'EOR.',0
00002EA6= 45 4F 52 49 2E 00       2964  MEORI       DC.B    'EORI.',0
00002EAC= 41 44 44 41 2E 00       2965  MADDA       DC.B    'ADDA.',0
00002EB2                          2966  
00002EB2= 42 45 51 00             2967  MBEQ        DC.B    'BEQ',0
00002EB6= 42 4E 45 00             2968  MBNE        DC.B    'BNE',0
00002EBA= 42 4C 54 00             2969  MBLT        DC.B    'BLT',0
00002EBE= 42 48 49 00             2970  MBHI        DC.B    'BHI',0
00002EC2= 42 52 41 00             2971  MBRA        DC.B    'BRA',0
00002EC6= 4E 4F 50 00             2972  MNOP        DC.B    'NOP',0
00002ECA= 52 54 53 00             2973  MRTS        DC.B    'RTS',0
00002ECE                          2974  
00002ECE= 4C 65 6D 6D 65 20 ...   2975  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002EF1= 47 69 6D 6D 65 20 ...   2976  MADDR2      DC.B    'Gimme that end address too homie: ',0
00002F14= 54 72 79 6E 61 20 ...   2977  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00002F34= 45 6E 64 20 61 64 ...   2978  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00002F6C= 41 64 64 72 65 73 ...   2979  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00002F9F= 52 65 2D 65 6E 74 ...   2980  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00002FBB= 41 64 64 72 65 73 ...   2981  MIOERR4     DC.B    'Address must be an even number.',0
00002FDB= 45 52 52 4F 52 3A ...   2982  MERROR      DC.B    'ERROR: Something broke',0
00002FF2= 43 4F 4D 50 4C 45 ...   2983  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
0000300D= 2A 2A 50 52 45 53 ...   2984  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00003029                          2985  
00003029                          2986  
00003029                          2987  ********************************** MEMORY STORAGE **********************************************
00003029                          2988  * Stores memory locations at the end of the program
00003029                          2989  * How DS works: Give it a variable name.
00003029                          2990  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00003029                          2991  *   Last is the number of storage you want. 
00003029                          2992  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00003029                          2993  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00003029                          2994  *            
00003029                          2995  
00003029                          2996  dispcount   DS.B    1           Used to count display lines
0000302A                          2997  
0000302A                          2998  startaddr   DS.L    1
0000302E                          2999  endaddr     DS.L    1
00003032                          3000  
00003032                          3001  bit0        DS.B    1           SEE NOTE UP TOP
00003033                          3002  bit1        DS.B    1           SEE NOTE UP TOP
00003034                          3003  bit2        DS.B    1           SEE NOTE UP TOP
00003035                          3004  bit3        DS.B    1           SEE NOTE UP TOP
00003036                          3005  bit4        DS.B    1           SEE NOTE UP TOP
00003037                          3006  
00003037                          3007  
00003037                          3008      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              155A
ADDIMD0             158A
ADDIMD1             1598
ADDIMD4             15A6
ADDIMDDES           1614
ADDIMDDES0          1638
ADDIMDDES1          1646
ADDIMDDES4          1654
ADDR1               7000
ADDR2               726C
ASK4REPEAT          2D62
ASK4REPEAT2         2D6E
BCC                 1F48
BCCBEQ              1FC4
BCCBHI              1FE2
BCCBLT              1FD8
BCCBNE              1FCE
BCCBRA              1FBA
BCCDISP             1F8E
BCCLONG             1F76
BCCNEXT             1F7E
BCCPRINT            1FEC
BCCWORD             1F6E
BIT0                3032
BIT1                3033
BIT2                3034
BIT3                3035
BIT4                3036
BTST                1268
CLOSEBRA            2DDD
CLRDN               2AFC
CODE                11C4
COMMA               2DD9
CONV                2BD8
CR                  D
D2HEIGHT            2D32
D2HFIVE             2D20
D2HFOUR             2D1A
D2HHEXA             2D3E
D2HHEXB             2D44
D2HHEXC             2D4A
D2HHEXD             2D50
D2HHEXE             2D56
D2HHEXF             2D5C
D2HNINE             2D38
D2HONE              2D08
D2HSEVEN            2D2C
D2HSIX              2D26
D2HTHREE            2D14
D2HTWO              2D0E
D2HZERO             2D02
DEC2HEX             2C4C
DISPA               2DE7
DISPADDR            10C6
DISPADDR1           110E
DISPADDR2           1110
DISPADDR3           1144
DISPADDR4           115A
DISPADDR5           1170
DISPADDR6           1186
DISPADDREND         1190
DISPADDRSTART       1102
DISPB               2DE9
DISPC               2DEB
DISPCOUNT           3029
DISPD               2DED
DISPE               2DEF
DISPEA              2A96
DISPEA3             2ABA
DISPEA4             2AE2
DISPEA5             2AF8
DISPEALONG          2AB2
DISPEAWORD          2AAA
DISPF               2DF1
DISPNUM             1E
DIVSW               1B04
DONE                2DBE
ENDADDR             302E
ENDNEWLINE          2B82
ENDNLINC            1A76
ERROR               2DAE
EXIT                2DCA
HANDLEDES           15BC
HASH                2DE3
HEXA                2C08
HEXB                2C12
HEXC                2C1C
HEXD                2C26
HEXE                2C30
HEXF                2C3A
IMD                 1FFC
IMD2                2024
IMD3                202C
IMD4                2038
IMDBYTE             20D2
IMDEA               20FA
IMDEA2              2116
IMDEA3              212C
IMDLONG             20F0
IMDPRINT            2072
IMDPRINTCMPI        20C0
IMDPRINTEND         20CA
IMDPRINTEORI        20B6
IMDPRINTORI         20A2
IMDPRINTSUBI        20AC
IMDWORD             20E2
INVOP               2B10
INVOP1              2B40
INVOP2              2B42
INVOP3              2B60
INVOP4              2B76
INVOPCODE           2B0E
IOERROR1            1088
IOERROR2            1096
IOERROR3            10A6
IOERROR4            10B6
IOGETADDR           103E
IOLOOP              1064
IOSTART             1016
IOSTARTLOOP         105E
JSR                 1228
LF                  A
LSLR                1CE8
LSLRDESD            1966
LSLRMEM             1E06
LSLRSRCD            193E
MADD                2E71
MADDA               2EAC
MADDR1              2ECE
MADDR2              2EF1
MAN                 2E02
MAND                2E6C
MBEQ                2EB2
MBHI                2EBE
MBLT                2EBA
MBNE                2EB6
MBRA                2EC2
MBTST               2E08
MBYTE               2DF7
MCMP                2E90
MCMPA               2E9B
MCMPI               2E95
MCONT               300D
MDATA               2E5C
MDN                 2E00
MDONE               2FF2
MDOT                2DF3
MEOR                2EA1
MEORI               2EA6
MERROR              2FDB
MHEX                2DF5
MIOERR1             2F34
MIOERR2             2F6C
MIOERR3             2F9F
MIOERR4             2FBB
MISC                2130
MISCBIT2            2178
MISCBIT3            2184
MISCBYTE            2222
MISCCHECKM          2198
MISCEA              2250
MISCEA2             226C
MISCLONG            2244
MISCMMPOSTINC       2398
MISCMMPOSTINC2      23A2
MISCMMPOSTINC3      23D8
MISCMMPOSTINCPRINT  23DC
MISCMMPOSTINCPRINT2  23F0
MISCMMPOSTINCPRINT3  23FC
MISCMMPREDEC        232A
MISCMMPREDEC2       2354
MISCMMPREDEC3       236A
MISCMMPREDECPRINT   236E
MISCMMPREDECPRINT2  2382
MISCMMPREDECPRINT3  238E
MISCMMPRINTNUM      2406
MISCMMPRINTSIZE     2312
MISCMMSIZEL         230C
MISCMMSLASH         2414
MISCMOVEM           22A4
MISCMOVEM2          22B4
MISCMOVEM3          22C4
MISCMOVEM4          22D6
MISCNOP             21B8
MISCNOT             21D8
MISCNOT2            21E0
MISCNOT3            21E8
MISCNOT4            21F4
MISCPRINT           2270
MISCPRINTEND        229C
MISCPRINTNEG        2292
MISCPRINTNOT        2288
MISCRTS             21C8
MISCWORD            2234
MJSR                2E04
MLONG               2DFD
MLSL                2E15
MLSR                2E19
MMDIVSW             2E22
MMNEGW              2E1D
MMOVEAL             2E4D
MMOVEAW             2E45
MMOVEB              2E30
MMOVEL              2E3E
MMOVEM              2E55
MMOVEW              2E37
MMUL                2E86
MMULSW              2E29
MNEG                2E8C
MNOP                2EC6
MNOT                2E81
MORI                2E7C
MOVB                14D6
MOVBDN1             18B2
MOVBDN2             1A52
MOVEAL              1482
MOVEAN1             166A
MOVEAN2             1982
MOVEAW              13A2
MOVEIAN1            16DE
MOVEIAND1           1812
MOVEIANI1           1772
MOVIAN2             199E
MOVIAND2            1A12
MOVIANI2            19D2
MOVL                13F6
MOVW                1316
MREPEAT             2F14
MROL                2E0D
MROR                2E11
MRTS                2ECA
MSUB                2E61
MSUBA               2E66
MSUBI               2E76
MULSW               1A7A
MWORD               2DFA
NEG                 2DE1
NEGW                1B92
NEWADDR             10F0
NEWLINE             2DD2
OPENBRA             2DDB
POS                 2DDF
PRINT               2C44
PRINTB              1E44
PRINTBYTE           1BEC
PRINTL              1EAC
PRINTLONG           1C94
PRINTLSL            1DD2
PRINTLSLRCOUNT      1EE0
PRINTLSR            1F14
PRINTROL            1D6A
PRINTROR            1D9E
PRINTW              1E78
PRINTWORD           1C40
RORL                1D52
SLASH               2DE5
SPACE               2DD0
START               1000
STARTADDR           302A
SUB                 2422
SUB1                2454
SUB2                2436
SUB3                243E
SUB4                2448
SUBA                2670
SUBACHECK           2490
SUBACONT            26C4
SUBAN               285A
SUBAN2              2876
SUBANID             2892
SUBANIDNEG          2906
SUBANIDPOS          28C6
SUBDN               2822
SUBDN2              283E
SUBEA               2946
SUBEAHEX            29A4
SUBEAHEX1           2A44
SUBEAHEX2           2A4C
SUBEAHEX3           2A54
SUBEAHEX4           2A7C
SUBEAHEX5           2A92
SUBEAID             2A34
SUBEAID2            29B0
SUBERRORTEST1       27E0
SUBERRORTEST11      2820
SUBJMPA2            2750
SUBPRINT            2752
SUBPRINTADD         27A2
SUBPRINTADDA        26B4
SUBPRINTAND         2792
SUBPRINTB           27B2
SUBPRINTCMP         27BE
SUBPRINTCMPA        26A4
SUBPRINTEND         27DE
SUBPRINTEOR         27CE
SUBPRINTSUB         2782
SUBPRINTSUBA        2694
SUBSIZE1            24F0
SUBSIZE11           2516
SUBSIZE12           252C
SUBSIZE2            2530
SUBSIZE21           2556
SUBSIZE22           256C
SUBSIZE3            2570
SUBSIZE31           2596
SUBSIZE32           25AC
SUBSIZE4            25B0
SUBSIZE41           25D6
SUBSIZE42           25EC
SUBSIZE5            25F0
SUBSIZE51           2616
SUBSIZE52           262C
SUBSIZE6            2630
SUBSIZE61           2656
SUBSIZE62           266C
SUBSIZE7            26DC
SUBSIZE71           26FE
SUBSIZE72           2714
SUBSIZE8            2718
SUBSIZE81           2738
SUBSIZE82           274C
TAB                 2DD5
