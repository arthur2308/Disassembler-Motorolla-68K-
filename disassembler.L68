00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/7/2015 11:06:19 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000                            64  
00000000                            65  
00000000  =00007000                 66  addr1       EQU     $7000
00000000                            67  *addr2      EQU     $703C
00000000  =0000726C                 68  addr2       EQU     $726C
00000000                            69  
00000000  =0000001E                 70  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            71  
00000000                            72  
00000000                            73  
00001000                            74      ORG    $1000
00001000                            75  START:                  ; first instruction of program
00001000                            76  
00001000                            77          
00001000                            78          
00001000                            79  
00001000                            80          *   this stores some test EA into memory m,
00001000                            81          *LEA     addr1,A1
00001000                            82          *MOVE.W  #$0440,(A1)+        *917C
00001000                            83          *MOVE.W  #$917C,(A1)+       
00001000                            84          *MOVE.L  #$5555A7FF,(A1)+
00001000                            85          *MOVE.W  #$9078,(A1)+
00001000                            86          *MOVE.W  #$5555,(A1)+
00001000                            87          
00001000                            88          
00001000                            89          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            90          
00001000                            91          *MOVE.L  #$6700F0D8,$7000
00001000                            92          *MOVE.W  #$4E71,$7000         NOP
00001000                            93  
00001000                            94          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            95          *MOVE.L  #$48E3FAF5,$7000
00001000                            96          *MOVE.L  #$4CF8CDD9,$7004
00001000                            97          *MOVE.W  #$4000,$7008
00001000                            98  
00001000                            99  
00001000                           100          * start address: 7000
00001000                           101          * end address:   766C
00001000                           102  
00001000                           103  
00001000                           104          *MOVE.W  #$5A80,$7000
00001000                           105          *MOVE.L  #$47F80033,$7000
00001000                           106          *MOVE.W  #$4000,$7008
00001000                           107  
00001000                           108  *********************************************************************************************************************
00001000                           109  * Takes in user start and end address
00001000                           110  
00001000                           111  IOSTART
00001000                           112  *   Displays message asking for address
00001000  43F9 00003336            113          LEA     MADDR1,A1           Loads message to retrieve first number
00001006  6100 0020                114          BSR     IOGETADDR
0000100A                           115  
0000100A  0804 0000                116          BTST    #0,D4               Checks of the starting address is an odd number
0000100E  6600 0090                117          BNE     IOERROR4            Throws an error if it is because it will crash
00001012                           118  
00001012  2E04                     119          MOVE.L  D4,D7               Moves starting address to D7 for now
00001014  43F9 00003359            120          LEA     MADDR2,A1           Then grabs the ending address
0000101A  6100 000C                121          BSR     IOGETADDR
0000101E  B887                     122          CMP.L   D7,D4               Compares the start address to end address
00001020  6E00 008E                123          BGT     DISPADDR            Continues if start < end
00001024  6000 004C                124          BRA     IOERROR1            Error if not
00001028                           125  
00001028                           126  IOGETADDR
00001028  2649                     127          MOVEA.L A1,A3               Saves the message incase of an error
0000102A  103C 000E                128          MOVE.B  #14,D0              Prepares to display message
0000102E  4E4F                     129          TRAP    #15                 Displays message
00001030                           130  
00001030  4244                     131          CLR     D4                  Clears D4 register to prevent errors
00001032                           132  
00001032  43F9 00003492            133          LEA     startaddr,A1        Uses this memory location to store the data
00001038  103C 0002                134          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
0000103C  4E4F                     135          TRAP    #15
0000103E                           136  
0000103E  B23C 0008                137          CMP.B   #8,D1               Throws an error if the input is longer than a longword
00001042  6E00 003C                138          BGT     IOERROR2
00001046  1A01                     139          MOVE.B  D1,D5               Moves the length of the input to D5
00001048                           140  
00001048                           141  IOSTARTLOOP
00001048  45F9 00003492            142          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
0000104E                           143  
0000104E                           144  IOLOOP
0000104E  141A                     145          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001050  5305                     146          SUB.B   #1,D5               Subtract 1 from counter
00001052  6100 204E                147          BSR     DEC2HEX             Converts decimal to hex number
00001056  B23C 000F                148          CMP.B   #$F,D1
0000105A  6700 0034                149          BEQ     IOERROR3
0000105E                           150  
0000105E  1C05                     151          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001060  CDFC 0004                152          MULS    #4,D6               Multiply by 4 to find number of shifts left
00001064                           153          
00001064  EDAB                     154          LSL.L   D6,D3               Shifts hex left
00001066  D883                     155          ADD.L   D3,D4               Adds number to new total
00001068                           156          
00001068  7600                     157          MOVE.L  #0,D3               Clears D3 to prevent errors
0000106A                           158          
0000106A  BA3C 0000                159          CMP.B   #0,D5               Compares counter to 0    
0000106E  66DE                     160          BNE     IOLOOP              Otherwise will loop
00001070  4E75                     161          RTS
00001072                           162  
00001072                           163  * Error message for start address greater than end address
00001072                           164  IOERROR1
00001072  43F9 0000339C            165          LEA     MIOERR1,A1
00001078  103C 000D                166          MOVE.B  #13,D0
0000107C  4E4F                     167          TRAP    #15
0000107E  6080                     168          BRA     IOSTART
00001080                           169  
00001080                           170  * Error message if user input address is longer than longword
00001080                           171  IOERROR2
00001080  43F9 000033D4            172          LEA     MIOERR2,A1
00001086  103C 000D                173          MOVE.B  #13,D0
0000108A  4E4F                     174          TRAP    #15
0000108C  224B                     175          MOVEA.L A3,A1
0000108E  6098                     176          BRA     IOGETADDR
00001090                           177  
00001090                           178  * Error message if user enters non-valid hex numbers
00001090                           179  IOERROR3
00001090  43F9 00003407            180          LEA     MIOERR3,A1
00001096  103C 000D                181          MOVE.B  #13,D0
0000109A  4E4F                     182          TRAP    #15
0000109C  224B                     183          MOVEA.L A3,A1
0000109E  6088                     184          BRA     IOGETADDR
000010A0                           185  
000010A0                           186  * Error message for odd numbered addresses
000010A0                           187  IOERROR4
000010A0  43F9 00003423            188          LEA     MIOERR4,A1
000010A6  103C 000D                189          MOVE.B  #13,D0
000010AA  4E4F                     190          TRAP    #15
000010AC  6000 FF52                191          BRA     IOSTART
000010B0                           192  
000010B0                           193  ******************************************** displays address location***********************************************
000010B0                           194  * This displays the address location of the op-code being worked on
000010B0                           195  * A6 is used as current address
000010B0                           196  DISPADDR
000010B0  23C7 00003492            197          MOVE.L  D7,startaddr
000010B6  23C4 00003496            198          MOVE.L  D4,endaddr
000010BC  6100 1E94                199          BSR     CLRDN
000010C0  2C79 00003492            200          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010C6  13FC 001E 00003491       201          MOVE.B  #dispnum,dispcount  Sets display line counter
000010CE                           202  
000010CE  43F9 00003228            203          LEA     NEWLINE,A1          Creates a new line in output window
000010D4  103C 000E                204          MOVE.B  #14,D0
000010D8  4E4F                     205          TRAP    #15
000010DA                           206  
000010DA                           207  NEWADDR
000010DA  2E0E                     208          MOVE.L  A6,D7               Loads the current address into D7
000010DC  BEB9 00003496            209          CMP.L   endaddr,D7          Compares current address to end address
000010E2  6E00 20D4                210          BGT     ASK4REPEAT          Branches to done if current address > end address
000010E6  45F9 0000117A            211          LEA     DISPADDREND,A2
000010EC                           212  
000010EC                           213  ************************************************
000010EC                           214  * Displays address as HEX
000010EC                           215  * INPUT: address stored into D7
000010EC                           216  * OUTPUT: prints hex address to output window
000010EC                           217  DISPADDRSTART
000010EC  1C3C 0002                218          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F0  2407                     219          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010F2  4842                     220          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010F4  6000 0004                221          BRA     DISPADDR2           Skips the second part to do later
000010F8                           222  
000010F8                           223  DISPADDR1
000010F8  3407                     224          MOVE.W  D7,D2
000010FA                           225  DISPADDR2
000010FA  3202                     226          MOVE.W  D2,D1               D1 will be the first byte of the word
000010FC  3602                     227          MOVE.W  D2,D3               D3 will be the second byte of the word
000010FE  3802                     228          MOVE.W  D2,D4               D4 will be the third byte of the word
00001100  3A02                     229          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001102                           230  
00001102  E049                     231          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
00001104  E849                     232          LSR.W   #4,D1
00001106  E94B                     233          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001108  E04B                     234          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
0000110A  E84B                     235          LSR.W   #4,D3
0000110C  E14C                     236          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
0000110E  E04C                     237          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001110  E84C                     238          LSR.W   #4,D4
00001112  E14D                     239          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
00001114  E94D                     240          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001116  E04D                     241          LSR.W   #8,D5
00001118  E84D                     242          LSR.W   #4,D5
0000111A                           243          
0000111A                           244          
0000111A  47F9 0000112E            245          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001120  B23C 0009                246          CMP.B   #9,D1               Compares digit to 9
00001124  6E00 1F08                247          BGT     CONV                Print out letter representation if greater than 9
00001128                           248  
00001128  103C 0003                249          MOVE.B  #3,D0               Displays digit if it is less than A
0000112C  4E4F                     250          TRAP    #15
0000112E                           251          
0000112E                           252  DISPADDR3   
0000112E  1203                     253          MOVE.B  D3,D1               Displays digit in 1's place second
00001130                           254  
00001130                           255          *   converts digits 10+ into letters
00001130  47F9 00001144            256          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001136  B23C 0009                257          CMP.B   #9,D1               Compares digit to 9
0000113A  6E00 1EF2                258          BGT     CONV                Print out letter representation if greater than 9
0000113E                           259          
0000113E  103C 0003                260          MOVE.B  #3,D0               Displays digit if it is less than A
00001142  4E4F                     261          TRAP    #15
00001144                           262  
00001144                           263  DISPADDR4
00001144  1204                     264          MOVE.B  D4,D1               Displays digit in 1's place second
00001146                           265  
00001146                           266          *   converts digits 10+ into letters
00001146  47F9 0000115A            267          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
0000114C  B23C 0009                268          CMP.B   #9,D1               Compares digit to 9
00001150  6E00 1EDC                269          BGT     CONV                Print out letter representation if greater than 9
00001154                           270          
00001154  103C 0003                271          MOVE.B  #3,D0               Displays digit if it is less than A
00001158  4E4F                     272          TRAP    #15
0000115A                           273  
0000115A                           274  DISPADDR5
0000115A  1205                     275          MOVE.B  D5,D1               Displays digit in 1's place second
0000115C                           276  
0000115C                           277          *   converts digits 10+ into letters
0000115C  47F9 00001170            278          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
00001162  B23C 0009                279          CMP.B   #9,D1               Compares digit to 9
00001166  6E00 1EC6                280          BGT     CONV                Print out letter representation if greater than 9
0000116A                           281          
0000116A  103C 0003                282          MOVE.B  #3,D0               Displays digit if it is less than A
0000116E  4E4F                     283          TRAP    #15
00001170                           284          
00001170                           285  DISPADDR6
00001170                           286  * Display counter -- creates new line every 8 bytes
00001170                           287          * D6 is used as counter
00001170                           288          
00001170  5306                     289          SUB.B   #1,D6
00001172  BC3C 0000                290          CMP.B   #0,D6
00001176  6680                     291          BNE     DISPADDR1
00001178                           292  
00001178  4ED2                     293          JMP     (A2)                Jumps to address stored in A2 when complete
0000117A                           294  
0000117A                           295  DISPADDREND
0000117A  43F9 0000322B            296          LEA     TAB,A1
00001180  103C 000E                297          MOVE.B  #14,D0
00001184  4E4F                     298          TRAP    #15
00001186                           299          
00001186                           300  *********************************************************************************************************************
00001186                           301  * Splits the first byte of the op code into nibbles
00001186                           302  * then sends it to the branch-table to jump to the appropiate section to be decoded
00001186                           303  
00001186  4281                     304          CLR.L   D1                  Clears the data registers
00001188  4282                     305          CLR.L   D2
0000118A  4283                     306          CLR.L   D3
0000118C  4284                     307          CLR.L   D4
0000118E  4285                     308          CLR.L   D5
00001190  4286                     309          CLR.L   D6
00001192  3C16                     310          MOVE.W  (A6),D6
00001194  141E                     311          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00001196                           312    
00001196  1E02                     313          MOVE.B  D2,D7
00001198  E14F                     314          LSL.W   #8,D7
0000119A                           315          
0000119A  1602                     316          MOVE.B  D2,D3               Copies data at D2 to D3
0000119C                           317          *   this gets digit in 10's place
0000119C  E80B                     318          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000119E                           319          *   this gets digit in 1's place
0000119E  E90A                     320          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A0  E80A                     321          LSR.B   #4,D2               Shifts back right into 1's place
000011A2                           322          
000011A2                           323          *   D3 holds digit in 10's place
000011A2                           324          *   D2 holds digit in 1's place
000011A2                           325  
000011A2                           326          *   Moves second nibble to D5 to be used later
000011A2  1A02                     327          MOVE.B  D2,D5
000011A4  13C3 0000349A            328          MOVE.B  D3,bit0
000011AA                           329          *   Goes to a branch-table to figure out which op code it is
000011AA  6000 0002                330          BRA     CODE
000011AE                           331  
000011AE                           332  ******************************************************************************************************
000011AE                           333  *   This is where the table goes to detirmine which op-code to use
000011AE                           334  CODE    
000011AE  B63C 0000                335          CMP.B   #$0,D3              Goes to immediate operation section
000011B2  6700 0F0A                336          BEQ     IMD
000011B6  B63C 0004                337          CMP.B   #$4,D3              Goes to miscellaneous section
000011BA  6700 104C                338          BEQ     MISC
000011BE  B63C 0005                339          CMP.B   #$5,D3
000011C2  6700 12CC                340          BEQ     ADDQ                Goes to addq section
000011C6  B63C 0006                341          CMP.B   #$6,D3
000011CA  6700 0E3E                342          BEQ     BCC
000011CE  B63C 0009                343          CMP.B   #$9,D3              Goes to sub section
000011D2  6700 16A4                344          BEQ     SUB
000011D6  B63C 000C                345          CMP.B   #$C,D3              Goes to sub but displays as AND
000011DA  6700 169C                346          BEQ     SUB
000011DE  B63C 000D                347          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011E2  6700 1694                348          BEQ     SUB
000011E6  B63C 000B                349          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011EA  6700 168C                350          BEQ     SUB
000011EE  B63C 0001                351          CMP.B   #$1,D3
000011F2  6700 02C4                352          BEQ     MOVB                Goes to movb
000011F6  B63C 0003                353          CMP.B   #$3,D3
000011FA  6700 00FC                354          BEQ     MOVW                Goes to movb
000011FE  B63C 0002                355          CMP.B   #$2,D3
00001202  6700 01D4                356          BEQ     MOVL                Goes to movb
00001206  B63C 0008                357          CMP.B   #$8,D3
0000120A  6700 08E4                358          BEQ     DIVSW               Goes to divsw
0000120E  B63C 000E                359          CMP.B   #$E,D3
00001212  6700 0AC0                360          BEQ     LSLR                Goes to divsw
00001216                           361  
00001216  6000 1D4C                362          BRA     INVOPCODE
0000121A                           363          
0000121A                           364  JSR
0000121A  43F9 0000325A            365          LEA MJSR,A1
00001220  103C 000E                366          MOVE.B  #14,D0
00001224  4E4F                     367          TRAP    #15 
00001226                           368          
00001226  1406                     369          MOVE.B  D6,D2
00001228  EB0A                     370          LSL.B   #5,D2
0000122A  EA0A                     371          LSR.B   #5,D2
0000122C  13C2 0000349E            372          MOVE.B  D2,bit4
00001232                           373          
00001232  1406                     374          MOVE.B  D6,D2
00001234  E50A                     375          LSL.B   #2,D2
00001236  EA0A                     376          LSR.B   #5,D2
00001238  13C2 0000349D            377          MOVE.B  D2,bit3
0000123E                           378  
0000123E  183C 0003                379          MOVE.B  #$3,D4
00001242                           380  
00001242  0C39 0002 0000349D       381          CMP.B   #$2,bit3
0000124A  6700 0476                382          BEQ     MOVEIAN1
0000124E                           383          
0000124E  43F9 0000322B            384          LEA     TAB,A1
00001254  323C 0003                385          MOVE    #3,D1
00001258  4E4F                     386          TRAP    #15
0000125A                           387          
0000125A  0C39 0007 0000349D       388          CMP.B   #$7,bit3
00001262  6700 0394                389          BEQ     ADDIMDDES
00001266                           390          
00001266                           391  BTST 
00001266  43F9 0000325E            392          LEA MBTST,A1
0000126C  103C 000E                393          MOVE.B  #14,D0
00001270  4E4F                     394          TRAP    #15 
00001272                           395          
00001272  1406                     396          MOVE.B  D6,D2
00001274  EB0A                     397          LSL.B   #5,D2
00001276  EA0A                     398          LSR.B   #5,D2
00001278  13C2 0000349B            399          MOVE.B  D2,bit1
0000127E                           400          
0000127E  1406                     401          MOVE.B  D6,D2
00001280  E50A                     402          LSL.B   #2,D2
00001282  EA0A                     403          LSR.B   #5,D2
00001284  13C2 0000349C            404          MOVE.B  D2,bit2
0000128A                           405          
0000128A  3406                     406          MOVE.W  D6,D2
0000128C  E94A                     407          LSL.W   #4,D2
0000128E  E04A                     408          LSR.W   #8,D2
00001290  EA4A                     409          LSR.W   #5,D2
00001292  13C2 0000349D            410          MOVE.B  D2,bit3
00001298                           411          
00001298  3406                     412          MOVE.W  D6,D2
0000129A  EF4A                     413          LSL.W   #7,D2
0000129C  E04A                     414          LSR.W   #8,D2
0000129E  EE4A                     415          LSR.W   #7,D2
000012A0  13C2 0000349A            416          MOVE.B  D2,bit0
000012A6                           417          
000012A6  0C39 0000 0000349A       418          CMP.B   #0,bit0
000012AE  6700 002E                419          BEQ     BTSTMEM
000012B2                           420          
000012B2  43F9 0000322B            421          LEA TAB,A1
000012B8  103C 000E                422          MOVE.B  #14,D0
000012BC  4E4F                     423          TRAP    #15
000012BE                           424  
000012BE  43F9 00003243            425          LEA DISPD,A1
000012C4  103C 000E                426          MOVE.B  #14,D0
000012C8  4E4F                     427          TRAP    #15
000012CA                           428          
000012CA  1A3C 0004                429          MOVE.B   #$4,D5
000012CE                           430          
000012CE  1239 0000349D            431          MOVE.B  bit3,D1
000012D4  103C 0003                432          MOVE.B  #3,D0
000012D8  4E4F                     433          TRAP    #15
000012DA                           434          
000012DA  6000 02C4                435          BRA HANDLEDES
000012DE                           436          
000012DE                           437  BTSTMEM
000012DE  43F9 0000322B            438          LEA TAB,A1
000012E4  123C 0003                439          MOVE.B  #3,D1
000012E8  4E4F                     440          TRAP    #15
000012EA                           441          
000012EA  183C 0001                442          MOVE.B  #$1,D4
000012EE  45F9 000015A0            443          LEA     HANDLEDES,A2
000012F4  6000 1BF6                444          BRA     DISPEA
000012F8                           445          
000012F8                           446  MOVW
000012F8  E20A                     447          LSR.B   #1,D2
000012FA  13C2 0000349B            448          MOVE.B  D2,bit1
00001300                           449          
00001300  1416                     450          MOVE.B  (A6),D2
00001302  EB0A                     451          LSL.B   #5,D2
00001304  EA0A                     452          LSR.B   #5,D2
00001306  13C2 0000349E            453          MOVE.B  D2,bit4
0000130C                           454          
0000130C  141E                     455          MOVE.B  (A6)+,D2
0000130E  E50A                     456          LSL.B   #2,D2
00001310  EA0A                     457          LSR.B   #5,D2
00001312  13C2 0000349D            458          MOVE.B  D2,bit3
00001318                           459          
00001318  EF4E                     460          LSL.W   #7,D6
0000131A  E04E                     461          LSR.W   #8,D6 
0000131C  EA4E                     462          LSR.W   #5,D6 
0000131E  13C6 0000349C            463          MOVE.B  D6,bit2
00001324                           464  
00001324  0C39 0001 0000349C       465          CMP.B   #$1,bit2
0000132C  6700 0056                466          BEQ     MOVEAW
00001330                           467  
00001330  43F9 0000328D            468          LEA MMOVEW,A1
00001336  103C 000E                469          MOVE.B  #14,D0
0000133A  4E4F                     470          TRAP    #15 
0000133C                           471  
0000133C  0C39 0000 0000349D       472          CMP.B   #$0,bit3           
00001344  6700 0558                473          BEQ     MOVBDN1
00001348  0C39 0001 0000349D       474          CMP.B   #$1,bit3
00001350  6700 02FC                475          BEQ     MOVEAN1
00001354  0C39 0002 0000349D       476          CMP.B   #$2,bit3
0000135C  6700 0364                477          BEQ     MOVEIAN1
00001360  0C39 0003 0000349D       478          CMP.B   #$3,bit3
00001368  6700 03EC                479          BEQ     MOVEIANI1
0000136C  0C39 0004 0000349D       480          CMP.B   #$4,bit3
00001374  6700 0488                481          BEQ     MOVEIAND1
00001378  0C39 0007 0000349D       482          CMP.B   #$7,bit3
00001380  6700 01BC                483          BEQ     ADDIMD
00001384                           484  
00001384                           485  MOVEAW
00001384  43F9 0000329B            486          LEA MMOVEAW,A1
0000138A  103C 000E                487          MOVE.B  #14,D0
0000138E  4E4F                     488          TRAP    #15 
00001390                           489          
00001390  0C39 0000 0000349D       490          CMP.B   #$0,bit3           
00001398  6700 0504                491          BEQ     MOVBDN1
0000139C  0C39 0001 0000349D       492          CMP.B   #$1,bit3
000013A4  6700 02A8                493          BEQ     MOVEAN1
000013A8  0C39 0002 0000349D       494          CMP.B   #$2,bit3
000013B0  6700 0310                495          BEQ     MOVEIAN1
000013B4  0C39 0003 0000349D       496          CMP.B   #$3,bit3
000013BC  6700 0398                497          BEQ     MOVEIANI1
000013C0  0C39 0004 0000349D       498          CMP.B   #$4,bit3
000013C8  6700 0434                499          BEQ     MOVEIAND1
000013CC  0C39 0007 0000349D       500          CMP.B   #$7,bit3
000013D4  6700 0168                501          BEQ     ADDIMD
000013D8                           502  
000013D8                           503  MOVL
000013D8  E20A                     504          LSR.B   #1,D2
000013DA  13C2 0000349B            505          MOVE.B  D2,bit1
000013E0                           506          
000013E0  1416                     507          MOVE.B  (A6),D2
000013E2  EB0A                     508          LSL.B   #5,D2
000013E4  EA0A                     509          LSR.B   #5,D2
000013E6  13C2 0000349E            510          MOVE.B  D2,bit4
000013EC                           511          
000013EC  141E                     512          MOVE.B  (A6)+,D2
000013EE  E50A                     513          LSL.B   #2,D2
000013F0  EA0A                     514          LSR.B   #5,D2
000013F2  13C2 0000349D            515          MOVE.B  D2,bit3
000013F8                           516          
000013F8  EF4E                     517          LSL.W   #7,D6
000013FA  E04E                     518          LSR.W   #8,D6 
000013FC  EA4E                     519          LSR.W   #5,D6 
000013FE  13C6 0000349C            520          MOVE.B  D6,bit2
00001404                           521          
00001404  0C39 0001 0000349C       522          CMP.B   #$1,bit2
0000140C  6700 0056                523          BEQ     MOVEAL
00001410                           524  
00001410  43F9 00003294            525          LEA MMOVEL,A1
00001416  103C 000E                526          MOVE.B  #14,D0
0000141A  4E4F                     527          TRAP    #15 
0000141C                           528          
0000141C  0C39 0000 0000349D       529          CMP.B   #$0,bit3           
00001424  6700 0478                530          BEQ     MOVBDN1
00001428  0C39 0001 0000349D       531          CMP.B   #$1,bit3
00001430  6700 021C                532          BEQ     MOVEAN1
00001434  0C39 0002 0000349D       533          CMP.B   #$2,bit3
0000143C  6700 0284                534          BEQ     MOVEIAN1
00001440  0C39 0003 0000349D       535          CMP.B   #$3,bit3
00001448  6700 030C                536          BEQ     MOVEIANI1
0000144C  0C39 0004 0000349D       537          CMP.B   #$4,bit3
00001454  6700 03A8                538          BEQ     MOVEIAND1
00001458  0C39 0007 0000349D       539          CMP.B   #$7,bit3
00001460  6700 00DC                540          BEQ     ADDIMD
00001464                           541  
00001464                           542  MOVEAL
00001464  43F9 000032A3            543          LEA MMOVEAL,A1
0000146A  103C 000E                544          MOVE.B  #14,D0
0000146E  4E4F                     545          TRAP    #15 
00001470                           546          
00001470  0C39 0000 0000349D       547          CMP.B   #$0,bit3           
00001478  6700 0424                548          BEQ     MOVBDN1
0000147C  0C39 0001 0000349D       549          CMP.B   #$1,bit3
00001484  6700 01C8                550          BEQ     MOVEAN1
00001488  0C39 0002 0000349D       551          CMP.B   #$2,bit3
00001490  6700 0230                552          BEQ     MOVEIAN1
00001494  0C39 0003 0000349D       553          CMP.B   #$3,bit3
0000149C  6700 02B8                554          BEQ     MOVEIANI1
000014A0  0C39 0004 0000349D       555          CMP.B   #$4,bit3
000014A8  6700 0354                556          BEQ     MOVEIAND1
000014AC  0C39 0007 0000349D       557          CMP.B   #$7,bit3
000014B4  6700 0088                558          BEQ     ADDIMD        
000014B8                           559  
000014B8                           560  MOVB
000014B8  43F9 00003286            561          LEA MMOVEB,A1
000014BE  103C 000E                562          MOVE.B  #14,D0
000014C2  4E4F                     563          TRAP    #15 
000014C4                           564          
000014C4  E20A                     565          LSR.B   #1,D2
000014C6  13C2 0000349B            566          MOVE.B  D2,bit1
000014CC                           567          
000014CC  1416                     568          MOVE.B  (A6),D2
000014CE  EB0A                     569          LSL.B   #5,D2
000014D0  EA0A                     570          LSR.B   #5,D2
000014D2  13C2 0000349E            571          MOVE.B  D2,bit4
000014D8                           572          
000014D8  141E                     573          MOVE.B  (A6)+,D2
000014DA  E50A                     574          LSL.B   #2,D2
000014DC  EA0A                     575          LSR.B   #5,D2
000014DE  13C2 0000349D            576          MOVE.B  D2,bit3
000014E4                           577          
000014E4  EF4E                     578          LSL.W   #7,D6
000014E6  E04E                     579          LSR.W   #8,D6 
000014E8  EA4E                     580          LSR.W   #5,D6 
000014EA  13C6 0000349C            581          MOVE.B  D6,bit2
000014F0                           582          
000014F0                           583      
000014F0  4285                     584          CLR.L   D5
000014F2                           585          
000014F2  0C39 0000 0000349D       586          CMP.B   #$0,bit3           
000014FA  6700 03A2                587          BEQ     MOVBDN1
000014FE  0C39 0001 0000349D       588          CMP.B   #$1,bit3
00001506  6700 0146                589          BEQ     MOVEAN1
0000150A  0C39 0002 0000349D       590          CMP.B   #$2,bit3
00001512  6700 01AE                591          BEQ     MOVEIAN1
00001516  0C39 0003 0000349D       592          CMP.B   #$3,bit3
0000151E  6700 0236                593          BEQ     MOVEIANI1
00001522  0C39 0004 0000349D       594          CMP.B   #$4,bit3
0000152A  6700 02D2                595          BEQ     MOVEIAND1
0000152E  0C39 0007 0000349D       596          CMP.B   #$7,bit3
00001536  6700 0006                597          BEQ     ADDIMD
0000153A                           598          
0000153A  6000 1A2A                599          BRA     INVOP
0000153E                           600  
0000153E                           601  ADDIMD
0000153E  43F9 0000322B            602      LEA     TAB,A1
00001544  103C 000E                603      MOVE.B  #14,D0
00001548  4E4F                     604      TRAP    #15
0000154A                           605      
0000154A  0C39 0000 0000349E       606      CMP.B   #$0,bit4
00001552  6700 001A                607      BEQ     ADDIMD0
00001556  0C39 0001 0000349E       608      CMP.B   #$1,bit4
0000155E  6700 001C                609      BEQ     ADDIMD1
00001562  0C39 0004 0000349E       610      CMP.B   #$4,bit4
0000156A  6700 001E                611      BEQ     ADDIMD4
0000156E                           612  
0000156E                           613  ADDIMD0
0000156E  183C 0001                614      MOVE.B  #$1,D4
00001572  45F9 000015A0            615      LEA     HANDLEDES,A2
00001578  6000 1972                616      BRA     DISPEA
0000157C                           617  ADDIMD1 
0000157C  183C 0002                618      MOVE.B  #$2,D4
00001580  45F9 000015A0            619      LEA     HANDLEDES,A2
00001586  6000 1964                620      BRA     DISPEA
0000158A                           621  ADDIMD4
0000158A  43F9 00003239            622      LEA     HASH,A1
00001590  103C 000E                623      MOVE.B  #14,D0
00001594  4E4F                     624      TRAP    #15
00001596                           625      
00001596  45F9 000015A0            626      LEA     HANDLEDES,A2
0000159C  6000 194E                627      BRA     DISPEA 
000015A0                           628      
000015A0                           629  HANDLEDES
000015A0  43F9 0000322F            630      LEA     COMMA,A1
000015A6  103C 000E                631      MOVE.B  #14,D0
000015AA  4E4F                     632      TRAP    #15
000015AC                           633      
000015AC  0C39 0000 0000349C       634      CMP.B   #$0,bit2
000015B4  6700 0488                635      BEQ     MOVBDN2
000015B8  0C39 0001 0000349C       636      CMP.B   #$1,bit2
000015C0  6700 03AC                637      BEQ     MOVEAN2
000015C4  0C39 0002 0000349C       638      CMP.B   #$2,bit2 
000015CC  6700 03BC                639      BEQ     MOVIAN2
000015D0  0C39 0003 0000349C       640      CMP.B   #$3,bit2 
000015D8  6700 03E4                641      BEQ     MOVIANI2
000015DC  0C39 0004 0000349C       642      CMP.B   #$4,bit2 
000015E4  6700 0418                643      BEQ     MOVIAND2
000015E8  BA3C 0005                644      CMP.B   #$5,D5
000015EC  6700 0450                645      BEQ     MOVBDN2
000015F0  BA3C 0007                646      CMP.B   #$7,D5
000015F4  6700 0002                647      BEQ     ADDIMDDES
000015F8                           648  
000015F8                           649  ADDIMDDES
000015F8  0C39 0000 0000349E       650      CMP.B   #$0,bit4
00001600  6700 001A                651      BEQ     ADDIMDDES0
00001604  0C39 0001 0000349E       652      CMP.B   #$1,bit4
0000160C  6700 001C                653      BEQ     ADDIMDDES1
00001610  0C39 0004 0000349E       654      CMP.B   #$4,bit4
00001618  6700 001E                655      BEQ     ADDIMDDES4
0000161C                           656      
0000161C                           657  ADDIMDDES0
0000161C  183C 0001                658      MOVE.B  #$1,D4
00001620  45F9 00002FD8            659      LEA     ENDNEWLINE,A2
00001626  6000 18C4                660      BRA     DISPEA
0000162A                           661      
0000162A                           662  ADDIMDDES1
0000162A  183C 0002                663      MOVE.B  #$2,D4
0000162E  45F9 00002FD8            664      LEA     ENDNEWLINE,A2
00001634  6000 18B6                665      BRA     DISPEA
00001638                           666      
00001638                           667  ADDIMDDES4    
00001638  43F9 00003239            668      LEA     HASH,A1
0000163E  103C 000E                669      MOVE.B  #14,D0
00001642  4E4F                     670      TRAP    #15
00001644                           671      
00001644  45F9 00002FD8            672      LEA     ENDNEWLINE,A2
0000164A  6000 18A0                673      BRA     DISPEA 
0000164E                           674          
0000164E                           675  MOVEAN1
0000164E  43F9 0000322B            676      LEA TAB,A1
00001654  103C 000E                677      MOVE.B  #14,D0
00001658  4E4F                     678      TRAP    #15
0000165A                           679  
0000165A  43F9 0000323D            680      LEA DISPA,A1
00001660  103C 000E                681      MOVE.B  #14,D0
00001664  4E4F                     682      TRAP    #15
00001666                           683      
00001666  1239 0000349E            684      MOVE.B  bit4,D1
0000166C  103C 0003                685      MOVE.B  #3,D0
00001670  4E4F                     686      TRAP    #15
00001672                           687      
00001672  43F9 0000322F            688      LEA COMMA,A1
00001678  103C 000E                689      MOVE.B  #14,D0
0000167C  4E4F                     690      TRAP    #15
0000167E                           691      
0000167E  0C39 0000 0000349C       692      CMP.B   #$0,bit2
00001686  6700 03B6                693      BEQ     MOVBDN2
0000168A  0C39 0001 0000349C       694      CMP.B   #$1,bit2
00001692  6700 02DA                695      BEQ     MOVEAN2
00001696  0C39 0002 0000349C       696      CMP.B   #$2,bit2 
0000169E  6700 02EA                697      BEQ     MOVIAN2
000016A2  0C39 0003 0000349C       698      CMP.B   #$3,bit2 
000016AA  6700 0312                699      BEQ     MOVIANI2
000016AE  0C39 0004 0000349C       700      CMP.B   #$4,bit2 
000016B6  6700 0346                701      BEQ     MOVIAND2
000016BA  BA3C 0005                702      CMP.B   #$5,D5
000016BE  6700 037E                703      BEQ     MOVBDN2
000016C2                           704      
000016C2                           705  MOVEIAN1
000016C2  43F9 0000322B            706      LEA TAB,A1
000016C8  103C 000E                707      MOVE.B  #14,D0
000016CC  4E4F                     708      TRAP    #15
000016CE                           709      
000016CE  43F9 00003231            710      LEA OPENBRA,A1
000016D4  103C 000E                711      MOVE.B  #14,D0
000016D8  4E4F                     712      TRAP    #15
000016DA                           713  
000016DA  43F9 0000323D            714      LEA DISPA,A1
000016E0  103C 000E                715      MOVE.B  #14,D0
000016E4  4E4F                     716      TRAP    #15
000016E6                           717      
000016E6  1239 0000349E            718      MOVE.B  bit4,D1
000016EC  103C 0003                719      MOVE.B  #3,D0
000016F0  4E4F                     720      TRAP    #15
000016F2                           721      
000016F2  43F9 00003233            722      LEA CLOSEBRA,A1
000016F8  103C 000E                723      MOVE.B  #14,D0
000016FC  4E4F                     724      TRAP    #15
000016FE                           725      
000016FE  B83C 0003                726      CMP.B   #$3,D4
00001702  6700 18D4                727      BEQ     ENDNEWLINE
00001706                           728      
00001706  43F9 0000322F            729      LEA COMMA,A1
0000170C  103C 000E                730      MOVE.B  #14,D0
00001710  4E4F                     731      TRAP    #15
00001712                           732      
00001712  0C39 0000 0000349C       733      CMP.B   #$0,bit2
0000171A  6700 0322                734      BEQ     MOVBDN2
0000171E  0C39 0001 0000349C       735      CMP.B   #$1,bit2
00001726  6700 0246                736      BEQ     MOVEAN2
0000172A  0C39 0002 0000349C       737      CMP.B   #$2,bit2 
00001732  6700 0256                738      BEQ     MOVIAN2
00001736  0C39 0003 0000349C       739      CMP.B   #$3,bit2 
0000173E  6700 027E                740      BEQ     MOVIANI2
00001742  0C39 0004 0000349C       741      CMP.B   #$4,bit2 
0000174A  6700 02B2                742      BEQ     MOVIAND2
0000174E  BA3C 0005                743      CMP.B   #$5,D5
00001752  6700 02EA                744      BEQ     MOVBDN2
00001756                           745  
00001756                           746  MOVEIANI1
00001756  43F9 0000322B            747      LEA TAB,A1
0000175C  103C 000E                748      MOVE.B  #14,D0
00001760  4E4F                     749      TRAP    #15
00001762                           750      
00001762  43F9 00003231            751      LEA OPENBRA,A1
00001768  103C 000E                752      MOVE.B  #14,D0
0000176C  4E4F                     753      TRAP    #15
0000176E                           754  
0000176E  43F9 0000323D            755      LEA DISPA,A1
00001774  103C 000E                756      MOVE.B  #14,D0
00001778  4E4F                     757      TRAP    #15
0000177A                           758      
0000177A  1239 0000349E            759      MOVE.B  bit4,D1
00001780  103C 0003                760      MOVE.B  #3,D0
00001784  4E4F                     761      TRAP    #15
00001786                           762      
00001786  43F9 00003233            763      LEA CLOSEBRA,A1
0000178C  103C 000E                764      MOVE.B  #14,D0
00001790  4E4F                     765      TRAP    #15
00001792                           766      
00001792  43F9 00003235            767      LEA POS,A1
00001798  103C 000E                768      MOVE.B  #14,D0
0000179C  4E4F                     769      TRAP    #15
0000179E                           770      
0000179E  BA3C 0003                771      CMP.B   #$3,D5
000017A2  6700 1834                772      BEQ     ENDNEWLINE
000017A6                           773             
000017A6  BA3C 0004                774      CMP.B   #$4,D5
000017AA  6700 182C                775      BEQ     ENDNEWLINE
000017AE                           776          
000017AE                           777          
000017AE  43F9 0000322F            778      LEA COMMA,A1
000017B4  103C 000E                779      MOVE.B  #14,D0
000017B8  4E4F                     780      TRAP    #15
000017BA                           781      
000017BA  0C39 0000 0000349C       782      CMP.B   #$0,bit2
000017C2  6700 027A                783      BEQ     MOVBDN2
000017C6  0C39 0001 0000349C       784      CMP.B   #$1,bit2
000017CE  6700 019E                785      BEQ     MOVEAN2
000017D2  0C39 0002 0000349C       786      CMP.B   #$2,bit2 
000017DA  6700 01AE                787      BEQ     MOVIAN2
000017DE  0C39 0003 0000349C       788      CMP.B   #$3,bit2 
000017E6  6700 01D6                789      BEQ     MOVIANI2
000017EA  0C39 0004 0000349C       790      CMP.B   #$4,bit2 
000017F2  6700 020A                791      BEQ     MOVIAND2
000017F6  BA3C 0005                792      CMP.B   #$5,D5
000017FA  6700 0242                793      BEQ     MOVBDN2
000017FE                           794  
000017FE                           795  MOVEIAND1
000017FE  43F9 0000322B            796      LEA TAB,A1
00001804  103C 000E                797      MOVE.B  #14,D0
00001808  4E4F                     798      TRAP    #15
0000180A                           799      
0000180A  43F9 00003237            800      LEA NEG,A1
00001810  103C 000E                801      MOVE.B  #14,D0
00001814  4E4F                     802      TRAP    #15
00001816                           803      
00001816  43F9 00003231            804      LEA OPENBRA,A1
0000181C  103C 000E                805      MOVE.B  #14,D0
00001820  4E4F                     806      TRAP    #15
00001822                           807  
00001822  43F9 0000323D            808      LEA DISPA,A1
00001828  103C 000E                809      MOVE.B  #14,D0
0000182C  4E4F                     810      TRAP    #15
0000182E                           811      
0000182E  1239 0000349E            812      MOVE.B  bit4,D1
00001834  103C 0003                813      MOVE.B  #3,D0
00001838  4E4F                     814      TRAP    #15
0000183A                           815      
0000183A  43F9 00003233            816      LEA CLOSEBRA,A1
00001840  103C 000E                817      MOVE.B  #14,D0
00001844  4E4F                     818      TRAP    #15
00001846                           819      
00001846  BA3C 0004                820      CMP.B   #$4,D5
0000184A  6700 178C                821      BEQ     ENDNEWLINE
0000184E                           822      
0000184E  43F9 0000322F            823      LEA COMMA,A1
00001854  103C 000E                824      MOVE.B  #14,D0
00001858  4E4F                     825      TRAP    #15
0000185A                           826      
0000185A  0C39 0000 0000349C       827      CMP.B   #$0,bit2
00001862  6700 01DA                828      BEQ     MOVBDN2
00001866  0C39 0001 0000349C       829      CMP.B   #$1,bit2
0000186E  6700 00FE                830      BEQ     MOVEAN2
00001872  0C39 0002 0000349C       831      CMP.B   #$2,bit2 
0000187A  6700 010E                832      BEQ     MOVIAN2
0000187E  0C39 0003 0000349C       833      CMP.B   #$3,bit2 
00001886  6700 0136                834      BEQ     MOVIANI2
0000188A  0C39 0004 0000349C       835      CMP.B   #$4,bit2 
00001892  6700 016A                836      BEQ     MOVIAND2
00001896  BA3C 0005                837      CMP.B   #$5,D5
0000189A  6700 01A2                838      BEQ     MOVBDN2
0000189E                           839  
0000189E                           840  MOVBDN1
0000189E  43F9 0000322B            841      LEA TAB,A1
000018A4  103C 000E                842      MOVE.B  #14,D0
000018A8  4E4F                     843      TRAP    #15
000018AA                           844  
000018AA  BA3C 0006                845      CMP.B   #$6,D5             * Data Reg for LSLR
000018AE  6700 007A                846      BEQ     LSLRSRCD
000018B2                           847  
000018B2  43F9 00003243            848      LEA DISPD,A1
000018B8  103C 000E                849      MOVE.B  #14,D0
000018BC  4E4F                     850      TRAP    #15
000018BE                           851      
000018BE  1239 0000349E            852      MOVE.B  bit4,D1
000018C4  103C 0003                853      MOVE.B  #3,D0
000018C8  4E4F                     854      TRAP    #15
000018CA                           855  
000018CA  BA3C 0004                856      CMP.B   #$4,D5
000018CE  6700 0192                857      BEQ     ENDNLINC
000018D2                           858  
000018D2  43F9 0000322F            859      LEA COMMA,A1
000018D8  103C 000E                860      MOVE.B  #14,D0
000018DC  4E4F                     861      TRAP    #15
000018DE                           862  
000018DE  BA3C 0006                863      CMP.B   #$6,D5             * Data Reg for LSLR
000018E2  6700 006E                864      BEQ     LSLRDESD
000018E6  0C39 0000 0000349C       865      CMP.B   #$0,bit2
000018EE  6700 014E                866      BEQ     MOVBDN2
000018F2  0C39 0001 0000349C       867      CMP.B   #$1,bit2
000018FA  6700 0072                868      BEQ     MOVEAN2
000018FE  0C39 0002 0000349C       869      CMP.B   #$2,bit2 
00001906  6700 0082                870      BEQ     MOVIAN2
0000190A  0C39 0003 0000349C       871      CMP.B   #$3,bit2 
00001912  6700 00AA                872      BEQ     MOVIANI2
00001916  0C39 0004 0000349C       873      CMP.B   #$4,bit2 
0000191E  6700 00DE                874      BEQ     MOVIAND2
00001922  BA3C 0005                875      CMP.B   #$5,D5
00001926  6700 0116                876      BEQ     MOVBDN2
0000192A                           877      
0000192A                           878  LSLRSRCD
0000192A  43F9 00003243            879      LEA DISPD,A1
00001930  103C 000E                880      MOVE.B  #14,D0
00001934  4E4F                     881      TRAP    #15
00001936                           882          
00001936  1239 0000349A            883      MOVE.B  bit0,D1
0000193C  103C 0003                884      MOVE.B  #3,D0
00001940  4E4F                     885      TRAP    #15    
00001942                           886  
00001942  43F9 0000322F            887      LEA COMMA,A1
00001948  103C 000E                888      MOVE.B  #14,D0
0000194C  4E4F                     889      TRAP    #15  
0000194E                           890      
0000194E  6000 0002                891      BRA     LSLRDESD
00001952                           892      
00001952                           893  LSLRDESD
00001952  43F9 00003243            894      LEA DISPD,A1
00001958  103C 000E                895      MOVE.B  #14,D0
0000195C  4E4F                     896      TRAP    #15
0000195E                           897          
0000195E  1239 0000349E            898      MOVE.B  bit4,D1
00001964  103C 0003                899      MOVE.B  #3,D0
00001968  4E4F                     900      TRAP    #15      
0000196A                           901      
0000196A                           902      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000196A  6000 166C                903      BRA     ENDNEWLINE       
0000196E                           904  
0000196E                           905  MOVEAN2
0000196E  43F9 0000323D            906      LEA DISPA,A1
00001974  103C 000E                907      MOVE.B  #14,D0
00001978  4E4F                     908      TRAP    #15
0000197A                           909      
0000197A  1239 0000349B            910      MOVE.B  bit1,D1
00001980  103C 0003                911      MOVE.B  #3,D0
00001984  4E4F                     912      TRAP    #15
00001986                           913  
00001986                           914      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001986  6000 1650                915      BRA     ENDNEWLINE    
0000198A                           916  
0000198A                           917  MOVIAN2
0000198A  43F9 00003231            918      LEA OPENBRA,A1
00001990  103C 000E                919      MOVE.B  #14,D0
00001994  4E4F                     920      TRAP    #15
00001996                           921  
00001996  43F9 0000323D            922      LEA DISPA,A1
0000199C  103C 000E                923      MOVE.B  #14,D0
000019A0  4E4F                     924      TRAP    #15
000019A2                           925      
000019A2  1239 0000349B            926      MOVE.B  bit1,D1
000019A8  103C 0003                927      MOVE.B  #3,D0
000019AC  4E4F                     928      TRAP    #15
000019AE                           929      
000019AE  43F9 00003233            930      LEA CLOSEBRA,A1
000019B4  103C 000E                931      MOVE.B  #14,D0
000019B8  4E4F                     932      TRAP    #15
000019BA                           933      
000019BA                           934      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019BA  6000 161C                935      BRA     ENDNEWLINE
000019BE                           936  
000019BE                           937  MOVIANI2
000019BE  43F9 00003231            938      LEA OPENBRA,A1
000019C4  103C 000E                939      MOVE.B  #14,D0
000019C8  4E4F                     940      TRAP    #15
000019CA                           941  
000019CA  43F9 0000323D            942      LEA DISPA,A1
000019D0  103C 000E                943      MOVE.B  #14,D0
000019D4  4E4F                     944      TRAP    #15
000019D6                           945      
000019D6  1239 0000349B            946      MOVE.B  bit1,D1
000019DC  103C 0003                947      MOVE.B  #3,D0
000019E0  4E4F                     948      TRAP    #15
000019E2                           949      
000019E2  43F9 00003233            950      LEA CLOSEBRA,A1
000019E8  103C 000E                951      MOVE.B  #14,D0
000019EC  4E4F                     952      TRAP    #15
000019EE                           953      
000019EE  43F9 00003235            954      LEA POS,A1
000019F4  103C 000E                955      MOVE.B  #14,D0
000019F8  4E4F                     956      TRAP    #15
000019FA                           957      
000019FA                           958      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019FA  6000 15DC                959      BRA     ENDNEWLINE
000019FE                           960  
000019FE                           961  MOVIAND2
000019FE  43F9 00003237            962      LEA NEG,A1
00001A04  103C 000E                963      MOVE.B  #14,D0
00001A08  4E4F                     964      TRAP    #15
00001A0A                           965      
00001A0A  43F9 00003231            966      LEA OPENBRA,A1
00001A10  103C 000E                967      MOVE.B  #14,D0
00001A14  4E4F                     968      TRAP    #15
00001A16                           969  
00001A16  43F9 0000323D            970      LEA DISPA,A1
00001A1C  103C 000E                971      MOVE.B  #14,D0
00001A20  4E4F                     972      TRAP    #15
00001A22                           973      
00001A22  1239 0000349B            974      MOVE.B  bit1,D1
00001A28  103C 0003                975      MOVE.B  #3,D0
00001A2C  4E4F                     976      TRAP    #15
00001A2E                           977      
00001A2E  43F9 00003233            978      LEA CLOSEBRA,A1
00001A34  103C 000E                979      MOVE.B  #14,D0
00001A38  4E4F                     980      TRAP    #15
00001A3A                           981  
00001A3A                           982      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A3A  6000 159C                983      BRA     ENDNEWLINE
00001A3E                           984  
00001A3E                           985  MOVBDN2
00001A3E  43F9 00003243            986      LEA DISPD,A1
00001A44  103C 000E                987      MOVE.B  #14,D0
00001A48  4E4F                     988      TRAP    #15
00001A4A                           989          
00001A4A  1239 0000349B            990      MOVE.B  bit1,D1
00001A50  103C 0003                991      MOVE.B  #3,D0
00001A54  4E4F                     992      TRAP    #15   
00001A56                           993      
00001A56  B83C 0000                994      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A5A  6700 157C                995      BEQ     ENDNEWLINE
00001A5E                           996      
00001A5E                           997      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A5E  6000 1578                998      BRA     ENDNEWLINE
00001A62                           999      
00001A62                          1000      
00001A62                          1001  ENDNLINC
00001A62                          1002      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A62  6000 1574               1003      BRA     ENDNEWLINE    
00001A66                          1004      
00001A66                          1005  MULSW
00001A66  1407                    1006          MOVE.B  D7,D2
00001A68  EB0A                    1007          LSL.B   #5,D2
00001A6A  EA0A                    1008          LSR.B   #5,D2
00001A6C  13C2 0000349E           1009          MOVE.B  D2,bit4
00001A72                          1010          
00001A72  1407                    1011          MOVE.B  D7,D2
00001A74  E50A                    1012          LSL.B   #2,D2
00001A76  EA0A                    1013          LSR.B   #5,D2
00001A78  13C2 0000349D           1014          MOVE.B  D2,bit3
00001A7E                          1015          
00001A7E  3C07                    1016          MOVE.W  D7,D6
00001A80  EF4E                    1017          LSL.W   #7,D6
00001A82  E04E                    1018          LSR.W   #8,D6 
00001A84  EA4E                    1019          LSR.W   #5,D6 
00001A86  13C6 0000349C           1020          MOVE.B  D6,bit2
00001A8C                          1021          
00001A8C  E94F                    1022          LSL.W   #4,D7
00001A8E  E04F                    1023          LSR.W   #8,D7 
00001A90  EA4F                    1024          LSR.W   #5,D7 
00001A92  13C7 0000349B           1025          MOVE.B  D7,bit1
00001A98                          1026          
00001A98  43F9 0000327F           1027          LEA MMULSW,A1
00001A9E  323C 000E               1028          MOVE    #14,D1
00001AA2  4E4F                    1029          TRAP    #15
00001AA4                          1030          
00001AA4  1A3C 0005               1031          MOVE.B  #$5,D5 
00001AA8                          1032          
00001AA8  0C39 0000 0000349D      1033          CMP.B   #$0,bit3           
00001AB0  6700 FDEC               1034          BEQ     MOVBDN1
00001AB4  0C39 0001 0000349D      1035          CMP.B   #$1,bit3
00001ABC  6700 FB90               1036          BEQ     MOVEAN1
00001AC0  0C39 0002 0000349D      1037          CMP.B   #$2,bit3
00001AC8  6700 FBF8               1038          BEQ     MOVEIAN1
00001ACC  0C39 0003 0000349D      1039          CMP.B   #$3,bit3
00001AD4  6700 FC80               1040          BEQ     MOVEIANI1
00001AD8  0C39 0004 0000349D      1041          CMP.B   #$4,bit3
00001AE0  6700 FD1C               1042          BEQ     MOVEIAND1
00001AE4  0C39 0007 0000349D      1043          CMP.B   #$7,bit3
00001AEC  6700 FA50               1044          BEQ     ADDIMD
00001AF0                          1045  
00001AF0                          1046           
00001AF0                          1047  DIVSW               
00001AF0                          1048          *MOVE.B  D6,D2
00001AF0  141E                    1049          MOVE.B  (A6)+,D2
00001AF2  EB0A                    1050          LSL.B   #5,D2
00001AF4  EA0A                    1051          LSR.B   #5,D2
00001AF6  13C2 0000349E           1052          MOVE.B  D2,bit4
00001AFC                          1053          
00001AFC  1406                    1054          MOVE.B  D6,D2
00001AFE  E50A                    1055          LSL.B   #2,D2
00001B00  EA0A                    1056          LSR.B   #5,D2
00001B02  13C2 0000349D           1057          MOVE.B  D2,bit3
00001B08                          1058          
00001B08  3E06                    1059          MOVE.W  D6,D7
00001B0A  EF4F                    1060          LSL.W   #7,D7
00001B0C  E04F                    1061          LSR.W   #8,D7 
00001B0E  EA4F                    1062          LSR.W   #5,D7 
00001B10  13C7 0000349C           1063          MOVE.B  D7,bit2
00001B16                          1064          
00001B16  E94E                    1065          LSL.W   #4,D6
00001B18  E04E                    1066          LSR.W   #8,D6 
00001B1A  EA4E                    1067          LSR.W   #5,D6 
00001B1C  13C6 0000349B           1068          MOVE.B  D6,bit1
00001B22                          1069          
00001B22  43F9 00003278           1070          LEA MMDIVSW,A1
00001B28  323C 000E               1071          MOVE    #14,D1
00001B2C  4E4F                    1072          TRAP    #15
00001B2E                          1073          
00001B2E  1A3C 0005               1074          MOVE.B  #$5,D5 
00001B32  183C 0004               1075          MOVE.B  #$4,D4
00001B36                          1076          
00001B36  0C39 0000 0000349D      1077          CMP.B   #$0,bit3           
00001B3E  6700 FD5E               1078          BEQ     MOVBDN1
00001B42  0C39 0001 0000349D      1079          CMP.B   #$1,bit3
00001B4A  6700 FB02               1080          BEQ     MOVEAN1
00001B4E  0C39 0002 0000349D      1081          CMP.B   #$2,bit3
00001B56  6700 FB6A               1082          BEQ     MOVEIAN1
00001B5A  0C39 0003 0000349D      1083          CMP.B   #$3,bit3
00001B62  6700 FBF2               1084          BEQ     MOVEIANI1
00001B66  0C39 0004 0000349D      1085          CMP.B   #$4,bit3
00001B6E  6700 FC8E               1086          BEQ     MOVEIAND1
00001B72  0C39 0007 0000349D      1087          CMP.B   #$7,bit3
00001B7A  6700 F9C2               1088          BEQ     ADDIMD
00001B7E                          1089  
00001B7E                          1090  NEGW
00001B7E  1406                    1091          MOVE.B  D6,D2
00001B80  EB0A                    1092          LSL.B   #5,D2
00001B82  EA0A                    1093          LSR.B   #5,D2
00001B84  13C2 0000349E           1094          MOVE.B  D2,bit4
00001B8A                          1095          
00001B8A  1406                    1096          MOVE.B  D6,D2
00001B8C  E50A                    1097          LSL.B   #2,D2
00001B8E  EA0A                    1098          LSR.B   #5,D2
00001B90  13C2 0000349D           1099          MOVE.B  D2,bit3
00001B96                          1100          
00001B96  3E06                    1101          MOVE.W  D6,D7
00001B98  E14F                    1102          LSL.W   #8,D7
00001B9A  E04F                    1103          LSR.W   #8,D7 
00001B9C  EC4F                    1104          LSR.W   #6,D7 
00001B9E  13C7 0000349C           1105          MOVE.B  D7,bit2
00001BA4                          1106          
00001BA4  43F9 00003273           1107          LEA MMNEGW,A1
00001BAA  323C 000E               1108          MOVE    #14,D1
00001BAE  4E4F                    1109          TRAP    #15
00001BB0                          1110          
00001BB0  183C 0003               1111          MOVE.B  #$3,D4
00001BB4                          1112          
00001BB4  0C39 0000 0000349C      1113          CMP.B   #$0,bit2
00001BBC  6700 001A               1114          BEQ     PRINTBYTE
00001BC0  0C39 0001 0000349C      1115          CMP.B   #$1,bit2
00001BC8  6700 0062               1116          BEQ     PRINTWORD
00001BCC  0C39 0002 0000349C      1117          CMP.B   #$2,bit2
00001BD4  6700 00AA               1118          BEQ     PRINTLONG
00001BD8                          1119          
00001BD8                          1120  PRINTBYTE
00001BD8  43F9 0000324D           1121      LEA MBYTE,A1
00001BDE  323C 000E               1122      MOVE    #14,D1
00001BE2  4E4F                    1123      TRAP    #15
00001BE4                          1124  
00001BE4  0C39 0000 0000349D      1125      CMP.B   #$0,bit3           
00001BEC  6700 FCB0               1126          BEQ     MOVBDN1
00001BF0  0C39 0001 0000349D      1127          CMP.B   #$1,bit3
00001BF8  6700 FA54               1128          BEQ     MOVEAN1
00001BFC  0C39 0002 0000349D      1129          CMP.B   #$2,bit3
00001C04  6700 FABC               1130          BEQ     MOVEIAN1
00001C08  0C39 0003 0000349D      1131          CMP.B   #$3,bit3
00001C10  6700 FB44               1132          BEQ     MOVEIANI1
00001C14  0C39 0004 0000349D      1133          CMP.B   #$4,bit3
00001C1C  6700 FBE0               1134          BEQ     MOVEIAND1
00001C20  0C39 0007 0000349D      1135          CMP.B   #$7,bit3
00001C28  6700 F9CE               1136          BEQ     ADDIMDDES
00001C2C                          1137      
00001C2C                          1138  PRINTWORD
00001C2C  43F9 00003250           1139      LEA MWORD,A1
00001C32  323C 000E               1140      MOVE    #14,D1
00001C36  4E4F                    1141      TRAP    #15
00001C38                          1142  
00001C38  0C39 0000 0000349D      1143      CMP.B   #$0,bit3           
00001C40  6700 FC5C               1144          BEQ     MOVBDN1
00001C44  0C39 0001 0000349D      1145          CMP.B   #$1,bit3
00001C4C  6700 FA00               1146          BEQ     MOVEAN1
00001C50  0C39 0002 0000349D      1147          CMP.B   #$2,bit3
00001C58  6700 FA68               1148          BEQ     MOVEIAN1
00001C5C  0C39 0003 0000349D      1149          CMP.B   #$3,bit3
00001C64  6700 FAF0               1150          BEQ     MOVEIANI1
00001C68  0C39 0004 0000349D      1151          CMP.B   #$4,bit3
00001C70  6700 FB8C               1152          BEQ     MOVEIAND1
00001C74  0C39 0007 0000349D      1153          CMP.B   #$7,bit3
00001C7C  6700 F97A               1154          BEQ     ADDIMDDES
00001C80                          1155      
00001C80                          1156  PRINTLONG
00001C80  43F9 00003253           1157      LEA MLONG,A1
00001C86  323C 000E               1158      MOVE    #14,D1
00001C8A  4E4F                    1159      TRAP    #15
00001C8C                          1160   
00001C8C  0C39 0000 0000349D      1161      CMP.B   #$0,bit3           
00001C94  6700 FC08               1162          BEQ     MOVBDN1
00001C98  0C39 0001 0000349D      1163          CMP.B   #$1,bit3
00001CA0  6700 F9AC               1164          BEQ     MOVEAN1
00001CA4  0C39 0002 0000349D      1165          CMP.B   #$2,bit3
00001CAC  6700 FA14               1166          BEQ     MOVEIAN1
00001CB0  0C39 0003 0000349D      1167          CMP.B   #$3,bit3
00001CB8  6700 FA9C               1168          BEQ     MOVEIANI1
00001CBC  0C39 0004 0000349D      1169          CMP.B   #$4,bit3
00001CC4  6700 FB38               1170          BEQ     MOVEIAND1
00001CC8  0C39 0007 0000349D      1171          CMP.B   #$7,bit3
00001CD0  6700 F926               1172          BEQ     ADDIMDDES
00001CD4                          1173          
00001CD4                          1174  LSLR
00001CD4                          1175          *MOVE.B  D6,D2
00001CD4  141E                    1176          MOVE.B  (A6)+,D2
00001CD6  EB0A                    1177          LSL.B   #5,D2
00001CD8  EA0A                    1178          LSR.B   #5,D2
00001CDA  13C2 0000349E           1179          MOVE.B  D2,bit4
00001CE0                          1180          
00001CE0  1406                    1181          MOVE.B  D6,D2
00001CE2  E50A                    1182          LSL.B   #2,D2
00001CE4  EE0A                    1183          LSR.B   #7,D2
00001CE6  13C2 0000349D           1184          MOVE.B  D2,bit3
00001CEC                          1185          
00001CEC  3E06                    1186          MOVE.W  D6,D7
00001CEE  E14F                    1187          LSL.W   #8,D7
00001CF0  E04F                    1188          LSR.W   #8,D7 
00001CF2  EC4F                    1189          LSR.W   #6,D7 
00001CF4  13C7 0000349C           1190          MOVE.B  D7,bit2
00001CFA                          1191          
00001CFA  3E06                    1192          MOVE.W  D6,D7
00001CFC  EF4F                    1193          LSL.W   #7,D7
00001CFE  E04F                    1194          LSR.W   #8,D7 
00001D00  EE4F                    1195          LSR.W   #7,D7
00001D02  13C7 0000349B           1196          MOVE.B  D7,bit1   
00001D08                          1197      
00001D08  1806                    1198          MOVE.B  D6,D4
00001D0A                          1199          
00001D0A  3E06                    1200          MOVE.W  D6,D7
00001D0C  E94F                    1201          LSL.W   #4,D7
00001D0E  E04F                    1202          LSR.W   #8,D7 
00001D10  EA4F                    1203          LSR.W   #5,D7
00001D12  13C7 0000349A           1204          MOVE.B  D7,bit0 
00001D18                          1205          
00001D18  1E06                    1206          MOVE.B  D6,D7
00001D1A  E90F                    1207          LSL.B   #4,D7
00001D1C  EE0F                    1208          LSR.B   #7,D7
00001D1E                          1209          
00001D1E  0C39 0003 0000349C      1210          CMP.B   #3,bit2
00001D26  6700 00B4               1211          BEQ     LSLRMEMH
00001D2A                          1212          
00001D2A  BE3C 0000               1213          CMP.B   #0,D7
00001D2E  6700 0028               1214          BEQ     ASLRMEMH
00001D32                          1215          
00001D32  1606                    1216          MOVE.B  D6,D3
00001D34  E70B                    1217          LSL.B   #3,D3
00001D36  EC0B                    1218          LSR.B   #6,D3
00001D38  B63C 0003               1219          CMP.B   #3,D3
00001D3C  6700 00CA               1220          BEQ     RORL
00001D40                          1221          
00001D40  0C39 0001 0000349B      1222          CMP.B   #$1,bit1
00001D48  6700 013E               1223          BEQ     PRINTLSL
00001D4C  0C39 0000 0000349B      1224          CMP.B   #$0,bit1
00001D54  6700 0280               1225          BEQ     PRINTLSR
00001D58                          1226          
00001D58                          1227  ASLRMEMH
00001D58  1A3C 0004               1228          MOVE.B  #4,D5
00001D5C  0C39 0001 0000349B      1229          CMP.B   #$1,bit1
00001D64  6700 000E               1230          BEQ     PRINTASL
00001D68  0C39 0000 0000349B      1231          CMP.B   #$0,bit1
00001D70  6700 0036               1232          BEQ     PRINTASR
00001D74                          1233          
00001D74                          1234  PRINTASL
00001D74  43F9 000032B2           1235          LEA MASL,A1
00001D7A  303C 000E               1236          MOVE    #14,D0
00001D7E  4E4F                    1237          TRAP    #15
00001D80                          1238          
00001D80  0C39 0000 0000349C      1239          CMP.B   #$0,bit2
00001D88  6700 017C               1240          BEQ     PRINTB
00001D8C  0C39 0001 0000349C      1241          CMP.B   #$1,bit2
00001D94  6700 01A4               1242          BEQ     PRINTW
00001D98  0C39 0002 0000349C      1243          CMP.B   #$2,bit2
00001DA0  6700 01CC               1244          BEQ     PRINTL
00001DA4  6000 0116               1245          BRA     LSLRMEM
00001DA8                          1246          
00001DA8                          1247  PRINTASR        
00001DA8  43F9 000032B6           1248          LEA MASR,A1
00001DAE  303C 000E               1249          MOVE    #14,D0
00001DB2  4E4F                    1250          TRAP    #15
00001DB4                          1251          
00001DB4  0C39 0000 0000349C      1252          CMP.B   #$0,bit2
00001DBC  6700 0148               1253          BEQ     PRINTB
00001DC0  0C39 0001 0000349C      1254          CMP.B   #$1,bit2
00001DC8  6700 0170               1255          BEQ     PRINTW
00001DCC  0C39 0002 0000349C      1256          CMP.B   #$2,bit2
00001DD4  6700 0198               1257          BEQ     PRINTL
00001DD8  6000 00E2               1258          BRA     LSLRMEM
00001DDC                          1259          
00001DDC                          1260  LSLRMEMH
00001DDC  3E06                    1261          MOVE.W  D6,D7
00001DDE  ED4F                    1262          LSL.W   #6,D7
00001DE0  E04F                    1263          LSR.W   #8,D7
00001DE2  EE4F                    1264          LSR.W   #7,D7
00001DE4  BE3C 0000               1265          CMP.B   #0,D7
00001DE8  6700 FF6E               1266          BEQ     ASLRMEMH
00001DEC                          1267          
00001DEC  1A3C 0004               1268          MOVE.B  #4,D5
00001DF0  0C39 0001 0000349B      1269          CMP.B   #$1,bit1
00001DF8  6700 008E               1270          BEQ     PRINTLSL
00001DFC  0C39 0000 0000349B      1271          CMP.B   #$0,bit1
00001E04  6700 01D0               1272          BEQ     PRINTLSR
00001E08                          1273  RORL
00001E08  0C39 0001 0000349B      1274          CMP.B   #$1,bit1
00001E10  6700 000E               1275          BEQ     PRINTROL
00001E14  0C39 0000 0000349B      1276          CMP.B   #$0,bit1
00001E1C  6700 0036               1277          BEQ     PRINTROR
00001E20                          1278  PRINTROL
00001E20  43F9 00003263           1279          LEA MROL,A1
00001E26  303C 000E               1280          MOVE    #14,D0
00001E2A  4E4F                    1281          TRAP    #15
00001E2C                          1282          
00001E2C  0C39 0000 0000349C      1283          CMP.B   #$0,bit2
00001E34  6700 00D0               1284          BEQ     PRINTB
00001E38  0C39 0001 0000349C      1285          CMP.B   #$1,bit2
00001E40  6700 00F8               1286          BEQ     PRINTW
00001E44  0C39 0002 0000349C      1287          CMP.B   #$2,bit2
00001E4C  6700 0120               1288          BEQ     PRINTL
00001E50  6000 006A               1289          BRA     LSLRMEM
00001E54                          1290  PRINTROR
00001E54  43F9 00003267           1291          LEA MROR,A1
00001E5A  323C 000E               1292          MOVE    #14,D1
00001E5E  4E4F                    1293          TRAP    #15
00001E60                          1294          
00001E60  0C39 0000 0000349C      1295          CMP.B   #$0,bit2
00001E68  6700 009C               1296          BEQ     PRINTB
00001E6C  0C39 0001 0000349C      1297          CMP.B   #$1,bit2
00001E74  6700 00C4               1298          BEQ     PRINTW
00001E78  0C39 0002 0000349C      1299          CMP.B   #$2,bit2
00001E80  6700 00EC               1300          BEQ     PRINTL
00001E84  6000 0036               1301          BRA     LSLRMEM
00001E88                          1302  PRINTLSL
00001E88  43F9 0000326B           1303          LEA MLSL,A1
00001E8E  303C 000E               1304          MOVE    #14,D0
00001E92  4E4F                    1305          TRAP    #15
00001E94                          1306          
00001E94  0C39 0000 0000349C      1307          CMP.B   #$0,bit2
00001E9C  6700 0068               1308          BEQ     PRINTB
00001EA0  0C39 0001 0000349C      1309          CMP.B   #$1,bit2
00001EA8  6700 0090               1310          BEQ     PRINTW
00001EAC  0C39 0002 0000349C      1311          CMP.B   #$2,bit2
00001EB4  6700 00B8               1312          BEQ     PRINTL
00001EB8  6000 0002               1313          BRA     LSLRMEM
00001EBC                          1314          
00001EBC                          1315  LSLRMEM
00001EBC                          1316          
00001EBC  E50C                    1317          LSL.B   #2,D4
00001EBE  EA0C                    1318          LSR.B   #5,D4
00001EC0  13C4 0000349D           1319          MOVE.B  D4,bit3
00001EC6                          1320          
00001EC6  183C 0003               1321          MOVE.B  #$3,D4
00001ECA                          1322          
00001ECA  0C39 0002 0000349D      1323          CMP.B   #$2,bit3
00001ED2  6700 F7EE               1324          BEQ     MOVEIAN1
00001ED6  0C39 0003 0000349D      1325          CMP.B   #$3,bit3
00001EDE  6700 F876               1326          BEQ     MOVEIANI1
00001EE2  0C39 0004 0000349D      1327          CMP.B   #$4,bit3
00001EEA  6700 F912               1328          BEQ     MOVEIAND1
00001EEE                          1329          
00001EEE  43F9 0000322B           1330          LEA TAB,A1
00001EF4  123C 0003               1331          MOVE.B  #3,D1
00001EF8  4E4F                    1332          TRAP    #15 
00001EFA                          1333          
00001EFA  0C39 0007 0000349D      1334          CMP.B   #$7,bit3
00001F02  6700 F6F4               1335          BEQ     ADDIMDDES
00001F06                          1336  PRINTB
00001F06  43F9 00003249           1337          LEA MDOT,A1
00001F0C  303C 000E               1338          MOVE    #14,D0
00001F10  4E4F                    1339          TRAP    #15
00001F12                          1340  
00001F12  43F9 0000324D           1341          LEA MBYTE,A1
00001F18  303C 000E               1342          MOVE    #14,D0
00001F1C  4E4F                    1343          TRAP    #15
00001F1E                          1344          
00001F1E  3A3C 0006               1345          MOVE #$6,D5
00001F22                          1346          
00001F22  0C39 0000 0000349D      1347          CMP.B   #0,bit3
00001F2A  6700 0076               1348          BEQ     PRINTLSLRCOUNT
00001F2E  0C39 0001 0000349D      1349          CMP.B   #1,bit3
00001F36  6700 F966               1350          BEQ     MOVBDN1
00001F3A                          1351  
00001F3A                          1352  PRINTW 
00001F3A  43F9 00003249           1353          LEA MDOT,A1
00001F40  303C 000E               1354          MOVE    #14,D0
00001F44  4E4F                    1355          TRAP    #15
00001F46                          1356  
00001F46  43F9 00003250           1357          LEA MWORD,A1
00001F4C  303C 000E               1358          MOVE    #14,D0
00001F50  4E4F                    1359          TRAP    #15
00001F52                          1360          
00001F52  3A3C 0006               1361          MOVE #$6,D5
00001F56                          1362          
00001F56  0C39 0000 0000349D      1363          CMP.B   #0,bit3
00001F5E  6700 0042               1364          BEQ     PRINTLSLRCOUNT
00001F62  0C39 0001 0000349D      1365          CMP.B   #1,bit3
00001F6A  6700 F932               1366          BEQ     MOVBDN1
00001F6E                          1367  
00001F6E                          1368  PRINTL
00001F6E  43F9 00003249           1369          LEA MDOT,A1
00001F74  303C 000E               1370          MOVE    #14,D0
00001F78  4E4F                    1371          TRAP    #15
00001F7A                          1372  
00001F7A  43F9 00003253           1373          LEA MLONG,A1
00001F80  303C 000E               1374          MOVE    #14,D0
00001F84  4E4F                    1375          TRAP    #15
00001F86                          1376  
00001F86  3A3C 0006               1377          MOVE #$6,D5
00001F8A                          1378          
00001F8A  0C39 0000 0000349D      1379          CMP.B   #0,bit3
00001F92  6700 000E               1380          BEQ     PRINTLSLRCOUNT
00001F96  0C39 0001 0000349D      1381          CMP.B   #1,bit3
00001F9E  6700 F8FE               1382          BEQ     MOVBDN1    
00001FA2                          1383  
00001FA2                          1384  PRINTLSLRCOUNT
00001FA2  43F9 0000322B           1385          LEA TAB,A1
00001FA8  303C 000E               1386          MOVE    #14,D0
00001FAC  4E4F                    1387          TRAP    #15
00001FAE                          1388          
00001FAE  43F9 00003239           1389          LEA HASH,A1
00001FB4  303C 000E               1390          MOVE    #14,D0
00001FB8  4E4F                    1391          TRAP    #15
00001FBA                          1392          
00001FBA  1239 0000349A           1393          MOVE.B  bit0,D1
00001FC0  303C 0003               1394          MOVE    #3,D0
00001FC4  4E4F                    1395          TRAP    #15
00001FC6                          1396          
00001FC6  43F9 0000322F           1397          LEA COMMA,A1
00001FCC  303C 000E               1398          MOVE    #14,D0
00001FD0  4E4F                    1399          TRAP    #15
00001FD2                          1400          
00001FD2  6000 F97E               1401          BRA LSLRDESD
00001FD6                          1402    
00001FD6                          1403  PRINTLSR
00001FD6  43F9 0000326F           1404          LEA MLSR,A1
00001FDC  323C 000E               1405          MOVE    #14,D1
00001FE0  4E4F                    1406          TRAP    #15
00001FE2                          1407          
00001FE2  0C39 0000 0000349C      1408          CMP.B   #$0,bit2
00001FEA  6700 FF1A               1409          BEQ     PRINTB
00001FEE  0C39 0001 0000349C      1410          CMP.B   #$1,bit2
00001FF6  6700 FF42               1411          BEQ     PRINTW
00001FFA  0C39 0002 0000349C      1412          CMP.B   #$2,bit2
00002002  6700 FF6A               1413          BEQ     PRINTL
00002006  6000 FEB4               1414          BRA     LSLRMEM
0000200A                          1415  
0000200A                          1416  ******************************************************************************************************
0000200A                          1417  *   Branch, branch to subroutine, and branch conditionally
0000200A                          1418  *   BRA, BSR, Bcc
0000200A                          1419  
0000200A                          1420  BCC
0000200A  13C5 0000349B           1421          MOVE.B  D5,bit1             Moves condition code to bit1
00002010  1A1E                    1422          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00002012  13C5 0000349C           1423          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00002018  280E                    1424          MOVE.L  A6,D4               Moves current address to D4 register
0000201A                          1425  
0000201A  BA3C 0000               1426          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
0000201E  6700 0010               1427          BEQ     BCCWORD
00002022  BA3C 00FF               1428          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00002026  6700 0010               1429          BEQ     BCCLONG             Else, displacement is 8-bits
0000202A                          1430  
0000202A                          1431          * Calculates 8-bit displacement
0000202A                          1432          * 8-bit displacement is already in D5
0000202A                          1433          * Adds displacement to current address
0000202A  D805                    1434          ADD.B   D5,D4               Adds the displacement to current address
0000202C  6000 0012               1435          BRA     BCCNEXT
00002030                          1436  
00002030                          1437  * Calculates 16-bit displacement
00002030                          1438  BCCWORD
00002030  3A1E                    1439          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00002032  D845                    1440          ADD.W   D5,D4               Adds the displacement to current address
00002034  6000 000A               1441          BRA     BCCNEXT
00002038                          1442  
00002038                          1443  * Calculates 32-bit displacement
00002038                          1444  BCCLONG
00002038  2A1E                    1445          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
0000203A  D885                    1446          ADD.L   D5,D4               Adds the displacement to current address
0000203C  6000 0002               1447          BRA     BCCNEXT
00002040                          1448  
00002040                          1449  * Does the actual calculation
00002040                          1450  * Adds the displacement to the current address
00002040                          1451  BCCNEXT
00002040  6100 000E               1452          BSR     BCCDISP             Displays branch op-code
00002044  45F9 00002FD8           1453          LEA     ENDNEWLINE,A2
0000204A  2E04                    1454          MOVE.L  D4,D7
0000204C  6000 F09E               1455          BRA     DISPADDRSTART
00002050                          1456  
00002050                          1457  BCCDISP
00002050  B43C 0000               1458          CMP.B   #$0,D2
00002054  6700 0026               1459          BEQ     BCCBRA
00002058  B43C 0007               1460          CMP.B   #$7,D2
0000205C  6700 0028               1461          BEQ     BCCBEQ
00002060  B43C 0006               1462          CMP.B   #$6,D2
00002064  6700 002A               1463          BEQ     BCCBNE
00002068  B43C 000D               1464          CMP.B   #$D,D2
0000206C  6700 002C               1465          BEQ     BCCBLT
00002070  B43C 0002               1466          CMP.B   #$2,D2
00002074  6700 002E               1467          BEQ     BCCBHI
00002078                          1468  
00002078  6000 0EEC               1469          BRA     INVOP
0000207C                          1470  
0000207C                          1471  BCCBRA
0000207C  43F9 00003326           1472          LEA     MBRA,A1
00002082  6000 002A               1473          BRA     BCCPRINT
00002086                          1474  BCCBEQ
00002086  43F9 00003316           1475          LEA     MBEQ,A1
0000208C  6000 0020               1476          BRA     BCCPRINT
00002090                          1477  BCCBNE
00002090  43F9 0000331A           1478          LEA     MBNE,A1
00002096  6000 0016               1479          BRA     BCCPRINT
0000209A                          1480  BCCBLT
0000209A  43F9 0000331E           1481          LEA     MBLT,A1
000020A0  6000 000C               1482          BRA     BCCPRINT
000020A4                          1483  BCCBHI
000020A4  43F9 00003322           1484          LEA     MBHI,A1
000020AA  6000 0002               1485          BRA     BCCPRINT
000020AE                          1486  BCCPRINT
000020AE  103C 000E               1487          MOVE.B  #14,D0
000020B2  4E4F                    1488          TRAP    #15
000020B4  43F9 0000322B           1489          LEA     TAB,A1
000020BA  4E4F                    1490          TRAP    #15
000020BC  4E75                    1491          RTS
000020BE                          1492  
000020BE                          1493  ******************************************************************************************************
000020BE                          1494  *   Immediate data arithmetic operations
000020BE                          1495  *   SUBI
000020BE                          1496  
000020BE  13C5 0000349B           1497  IMD     MOVE.B  D5,bit1
000020C4  1202                    1498          MOVE.B  D2,D1
000020C6  141E                    1499          MOVE.B  (A6)+,D2
000020C8                          1500          
000020C8  3805                    1501          MOVE    D5,D4
000020CA  C83C 0001               1502          AND.B   #$0001,D4
000020CE  B83C 0001               1503          CMP.B   #$1,D4
000020D2  6700 F192               1504          BEQ     BTST
000020D6  B23C 0008               1505          CMP.B   #8,D1
000020DA  6700 F18A               1506          BEQ     BTST
000020DE                          1507  
000020DE  DE02                    1508          ADD.B   D2,D7
000020E0                          1509  
000020E0  1602                    1510          MOVE.B  D2,D3               Copies data at D2 to D3
000020E2                          1511          *   this gets digit in 10's place
000020E2  E80B                    1512          LSR.B   #4,D3               Shifts right to get rid of 1's place
000020E4                          1513          *   this gets digit in 1's place
000020E4  E90A                    1514          LSL.B   #4,D2               Shifts left to get rid of 10's place
000020E6  E80A                    1515          LSR.B   #4,D2               Shifts back right into 1's place
000020E8                          1516  
000020E8                          1517          *   D3 holds digit in 10's place
000020E8                          1518          *   D2 holds digit in 1's place
000020E8                          1519  
000020E8  E20B                    1520          LSR.B   #1,D3
000020EA  6400 0004               1521          BCC     IMD2
000020EE  5404                    1522          ADD.B   #$2,D4
000020F0  E20B                    1523  IMD2    LSR.B   #1,D3
000020F2  6400 0004               1524          BCC     IMD3
000020F6  5804                    1525          ADD.B   #$4,D4
000020F8  B43C 0007               1526  IMD3    CMP.B   #$7,D2
000020FC  6D00 0006               1527          BLT     IMD4
00002100  5204                    1528          ADD.B   #$1,D4
00002102  5102                    1529          SUB.B   #$8,D2
00002104                          1530  
00002104                          1531          *   Stores them into addr
00002104  13C3 0000349C           1532  IMD4    MOVE.B  D3,bit2
0000210A  13C4 0000349D           1533          MOVE.B  D4,bit3
00002110  13C2 0000349E           1534          MOVE.B  D2,bit4
00002116                          1535  
00002116                          1536  **************************
00002116                          1537  * This finds the size of the operation
00002116                          1538  
00002116  0C39 0000 0000349C      1539          CMP.B   #$0,bit2
0000211E  6700 007E               1540          BEQ     IMDBYTE
00002122  0C39 0001 0000349C      1541          CMP.B   #$1,bit2
0000212A  6700 0082               1542          BEQ     IMDWORD
0000212E  0C39 0002 0000349C      1543          CMP.B   #$2,bit2
00002136  6700 0084               1544          BEQ     IMDLONG
0000213A  6000 0E2A               1545          BRA     INVOP
0000213E                          1546  
0000213E                          1547  *************************************************************
0000213E                          1548  * Display IMD op-code
0000213E                          1549  IMDPRINT
0000213E  0C39 0000 0000349B      1550          CMP.B   #$0,bit1
00002146  6700 0026               1551          BEQ     IMDPRINTORI
0000214A  0C39 0004 0000349B      1552          CMP.B   #$4,bit1
00002152  6700 0024               1553          BEQ     IMDPRINTSUBI
00002156  0C39 000A 0000349B      1554          CMP.B   #$A,bit1
0000215E  6700 0022               1555          BEQ     IMDPRINTEORI
00002162  0C39 000C 0000349B      1556          CMP.B   #$C,bit1
0000216A  6700 0020               1557          BEQ     IMDPRINTCMPI
0000216E                          1558  
0000216E                          1559  IMDPRINTORI
0000216E  43F9 000032DA           1560          LEA     MORI,A1
00002174  6000 0020               1561          BRA     IMDPRINTEND
00002178                          1562  
00002178                          1563  IMDPRINTSUBI
00002178  43F9 000032D4           1564          LEA     MSUBI,A1
0000217E  6000 0016               1565          BRA     IMDPRINTEND
00002182                          1566  
00002182                          1567  IMDPRINTEORI
00002182  43F9 00003304           1568          LEA     MEORI,A1
00002188  6000 000C               1569          BRA     IMDPRINTEND
0000218C                          1570  
0000218C                          1571  IMDPRINTCMPI
0000218C  43F9 000032F3           1572          LEA     MCMPI,A1
00002192  6000 0002               1573          BRA     IMDPRINTEND
00002196                          1574  
00002196                          1575  IMDPRINTEND
00002196  103C 000E               1576          MOVE.B  #14,D0
0000219A  4E4F                    1577          TRAP    #15
0000219C  4E75                    1578          RTS
0000219E                          1579  
0000219E                          1580  *************************************************************
0000219E                          1581  * Immediate data operation size BYTE
0000219E                          1582  IMDBYTE
0000219E  619E                    1583          BSR     IMDPRINT
000021A0  43F9 0000324D           1584          LEA     MBYTE,A1
000021A6                          1585  
000021A6                          1586          * Moves size to D4, needed to use DISPEA
000021A6  183C 0001               1587          MOVE.B  #$1,D4
000021AA  6000 001A               1588          BRA     IMDEA
000021AE                          1589  
000021AE                          1590  *************************************************************
000021AE                          1591  * Immediate data operation size WORD
000021AE                          1592  IMDWORD
000021AE  618E                    1593          BSR     IMDPRINT
000021B0  43F9 00003250           1594          LEA     MWORD,A1
000021B6                          1595  
000021B6  1803                    1596          MOVE.B  D3,D4
000021B8  6000 000C               1597          BRA     IMDEA
000021BC                          1598  
000021BC                          1599  
000021BC                          1600  *************************************************************
000021BC                          1601  * Immediate data operation size LONG
000021BC                          1602  IMDLONG
000021BC  6180                    1603          BSR     IMDPRINT
000021BE  43F9 00003253           1604          LEA     MLONG,A1
000021C4                          1605          
000021C4                          1606  
000021C4                          1607          * Moves size to D4, needed to use DISPEA
000021C4  1803                    1608          MOVE.B  D3,D4
000021C6                          1609  
000021C6                          1610  IMDEA
000021C6                          1611          * This prints out the size and creates tab
000021C6  103C 000E               1612          MOVE.B  #14,D0
000021CA  4E4F                    1613          TRAP    #15
000021CC  43F9 0000322B           1614          LEA     TAB,A1
000021D2  103C 000E               1615          MOVE.B  #14,D0
000021D6  4E4F                    1616          TRAP    #15
000021D8  43F9 00003239           1617          LEA     HASH,A1
000021DE  103C 000E               1618          MOVE.B  #14,D0
000021E2  4E4F                    1619          TRAP    #15
000021E4                          1620          * Loads return address into A2
000021E4  45F9 000021EE           1621          LEA     IMDEA2,A2
000021EA  6000 0D00               1622          BRA     DISPEA
000021EE                          1623  IMDEA2
000021EE  43F9 0000322F           1624          LEA     COMMA,A1
000021F4  103C 000E               1625          MOVE.B  #14,D0
000021F8  4E4F                    1626          TRAP    #15
000021FA                          1627  
000021FA  45F9 00002204           1628          LEA     IMDEA3,A2
00002200  6000 0B9A               1629          BRA     SUBEA
00002204                          1630  IMDEA3
00002204  6000 0DD2               1631          BRA     ENDNEWLINE
00002208                          1632  
00002208                          1633  ******************************************************************************************************
00002208                          1634  * Miscellaneous section
00002208                          1635  *   Not goes here
00002208                          1636  
00002208                          1637  MISC
00002208  13C5 0000349B           1638          MOVE.B  D5,bit1
0000220E  141E                    1639          MOVE.B  (A6)+,D2
00002210                          1640  
00002210  DE02                    1641          ADD.B   D2,D7
00002212                          1642  
00002212  1602                    1643          MOVE.B  D2,D3               Copies data at D2 to D3
00002214                          1644          *   this gets digit in 10's place
00002214  E80B                    1645          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002216                          1646          *   this gets digit in 1's place
00002216  E90A                    1647          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002218  E80A                    1648          LSR.B   #4,D2               Shifts back right into 1's place
0000221A                          1649  
0000221A                          1650  
0000221A  3806                    1651          MOVE.W  D6,D4
0000221C  E94C                    1652          LSL.W   #$4,D4
0000221E  E04C                    1653          LSR.W   #$8,D4
00002220  E44C                    1654          LSR.W   #$2,D4
00002222  13C4 0000349C           1655          MOVE.B  D4,bit2
00002228  0C39 003A 0000349C      1656          CMP.B   #$3A,bit2
00002230  6700 EFE8               1657          BEQ     JSR
00002234                          1658  
00002234                          1659      ***
00002234                          1660          *BTST.B  #$04,bit0
00002234                          1661          *BEQ     MISCLEA
00002234                          1662          *   D5 is bit1
00002234                          1663          *   D3 is bit2
00002234                          1664          *   D2 is bit3
00002234                          1665  
00002234                          1666  **************************
00002234                          1667  * This finds the size of the operation
00002234                          1668          * D5 is bit1
00002234  BA3C 0004               1669          CMP.B   #$4,D5
00002238  6700 F944               1670          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
0000223C  BA3C 0006               1671          CMP.B   #$6,D5              Branches to NOT section
00002240  6700 0182               1672          BEQ     MISCNOT
00002244  BA3C 000E               1673          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00002248  6700 0006               1674          BEQ     MISCBIT2
0000224C  6000 0022               1675          BRA     MISCCHKLEA          Check bits to see if LEA, else branch to MoveM
00002250                          1676  
00002250                          1677  MISCBIT2
00002250                          1678          * D3 is bit2
00002250  B63C 0007               1679          CMP.B   #$7,D3              Branches to NOP
00002254  6700 0006               1680          BEQ     MISCBIT3
00002258  6000 0D0C               1681          BRA     INVOP
0000225C                          1682  
0000225C                          1683  MISCBIT3
0000225C                          1684          * D2 is bit3
0000225C  B43C 0001               1685          CMP.B   #$1,D2              Branches to NOP
00002260  6700 004E               1686          BEQ     MISCNOP
00002264  B43C 0005               1687          CMP.B   #$5,D2              Branches to NOP
00002268  6700 014A               1688          BEQ     MISCRTS
0000226C  6000 0CF8               1689          BRA     INVOP
00002270                          1690  
00002270                          1691  MISCCHKLEA
00002270  1805                    1692          MOVE.B  D5,D4
00002272  C83C 0001               1693          AND.B   #$1,D4
00002276  B83C 0001               1694          CMP.B   #$1,D4
0000227A  6600 0014               1695          BNE     MISCCHECKM
0000227E  1803                    1696          MOVE.B  D3,D4
00002280  C83C 000C               1697          AND.B   #$C,D4
00002284  B83C 000C               1698          CMP.B   #$C,D4
00002288  6600 0006               1699          BNE     MISCCHECKM
0000228C  6000 0032               1700          BRA     MISCLEA
00002290                          1701  
00002290                          1702  MISCCHECKM
00002290  1805                    1703          MOVE.B  D5,D4
00002292  C83C 0008               1704          AND.B   #$8,D4
00002296  B83C 0008               1705          CMP.B   #$8,D4
0000229A  6600 0CCA               1706          BNE     INVOP
0000229E  1803                    1707          MOVE.B  D3,D4
000022A0  C83C 0008               1708          AND.B   #$8,D4
000022A4  B83C 0008               1709          CMP.B   #$8,D4
000022A8  6600 0CBC               1710          BNE     INVOP
000022AC  6000 03D8               1711          BRA     MISCMOVEM
000022B0                          1712  
000022B0                          1713  ******************************************************
000022B0                          1714  * NOP
000022B0                          1715  * No operation
000022B0                          1716  MISCNOP
000022B0  43F9 0000332A           1717          LEA     MNOP,A1
000022B6  103C 000E               1718          MOVE.B  #14,D0
000022BA  4E4F                    1719          TRAP    #15
000022BC                          1720  
000022BC  6000 0D1A               1721          BRA     ENDNEWLINE          Goes to next opcode
000022C0                          1722  
000022C0                          1723  ******************************************************
000022C0                          1724  MISCLEA
000022C0                          1725      
000022C0  43F9 00003332           1726          LEA     MLEA,A1
000022C6  103C 000E               1727          MOVE.B  #14,D0
000022CA  4E4F                    1728          TRAP    #15
000022CC  43F9 0000322B           1729          LEA     TAB,A1
000022D2  103C 000E               1730          MOVE.B  #14,D0
000022D6  4E4F                    1731          TRAP    #15        
000022D8                          1732          
000022D8  E20D                    1733          LSR.B   #1,D5   *isolate addr register
000022DA  3C02                    1734          MOVE.W  D2,D6   *copy over bit3 for potential manip of ea reg
000022DC                          1735  
000022DC  E30B                    1736          LSL.B   #1,D3               Shifts the byte to the left
000022DE  C63C 0007               1737          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
000022E2                          1738  
000022E2  0882 0003               1739          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
000022E6  6700 0004               1740          BEQ     MISCLEA2             If it was already zero, then it will skip this next step
000022EA  5203                    1741          ADD.B   #$1,D3              It it was one, then it will add one to the mode
000022EC                          1742  
000022EC                          1743  MISCLEA2
000022EC  13C3 0000349D           1744          MOVE.B  D3,bit3     *MODE?
000022F2  13C2 0000349E           1745          MOVE.B  D2,bit4     *REG?
000022F8                          1746  
000022F8                          1747          ***
000022F8                          1748  *        AND.L   D2,D7
000022F8                          1749  *        CMP.L   #$0,D7
000022F8                          1750  *        BEQ     LEAMODE0
000022F8                          1751  *        CMP.L   #$1,D7 
000022F8                          1752  *        BEQ     LEAMODE1
000022F8                          1753  *        
000022F8                          1754  *        CMP.B   #1,D7
000022F8                          1755  *        BEQ     LEAMODE1
000022F8                          1756  *        CMP.B   #0,D7
000022F8                          1757  *        BEQ     LEAMODE0
000022F8                          1758  *        
000022F8                          1759  *        ***
000022F8                          1760          
000022F8                          1761  LEAMODE1
000022F8                          1762          *ea mode should be set to 111
000022F8  B63C 0007               1763          CMP.B   #7,D3   *error check
000022FC  6700 000E               1764          BEQ     LEA_ABS_EA 
00002300                          1765          
00002300                          1766  LEAMODE0
00002300                          1767          *ea mode should be set to 010
00002300  B63C 0002               1768          CMP.B   #2,D3   *error check
00002304  6700 005E               1769          BEQ     LEA_INDIR_AN
00002308  6600 0C5C               1770          BNE     INVOP
0000230C                          1771  
0000230C                          1772  LEA_ABS_EA
0000230C                          1773          *MOVE RET LOC INTO A2
0000230C  0C39 0000 0000349E      1774          CMP.B   #$0,bit4
00002314  6700 000E               1775          BEQ     LEAIMD0
00002318  0C39 0001 0000349E      1776          CMP.B   #$1,bit4
00002320  6700 0010               1777          BEQ     LEAIMD1
00002324                          1778  
00002324                          1779  LEAIMD0
00002324  183C 0001               1780          MOVE.B  #$1,D4
00002328  45F9 00002340           1781          LEA     CONTPRINTLEA,A2
0000232E  6000 0BBC               1782          BRA     DISPEA
00002332                          1783  LEAIMD1 
00002332  183C 0002               1784          MOVE.B  #$2,D4
00002336  45F9 00002340           1785          LEA     CONTPRINTLEA,A2
0000233C  6000 0BAE               1786          BRA     DISPEA  
00002340                          1787          
00002340                          1788  CONTPRINTLEA
00002340  43F9 0000322F           1789          LEA     COMMA,A1
00002346  103C 000E               1790          MOVE.B  #14,D0
0000234A  4E4F                    1791          TRAP    #15
0000234C  43F9 0000323D           1792          LEA     DISPA,A1
00002352  103C 000E               1793          MOVE.B  #14,D0
00002356  4E4F                    1794          TRAP    #15
00002358  1205                    1795          MOVE.B  D5,D1
0000235A  103C 0003               1796          MOVE.B  #3,D0
0000235E  4E4F                    1797          TRAP    #15
00002360  6000 0C76               1798          BRA     ENDNEWLINE
00002364                          1799          
00002364                          1800  LEA_INDIR_AN
00002364                          1801  
00002364  43F9 00003231           1802          LEA     OPENBRA,A1
0000236A  103C 000E               1803          MOVE.B  #14,D0
0000236E  4E4F                    1804          TRAP    #15
00002370                          1805          
00002370  43F9 0000323D           1806          LEA     DISPA,A1
00002376  103C 000E               1807          MOVE.B  #14,D0
0000237A  4E4F                    1808          TRAP    #15
0000237C                          1809          
0000237C  1202                    1810          MOVE.B  D2,D1
0000237E  103C 0003               1811          MOVE.B  #3,D0
00002382  4E4F                    1812          TRAP    #15
00002384                          1813          
00002384  43F9 00003233           1814          LEA     CLOSEBRA,A1
0000238A  103C 000E               1815          MOVE.B  #14,D0
0000238E  4E4F                    1816          TRAP    #15
00002390                          1817          
00002390  43F9 0000322F           1818          LEA     COMMA,A1
00002396  103C 000E               1819          MOVE.B  #14,D0
0000239A  4E4F                    1820          TRAP    #15
0000239C                          1821          
0000239C  43F9 0000323D           1822          LEA     DISPA,A1
000023A2  103C 000E               1823          MOVE.B  #14,D0
000023A6  4E4F                    1824          TRAP    #15
000023A8                          1825  
000023A8  1205                    1826          MOVE.B  D5,D1
000023AA  103C 0003               1827          MOVE.B  #3,D0
000023AE  4E4F                    1828          TRAP    #15
000023B0                          1829  
000023B0  6000 0C26               1830          BRA     ENDNEWLINE
000023B4                          1831  
000023B4                          1832  ******************************************************
000023B4                          1833  * RTS
000023B4                          1834  * Return to sub routine
000023B4                          1835  MISCRTS
000023B4  43F9 0000332E           1836          LEA     MRTS,A1
000023BA  103C 000E               1837          MOVE.B  #14,D0
000023BE  4E4F                    1838          TRAP    #15
000023C0                          1839  
000023C0  6000 0C16               1840          BRA     ENDNEWLINE          Goes to next opcode
000023C4                          1841  
000023C4                          1842  ******************************************************
000023C4                          1843  * NOT
000023C4                          1844  * Reuses some of IMD section to display because they have similar format
000023C4                          1845  *  (I was kinda lazy too)
000023C4                          1846  MISCNOT
000023C4  E20B                    1847          LSR.B   #1,D3
000023C6  6400 0004               1848          BCC     MISCNOT2
000023CA  5404                    1849          ADD.B   #$2,D4
000023CC                          1850  MISCNOT2   
000023CC  E20B                    1851          LSR.B   #1,D3
000023CE  6400 0004               1852          BCC     MISCNOT3
000023D2  5804                    1853          ADD.B   #$4,D4
000023D4                          1854  MISCNOT3   
000023D4  B43C 0007               1855          CMP.B   #$7,D2
000023D8  6D00 0006               1856          BLT     MISCNOT4
000023DC  5204                    1857          ADD.B   #$1,D4
000023DE  5102                    1858          SUB.B   #$8,D2
000023E0                          1859  
000023E0                          1860          *   Stores them into addr
000023E0                          1861  MISCNOT4
000023E0  13C3 0000349C           1862          MOVE.B  D3,bit2
000023E6  13C4 0000349D           1863          MOVE.B  D4,bit3
000023EC  13C2 0000349E           1864          MOVE.B  D2,bit4
000023F2                          1865  
000023F2  B63C 0000               1866          CMP.B   #$0,D3
000023F6  6700 0016               1867          BEQ     MISCBYTE
000023FA  B63C 0001               1868          CMP.B   #$1,D3
000023FE  6700 0020               1869          BEQ     MISCWORD
00002402  B63C 0002               1870          CMP.B   #$2,D3
00002406  6700 0028               1871          BEQ     MISCLONG
0000240A  6000 0B5A               1872          BRA     INVOP
0000240E                          1873  *************************************************************
0000240E                          1874  * Immediate data operation size BYTE
0000240E                          1875  MISCBYTE
0000240E  6100 004C               1876          BSR     MISCPRINT
00002412  43F9 0000324D           1877          LEA     MBYTE,A1
00002418                          1878  
00002418                          1879          * Moves size to D4, needed to use DISPEA
00002418  183C 0001               1880          MOVE.B  #$1,D4
0000241C  6000 001E               1881          BRA     MISCEA
00002420                          1882  
00002420                          1883  *************************************************************
00002420                          1884  * Immediate data operation size WORD
00002420                          1885  MISCWORD
00002420  6100 003A               1886          BSR     MISCPRINT
00002424  43F9 00003250           1887          LEA     MWORD,A1
0000242A                          1888  
0000242A  1803                    1889          MOVE.B  D3,D4
0000242C  6000 000E               1890          BRA     MISCEA
00002430                          1891  
00002430                          1892  
00002430                          1893  *************************************************************
00002430                          1894  * Immediate data operation size LONG
00002430                          1895  MISCLONG
00002430  6100 002A               1896          BSR     MISCPRINT
00002434  43F9 00003253           1897          LEA     MLONG,A1
0000243A                          1898  
0000243A                          1899          * Moves size to D4, needed to use DISPEA
0000243A  1803                    1900          MOVE.B  D3,D4
0000243C                          1901  
0000243C                          1902  MISCEA
0000243C  103C 000E               1903          MOVE.B  #14,D0
00002440  4E4F                    1904          TRAP    #15
00002442  43F9 0000322B           1905          LEA     TAB,A1
00002448  103C 000E               1906          MOVE.B  #14,D0
0000244C  4E4F                    1907          TRAP    #15
0000244E                          1908  
0000244E  45F9 00002458           1909          LEA     MISCEA2,A2
00002454  6000 0946               1910          BRA     SUBEA
00002458                          1911  MISCEA2
00002458  6000 0B7E               1912          BRA     ENDNEWLINE
0000245C                          1913  
0000245C                          1914  *************************************************************
0000245C                          1915  * Display IMD op-code
0000245C                          1916  MISCPRINT
0000245C  0C39 0004 0000349B      1917          CMP.B   #$4,bit1
00002464  6700 0018               1918          BEQ     MISCPRINTNEG
00002468  0C39 0006 0000349B      1919          CMP.B   #$6,bit1
00002470  6700 0002               1920          BEQ     MISCPRINTNOT
00002474                          1921  
00002474                          1922  MISCPRINTNOT
00002474  43F9 000032DF           1923          LEA     MNOT,A1
0000247A  6000 000C               1924          BRA     MISCPRINTEND
0000247E                          1925  
0000247E                          1926  MISCPRINTNEG
0000247E  43F9 000032EA           1927          LEA     MNEG,A1
00002484  6000 0002               1928          BRA     MISCPRINTEND
00002488                          1929  
00002488                          1930  MISCPRINTEND
00002488  103C 000E               1931          MOVE.B  #14,D0
0000248C  4E4F                    1932          TRAP    #15
0000248E  4E75                    1933          RTS
00002490                          1934  
00002490                          1935  *******************************************************************************
00002490                          1936  * ADDQ section 
00002490                          1937  
00002490                          1938  ADDQ    
00002490                          1939  *       BRA     IMD
00002490                          1940          
00002490  13C5 0000349B           1941          MOVE.B  D5,bit1
00002496  141E                    1942          MOVE.B  (A6)+,D2
00002498                          1943  
00002498  DE02                    1944          ADD.B   D2,D7
0000249A                          1945  
0000249A  1602                    1946          MOVE.B  D2,D3               *copy data at D2 to D3
0000249C                          1947                                      *get digit in 10's place
0000249C  E80B                    1948          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000249E                          1949                                      *get digit in 1's place
0000249E  E90A                    1950          LSL.B   #4,D2               Shift left to get rid of 10's place
000024A0  E80A                    1951          LSR.B   #4,D2               Shift back right into 1's place
000024A2                          1952  
000024A2                          1953          * gets size
000024A2  3803                    1954          MOVE.W  D3,D4
000024A4  E44C                    1955          LSR.W   #$2,D4
000024A6  13C4 0000349C           1956          MOVE.B  D4,bit2
000024AC                          1957      
000024AC                          1958  
000024AC                          1959  *        BRA     IMD
000024AC  43F9 00003310           1960          LEA     MADDQ,A1
000024B2  103C 000E               1961          MOVE.B  #14,D0
000024B6  4E4F                    1962          TRAP    #15
000024B8                          1963          
000024B8                          1964          *determine size
000024B8  B83C 0000               1965          CMP.B   #$0,D4
000024BC  6700 0018               1966          BEQ     ADDQB
000024C0  B87C 0001               1967          CMP.W   #$1,D4
000024C4  6700 0020               1968          BEQ     ADDQW
000024C8  B8BC 00000002           1969          CMP.L   #$2,D4
000024CE  6700 0026               1970          BEQ     ADDQL
000024D2  6000 0A92               1971          BRA     INVOP
000024D6                          1972  
000024D6                          1973  ADDQB
000024D6  43F9 0000324D           1974          LEA     MBYTE,A1
000024DC  103C 000E               1975          MOVE.B  #14,D0
000024E0  4E4F                    1976          TRAP    #15
000024E2  6000 0022               1977          BRA     ADDQCONT
000024E6                          1978          
000024E6                          1979  ADDQW
000024E6  43F9 00003250           1980          LEA     MWORD,A1
000024EC  103C 000E               1981          MOVE.B  #14,D0
000024F0  4E4F                    1982          TRAP    #15
000024F2  6000 0012               1983          BRA     ADDQCONT
000024F6                          1984          
000024F6                          1985  ADDQL        
000024F6  43F9 00003253           1986          LEA     MLONG,A1
000024FC  103C 000E               1987          MOVE.B  #14,D0
00002500  4E4F                    1988          TRAP    #15
00002502  6000 0002               1989          BRA     ADDQCONT
00002506                          1990          
00002506                          1991  ADDQCONT        
00002506  43F9 0000322B           1992          LEA     TAB,A1
0000250C  103C 000E               1993          MOVE.B  #14,D0
00002510  4E4F                    1994          TRAP    #15
00002512                          1995  
00002512  43F9 00003239           1996          LEA     HASH,A1
00002518  103C 000E               1997          MOVE.B  #14,D0
0000251C  4E4F                    1998          TRAP    #15
0000251E                          1999          
0000251E  E20D                    2000          LSR.B   #1,D5               Shifts the byte over to get the value of the immediate data
00002520  BA3C 0000               2001          CMP.B   #$0,D5              Checks if the value is 0
00002524  6600 0006               2002          BNE     ADDQCONT2           If it isn't then skips this next part
00002528  1A3C 0008               2003          MOVE.B  #8,D5               If it is, then replaces the 0 with 8
0000252C                          2004  
0000252C                          2005  ADDQCONT2
0000252C  1205                    2006          MOVE.B  D5,D1
0000252E  103C 0003               2007          MOVE.B  #3,D0
00002532  4E4F                    2008          TRAP    #15
00002534                          2009          
00002534  43F9 0000322F           2010          LEA     COMMA,A1
0000253A  103C 000E               2011          MOVE.B  #14,D0
0000253E  4E4F                    2012          TRAP    #15
00002540                          2013          
00002540  6000 0002               2014          BRA     ADDQEA
00002544                          2015          
00002544                          2016  ADDQEA
00002544  E30B                    2017          LSL.B   #1,D3               Shifts the byte to the left
00002546  C63C 0007               2018          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
0000254A                          2019  
0000254A  0882 0003               2020          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
0000254E  6700 0004               2021          BEQ     ADDQEA2             If it was already zero, then it will skip this next step
00002552  5203                    2022          ADD.B   #$1,D3              It it was one, then it will add one to the mode
00002554                          2023  
00002554                          2024  ADDQEA2
00002554  13C2 0000349E           2025          MOVE.B  D2,bit4     *REG?
0000255A  13C3 0000349D           2026          MOVE.B  D3,bit3     *MODE?
00002560  13C4 0000349C           2027          MOVE.B  D4,bit2     *SIZE?
00002566  45F9 00002FD8           2028          LEA     ENDNEWLINE,A2
0000256C  6000 082E               2029          BRA     SUBEA
00002570                          2030          ***
00002570                          2031          
00002570                          2032          
00002570  B63C 0000               2033          CMP.B   #$0,D3
00002574  6700 002A               2034          BEQ     DN_EAM
00002578  B63C 0001               2035          CMP.B   #$1,D3
0000257C  6700 003A               2036          BEQ     AN_EAM
00002580  B63C 0002               2037          CMP.B   #$2,D3
00002584  6700 004A               2038          BEQ     INAN_EAM
00002588  B63C 0003               2039          CMP.B   #$3,D3
0000258C  6700 0072               2040          BEQ     INC_EAM
00002590  B63C 0004               2041          CMP.B   #$4,D3
00002594  6700 00A6               2042          BEQ     DEC_EAM
00002598  B63C 0007               2043          CMP.B   #$7,D3
0000259C  6700 00DA               2044          BEQ     ABS_EA
000025A0                          2045          
000025A0                          2046  DN_EAM
000025A0  43F9 00003243           2047          LEA     DISPD,A1
000025A6  103C 000E               2048          MOVE.B  #14,D0
000025AA  4E4F                    2049          TRAP    #15
000025AC  1202                    2050          MOVE.B  D2,D1
000025AE  103C 0003               2051          MOVE.B  #3,D0
000025B2  4E4F                    2052          TRAP    #15
000025B4  6000 0A22               2053          BRA     ENDNEWLINE
000025B8                          2054          
000025B8                          2055  AN_EAM
000025B8  43F9 0000323D           2056          LEA     DISPA,A1
000025BE  103C 000E               2057          MOVE.B  #14,D0
000025C2  4E4F                    2058          TRAP    #15
000025C4  1202                    2059          MOVE.B  D2,D1
000025C6  103C 0003               2060          MOVE.B  #3,D0
000025CA  4E4F                    2061          TRAP    #15
000025CC  6000 0A0A               2062          BRA     ENDNEWLINE
000025D0                          2063          
000025D0                          2064  INAN_EAM
000025D0  43F9 00003231           2065          LEA     OPENBRA,A1
000025D6  103C 000E               2066          MOVE.B  #14,D0
000025DA  4E4F                    2067          TRAP    #15
000025DC  43F9 0000323D           2068          LEA     DISPA,A1
000025E2  103C 000E               2069          MOVE.B  #14,D0
000025E6  4E4F                    2070          TRAP    #15
000025E8  1202                    2071          MOVE.B  D2,D1
000025EA  103C 0003               2072          MOVE.B  #3,D0
000025EE  4E4F                    2073          TRAP    #15
000025F0  43F9 00003233           2074          LEA     CLOSEBRA,A1
000025F6  103C 000E               2075          MOVE.B  #14,D0
000025FA  4E4F                    2076          TRAP    #15
000025FC  6000 09DA               2077          BRA     ENDNEWLINE
00002600                          2078          
00002600                          2079  INC_EAM                             *Consider combining inc and dec with in and removing dup com
00002600  43F9 00003231           2080          LEA     OPENBRA,A1
00002606  103C 000E               2081          MOVE.B  #14,D0
0000260A  4E4F                    2082          TRAP    #15
0000260C  43F9 0000323D           2083          LEA     DISPA,A1
00002612  103C 000E               2084          MOVE.B  #14,D0
00002616  4E4F                    2085          TRAP    #15
00002618                          2086          
00002618  3202                    2087          MOVE.W  D2,D1
0000261A  103C 0003               2088          MOVE.B  #3,D0
0000261E  4E4F                    2089          TRAP    #15
00002620                          2090          
00002620  43F9 00003233           2091          LEA     CLOSEBRA,A1
00002626  103C 000E               2092          MOVE.B  #14,D0
0000262A  4E4F                    2093          TRAP    #15
0000262C  43F9 00003235           2094          LEA     POS,A1
00002632  103C 000E               2095          MOVE.B  #14,D0
00002636  4E4F                    2096          TRAP    #15
00002638  6000 099E               2097          BRA     ENDNEWLINE
0000263C                          2098          
0000263C                          2099  DEC_EAM
0000263C  43F9 00003237           2100          LEA     NEG,A1
00002642  103C 000E               2101          MOVE.B  #14,D0
00002646  4E4F                    2102          TRAP    #15
00002648  43F9 00003231           2103          LEA     OPENBRA,A1
0000264E  103C 000E               2104          MOVE.B  #14,D0
00002652  4E4F                    2105          TRAP    #15
00002654  43F9 0000323D           2106          LEA     DISPA,A1
0000265A  103C 000E               2107          MOVE.B  #14,D0
0000265E  4E4F                    2108          TRAP    #15
00002660  1202                    2109          MOVE.B  D2,D1
00002662  103C 0003               2110          MOVE.B  #3,D0
00002666  4E4F                    2111          TRAP    #15
00002668  43F9 00003233           2112          LEA     CLOSEBRA,A1
0000266E  103C 000E               2113          MOVE.B  #14,D0
00002672  4E4F                    2114          TRAP    #15
00002674  6000 0962               2115          BRA     ENDNEWLINE
00002678                          2116          
00002678                          2117  ABS_EA  
00002678                          2118          *USE D5 TO SET SIZE APPROPRIATELY AND TO FULFILL REQ TO USE DISPEA SR
00002678  45F9 00002682           2119          LEA     ABS_EA2,A2
0000267E  6000 086C               2120          BRA     DISPEA
00002682                          2121          
00002682                          2122  ABS_EA2
00002682  6000 0954               2123          BRA     ENDNEWLINE
00002686                          2124  
00002686                          2125  *************************************************************************
00002686                          2126  * MOVEM stuff
00002686                          2127          *   D5 is bit1
00002686                          2128          *   D3 is bit2
00002686                          2129          *   D2 is bit3
00002686                          2130  MISCMOVEM
00002686  1805                    2131          MOVE.B  D5,D4               Gets the dr field and stores it into D5
00002688  4245                    2132          CLR     D5                  Moves 0 to D5
0000268A  0804 0002               2133          BTST    #2,D4               Checks the bit at spot 2
0000268E  6700 0006               2134          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
00002692  1A3C 0001               2135          MOVE.B  #1,D5               Else, it will skip it
00002696                          2136  
00002696                          2137  MISCMOVEM2
00002696  4246                    2138          CLR     D6                  Clears D6, setting it to 0
00002698  1803                    2139          MOVE.B  D3,D4               Gets the size field and stores it into D6
0000269A  0804 0002               2140          BTST    #2,D4               Checks the bit at spot 2
0000269E  6700 0006               2141          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
000026A2  1C3C 0001               2142          MOVE.B  #1,D6               Else, it will skip it. 
000026A6                          2143  
000026A6                          2144  MISCMOVEM3
000026A6  C63C 0003               2145          AND.B   #$3,D3              Gets ride of the first 2 bits
000026AA  E30B                    2146          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
000026AC  0882 0003               2147          BCLR    #3,D2               Checks furthest left bit and set it to 0
000026B0  6700 0006               2148          BEQ     MISCMOVEM4
000026B4  08C3 0000               2149          BSET    #0,D3               If bit was 1, adds 1 to mode
000026B8                          2150  
000026B8                          2151      * bit1 is in D5 dr field
000026B8                          2152      * bit2 is in D6 size
000026B8                          2153      * bit3 is in D3 mode
000026B8                          2154      * bit4 is in D2 reg
000026B8                          2155  MISCMOVEM4
000026B8  13C5 0000349B           2156          MOVE.B  D5,bit1
000026BE  13C6 0000349C           2157          MOVE.B  D6,bit2
000026C4  13C3 0000349D           2158          MOVE.B  D3,bit3
000026CA  13C2 0000349E           2159          MOVE.B  D2,bit4
000026D0                          2160  
000026D0                          2161      * Prints out MOVEM and size + tab
000026D0  43F9 000032AB           2162          LEA     MMOVEM,A1
000026D6  103C 000E               2163          MOVE.B  #14,D0
000026DA  4E4F                    2164          TRAP    #15
000026DC                          2165  
000026DC  BC3C 0001               2166          CMP.B   #1,D6
000026E0  6700 000C               2167          BEQ     MISCMMSIZEL
000026E4  43F9 00003250           2168          LEA     MWORD,A1
000026EA  6000 0008               2169          BRA     MISCMMPRINTSIZE
000026EE                          2170  
000026EE                          2171  MISCMMSIZEL
000026EE  43F9 00003253           2172          LEA     MLONG,A1
000026F4                          2173  
000026F4                          2174  MISCMMPRINTSIZE
000026F4  4E4F                    2175          TRAP    #15
000026F6  43F9 0000322B           2176          LEA     TAB,A1
000026FC  4E4F                    2177          TRAP    #15
000026FE                          2178  
000026FE  3C1E                    2179          MOVE.W  (A6)+,D6
00002700  BA3C 0000               2180          CMP.B   #0,D5
00002704  6700 0006               2181          BEQ     MISCMMPREDECCHECK
00002708  6000 007C               2182          BRA     MISCMMPOSTINC
0000270C                          2183  
0000270C                          2184  MISCMMPREDECCHECK
0000270C  B63C 0004               2185          CMP.B   #$4,D3
00002710  6700 0006               2186          BEQ     MISCMMPREDEC
00002714  6000 00DE               2187          BRA     MISCMMREGMEM
00002718                          2188  
00002718                          2189  ******************************************************************
00002718                          2190  * MOVEM Post-decrement
00002718                          2191  * Prints out registers from post-decrement
00002718                          2192  * D6 holds the reg list
00002718                          2193  MISCMMPREDEC
00002718  1806                    2194          MOVE.B  D6,D4
0000271A  3E3C 0008               2195          MOVE.W  #8,D7               Counter
0000271E  123C 000F               2196          MOVE.B  #$F,D1
00002722                          2197  
00002722  49F9 0000323D           2198          LEA     DISPA,A4
00002728  6100 0032               2199          BSR     MISCMMPREDECPRINT
0000272C                          2200  
0000272C  3806                    2201          MOVE.W  D6,D4
0000272E  E04C                    2202          LSR.W   #8,D4
00002730  3E3C 0008               2203          MOVE.W  #8,D7               Counter
00002734  49F9 00003243           2204          LEA     DISPD,A4
0000273A  6100 0020               2205          BSR     MISCMMPREDECPRINT
0000273E  6000 0002               2206          BRA     MISCMMPREDEC2
00002742                          2207  
00002742                          2208  MISCMMPREDEC2
00002742  43F9 0000322F           2209          LEA     COMMA,A1
00002748  103C 000E               2210          MOVE.B  #14,D0
0000274C  4E4F                    2211          TRAP    #15
0000274E                          2212  
0000274E  45F9 00002758           2213          LEA     MISCMMPREDEC3,A2
00002754  6000 0646               2214          BRA     SUBEA
00002758                          2215  
00002758                          2216  MISCMMPREDEC3
00002758  6000 087E               2217          BRA     ENDNEWLINE
0000275C                          2218  
0000275C                          2219  * Prints out reg list
0000275C                          2220  MISCMMPREDECPRINT
0000275C  E30C                    2221          LSL.B   #1,D4
0000275E  6400 001C               2222          BCC     MISCMMPREDECPRINT3
00002762                          2223  
00002762  B23C 000F               2224          CMP.B   #$F,D1
00002766  6700 0008               2225          BEQ     MISCMMPREDECPRINT2
0000276A  4EB9 0000286A           2226          JSR     MISCMMSLASH
00002770                          2227  
00002770                          2228  MISCMMPREDECPRINT2
00002770  224C                    2229          MOVEA.L A4,A1
00002772  103C 000E               2230          MOVE.B  #14,D0
00002776  4E4F                    2231          TRAP    #15
00002778  6100 00E2               2232          BSR     MISCMMPRINTNUM
0000277C                          2233  
0000277C                          2234  MISCMMPREDECPRINT3
0000277C  5307                    2235          SUB.B   #1,D7
0000277E  BE3C 0000               2236          CMP.B   #0,D7
00002782  66D8                    2237          BNE     MISCMMPREDECPRINT
00002784  4E75                    2238          RTS
00002786                          2239  
00002786                          2240  ******************************************************************
00002786                          2241  * MOVEM Post-increment
00002786                          2242  * Prints out registers from post-increment
00002786                          2243  * D6 holds the reg list
00002786                          2244  MISCMMPOSTINC
00002786  45F9 00002790           2245          LEA     MISCMMPOSTINC2,A2
0000278C  6000 060E               2246          BRA     SUBEA
00002790                          2247  
00002790                          2248  MISCMMPOSTINC2
00002790  43F9 0000322F           2249          LEA     COMMA,A1
00002796  103C 000E               2250          MOVE.B  #14,D0
0000279A  4E4F                    2251          TRAP    #15
0000279C                          2252  
0000279C  3806                    2253          MOVE.W  D6,D4
0000279E  E04C                    2254          LSR.W   #8,D4
000027A0  3E3C 0008               2255          MOVE.W  #8,D7               Counter
000027A4  123C 000F               2256          MOVE.B  #$F,D1
000027A8                          2257  
000027A8  49F9 0000323D           2258          LEA     DISPA,A4
000027AE  6100 001A               2259          BSR     MISCMMPOSTINCPRINT
000027B2                          2260  
000027B2  1806                    2261          MOVE.B  D6,D4
000027B4  3E3C 0008               2262          MOVE.W  #8,D7               Counter
000027B8  49F9 00003243           2263          LEA     DISPD,A4
000027BE  6100 000A               2264          BSR     MISCMMPOSTINCPRINT
000027C2  6000 0002               2265          BRA     MISCMMPOSTINC3
000027C6                          2266  
000027C6                          2267  MISCMMPOSTINC3
000027C6  6000 0810               2268          BRA     ENDNEWLINE
000027CA                          2269  
000027CA                          2270  * Prints out reg list
000027CA                          2271  MISCMMPOSTINCPRINT
000027CA  E20C                    2272          LSR.B   #1,D4
000027CC  6400 001C               2273          BCC     MISCMMPOSTINCPRINT3
000027D0                          2274  
000027D0  B23C 000F               2275          CMP.B   #$F,D1
000027D4  6700 0008               2276          BEQ     MISCMMPOSTINCPRINT2
000027D8  4EB9 0000286A           2277          JSR     MISCMMSLASH
000027DE                          2278  
000027DE                          2279  MISCMMPOSTINCPRINT2
000027DE  224C                    2280          MOVEA.L A4,A1
000027E0  103C 000E               2281          MOVE.B  #14,D0
000027E4  4E4F                    2282          TRAP    #15
000027E6  6100 0074               2283          BSR     MISCMMPRINTNUM
000027EA                          2284  
000027EA                          2285  MISCMMPOSTINCPRINT3
000027EA  5307                    2286          SUB.B   #1,D7
000027EC  BE3C 0000               2287          CMP.B   #0,D7
000027F0  66D8                    2288          BNE     MISCMMPOSTINCPRINT
000027F2  4E75                    2289          RTS
000027F4                          2290  
000027F4                          2291  ******************************************************************
000027F4                          2292  * MOVEM Post-increment
000027F4                          2293  * Prints out registers from post-increment
000027F4                          2294  * D6 holds the reg list
000027F4                          2295  MISCMMREGMEM
000027F4  1806                    2296          MOVE.B  D6,D4
000027F6  3E3C 0008               2297          MOVE.W  #8,D7               Counter
000027FA  123C 000F               2298          MOVE.B  #$F,D1
000027FE                          2299  
000027FE  49F9 00003243           2300          LEA     DISPD,A4
00002804  61C4                    2301          BSR     MISCMMPOSTINCPRINT
00002806                          2302  
00002806  3806                    2303          MOVE.W  D6,D4
00002808  E04C                    2304          LSR.W   #8,D4
0000280A  3E3C 0008               2305          MOVE.W  #8,D7               Counter
0000280E  49F9 0000323D           2306          LEA     DISPA,A4
00002814  61B4                    2307          BSR     MISCMMPOSTINCPRINT
00002816  6000 0002               2308          BRA     MISCMMREGMEM2
0000281A                          2309  
0000281A                          2310  MISCMMREGMEM2
0000281A  43F9 0000322F           2311          LEA     COMMA,A1
00002820  103C 000E               2312          MOVE.B  #14,D0
00002824  4E4F                    2313          TRAP    #15
00002826                          2314  
00002826  45F9 00002830           2315          LEA     MISCMMREGMEM3,A2
0000282C  6000 056E               2316          BRA     SUBEA
00002830                          2317  
00002830                          2318  MISCMMREGMEM3
00002830  6000 07A6               2319          BRA     ENDNEWLINE
00002834                          2320  
00002834                          2321  * Prints out reg list
00002834                          2322  MISCMMREGMEMPRINT
00002834  E20C                    2323          LSR.B   #1,D4
00002836  64B2                    2324          BCC     MISCMMPOSTINCPRINT3
00002838                          2325  
00002838  B23C 000F               2326          CMP.B   #$F,D1
0000283C  67A0                    2327          BEQ     MISCMMPOSTINCPRINT2
0000283E  4EB9 0000286A           2328          JSR     MISCMMSLASH
00002844                          2329  
00002844                          2330  MISCMMREGMEMPRINT2
00002844  224C                    2331          MOVEA.L A4,A1
00002846  103C 000E               2332          MOVE.B  #14,D0
0000284A  4E4F                    2333          TRAP    #15
0000284C  6100 000E               2334          BSR     MISCMMPRINTNUM
00002850                          2335  
00002850                          2336  MISCMMREGMEMPRINT3
00002850  5307                    2337          SUB.B   #1,D7
00002852  BE3C 0000               2338          CMP.B   #0,D7
00002856  6600 FF72               2339          BNE     MISCMMPOSTINCPRINT
0000285A  4E75                    2340          RTS
0000285C                          2341  
0000285C                          2342  
0000285C                          2343  
0000285C                          2344  ***********************************************
0000285C                          2345  * Stuff for printing reg list
0000285C                          2346  MISCMMPRINTNUM
0000285C  123C 0008               2347          MOVE.B  #8,D1
00002860  9207                    2348          SUB.B   D7,D1
00002862  103C 0003               2349          MOVE.B  #3,D0
00002866  4E4F                    2350          TRAP    #15
00002868  4E75                    2351          RTS
0000286A                          2352  
0000286A                          2353  MISCMMSLASH
0000286A  43F9 0000323B           2354          LEA     SLASH,A1
00002870  103C 000E               2355          MOVE.B  #14,D0
00002874  4E4F                    2356          TRAP    #15
00002876  4E75                    2357          RTS
00002878                          2358  
00002878                          2359  ******************************************************************************************************
00002878                          2360  * SUB section
00002878                          2361  
00002878                          2362          *   Grabs next two nibbles
00002878  141E                    2363  SUB     MOVE.B  (A6)+,D2
0000287A                          2364  
0000287A  DE02                    2365          ADD.B   D2,D7
0000287C                          2366  
0000287C  1602                    2367          MOVE.B  D2,D3               Copies data at D2 to D3
0000287E                          2368          *   this gets digit in 10's place
0000287E  E80B                    2369          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002880                          2370          *   this gets digit in 1's place
00002880  E90A                    2371          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002882  E80A                    2372          LSR.B   #4,D2               Shifts back right into 1's place
00002884                          2373  
00002884                          2374          *   D3 holds digit in 10's place
00002884                          2375          *   D2 holds digit in 1's place
00002884                          2376  
00002884                          2377          
00002884                          2378          *   Converts nibble into 3-bit parts
00002884  E20B                    2379          LSR.B   #1,D3
00002886  6400 0004               2380          BCC     SUB2
0000288A  5404                    2381          ADD.B   #$2,D4
0000288C                          2382          
0000288C  E20B                    2383  SUB2    LSR.B   #1,D3
0000288E  6400 0004               2384          BCC     SUB3
00002892  5804                    2385          ADD.B   #$4,D4
00002894                          2386          
00002894  1205                    2387  SUB3    MOVE.B  D5,D1
00002896  E209                    2388          LSR.B   #1,D1
00002898  6400 0004               2389          BCC     SUB4
0000289C  5803                    2390          ADD.B   #$4,D3
0000289E                          2391  
0000289E  B43C 0007               2392  SUB4    CMP.B   #$7,D2
000028A2  6D00 0006               2393          BLT     SUB1
000028A6  5204                    2394          ADD.B   #$1,D4
000028A8  5102                    2395          SUB.B   #$8,D2
000028AA                          2396  
000028AA                          2397          *   Stores them into addr
000028AA  13C1 0000349B           2398  SUB1    MOVE.B  D1,bit1
000028B0  13C3 0000349C           2399          MOVE.B  D3,bit2
000028B6  13C4 0000349D           2400          MOVE.B  D4,bit3
000028BC  13C2 0000349E           2401          MOVE.B  D2,bit4
000028C2                          2402  
000028C2                          2403          * do this later
000028C2  4241                    2404          CLR     D1
000028C4  7400                    2405          MOVE.L  #0,D2
000028C6  7600                    2406          MOVE.L  #0,D3
000028C8  7800                    2407          MOVE.L  #0,D4
000028CA  7A00                    2408          MOVE.L  #0,D5
000028CC  7C00                    2409          MOVE.L  #0,D6
000028CE                          2410  
000028CE                          2411          
000028CE                          2412  ******************************************************************************************************
000028CE                          2413  * After spliting the op-code into SUB's defined groupings
000028CE                          2414  *   This figures out which operation it is and goes to that sub-routine
000028CE                          2415  
000028CE                          2416          * This checks if bit0 is C which is either AND or MULS
000028CE  0C39 000C 0000349A      2417          CMP.B   #$C,bit0
000028D6  6600 000E               2418          BNE     SUBACHECK
000028DA  0C39 0007 0000349C      2419          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
000028E2  6700 F182               2420          BEQ     MULSW                       AND will use SUB's routine
000028E6                          2421  
000028E6                          2422  SUBACHECK
000028E6                          2423          * This will display SUBA instead  -- check this later
000028E6  0C39 0003 0000349C      2424          CMP.B   #$3,bit2
000028EE  6700 01D6               2425          BEQ     SUBA
000028F2  0C39 0007 0000349C      2426          CMP.B   #$7,bit2
000028FA  6700 01CA               2427          BEQ     SUBA
000028FE                          2428  
000028FE                          2429          * This will find the size and stuff
000028FE  0C39 0000 0000349C      2430          CMP.B   #$0,bit2
00002906  6700 003E               2431          BEQ     SUBSIZE1
0000290A  0C39 0001 0000349C      2432          CMP.B   #$1,bit2
00002912  6700 0072               2433          BEQ     SUBSIZE2
00002916  0C39 0002 0000349C      2434          CMP.B   #$2,bit2
0000291E  6700 00A6               2435          BEQ     SUBSIZE3
00002922  0C39 0004 0000349C      2436          CMP.B   #$4,bit2
0000292A  6700 00DA               2437          BEQ     SUBSIZE4
0000292E  0C39 0005 0000349C      2438          CMP.B   #$5,bit2
00002936  6700 010E               2439          BEQ     SUBSIZE5
0000293A  0C39 0006 0000349C      2440          CMP.B   #$6,bit2
00002942  6700 0142               2441          BEQ     SUBSIZE6
00002946                          2442     
00002946                          2443  ******************************************************************************************************
00002946                          2444  *   Displays size, then does operation order
00002946                          2445  
00002946                          2446  *   000 byte    EA,DN
00002946                          2447  SUBSIZE1
00002946  6100 0260               2448          BSR     SUBPRINT
0000294A  43F9 0000324D           2449          LEA     MBYTE,A1
00002950  103C 000E               2450          MOVE.B  #14,D0
00002954  4E4F                    2451          TRAP    #15
00002956  43F9 0000322B           2452          LEA     TAB,A1
0000295C  103C 000E               2453          MOVE.B  #14,D0
00002960  4E4F                    2454          TRAP    #15
00002962                          2455  
00002962  45F9 0000296C           2456          LEA     SUBSIZE11,A2
00002968  6000 0432               2457          BRA     SUBEA
0000296C                          2458  SUBSIZE11
0000296C  45F9 00002982           2459          LEA     SUBSIZE12,A2
00002972  43F9 0000322F           2460          LEA     COMMA,A1
00002978  103C 000E               2461          MOVE.B  #14,D0
0000297C  4E4F                    2462          TRAP    #15
0000297E  6000 02F8               2463          BRA     SUBDN
00002982                          2464  SUBSIZE12
00002982  6000 0654               2465          BRA     ENDNEWLINE
00002986                          2466  
00002986                          2467  *************************************************
00002986                          2468  *   001 word    EA,DN
00002986                          2469  SUBSIZE2
00002986  6100 0220               2470          BSR     SUBPRINT
0000298A  43F9 00003250           2471          LEA     MWORD,A1
00002990  103C 000E               2472          MOVE.B  #14,D0
00002994  4E4F                    2473          TRAP    #15
00002996  43F9 0000322B           2474          LEA     TAB,A1
0000299C  103C 000E               2475          MOVE.B  #14,D0
000029A0  4E4F                    2476          TRAP    #15
000029A2                          2477  
000029A2  45F9 000029AC           2478          LEA     SUBSIZE21,A2
000029A8  6000 03F2               2479          BRA     SUBEA
000029AC                          2480  SUBSIZE21
000029AC  45F9 000029C2           2481          LEA     SUBSIZE22,A2
000029B2  43F9 0000322F           2482          LEA     COMMA,A1
000029B8  103C 000E               2483          MOVE.B  #14,D0
000029BC  4E4F                    2484          TRAP    #15
000029BE  6000 02B8               2485          BRA     SUBDN
000029C2                          2486  SUBSIZE22
000029C2  6000 0614               2487          BRA     ENDNEWLINE
000029C6                          2488  
000029C6                          2489  *************************************************
000029C6                          2490  *   010 long    EA,DN
000029C6                          2491  SUBSIZE3
000029C6  6100 01E0               2492          BSR     SUBPRINT
000029CA  43F9 00003253           2493          LEA     MLONG,A1
000029D0  103C 000E               2494          MOVE.B  #14,D0
000029D4  4E4F                    2495          TRAP    #15
000029D6  43F9 0000322B           2496          LEA     TAB,A1
000029DC  103C 000E               2497          MOVE.B  #14,D0
000029E0  4E4F                    2498          TRAP    #15
000029E2                          2499  
000029E2  45F9 000029EC           2500          LEA     SUBSIZE31,A2
000029E8  6000 03B2               2501          BRA     SUBEA
000029EC                          2502  SUBSIZE31
000029EC  45F9 00002A02           2503          LEA     SUBSIZE32,A2
000029F2  43F9 0000322F           2504          LEA     COMMA,A1
000029F8  103C 000E               2505          MOVE.B  #14,D0
000029FC  4E4F                    2506          TRAP    #15
000029FE  6000 0278               2507          BRA     SUBDN
00002A02                          2508  SUBSIZE32
00002A02  6000 05D4               2509          BRA     ENDNEWLINE
00002A06                          2510  
00002A06                          2511  *************************************************
00002A06                          2512  *   100 byte    DN,EA
00002A06                          2513  SUBSIZE4
00002A06  6100 01A0               2514          BSR     SUBPRINT
00002A0A  43F9 0000324D           2515          LEA     MBYTE,A1
00002A10  103C 000E               2516          MOVE.B  #14,D0
00002A14  4E4F                    2517          TRAP    #15
00002A16  43F9 0000322B           2518          LEA     TAB,A1
00002A1C  103C 000E               2519          MOVE.B  #14,D0
00002A20  4E4F                    2520          TRAP    #15
00002A22                          2521  
00002A22                          2522          *BSR     SUBERRORTEST1
00002A22                          2523  
00002A22  45F9 00002A2C           2524          LEA     SUBSIZE41,A2
00002A28  6000 024E               2525          BRA     SUBDN
00002A2C                          2526  SUBSIZE41
00002A2C  45F9 00002A42           2527          LEA     SUBSIZE42,A2
00002A32  43F9 0000322F           2528          LEA     COMMA,A1
00002A38  103C 000E               2529          MOVE.B  #14,D0
00002A3C  4E4F                    2530          TRAP    #15
00002A3E  6000 035C               2531          BRA     SUBEA
00002A42                          2532  SUBSIZE42
00002A42  6000 0594               2533          BRA     ENDNEWLINE
00002A46                          2534  
00002A46                          2535  *************************************************
00002A46                          2536  *   101 word    DN,EA
00002A46                          2537  SUBSIZE5
00002A46                          2538          *BSR     SUBERRORTEST1               * This does error testing
00002A46  6100 0160               2539          BSR     SUBPRINT                    * Prints out 'SUB.'
00002A4A  43F9 00003250           2540          LEA     MWORD,A1
00002A50  103C 000E               2541          MOVE.B  #14,D0
00002A54  4E4F                    2542          TRAP    #15
00002A56  43F9 0000322B           2543          LEA     TAB,A1
00002A5C  103C 000E               2544          MOVE.B  #14,D0
00002A60  4E4F                    2545          TRAP    #15
00002A62                          2546  
00002A62  45F9 00002A6C           2547          LEA     SUBSIZE51,A2
00002A68  6000 020E               2548          BRA     SUBDN
00002A6C                          2549  SUBSIZE51
00002A6C  45F9 00002A82           2550          LEA     SUBSIZE52,A2
00002A72  43F9 0000322F           2551          LEA     COMMA,A1
00002A78  103C 000E               2552          MOVE.B  #14,D0
00002A7C  4E4F                    2553          TRAP    #15
00002A7E  6000 031C               2554          BRA     SUBEA
00002A82                          2555  SUBSIZE52
00002A82  6000 0554               2556          BRA     ENDNEWLINE
00002A86                          2557  
00002A86                          2558  *************************************************
00002A86                          2559  *   110 long    DN,EA
00002A86                          2560  SUBSIZE6
00002A86                          2561          *BSR     SUBERRORTEST1               * This does error testing
00002A86  6100 0120               2562          BSR     SUBPRINT                    * Prints out 'SUB.'
00002A8A  43F9 00003253           2563          LEA     MLONG,A1
00002A90  103C 000E               2564          MOVE.B  #14,D0
00002A94  4E4F                    2565          TRAP    #15
00002A96  43F9 0000322B           2566          LEA     TAB,A1
00002A9C  103C 000E               2567          MOVE.B  #14,D0
00002AA0  4E4F                    2568          TRAP    #15
00002AA2                          2569  
00002AA2                          2570          *BSR     SUBERRORTEST1
00002AA2                          2571  
00002AA2  45F9 00002AAC           2572          LEA     SUBSIZE61,A2
00002AA8  6000 01CE               2573          BRA     SUBDN
00002AAC                          2574  SUBSIZE61
00002AAC  45F9 00002AC2           2575          LEA     SUBSIZE62,A2
00002AB2  43F9 0000322F           2576          LEA     COMMA,A1
00002AB8  103C 000E               2577          MOVE.B  #14,D0
00002ABC  4E4F                    2578          TRAP    #15
00002ABE  6000 02DC               2579          BRA     SUBEA
00002AC2                          2580  SUBSIZE62
00002AC2  6000 0514               2581          BRA     ENDNEWLINE
00002AC6                          2582  
00002AC6                          2583  ****************************************************************************
00002AC6                          2584  *   This section is for SUBA
00002AC6                          2585  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002AC6                          2586  SUBA
00002AC6  0C39 0009 0000349A      2587          CMP.B   #$9,bit0
00002ACE  6700 001A               2588          BEQ     SUBPRINTSUBA
00002AD2  0C39 000B 0000349A      2589          CMP.B   #$B,bit0
00002ADA  6700 001E               2590          BEQ     SUBPRINTCMPA
00002ADE  0C39 000D 0000349A      2591          CMP.B   #$D,bit0
00002AE6  6700 0022               2592          BEQ     SUBPRINTADDA
00002AEA                          2593  
00002AEA                          2594  
00002AEA                          2595  SUBPRINTSUBA
00002AEA  43F9 000032C4           2596          LEA     MSUBA,A1                    Displays 'SUBA.'
00002AF0  103C 000E               2597          MOVE.B  #14,D0
00002AF4  4E4F                    2598          TRAP    #15
00002AF6  6000 0022               2599          BRA     SUBACONT
00002AFA                          2600  
00002AFA                          2601  SUBPRINTCMPA
00002AFA  43F9 000032F9           2602          LEA     MCMPA,A1                    Displays 'SUBA.'
00002B00  103C 000E               2603          MOVE.B  #14,D0
00002B04  4E4F                    2604          TRAP    #15
00002B06  6000 0012               2605          BRA     SUBACONT
00002B0A                          2606  
00002B0A                          2607  SUBPRINTADDA
00002B0A  43F9 0000330A           2608          LEA     MADDA,A1                    Displays 'SUBA.'
00002B10  103C 000E               2609          MOVE.B  #14,D0
00002B14  4E4F                    2610          TRAP    #15
00002B16  6000 0002               2611          BRA     SUBACONT
00002B1A                          2612  
00002B1A                          2613  SUBACONT
00002B1A                          2614          * Does the rest of SUBA
00002B1A  0C39 0003 0000349C      2615          CMP.B   #$3,bit2
00002B22  6700 000E               2616          BEQ     SUBSIZE7
00002B26  0C39 0007 0000349C      2617          CMP.B   #$7,bit2
00002B2E  6700 003E               2618          BEQ     SUBSIZE8
00002B32                          2619  
00002B32                          2620  *************************************************
00002B32                          2621  *   SUBA Word   ea,An
00002B32                          2622  SUBSIZE7
00002B32  43F9 00003250           2623          LEA     MWORD,A1
00002B38  103C 000E               2624          MOVE.B  #14,D0
00002B3C  4E4F                    2625          TRAP    #15
00002B3E  43F9 0000322B           2626          LEA     TAB,A1
00002B44  103C 000E               2627          MOVE.B  #14,D0
00002B48  4E4F                    2628          TRAP    #15
00002B4A                          2629  
00002B4A  45F9 00002B54           2630          LEA     SUBSIZE71,A2
00002B50  6000 024A               2631          BRA     SUBEA
00002B54                          2632  SUBSIZE71
00002B54  45F9 00002B6A           2633          LEA     SUBSIZE72,A2
00002B5A  43F9 0000322F           2634          LEA     COMMA,A1
00002B60  103C 000E               2635          MOVE.B  #14,D0
00002B64  4E4F                    2636          TRAP    #15
00002B66  6000 0164               2637          BRA     SUBAN2
00002B6A                          2638  SUBSIZE72
00002B6A  6000 046C               2639          BRA     ENDNEWLINE
00002B6E                          2640  
00002B6E                          2641  *************************************************
00002B6E                          2642  *   SUBA longword   ea,An
00002B6E                          2643  SUBSIZE8
00002B6E  43F9 00003253           2644          LEA     MLONG,A1
00002B74  103C 000E               2645          MOVE.B  #14,D0
00002B78  4E4F                    2646          TRAP    #15
00002B7A  43F9 0000322B           2647          LEA     TAB,A1
00002B80  103C 000E               2648          MOVE.B  #14,D0
00002B84  4E4F                    2649          TRAP    #15
00002B86                          2650  
00002B86  45F8 2B54               2651          LEA     SUBSIZE71,A2
00002B8A  6000 0210               2652          BRA     SUBEA
00002B8E                          2653  SUBSIZE81
00002B8E  45F8 2B6A               2654          LEA     SUBSIZE72,A2
00002B92  43F9 0000322F           2655          LEA     COMMA,A1
00002B98  103C 000E               2656          MOVE.B  #14,D0
00002B9C  4E4F                    2657          TRAP    #15
00002B9E  6000 012C               2658          BRA     SUBAN2
00002BA2                          2659  SUBSIZE82
00002BA2  6000 0434               2660          BRA     ENDNEWLINE
00002BA6                          2661  
00002BA6                          2662  *************************************************
00002BA6                          2663  * Jumps to memory location at A2
00002BA6                          2664  SUBJMPA2
00002BA6  4ED2                    2665          JMP     (A2)
00002BA8                          2666  
00002BA8                          2667  *************************************************
00002BA8                          2668  * Prints out opcode name
00002BA8                          2669  SUBPRINT
00002BA8  0C39 0009 0000349A      2670          CMP.B   #$9,bit0                Prints SUB
00002BB0  6700 0026               2671          BEQ     SUBPRINTSUB
00002BB4  0C39 000B 0000349A      2672          CMP.B   #$B,bit0                Prints CMP or EOR
00002BBC  6700 004A               2673          BEQ     SUBPRINTB
00002BC0  0C39 000C 0000349A      2674          CMP.B   #$C,bit0                Prints AND
00002BC8  6700 001E               2675          BEQ     SUBPRINTAND
00002BCC  0C39 000D 0000349A      2676          CMP.B   #$D,bit0                Prints ADD
00002BD4  6700 0022               2677          BEQ     SUBPRINTADD
00002BD8                          2678  
00002BD8                          2679  SUBPRINTSUB   * Displays 'SUB.' 
00002BD8  43F9 000032BF           2680          LEA     MSUB,A1
00002BDE  103C 000E               2681          MOVE.B  #14,D0
00002BE2  4E4F                    2682          TRAP    #15
00002BE4  6000 004E               2683          BRA     SUBPRINTEND
00002BE8                          2684  
00002BE8                          2685  SUBPRINTAND   * Displays 'AND.' 
00002BE8  43F9 000032CA           2686          LEA     MAND,A1
00002BEE  103C 000E               2687          MOVE.B  #14,D0
00002BF2  4E4F                    2688          TRAP    #15
00002BF4  6000 003E               2689          BRA     SUBPRINTEND
00002BF8                          2690  
00002BF8                          2691  SUBPRINTADD   * Displays 'ADD.' 
00002BF8  43F9 000032CF           2692          LEA     MADD,A1
00002BFE  103C 000E               2693          MOVE.B  #14,D0
00002C02  4E4F                    2694          TRAP    #15
00002C04  6000 002E               2695          BRA     SUBPRINTEND
00002C08                          2696  
00002C08                          2697  SUBPRINTB
00002C08  0C39 0004 0000349C      2698          CMP.B   #$4,bit2
00002C10  6D00 0012               2699          BLT     SUBPRINTCMP
00002C14                          2700  
00002C14                          2701  SUBPRINTEOR   * Displays 'EOR.' 
00002C14  43F9 000032FF           2702          LEA     MEOR,A1
00002C1A  103C 000E               2703          MOVE.B  #14,D0
00002C1E  4E4F                    2704          TRAP    #15
00002C20  6000 0012               2705          BRA     SUBPRINTEND
00002C24                          2706  
00002C24                          2707  SUBPRINTCMP   * Displays 'CMP.' 
00002C24  43F9 000032EE           2708          LEA     MCMP,A1
00002C2A  103C 000E               2709          MOVE.B  #14,D0
00002C2E  4E4F                    2710          TRAP    #15
00002C30  6000 0002               2711          BRA     SUBPRINTEND
00002C34                          2712  
00002C34                          2713  SUBPRINTEND
00002C34  4E75                    2714          RTS
00002C36                          2715  
00002C36                          2716  
00002C36                          2717  *******************************************************************
00002C36                          2718  * Error testing for DN->EA operations
00002C36                          2719  *  Data register, address register, and immediate data cannot be destinations
00002C36                          2720  SUBERRORTEST1
00002C36                          2721          * test for DN or AN register, branches to invalid op code if true
00002C36  0C39 0000 0000349D      2722          CMP.B   #0,bit3
00002C3E  6700 0326               2723          BEQ     INVOP
00002C42  0C39 0001 0000349D      2724          CMP.B   #1,bit3
00002C4A  6700 031A               2725          BEQ     INVOP
00002C4E                          2726          
00002C4E                          2727          * check if destination is immediate data
00002C4E  0C39 0007 0000349D      2728          CMP.B   #7,bit3
00002C56  6600 001E               2729          BNE     SUBERRORTEST11
00002C5A  0C39 0000 0000349E      2730          CMP.B   #0,bit4
00002C62  6700 0012               2731          BEQ     SUBERRORTEST11
00002C66  0C39 0001 0000349E      2732          CMP.B   #1,bit4
00002C6E  6700 0006               2733          BEQ     SUBERRORTEST11
00002C72  6000 02F2               2734          BRA     INVOP
00002C76                          2735          
00002C76                          2736  SUBERRORTEST11
00002C76  4E75                    2737          RTS
00002C78                          2738  
00002C78                          2739  
00002C78                          2740  ******************************************************************************************************
00002C78                          2741  *   Displays data register
00002C78                          2742  SUBDN
00002C78  43F9 00003256           2743          LEA     MDN,A1
00002C7E  103C 000E               2744          MOVE.B  #14,D0
00002C82  4E4F                    2745          TRAP    #15
00002C84                          2746  
00002C84  1239 0000349B           2747          MOVE.B  bit1,D1
00002C8A  103C 0003               2748          MOVE.B  #3,D0
00002C8E  4E4F                    2749          TRAP    #15
00002C90                          2750          
00002C90  6000 FF14               2751          BRA     SUBJMPA2
00002C94                          2752  
00002C94                          2753  *   Displays data register
00002C94                          2754  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002C94                          2755  SUBDN2
00002C94  43F9 00003256           2756          LEA     MDN,A1
00002C9A  103C 000E               2757          MOVE.B  #14,D0
00002C9E  4E4F                    2758          TRAP    #15
00002CA0                          2759  
00002CA0  1239 0000349E           2760          MOVE.B  bit4,D1
00002CA6  103C 0003               2761          MOVE.B  #3,D0
00002CAA  4E4F                    2762          TRAP    #15
00002CAC                          2763          
00002CAC  6000 FEF8               2764          BRA     SUBJMPA2
00002CB0                          2765  
00002CB0                          2766  *   Displays address register
00002CB0                          2767  SUBAN
00002CB0  43F9 00003258           2768          LEA     MAN,A1
00002CB6  103C 000E               2769          MOVE.B  #14,D0
00002CBA  4E4F                    2770          TRAP    #15
00002CBC                          2771  
00002CBC  1239 0000349E           2772          MOVE.B  bit4,D1
00002CC2  103C 0003               2773          MOVE.B  #3,D0
00002CC6  4E4F                    2774          TRAP    #15
00002CC8                          2775          
00002CC8  6000 FEDC               2776          BRA     SUBJMPA2
00002CCC                          2777  
00002CCC                          2778  *   Displays address register
00002CCC                          2779  *   This is for SUBA, SUBA puts An into bit1
00002CCC                          2780  SUBAN2
00002CCC  43F9 00003258           2781          LEA     MAN,A1
00002CD2  103C 000E               2782          MOVE.B  #14,D0
00002CD6  4E4F                    2783          TRAP    #15
00002CD8                          2784  
00002CD8  1239 0000349B           2785          MOVE.B  bit1,D1
00002CDE  103C 0003               2786          MOVE.B  #3,D0
00002CE2  4E4F                    2787          TRAP    #15
00002CE4                          2788          
00002CE4  6000 FEC0               2789          BRA     SUBJMPA2
00002CE8                          2790  
00002CE8                          2791  
00002CE8                          2792  *   Displays indirect address register
00002CE8                          2793  SUBANID
00002CE8  43F9 00003231           2794          LEA     OPENBRA,A1
00002CEE  103C 000E               2795          MOVE.B  #14,D0
00002CF2  4E4F                    2796          TRAP    #15
00002CF4                          2797  
00002CF4  43F9 00003258           2798          LEA     MAN,A1
00002CFA  103C 000E               2799          MOVE.B  #14,D0
00002CFE  4E4F                    2800          TRAP    #15
00002D00                          2801  
00002D00  1239 0000349E           2802          MOVE.B  bit4,D1
00002D06  103C 0003               2803          MOVE.B  #3,D0
00002D0A  4E4F                    2804          TRAP    #15
00002D0C                          2805  
00002D0C  43F9 00003233           2806          LEA     CLOSEBRA,A1
00002D12  103C 000E               2807          MOVE.B  #14,D0
00002D16  4E4F                    2808          TRAP    #15
00002D18                          2809  
00002D18  6000 FE8C               2810          BRA     SUBJMPA2
00002D1C                          2811  
00002D1C                          2812  *   Displays indirect address register with post increment
00002D1C                          2813  SUBANIDPOS
00002D1C  43F9 00003231           2814          LEA     OPENBRA,A1
00002D22  103C 000E               2815          MOVE.B  #14,D0
00002D26  4E4F                    2816          TRAP    #15
00002D28                          2817  
00002D28  43F9 00003258           2818          LEA     MAN,A1
00002D2E  103C 000E               2819          MOVE.B  #14,D0
00002D32  4E4F                    2820          TRAP    #15
00002D34                          2821  
00002D34  1239 0000349E           2822          MOVE.B  bit4,D1
00002D3A  103C 0003               2823          MOVE.B  #3,D0
00002D3E  4E4F                    2824          TRAP    #15
00002D40                          2825  
00002D40  43F9 00003233           2826          LEA     CLOSEBRA,A1
00002D46  103C 000E               2827          MOVE.B  #14,D0
00002D4A  4E4F                    2828          TRAP    #15
00002D4C                          2829  
00002D4C  43F9 00003235           2830          LEA     POS,A1
00002D52  103C 000E               2831          MOVE.B  #14,D0
00002D56  4E4F                    2832          TRAP    #15
00002D58                          2833  
00002D58  6000 FE4C               2834          BRA     SUBJMPA2
00002D5C                          2835  
00002D5C                          2836  *   Displays indirect address register with pre decrement
00002D5C                          2837  SUBANIDNEG
00002D5C  43F9 00003237           2838          LEA     NEG,A1
00002D62  103C 000E               2839          MOVE.B  #14,D0
00002D66  4E4F                    2840          TRAP    #15
00002D68                          2841  
00002D68  43F9 00003231           2842          LEA     OPENBRA,A1
00002D6E  103C 000E               2843          MOVE.B  #14,D0
00002D72  4E4F                    2844          TRAP    #15
00002D74                          2845  
00002D74  43F9 00003258           2846          LEA     MAN,A1
00002D7A  103C 000E               2847          MOVE.B  #14,D0
00002D7E  4E4F                    2848          TRAP    #15
00002D80                          2849  
00002D80  1239 0000349E           2850          MOVE.B  bit4,D1
00002D86  103C 0003               2851          MOVE.B  #3,D0
00002D8A  4E4F                    2852          TRAP    #15
00002D8C                          2853  
00002D8C  43F9 00003233           2854          LEA     CLOSEBRA,A1
00002D92  103C 000E               2855          MOVE.B  #14,D0
00002D96  4E4F                    2856          TRAP    #15
00002D98                          2857  
00002D98  6000 FE0C               2858          BRA     SUBJMPA2
00002D9C                          2859  
00002D9C                          2860  
00002D9C                          2861  
00002D9C                          2862  
00002D9C                          2863  ******************************************************************************************************
00002D9C                          2864  * Displays the EA as hex numbers
00002D9C                          2865  * 
00002D9C                          2866  SUBEA
00002D9C                          2867          *   This finds which mode to use
00002D9C  0C39 0000 0000349D      2868          CMP.B   #$0,bit3
00002DA4  6700 FEEE               2869          BEQ     SUBDN2
00002DA8  0C39 0001 0000349D      2870          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002DB0  6700 FEFE               2871          BEQ     SUBAN
00002DB4  0C39 0002 0000349D      2872          CMP.B   #$2,bit3
00002DBC  6700 FF2A               2873          BEQ     SUBANID
00002DC0  0C39 0003 0000349D      2874          CMP.B   #$3,bit3
00002DC8  6700 FF52               2875          BEQ     SUBANIDPOS
00002DCC  0C39 0004 0000349D      2876          CMP.B   #$4,bit3
00002DD4  6786                    2877          BEQ     SUBANIDNEG
00002DD6  0C39 0005 0000349D      2878          CMP.B   #$5,bit3
00002DDE  6700 0424               2879          BEQ     ERROR
00002DE2  0C39 0006 0000349D      2880          CMP.B   #$6,bit3
00002DEA  6700 0418               2881          BEQ     ERROR
00002DEE  0C39 0007 0000349D      2882          CMP.B   #$7,bit3
00002DF6  6700 0002               2883          BEQ     SUBEAHEX
00002DFA                          2884  
00002DFA                          2885  SUBEAHEX
00002DFA  0C39 0004 0000349E      2886          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002E02  6700 0086               2887          BEQ     SUBEAID
00002E06                          2888  SUBEAID2
00002E06                          2889          *   Else it will assume it is absolute addressing mode
00002E06  43F9 0000324B           2890          LEA     MHEX,A1
00002E0C  103C 000E               2891          MOVE.B  #14,D0
00002E10  4E4F                    2892          TRAP    #15
00002E12                          2893  
00002E12  0C39 0000 0000349E      2894          CMP.B   #$0,bit4
00002E1A  6700 007E               2895          BEQ     SUBEAHEX1
00002E1E  0C39 0001 0000349E      2896          CMP.B   #$1,bit4
00002E26  6700 007A               2897          BEQ     SUBEAHEX2
00002E2A                          2898  
00002E2A  0C39 0000 0000349C      2899          CMP.B   #$0,bit2            * SUB byte displays as word
00002E32  6700 0066               2900          BEQ     SUBEAHEX1
00002E36  0C39 0004 0000349C      2901          CMP.B   #$4,bit2            * SUB byte displays as word
00002E3E  6700 005A               2902          BEQ     SUBEAHEX1
00002E42  0C39 0001 0000349C      2903          CMP.B   #$1,bit2            * SUB word
00002E4A  6700 004E               2904          BEQ     SUBEAHEX1
00002E4E  0C39 0005 0000349C      2905          CMP.B   #$5,bit2            * SUB word
00002E56  6700 0042               2906          BEQ     SUBEAHEX1
00002E5A  0C39 0003 0000349C      2907          CMP.B   #$3,bit2            * SUBA word
00002E62  6700 0036               2908          BEQ     SUBEAHEX1
00002E66  0C39 0002 0000349C      2909          CMP.B   #$2,bit2            * SUB longword
00002E6E  6700 0032               2910          BEQ     SUBEAHEX2
00002E72  0C39 0006 0000349C      2911          CMP.B   #$6,bit2            * SUB longword
00002E7A  6700 0026               2912          BEQ     SUBEAHEX2
00002E7E  0C39 0007 0000349C      2913          CMP.B   #$7,bit2            * SUBA longword
00002E86  6700 001A               2914          BEQ     SUBEAHEX2
00002E8A                          2915  
00002E8A                          2916  SUBEAID
00002E8A  43F9 00003239           2917          LEA     HASH,A1
00002E90  103C 000E               2918          MOVE.B  #14,D0
00002E94  4E4F                    2919          TRAP    #15
00002E96  6000 FF6E               2920          BRA     SUBEAID2
00002E9A                          2921  
00002E9A                          2922  SUBEAHEX1  
00002E9A                          2923          *absolute address word
00002E9A  1E3C 0002               2924          MOVE.B  #2,D7
00002E9E  6000 000A               2925          BRA     SUBEAHEX3
00002EA2                          2926  
00002EA2                          2927  SUBEAHEX2  *absolute address long
00002EA2  1E3C 0004               2928          MOVE.B  #4,D7
00002EA6  6000 0002               2929          BRA     SUBEAHEX3
00002EAA                          2930  
00002EAA                          2931  SUBEAHEX3
00002EAA  BE3C 0000               2932          CMP.B   #0,D7               Compares current addr to ending addr
00002EAE  6700 FCF6               2933          BEQ     SUBJMPA2            Branches to done if they are equal
00002EB2                          2934  
00002EB2                          2935      
00002EB2  141E                    2936          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002EB4                          2937          
00002EB4  1602                    2938          MOVE.B  D2,D3               Copies data at D2 to D3
00002EB6                          2939          *   this gets digit in 10's place
00002EB6  E80B                    2940          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002EB8                          2941          *   this gets digit in 1's place
00002EB8  E90A                    2942          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002EBA  E80A                    2943          LSR.B   #4,D2               Shifts back right into 1's place
00002EBC                          2944  
00002EBC                          2945          
00002EBC                          2946          *   D3 holds digit in 10's place
00002EBC                          2947          *   D2 holds digit in 1's place
00002EBC                          2948          
00002EBC  1203                    2949          MOVE.B  D3,D1               Displays digit in 10's place first
00002EBE                          2950  
00002EBE                          2951          *   converts digits 10+ into letters
00002EBE                          2952  
00002EBE  47F9 00002ED2           2953          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002EC4  B23C 0009               2954          CMP.B   #9,D1               Compares digit to 9
00002EC8  6E00 0164               2955          BGT     CONV                Print out letter representation if greater than 9
00002ECC                          2956  
00002ECC  103C 0003               2957          MOVE.B  #3,D0               Displays digit if it is less than A
00002ED0  4E4F                    2958          TRAP    #15
00002ED2                          2959          
00002ED2                          2960  SUBEAHEX4    
00002ED2  1202                    2961          MOVE.B  D2,D1               Displays digit in 1's place second
00002ED4                          2962  
00002ED4                          2963          *   converts digits 10+ into letters
00002ED4  47F9 00002EE8           2964          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002EDA  B23C 0009               2965          CMP.B   #9,D1               Compares digit to 9
00002EDE  6E00 014E               2966          BGT     CONV                Print out letter representation if greater than 9
00002EE2                          2967          
00002EE2  103C 0003               2968          MOVE.B  #3,D0               Displays digit if it is less than A
00002EE6  4E4F                    2969          TRAP    #15
00002EE8                          2970          
00002EE8                          2971  SUBEAHEX5         
00002EE8                          2972  * Display counter -- creates new line every 8 bytes
00002EE8                          2973          * D7 is used as counter
00002EE8                          2974          
00002EE8  5307                    2975          SUB.B   #1,D7                       
00002EEA  60BE                    2976          BRA     SUBEAHEX3              Loops back to display next address
00002EEC                          2977  
00002EEC                          2978  ***   display EA ends here
00002EEC                          2979  
00002EEC                          2980  ******************************************************************************************************
00002EEC                          2981  * Displays the EA as hex numbers
00002EEC                          2982  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002EEC                          2983  * OUTPUT: Displays size of EA reading from A6
00002EEC                          2984  * Jumps to location stored in A2 when finished
00002EEC                          2985  DISPEA
00002EEC  43F9 0000324B           2986          LEA     MHEX,A1
00002EF2  103C 000E               2987          MOVE.B  #14,D0
00002EF6  4E4F                    2988          TRAP    #15
00002EF8                          2989  
00002EF8  B83C 0002               2990          CMP.B   #$2,D4              Branches to longword display if size is 2
00002EFC  6700 000A               2991          BEQ     DISPEALONG          Else it will assume word length
00002F00                          2992  
00002F00                          2993  DISPEAWORD
00002F00                          2994          *absolute address word
00002F00  1E3C 0002               2995          MOVE.B  #2,D7
00002F04  6000 000A               2996          BRA     DISPEA3
00002F08                          2997   
00002F08                          2998  DISPEALONG
00002F08                          2999          *absolute address long
00002F08  1E3C 0004               3000          MOVE.B  #4,D7
00002F0C  6000 0002               3001          BRA     DISPEA3
00002F10                          3002  
00002F10                          3003  DISPEA3
00002F10  BE3C 0000               3004          CMP.B   #0,D7               Compares current addr to ending addr
00002F14  6700 FC90               3005          BEQ     SUBJMPA2            Branches to done if they are equal
00002F18                          3006  
00002F18                          3007      
00002F18  141E                    3008          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002F1A                          3009          
00002F1A  1602                    3010          MOVE.B  D2,D3               Copies data at D2 to D3
00002F1C                          3011          *   this gets digit in 10's place
00002F1C  E80B                    3012          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F1E                          3013          *   this gets digit in 1's place
00002F1E  E90A                    3014          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F20  E80A                    3015          LSR.B   #4,D2               Shifts back right into 1's place
00002F22                          3016  
00002F22                          3017          
00002F22                          3018          *   D3 holds digit in 10's place
00002F22                          3019          *   D2 holds digit in 1's place
00002F22                          3020          
00002F22  1203                    3021          MOVE.B  D3,D1               Displays digit in 10's place first
00002F24                          3022  
00002F24                          3023          *   converts digits 10+ into letters
00002F24                          3024  
00002F24  47F9 00002F38           3025          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002F2A  B23C 0009               3026          CMP.B   #9,D1               Compares digit to 9
00002F2E  6E00 00FE               3027          BGT     CONV                Print out letter representation if greater than 9
00002F32                          3028  
00002F32  103C 0003               3029          MOVE.B  #3,D0               Displays digit if it is less than A
00002F36  4E4F                    3030          TRAP    #15
00002F38                          3031    
00002F38                          3032  DISPEA4
00002F38  1202                    3033          MOVE.B  D2,D1               Displays digit in 1's place second
00002F3A                          3034  
00002F3A                          3035          *   converts digits 10+ into letters
00002F3A  47F9 00002F4E           3036          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002F40  B23C 0009               3037          CMP.B   #9,D1               Compares digit to 9
00002F44  6E00 00E8               3038          BGT     CONV                Print out letter representation if greater than 9
00002F48                          3039          
00002F48  103C 0003               3040          MOVE.B  #3,D0               Displays digit if it is less than A
00002F4C  4E4F                    3041          TRAP    #15
00002F4E                          3042        
00002F4E                          3043  DISPEA5
00002F4E                          3044  * Display counter -- creates new line every 8 bytes
00002F4E                          3045          * D7 is used as counter
00002F4E                          3046          
00002F4E  5307                    3047          SUB.B   #1,D7                       
00002F50  60BE                    3048          BRA     DISPEA3              Loops back to display next address
00002F52                          3049  
00002F52                          3050  ***   display EA ends here
00002F52                          3051  
00002F52                          3052  *******************************************************************
00002F52                          3053  * Clears all of the data registers
00002F52                          3054  CLRDN
00002F52  4280                    3055          CLR.L   D0
00002F54  4281                    3056          CLR.L   D1
00002F56  4282                    3057          CLR.L   D2
00002F58  4283                    3058          CLR.L   D3
00002F5A  4284                    3059          CLR.L   D4
00002F5C  4285                    3060          CLR.L   D5
00002F5E  4286                    3061          CLR.L   D6
00002F60  4287                    3062          CLR.L   D7
00002F62  4E75                    3063          RTS
00002F64                          3064  
00002F64                          3065  ********************************************************************
00002F64                          3066  * Invalid op-code handling
00002F64                          3067  * Displays DATA YYYY
00002F64                          3068  *  YYYY represents the op-code that failed
00002F64                          3069  INVOPCODE
00002F64  DE1E                    3070          ADD.B   (A6)+,D7
00002F66                          3071  
00002F66                          3072  INVOP
00002F66  43F9 000032BA           3073          LEA     MDATA,A1
00002F6C  103C 000E               3074          MOVE.B  #14,D0
00002F70  4E4F                    3075          TRAP    #15
00002F72  43F9 0000322B           3076          LEA     TAB,A1
00002F78  103C 000E               3077          MOVE.B  #14,D0
00002F7C  4E4F                    3078          TRAP    #15
00002F7E  43F9 0000324B           3079          LEA     MHEX,A1
00002F84  103C 000E               3080          MOVE.B  #14,D0
00002F88  4E4F                    3081          TRAP    #15
00002F8A                          3082          
00002F8A  1C3C 0002               3083          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002F8E                          3084          
00002F8E  3407                    3085          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002F90  E04A                    3086          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002F92  6000 0004               3087          BRA     INVOP2              Skips the second part to do later
00002F96                          3088  
00002F96                          3089  INVOP1
00002F96  1407                    3090          MOVE.B  D7,D2
00002F98                          3091  INVOP2
00002F98  1602                    3092          MOVE.B  D2,D3               Copies data at D2 to D3
00002F9A                          3093          *   this gets digit in 10's place
00002F9A  E80B                    3094          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F9C                          3095          *   this gets digit in 1's place
00002F9C  E90A                    3096          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F9E  E80A                    3097          LSR.B   #4,D2               Shifts back right into 1's place
00002FA0                          3098  
00002FA0                          3099          
00002FA0                          3100          *   D3 holds digit in 10's place
00002FA0                          3101          *   D2 holds digit in 1's place
00002FA0                          3102          
00002FA0  1203                    3103          MOVE.B  D3,D1               Displays digit in 10's place first
00002FA2                          3104  
00002FA2                          3105          *   converts digits 10+ into letters
00002FA2                          3106  
00002FA2  47F9 00002FB6           3107          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002FA8  B23C 0009               3108          CMP.B   #9,D1               Compares digit to 9
00002FAC  6E00 0080               3109          BGT     CONV                Print out letter representation if greater than 9
00002FB0                          3110  
00002FB0  103C 0003               3111          MOVE.B  #3,D0               Displays digit if it is less than A
00002FB4  4E4F                    3112          TRAP    #15
00002FB6                          3113          
00002FB6                          3114  INVOP3   
00002FB6  1202                    3115          MOVE.B  D2,D1               Displays digit in 1's place second
00002FB8                          3116  
00002FB8                          3117          *   converts digits 10+ into letters
00002FB8  47F9 00002FCC           3118          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002FBE  B23C 0009               3119          CMP.B   #9,D1               Compares digit to 9
00002FC2  6E00 006A               3120          BGT     CONV                Print out letter representation if greater than 9
00002FC6                          3121          
00002FC6  103C 0003               3122          MOVE.B  #3,D0               Displays digit if it is less than A
00002FCA  4E4F                    3123          TRAP    #15
00002FCC                          3124          
00002FCC                          3125  INVOP4
00002FCC                          3126  * Display counter -- creates new line every 8 bytes
00002FCC                          3127          * D6 is used as counter
00002FCC                          3128          
00002FCC  5306                    3129          SUB.B   #1,D6
00002FCE  BC3C 0000               3130          CMP.B   #0,D6
00002FD2  6700 0004               3131          BEQ     ENDNEWLINE
00002FD6  60BE                    3132          BRA     INVOP1              Loops back to display next address
00002FD8                          3133  
00002FD8                          3134  
00002FD8                          3135  ******************************************************************************************************
00002FD8                          3136  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002FD8                          3137  ENDNEWLINE
00002FD8  43F9 00003228           3138          LEA     NEWLINE,A1          Creates a new line in output window
00002FDE  103C 000E               3139          MOVE.B  #14,D0
00002FE2  4E4F                    3140          TRAP    #15
00002FE4                          3141  
00002FE4  5339 00003491           3142          SUB.B   #1,dispcount
00002FEA  0C39 0000 00003491      3143          CMP.B   #0,dispcount               Checks if display counter is zero
00002FF2  6600 E0E6               3144          BNE     NEWADDR
00002FF6                          3145  
00002FF6                          3146  * Asks user to press enter to continue
00002FF6                          3147  * Resets counter
00002FF6  43F9 00003228           3148          LEA     NEWLINE,A1          Creates a new line in output window
00002FFC  103C 000E               3149          MOVE.B  #14,D0
00003000  4E4F                    3150          TRAP    #15
00003002                          3151          
00003002  43F9 00003475           3152          LEA     MCONT,A1            Asks user to press enter to continue
00003008  103C 000E               3153          MOVE.B  #14,D0
0000300C  4E4F                    3154          TRAP    #15
0000300E                          3155  
0000300E  103C 0004               3156          MOVE.B  #4,D0               Takes in user input
00003012  4E4F                    3157          TRAP    #15
00003014  4281                    3158          CLR.L   D1                  Clears D1 incase user decides to input something
00003016                          3159  
00003016  43F9 00003228           3160          LEA     NEWLINE,A1          Creates a new line in output window
0000301C  103C 000E               3161          MOVE.B  #14,D0
00003020  4E4F                    3162          TRAP    #15
00003022                          3163  
00003022  13FC 001E 00003491      3164          MOVE.B  #dispnum,dispcount  Resets display counter
0000302A  6000 E0AE               3165          BRA     NEWADDR             Loops back to beginning
0000302E                          3166  
0000302E                          3167  
0000302E                          3168  ******************************************************************************************************
0000302E                          3169  * Converts decimal number into hex and displays it
0000302E                          3170  *   converts number 10-15 to A-F
0000302E                          3171  *   INPUT: decimal number in D1
0000302E                          3172  *   OUTPUT: HEX number to output
0000302E  B23C 000A               3173  CONV    CMP.B   #10,D1              Displays 10 as A
00003032  6700 002A               3174          BEQ     HEXA
00003036  B23C 000B               3175          CMP.B   #11,D1              Displays 11 as B
0000303A  6700 002C               3176          BEQ     HEXB
0000303E  B23C 000C               3177          CMP.B   #12,D1              Displays 12 as C
00003042  6700 002E               3178          BEQ     HEXC
00003046  B23C 000D               3179          CMP.B   #13,D1              Displays 13 as D
0000304A  6700 0030               3180          BEQ     HEXD
0000304E  B23C 000E               3181          CMP.B   #14,D1              Displays 14 as E
00003052  6700 0032               3182          BEQ     HEXE
00003056  B23C 000F               3183          CMP.B   #15,D1              Displays 15 as F
0000305A  6700 0034               3184          BEQ     HEXF
0000305E                          3185  
0000305E  43F9 0000323D           3186  HEXA    LEA     DISPA,A1            Loads A character
00003064  6000 0034               3187          BRA     PRINT
00003068                          3188    
00003068  43F9 0000323F           3189  HEXB    LEA     DISPB,A1            Loads B character
0000306E  6000 002A               3190          BRA     PRINT
00003072                          3191  
00003072  43F9 00003241           3192  HEXC    LEA     DISPC,A1            Loads C character
00003078  6000 0020               3193          BRA     PRINT
0000307C                          3194  
0000307C  43F9 00003243           3195  HEXD    LEA     DISPD,A1            Loads D character
00003082  6000 0016               3196          BRA     PRINT
00003086                          3197  
00003086  43F9 00003245           3198  HEXE    LEA     DISPE,A1            Loads E character
0000308C  6000 000C               3199          BRA     PRINT
00003090                          3200  
00003090  43F9 00003247           3201  HEXF    LEA     DISPF,A1            Loads F character
00003096  6000 0002               3202          BRA     PRINT
0000309A                          3203  
0000309A  103C 000E               3204  PRINT   MOVE.B  #14,D0              Sets trap task to #14
0000309E  4E4F                    3205          TRAP    #15                 Prints out message in A1
000030A0  4ED3                    3206          JMP     (A3)
000030A2                          3207  
000030A2                          3208  ******************************************************************************
000030A2                          3209  * Converts decimal input to hex
000030A2                          3210  * INPUT: Decimal inside D2
000030A2                          3211  * OUTPUT: HEX into D3
000030A2                          3212  *   Converts number in decimal to hex        
000030A2                          3213  DEC2HEX
000030A2  B43C 0030               3214          CMP.B   #$30,D2             0
000030A6  6700 00B0               3215          BEQ     D2HZERO
000030AA  B43C 0031               3216          CMP.B   #$31,D2             1
000030AE  6700 00AE               3217          BEQ     D2HONE
000030B2  B43C 0032               3218          CMP.B   #$32,D2             2
000030B6  6700 00AC               3219          BEQ     D2HTWO
000030BA  B43C 0033               3220          CMP.B   #$33,D2             3
000030BE  6700 00AA               3221          BEQ     D2HTHREE
000030C2  B43C 0034               3222          CMP.B   #$34,D2             4
000030C6  6700 00A8               3223          BEQ     D2HFOUR
000030CA  B43C 0035               3224          CMP.B   #$35,D2             5
000030CE  6700 00A6               3225          BEQ     D2HFIVE
000030D2  B43C 0036               3226          CMP.B   #$36,D2             6
000030D6  6700 00A4               3227          BEQ     D2HSIX
000030DA  B43C 0037               3228          CMP.B   #$37,D2             7
000030DE  6700 00A2               3229          BEQ     D2HSEVEN
000030E2  B43C 0038               3230          CMP.B   #$38,D2             8
000030E6  6700 00A0               3231          BEQ     D2HEIGHT
000030EA  B43C 0039               3232          CMP.B   #$39,D2             9
000030EE  6700 009E               3233          BEQ     D2HNINE
000030F2  B43C 0041               3234          CMP.B   #$41,D2             A
000030F6  6700 009C               3235          BEQ     D2HHEXA
000030FA  B43C 0042               3236          CMP.B   #$42,D2             B
000030FE  6700 009A               3237          BEQ     D2HHEXB
00003102  B43C 0043               3238          CMP.B   #$43,D2             C
00003106  6700 0098               3239          BEQ     D2HHEXC
0000310A  B43C 0044               3240          CMP.B   #$44,D2             D
0000310E  6700 0096               3241          BEQ     D2HHEXD
00003112  B43C 0045               3242          CMP.B   #$45,D2             E
00003116  6700 0094               3243          BEQ     D2HHEXE
0000311A  B43C 0046               3244          CMP.B   #$46,D2             F
0000311E  6700 0092               3245          BEQ     D2HHEXF
00003122  B43C 0061               3246          CMP.B   #$61,D2             A
00003126  6700 006C               3247          BEQ     D2HHEXA
0000312A  B43C 0062               3248          CMP.B   #$62,D2             B
0000312E  6700 006A               3249          BEQ     D2HHEXB
00003132  B43C 0063               3250          CMP.B   #$63,D2             C
00003136  6700 0068               3251          BEQ     D2HHEXC
0000313A  B43C 0064               3252          CMP.B   #$64,D2             D
0000313E  6700 0066               3253          BEQ     D2HHEXD
00003142  B43C 0065               3254          CMP.B   #$65,D2             E
00003146  6700 0064               3255          BEQ     D2HHEXE
0000314A  B43C 0066               3256          CMP.B   #$66,D2             F
0000314E  6700 0062               3257          BEQ     D2HHEXF
00003152                          3258  
00003152                          3259          * User entered a non-hex character
00003152                          3260          * Moves F to D1 to indicate error before returning
00003152  123C 000F               3261          MOVE.B  #$F,D1
00003156  4E75                    3262          RTS
00003158                          3263  
00003158                          3264  *   Moves the appropiate hex number to D3
00003158  163C 0000               3265  D2HZERO MOVE.B  #$0,D3
0000315C  4E75                    3266          RTS
0000315E                          3267  
0000315E                          3268  D2HONE
0000315E  163C 0001               3269          MOVE.B  #$1,D3
00003162  4E75                    3270          RTS
00003164                          3271  
00003164                          3272  D2HTWO
00003164  163C 0002               3273          MOVE.B  #$2,D3
00003168  4E75                    3274          RTS
0000316A                          3275  
0000316A                          3276  D2HTHREE
0000316A  163C 0003               3277          MOVE.B  #$3,D3
0000316E  4E75                    3278          RTS
00003170                          3279  
00003170                          3280  D2HFOUR
00003170  163C 0004               3281          MOVE.B  #$4,D3
00003174  4E75                    3282          RTS
00003176                          3283  
00003176                          3284  D2HFIVE
00003176  163C 0005               3285          MOVE.B  #$5,D3
0000317A  4E75                    3286          RTS
0000317C                          3287  
0000317C                          3288  D2HSIX
0000317C  163C 0006               3289          MOVE.B  #$6,D3
00003180  4E75                    3290          RTS
00003182                          3291  
00003182                          3292  D2HSEVEN
00003182  163C 0007               3293          MOVE.B  #$7,D3
00003186  4E75                    3294          RTS
00003188                          3295  
00003188                          3296  D2HEIGHT
00003188  163C 0008               3297          MOVE.B  #$8,D3
0000318C  4E75                    3298          RTS
0000318E                          3299  
0000318E                          3300  D2HNINE
0000318E  163C 0009               3301          MOVE.B  #$9,D3
00003192  4E75                    3302          RTS
00003194                          3303  
00003194                          3304  D2HHEXA
00003194  163C 000A               3305          MOVE.B  #$A,D3
00003198  4E75                    3306          RTS
0000319A                          3307  
0000319A                          3308  D2HHEXB
0000319A  163C 000B               3309          MOVE.B  #$B,D3
0000319E  4E75                    3310          RTS
000031A0                          3311  
000031A0                          3312  D2HHEXC
000031A0  163C 000C               3313          MOVE.B  #$C,D3
000031A4  4E75                    3314          RTS
000031A6                          3315  
000031A6                          3316  D2HHEXD
000031A6  163C 000D               3317          MOVE.B  #$D,D3
000031AA  4E75                    3318          RTS
000031AC                          3319  
000031AC                          3320  D2HHEXE
000031AC  163C 000E               3321          MOVE.B  #$E,D3
000031B0  4E75                    3322          RTS
000031B2                          3323  
000031B2                          3324  D2HHEXF
000031B2  163C 000F               3325          MOVE.B  #$F,D3
000031B6  4E75                    3326          RTS
000031B8                          3327  
000031B8                          3328  *************************************************************************************************
000031B8                          3329  ASK4REPEAT
000031B8  43F9 00003228           3330          LEA     NEWLINE,A1          Creates a new line in output window
000031BE  103C 000E               3331          MOVE.B  #14,D0
000031C2  4E4F                    3332          TRAP    #15
000031C4                          3333  ASK4REPEAT2
000031C4  43F9 0000337C           3334          LEA     MREPEAT,A1          Asks user if they want to start over or exit
000031CA  103C 000E               3335          MOVE.B  #14,D0
000031CE  4E4F                    3336          TRAP    #15
000031D0                          3337  
000031D0  43F9 0000349E           3338          LEA     bit4,A1             User has to enter Y to start over
000031D6  103C 0002               3339          MOVE.B  #2,D0               N to exit
000031DA  4E4F                    3340          TRAP    #15
000031DC                          3341  
000031DC  1239 0000349E           3342          MOVE.B  bit4,D1             User input was stored in bit4
000031E2  B23C 0059               3343          CMP.B   #$59,D1             Char Y
000031E6  6700 DE18               3344          BEQ     IOSTART
000031EA  B23C 0079               3345          CMP.B   #$79,D1             Char y
000031EE  6700 DE10               3346          BEQ     IOSTART
000031F2  B23C 004E               3347          CMP.B   #$4E,D1             Char N
000031F6  6700 001C               3348          BEQ     DONE
000031FA  B23C 006E               3349          CMP.B   #$6E,D1             Char n
000031FE  6700 0014               3350          BEQ     DONE
00003202  60C0                    3351          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00003204                          3352  
00003204                          3353  
00003204                          3354  **************************************************************************************************
00003204  43F9 00003443           3355  ERROR   LEA     MERROR,A1
0000320A  103C 000E               3356          MOVE.B  #14,D0
0000320E  4E4F                    3357          TRAP    #15
00003210  6000 000E               3358          BRA     EXIT
00003214                          3359  
00003214  43F9 0000345A           3360  DONE    LEA     MDONE,A1
0000321A  103C 000E               3361          MOVE.B  #14,D0
0000321E  4E4F                    3362          TRAP    #15
00003220                          3363  
00003220  103C 0009               3364  EXIT    MOVE.B  #9,D0
00003224  4E4F                    3365          TRAP    #15
00003226                          3366  
00003226                          3367  ************************************ Output stuff **************************************
00003226                          3368  * Stuff for output
00003226                          3369  
00003226  =0000000D               3370  CR      EQU     $0D
00003226  =0000000A               3371  LF      EQU     $0A
00003226                          3372  
00003226= 20 00                   3373  SPACE       DC.B    ' ',0
00003228= 0D 0A 00                3374  NEWLINE     DC.B    '',CR,LF,0
0000322B= 20 20 20 00             3375  TAB         DC.B    '   ',0
0000322F= 2C 00                   3376  COMMA       DC.B    ',',0
00003231= 28 00                   3377  OPENBRA     DC.B    '(',0
00003233= 29 00                   3378  CLOSEBRA    DC.B    ')',0
00003235= 2B 00                   3379  POS         DC.B    '+',0
00003237= 2D 00                   3380  NEG         DC.B    '-',0
00003239= 23 00                   3381  HASH        DC.B    '#',0
0000323B= 2F 00                   3382  SLASH       DC.B    '/',0
0000323D                          3383  
0000323D                          3384  
0000323D= 41 00                   3385  DISPA       DC.B    'A',0
0000323F= 42 00                   3386  DISPB       DC.B    'B',0
00003241= 43 00                   3387  DISPC       DC.B    'C',0
00003243= 44 00                   3388  DISPD       DC.B    'D',0
00003245= 45 00                   3389  DISPE       DC.B    'E',0
00003247= 46 00                   3390  DISPF       DC.B    'F',0
00003249                          3391  
00003249= 2E 00                   3392  MDOT        DC.B    '.',0
0000324B= 24 00                   3393  MHEX        DC.B    '$',0
0000324D= 42 20 00                3394  MBYTE       DC.B    'B ',0
00003250= 57 20 00                3395  MWORD       DC.B    'W ',0
00003253= 4C 20 00                3396  MLONG       DC.B    'L ',0
00003256= 44 00                   3397  MDN         DC.B    'D',0
00003258= 41 00                   3398  MAN         DC.B    'A',0
0000325A                          3399  
0000325A= 4A 53 52 00             3400  MJSR        DC.B    'JSR',0
0000325E= 42 54 53 54 00          3401  MBTST       DC.B    'BTST',0
00003263= 52 4F 4C 00             3402  MROL        DC.B    'ROL',0
00003267= 52 4F 52 00             3403  MROR        DC.B    'ROR',0
0000326B= 4C 53 4C 00             3404  MLSL        DC.B    'LSL',0
0000326F= 4C 53 52 00             3405  MLSR        DC.B    'LSR',0
00003273= 4E 45 47 2E 00          3406  MMNEGW      DC.B    'NEG.',0
00003278= 44 49 56 53 2E 57 00    3407  MMDIVSW     DC.B    'DIVS.W',0
0000327F= 4D 55 4C 53 2E 57 00    3408  MMULSW      DC.B    'MULS.W',0
00003286= 4D 4F 56 45 2E 42 00    3409  MMOVEB      DC.B    'MOVE.B',0
0000328D= 4D 4F 56 45 2E 57 00    3410  MMOVEW      DC.B    'MOVE.W',0
00003294= 4D 4F 56 45 2E 4C 00    3411  MMOVEL      DC.B    'MOVE.L',0
0000329B= 4D 4F 56 45 41 2E ...   3412  MMOVEAW     DC.B    'MOVEA.W',0
000032A3= 4D 4F 56 45 41 2E ...   3413  MMOVEAL     DC.B    'MOVEA.L',0
000032AB= 4D 4F 56 45 4D 2E 00    3414  MMOVEM      DC.B    'MOVEM.',0
000032B2                          3415  
000032B2= 41 53 4C 00             3416  MASL        DC.B    'ASL',0
000032B6= 41 53 52 00             3417  MASR        DC.B    'ASR',0
000032BA= 44 41 54 41 00          3418  MDATA       DC.B    'DATA',0
000032BF= 53 55 42 2E 00          3419  MSUB        DC.B    'SUB.',0
000032C4= 53 55 42 41 2E 00       3420  MSUBA       DC.B    'SUBA.',0
000032CA= 41 4E 44 2E 00          3421  MAND        DC.B    'AND.',0
000032CF= 41 44 44 2E 00          3422  MADD        DC.B    'ADD.',0
000032D4= 53 55 42 49 2E 00       3423  MSUBI       DC.B    'SUBI.',0
000032DA= 4F 52 49 2E 00          3424  MORI        DC.B    'ORI.',0
000032DF= 4E 4F 54 2E 00          3425  MNOT        DC.B    'NOT.',0
000032E4= 4D 55 4C 53 2E 00       3426  MMUL        DC.B    'MULS.',0
000032EA= 4E 45 47 00             3427  MNEG        DC.B    'NEG',0
000032EE= 43 4D 50 2E 00          3428  MCMP        DC.B    'CMP.',0
000032F3= 43 4D 50 49 2E 00       3429  MCMPI       DC.B    'CMPI.',0
000032F9= 43 4D 50 41 2E 00       3430  MCMPA       DC.B    'CMPA.',0
000032FF= 45 4F 52 2E 00          3431  MEOR        DC.B    'EOR.',0
00003304= 45 4F 52 49 2E 00       3432  MEORI       DC.B    'EORI.',0
0000330A= 41 44 44 41 2E 00       3433  MADDA       DC.B    'ADDA.',0
00003310= 41 44 44 51 2E 00       3434  MADDQ       DC.B    'ADDQ.',0
00003316                          3435  
00003316= 42 45 51 00             3436  MBEQ        DC.B    'BEQ',0
0000331A= 42 4E 45 00             3437  MBNE        DC.B    'BNE',0
0000331E= 42 4C 54 00             3438  MBLT        DC.B    'BLT',0
00003322= 42 48 49 00             3439  MBHI        DC.B    'BHI',0
00003326= 42 52 41 00             3440  MBRA        DC.B    'BRA',0
0000332A= 4E 4F 50 00             3441  MNOP        DC.B    'NOP',0
0000332E= 52 54 53 00             3442  MRTS        DC.B    'RTS',0
00003332= 4C 45 41 00             3443  MLEA        DC.B    'LEA',0
00003336                          3444  
00003336= 4C 65 6D 6D 65 20 ...   3445  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00003359= 47 69 6D 6D 65 20 ...   3446  MADDR2      DC.B    'Gimme that end address too homie: ',0
0000337C= 54 72 79 6E 61 20 ...   3447  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
0000339C= 45 6E 64 20 61 64 ...   3448  MIOERR1     DC.B    'End address must be after the start address, try again.',0
000033D4= 41 64 64 72 65 73 ...   3449  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003407= 52 65 2D 65 6E 74 ...   3450  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00003423= 41 64 64 72 65 73 ...   3451  MIOERR4     DC.B    'Address must be an even number.',0
00003443= 45 52 52 4F 52 3A ...   3452  MERROR      DC.B    'ERROR: Something broke',0
0000345A= 43 4F 4D 50 4C 45 ...   3453  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00003475= 2A 2A 50 52 45 53 ...   3454  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00003491                          3455  
00003491                          3456  
00003491                          3457  ********************************** MEMORY STORAGE **********************************************
00003491                          3458  * Stores memory locations at the end of the program
00003491                          3459  * How DS works: Give it a variable name.
00003491                          3460  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00003491                          3461  *   Last is the number of storage you want. 
00003491                          3462  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00003491                          3463  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00003491                          3464  *            
00003491                          3465  
00003491                          3466  dispcount   DS.B    1           Used to count display lines
00003492                          3467  
00003492                          3468  startaddr   DS.L    1
00003496                          3469  endaddr     DS.L    1
0000349A                          3470  
0000349A                          3471  bit0        DS.B    1           SEE NOTE UP TOP
0000349B                          3472  bit1        DS.B    1           SEE NOTE UP TOP
0000349C                          3473  bit2        DS.B    1           SEE NOTE UP TOP
0000349D                          3474  bit3        DS.B    1           SEE NOTE UP TOP
0000349E                          3475  bit4        DS.B    1           SEE NOTE UP TOP
0000349F                          3476  
0000349F                          3477  
0000349F                          3478      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_EA              2678
ABS_EA2             2682
ADDIMD              153E
ADDIMD0             156E
ADDIMD1             157C
ADDIMD4             158A
ADDIMDDES           15F8
ADDIMDDES0          161C
ADDIMDDES1          162A
ADDIMDDES4          1638
ADDQ                2490
ADDQB               24D6
ADDQCONT            2506
ADDQCONT2           252C
ADDQEA              2544
ADDQEA2             2554
ADDQL               24F6
ADDQW               24E6
ADDR1               7000
ADDR2               726C
AN_EAM              25B8
ASK4REPEAT          31B8
ASK4REPEAT2         31C4
ASLRMEMH            1D58
BCC                 200A
BCCBEQ              2086
BCCBHI              20A4
BCCBLT              209A
BCCBNE              2090
BCCBRA              207C
BCCDISP             2050
BCCLONG             2038
BCCNEXT             2040
BCCPRINT            20AE
BCCWORD             2030
BIT0                349A
BIT1                349B
BIT2                349C
BIT3                349D
BIT4                349E
BTST                1266
BTSTMEM             12DE
CLOSEBRA            3233
CLRDN               2F52
CODE                11AE
COMMA               322F
CONTPRINTLEA        2340
CONV                302E
CR                  D
D2HEIGHT            3188
D2HFIVE             3176
D2HFOUR             3170
D2HHEXA             3194
D2HHEXB             319A
D2HHEXC             31A0
D2HHEXD             31A6
D2HHEXE             31AC
D2HHEXF             31B2
D2HNINE             318E
D2HONE              315E
D2HSEVEN            3182
D2HSIX              317C
D2HTHREE            316A
D2HTWO              3164
D2HZERO             3158
DEC2HEX             30A2
DEC_EAM             263C
DISPA               323D
DISPADDR            10B0
DISPADDR1           10F8
DISPADDR2           10FA
DISPADDR3           112E
DISPADDR4           1144
DISPADDR5           115A
DISPADDR6           1170
DISPADDREND         117A
DISPADDRSTART       10EC
DISPB               323F
DISPC               3241
DISPCOUNT           3491
DISPD               3243
DISPE               3245
DISPEA              2EEC
DISPEA3             2F10
DISPEA4             2F38
DISPEA5             2F4E
DISPEALONG          2F08
DISPEAWORD          2F00
DISPF               3247
DISPNUM             1E
DIVSW               1AF0
DN_EAM              25A0
DONE                3214
ENDADDR             3496
ENDNEWLINE          2FD8
ENDNLINC            1A62
ERROR               3204
EXIT                3220
HANDLEDES           15A0
HASH                3239
HEXA                305E
HEXB                3068
HEXC                3072
HEXD                307C
HEXE                3086
HEXF                3090
IMD                 20BE
IMD2                20F0
IMD3                20F8
IMD4                2104
IMDBYTE             219E
IMDEA               21C6
IMDEA2              21EE
IMDEA3              2204
IMDLONG             21BC
IMDPRINT            213E
IMDPRINTCMPI        218C
IMDPRINTEND         2196
IMDPRINTEORI        2182
IMDPRINTORI         216E
IMDPRINTSUBI        2178
IMDWORD             21AE
INAN_EAM            25D0
INC_EAM             2600
INVOP               2F66
INVOP1              2F96
INVOP2              2F98
INVOP3              2FB6
INVOP4              2FCC
INVOPCODE           2F64
IOERROR1            1072
IOERROR2            1080
IOERROR3            1090
IOERROR4            10A0
IOGETADDR           1028
IOLOOP              104E
IOSTART             1000
IOSTARTLOOP         1048
JSR                 121A
LEAIMD0             2324
LEAIMD1             2332
LEAMODE0            2300
LEAMODE1            22F8
LEA_ABS_EA          230C
LEA_INDIR_AN        2364
LF                  A
LSLR                1CD4
LSLRDESD            1952
LSLRMEM             1EBC
LSLRMEMH            1DDC
LSLRSRCD            192A
MADD                32CF
MADDA               330A
MADDQ               3310
MADDR1              3336
MADDR2              3359
MAN                 3258
MAND                32CA
MASL                32B2
MASR                32B6
MBEQ                3316
MBHI                3322
MBLT                331E
MBNE                331A
MBRA                3326
MBTST               325E
MBYTE               324D
MCMP                32EE
MCMPA               32F9
MCMPI               32F3
MCONT               3475
MDATA               32BA
MDN                 3256
MDONE               345A
MDOT                3249
MEOR                32FF
MEORI               3304
MERROR              3443
MHEX                324B
MIOERR1             339C
MIOERR2             33D4
MIOERR3             3407
MIOERR4             3423
MISC                2208
MISCBIT2            2250
MISCBIT3            225C
MISCBYTE            240E
MISCCHECKM          2290
MISCCHKLEA          2270
MISCEA              243C
MISCEA2             2458
MISCLEA             22C0
MISCLEA2            22EC
MISCLONG            2430
MISCMMPOSTINC       2786
MISCMMPOSTINC2      2790
MISCMMPOSTINC3      27C6
MISCMMPOSTINCPRINT  27CA
MISCMMPOSTINCPRINT2  27DE
MISCMMPOSTINCPRINT3  27EA
MISCMMPREDEC        2718
MISCMMPREDEC2       2742
MISCMMPREDEC3       2758
MISCMMPREDECCHECK   270C
MISCMMPREDECPRINT   275C
MISCMMPREDECPRINT2  2770
MISCMMPREDECPRINT3  277C
MISCMMPRINTNUM      285C
MISCMMPRINTSIZE     26F4
MISCMMREGMEM        27F4
MISCMMREGMEM2       281A
MISCMMREGMEM3       2830
MISCMMREGMEMPRINT   2834
MISCMMREGMEMPRINT2  2844
MISCMMREGMEMPRINT3  2850
MISCMMSIZEL         26EE
MISCMMSLASH         286A
MISCMOVEM           2686
MISCMOVEM2          2696
MISCMOVEM3          26A6
MISCMOVEM4          26B8
MISCNOP             22B0
MISCNOT             23C4
MISCNOT2            23CC
MISCNOT3            23D4
MISCNOT4            23E0
MISCPRINT           245C
MISCPRINTEND        2488
MISCPRINTNEG        247E
MISCPRINTNOT        2474
MISCRTS             23B4
MISCWORD            2420
MJSR                325A
MLEA                3332
MLONG               3253
MLSL                326B
MLSR                326F
MMDIVSW             3278
MMNEGW              3273
MMOVEAL             32A3
MMOVEAW             329B
MMOVEB              3286
MMOVEL              3294
MMOVEM              32AB
MMOVEW              328D
MMUL                32E4
MMULSW              327F
MNEG                32EA
MNOP                332A
MNOT                32DF
MORI                32DA
MOVB                14B8
MOVBDN1             189E
MOVBDN2             1A3E
MOVEAL              1464
MOVEAN1             164E
MOVEAN2             196E
MOVEAW              1384
MOVEIAN1            16C2
MOVEIAND1           17FE
MOVEIANI1           1756
MOVIAN2             198A
MOVIAND2            19FE
MOVIANI2            19BE
MOVL                13D8
MOVW                12F8
MREPEAT             337C
MROL                3263
MROR                3267
MRTS                332E
MSUB                32BF
MSUBA               32C4
MSUBI               32D4
MULSW               1A66
MWORD               3250
NEG                 3237
NEGW                1B7E
NEWADDR             10DA
NEWLINE             3228
OPENBRA             3231
POS                 3235
PRINT               309A
PRINTASL            1D74
PRINTASR            1DA8
PRINTB              1F06
PRINTBYTE           1BD8
PRINTL              1F6E
PRINTLONG           1C80
PRINTLSL            1E88
PRINTLSLRCOUNT      1FA2
PRINTLSR            1FD6
PRINTROL            1E20
PRINTROR            1E54
PRINTW              1F3A
PRINTWORD           1C2C
RORL                1E08
SLASH               323B
SPACE               3226
START               1000
STARTADDR           3492
SUB                 2878
SUB1                28AA
SUB2                288C
SUB3                2894
SUB4                289E
SUBA                2AC6
SUBACHECK           28E6
SUBACONT            2B1A
SUBAN               2CB0
SUBAN2              2CCC
SUBANID             2CE8
SUBANIDNEG          2D5C
SUBANIDPOS          2D1C
SUBDN               2C78
SUBDN2              2C94
SUBEA               2D9C
SUBEAHEX            2DFA
SUBEAHEX1           2E9A
SUBEAHEX2           2EA2
SUBEAHEX3           2EAA
SUBEAHEX4           2ED2
SUBEAHEX5           2EE8
SUBEAID             2E8A
SUBEAID2            2E06
SUBERRORTEST1       2C36
SUBERRORTEST11      2C76
SUBJMPA2            2BA6
SUBPRINT            2BA8
SUBPRINTADD         2BF8
SUBPRINTADDA        2B0A
SUBPRINTAND         2BE8
SUBPRINTB           2C08
SUBPRINTCMP         2C24
SUBPRINTCMPA        2AFA
SUBPRINTEND         2C34
SUBPRINTEOR         2C14
SUBPRINTSUB         2BD8
SUBPRINTSUBA        2AEA
SUBSIZE1            2946
SUBSIZE11           296C
SUBSIZE12           2982
SUBSIZE2            2986
SUBSIZE21           29AC
SUBSIZE22           29C2
SUBSIZE3            29C6
SUBSIZE31           29EC
SUBSIZE32           2A02
SUBSIZE4            2A06
SUBSIZE41           2A2C
SUBSIZE42           2A42
SUBSIZE5            2A46
SUBSIZE51           2A6C
SUBSIZE52           2A82
SUBSIZE6            2A86
SUBSIZE61           2AAC
SUBSIZE62           2AC2
SUBSIZE7            2B32
SUBSIZE71           2B54
SUBSIZE72           2B6A
SUBSIZE8            2B6E
SUBSIZE81           2B8E
SUBSIZE82           2BA2
TAB                 322B
