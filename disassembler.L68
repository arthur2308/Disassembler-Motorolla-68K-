00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/1/2015 12:20:54 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * 
00000000                            33  * Display buffer thingy
00000000                            34  *
00000000                            35  * 
00000000                            36  * MOVE      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       1806
00000000                            37  * MOVEA     MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       3846
00000000                            38  * MULS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE        MULS LONG?     CFC6
00000000                            39  * DIVS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       85C3
00000000                            40  * NEG       MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       4443
00000000                            41  * LSL       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E76A
00000000                            42  * LSR       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E66A
00000000                            43  ****************************************************************************
00000000                            44  
00000000                            45  
00000000                            46  * sets start and end address
00000000                            47  * temp hard code
00000000                            48  * make UI later for input
00000000  =00007000                 49  addr1       EQU     $7000
00000000                            50  *addr2   EQU     $703C
00000000  =0000726C                 51  addr2       EQU     $726C
00000000  =0000001E                 52  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            53  
00000000                            54  
00001000                            55      ORG    $1000
00001000                            56  START:                  ; first instruction of program
00001000                            57  
00001000                            58          
00001000                            59  
00001000                            60  
00001000                            61          *   this stores some test EA into memory
00001000                            62          *LEA     addr1,A1
00001000                            63          *MOVE.W  #$0440,(A1)+        *917C
00001000                            64          *MOVE.W  #$917C,(A1)+       
00001000                            65          *MOVE.L  #$5555A7FF,(A1)+
00001000                            66          *MOVE.W  #$9078,(A1)+
00001000                            67          *MOVE.W  #$5555,(A1)+
00001000                            68          
00001000                            69  
00001000                            70          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            71          
00001000                            72          *MOVE.L  #$6700F0D8,$7000
00001000  21FC 4E71F0D8 7000        73          MOVE.L  #$4E71F0D8,$7000
00001008                            74  
00001008                            75          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001008                            76          
00001008                            77          *MOVE.W  #$E66A,$7000
00001008                            78  
00001008                            79          
00001008                            80  ******************************************** displays address location***********************************************
00001008                            81  * This displays the address location of the op-code being worked on
00001008                            82  * A6 is used as current address
00001008                            83  
00001008  2C7C 00007000             84          MOVEA.L #addr1,A6           Moves starting addr into A6 register
0000100E  13FC 001E 00002712        85          MOVE.B  #dispnum,dispcount  Sets display line counter
00001016                            86  
00001016                            87  NEWADDR
00001016  2E0E                      88          MOVE.L  A6,D7               Loads the current address into D7
00001018  BEBC 0000726C             89          CMP.L   #addr2,D7           Compares current address to end address
0000101E  6E00 15D8                 90          BGT     DONE                Branches to done if current address > end address
00001022  45F9 000010B6             91          LEA     DISPADDREND,A2
00001028                            92  
00001028                            93  ************************************************
00001028                            94  * Displays address as HEX
00001028                            95  * INPUT: address stored into D7
00001028                            96  * OUTPUT: prints hex address to output window
00001028                            97  DISPADDRSTART
00001028  1C3C 0002                 98          MOVE.B  #2,D6               D6 is a counter, used for looping
0000102C  2407                      99          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
0000102E  4842                     100          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
00001030  6000 0004                101          BRA     DISPADDR2           Skips the second part to do later
00001034                           102  
00001034                           103  DISPADDR1
00001034  3407                     104          MOVE.W  D7,D2
00001036                           105  DISPADDR2
00001036  3202                     106          MOVE.W  D2,D1               D1 will be the first byte of the word
00001038  3602                     107          MOVE.W  D2,D3               D3 will be the second byte of the word
0000103A  3802                     108          MOVE.W  D2,D4               D4 will be the third byte of the word
0000103C  3A02                     109          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000103E                           110  
0000103E  E049                     111          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
00001040  E849                     112          LSR.W   #4,D1
00001042  E94B                     113          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001044  E04B                     114          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001046  E84B                     115          LSR.W   #4,D3
00001048  E14C                     116          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
0000104A  E04C                     117          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
0000104C  E84C                     118          LSR.W   #4,D4
0000104E  E14D                     119          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
00001050  E94D                     120          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001052  E04D                     121          LSR.W   #8,D5
00001054  E84D                     122          LSR.W   #4,D5
00001056                           123          
00001056                           124          
00001056  47F9 0000106A            125          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
0000105C  B23C 0009                126          CMP.B   #9,D1               Compares digit to 9
00001060  6E00 1512                127          BGT     CONV                Print out letter representation if greater than 9
00001064                           128  
00001064  103C 0003                129          MOVE.B  #3,D0               Displays digit if it is less than A
00001068  4E4F                     130          TRAP    #15
0000106A                           131          
0000106A                           132  DISPADDR3   
0000106A  1203                     133          MOVE.B  D3,D1               Displays digit in 1's place second
0000106C                           134  
0000106C                           135          *   converts digits 10+ into letters
0000106C  47F9 00001080            136          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001072  B23C 0009                137          CMP.B   #9,D1               Compares digit to 9
00001076  6E00 14FC                138          BGT     CONV                Print out letter representation if greater than 9
0000107A                           139          
0000107A  103C 0003                140          MOVE.B  #3,D0               Displays digit if it is less than A
0000107E  4E4F                     141          TRAP    #15
00001080                           142  
00001080                           143  DISPADDR4
00001080  1204                     144          MOVE.B  D4,D1               Displays digit in 1's place second
00001082                           145  
00001082                           146          *   converts digits 10+ into letters
00001082  47F9 00001096            147          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001088  B23C 0009                148          CMP.B   #9,D1               Compares digit to 9
0000108C  6E00 14E6                149          BGT     CONV                Print out letter representation if greater than 9
00001090                           150          
00001090  103C 0003                151          MOVE.B  #3,D0               Displays digit if it is less than A
00001094  4E4F                     152          TRAP    #15
00001096                           153  
00001096                           154  DISPADDR5
00001096  1205                     155          MOVE.B  D5,D1               Displays digit in 1's place second
00001098                           156  
00001098                           157          *   converts digits 10+ into letters
00001098  47F9 000010AC            158          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000109E  B23C 0009                159          CMP.B   #9,D1               Compares digit to 9
000010A2  6E00 14D0                160          BGT     CONV                Print out letter representation if greater than 9
000010A6                           161          
000010A6  103C 0003                162          MOVE.B  #3,D0               Displays digit if it is less than A
000010AA  4E4F                     163          TRAP    #15
000010AC                           164          
000010AC                           165  DISPADDR6
000010AC                           166  * Display counter -- creates new line every 8 bytes
000010AC                           167          * D6 is used as counter
000010AC                           168          
000010AC  5306                     169          SUB.B   #1,D6
000010AE  BC3C 0000                170          CMP.B   #0,D6
000010B2  6680                     171          BNE     DISPADDR1
000010B4                           172  
000010B4  4ED2                     173          JMP     (A2)                Jumps to address stored in A2 when complete
000010B6                           174  
000010B6                           175  DISPADDREND
000010B6  43F9 0000260F            176          LEA     TAB,A1
000010BC  103C 000E                177          MOVE.B  #14,D0
000010C0  4E4F                     178          TRAP    #15
000010C2                           179          
000010C2                           180  *********************************************************************************************************************
000010C2                           181  * Splits the first byte of the op code into nibbles
000010C2                           182  * then sends it to the branch-table to jump to the appropiate section to be decoded
000010C2                           183  
000010C2  4281                     184          CLR.L   D1                  Clears the data registers
000010C4  4282                     185          CLR.L   D2
000010C6  4283                     186          CLR.L   D3
000010C8  4284                     187          CLR.L   D4
000010CA  4285                     188          CLR.L   D5
000010CC  4286                     189          CLR.L   D6
000010CE  3C16                     190          MOVE.W  (A6),D6
000010D0  141E                     191          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000010D2                           192    
000010D2  1E02                     193          MOVE.B  D2,D7
000010D4  E14F                     194          LSL.W   #8,D7
000010D6                           195          
000010D6  1602                     196          MOVE.B  D2,D3               Copies data at D2 to D3
000010D8                           197          *   this gets digit in 10's place
000010D8  E80B                     198          LSR.B   #4,D3               Shifts right to get rid of 1's place
000010DA                           199          *   this gets digit in 1's place
000010DA  E90A                     200          LSL.B   #4,D2               Shifts left to get rid of 10's place
000010DC  E80A                     201          LSR.B   #4,D2               Shifts back right into 1's place
000010DE                           202          
000010DE                           203          *   D3 holds digit in 10's place
000010DE                           204          *   D2 holds digit in 1's place
000010DE                           205  
000010DE                           206          *   Moves second nibble to D5 to be used later
000010DE  1A02                     207          MOVE.B  D2,D5
000010E0  13C3 00002713            208          MOVE.B  D3,bit0
000010E6                           209          *   Goes to a branch-table to figure out which op code it is
000010E6  6000 0002                210          BRA     CODE
000010EA                           211  
000010EA                           212  ******************************************************************************************************
000010EA                           213  *   This is where the table goes to detirmine which op-code to use
000010EA                           214  CODE    
000010EA  B63C 0000                215          CMP.B   #$0,D3              Goes to immediate operation section
000010EE  6700 0B38                216          BEQ     IMD
000010F2  B63C 0004                217          CMP.B   #$4,D3              Goes to miscellaneous section
000010F6  6700 0C2A                218          BEQ     MISC
000010FA  B63C 0006                219          CMP.B   #$6,D3
000010FE  6700 0A74                220          BEQ     BCC
00001102  B63C 0009                221          CMP.B   #$9,D3              Goes to sub section
00001106  6700 0D3C                222          BEQ     SUB
0000110A  B63C 000C                223          CMP.B   #$C,D3              Goes to sub but displays as AND
0000110E  6700 0D34                224          BEQ     SUB
00001112  B63C 000D                225          CMP.B   #$D,D3              Goes to sub but displays as ADD
00001116  6700 0D2C                226          BEQ     SUB
0000111A  B63C 0001                227          CMP.B   #$1,D3
0000111E  6700 01E6                228          BEQ     MOVB                Goes to movb
00001122  B63C 0003                229          CMP.B   #$3,D3
00001126  6700 001E                230          BEQ     MOVW                Goes to movb
0000112A  B63C 0002                231          CMP.B   #$2,D3
0000112E  6700 00F6                232          BEQ     MOVL                Goes to movb
00001132  B63C 0008                233          CMP.B   #$8,D3
00001136  6700 06F4                234          BEQ     DIVSW               Goes to divsw
0000113A  B63C 000E                235          CMP.B   #$E,D3
0000113E  6700 08D0                236          BEQ     LSLR                Goes to divsw
00001142                           237  
00001142  6000 1372                238          BRA     INVOPCODE
00001146                           239  
00001146                           240  MOVW
00001146                           241          
00001146                           242          
00001146  E20A                     243          LSR.B   #1,D2
00001148  13C2 00002714            244          MOVE.B  D2,bit1
0000114E                           245          
0000114E  1416                     246          MOVE.B  (A6),D2
00001150  EB0A                     247          LSL.B   #5,D2
00001152  EA0A                     248          LSR.B   #5,D2
00001154  13C2 00002717            249          MOVE.B  D2,bit4
0000115A                           250          
0000115A  141E                     251          MOVE.B  (A6)+,D2
0000115C  E50A                     252          LSL.B   #2,D2
0000115E  EA0A                     253          LSR.B   #5,D2
00001160  13C2 00002716            254          MOVE.B  D2,bit3
00001166                           255          
00001166  EF4E                     256          LSL.W   #7,D6
00001168  E04E                     257          LSR.W   #8,D6 
0000116A  EA4E                     258          LSR.W   #5,D6 
0000116C  13C6 00002715            259          MOVE.B  D6,bit2
00001172                           260  
00001172  0C39 0001 00002715       261          CMP.B   #$1,bit2
0000117A  6700 0056                262          BEQ     MOVEAW
0000117E                           263  
0000117E  43F9 0000265E            264          LEA MMOVEW,A1
00001184  103C 000E                265          MOVE.B  #14,D0
00001188  4E4F                     266          TRAP    #15 
0000118A                           267  
0000118A  0C39 0000 00002716       268          CMP.B   #$0,bit3           
00001192  6700 0446                269          BEQ     MOVBDN1
00001196  0C39 0001 00002716       270          CMP.B   #$1,bit3
0000119E  6700 020A                271          BEQ     MOVEAN1
000011A2  0C39 0002 00002716       272          CMP.B   #$2,bit3
000011AA  6700 0272                273          BEQ     MOVEIAN1
000011AE  0C39 0003 00002716       274          CMP.B   #$3,bit3
000011B6  6700 02F2                275          BEQ     MOVEIANI1
000011BA  0C39 0004 00002716       276          CMP.B   #$4,bit3
000011C2  6700 037E                277          BEQ     MOVEIAND1
000011C6  0C39 0007 00002716       278          CMP.B   #$7,bit3
000011CE  6700 01B6                279          BEQ     ADDIMD
000011D2                           280  
000011D2                           281          * Add INVOP
000011D2                           282  
000011D2                           283  MOVEAW
000011D2  43F9 0000266C            284          LEA MMOVEAW,A1
000011D8  103C 000E                285          MOVE.B  #14,D0
000011DC  4E4F                     286          TRAP    #15 
000011DE                           287          
000011DE  0C39 0000 00002716       288          CMP.B   #$0,bit3           
000011E6  6700 03F2                289          BEQ     MOVBDN1
000011EA  0C39 0001 00002716       290          CMP.B   #$1,bit3
000011F2  6700 01B6                291          BEQ     MOVEAN1
000011F6  0C39 0002 00002716       292          CMP.B   #$2,bit3
000011FE  6700 021E                293          BEQ     MOVEIAN1
00001202  0C39 0003 00002716       294          CMP.B   #$3,bit3
0000120A  6700 029E                295          BEQ     MOVEIANI1
0000120E  0C39 0004 00002716       296          CMP.B   #$4,bit3
00001216  6700 032A                297          BEQ     MOVEIAND1
0000121A  0C39 0007 00002716       298          CMP.B   #$7,bit3
00001222  6700 0162                299          BEQ     ADDIMD
00001226                           300  
00001226                           301  MOVL
00001226  E20A                     302          LSR.B   #1,D2
00001228  13C2 00002714            303          MOVE.B  D2,bit1
0000122E                           304          
0000122E  1416                     305          MOVE.B  (A6),D2
00001230  EB0A                     306          LSL.B   #5,D2
00001232  EA0A                     307          LSR.B   #5,D2
00001234  13C2 00002717            308          MOVE.B  D2,bit4
0000123A                           309          
0000123A  141E                     310          MOVE.B  (A6)+,D2
0000123C  E50A                     311          LSL.B   #2,D2
0000123E  EA0A                     312          LSR.B   #5,D2
00001240  13C2 00002716            313          MOVE.B  D2,bit3
00001246                           314          
00001246  EF4E                     315          LSL.W   #7,D6
00001248  E04E                     316          LSR.W   #8,D6 
0000124A  EA4E                     317          LSR.W   #5,D6 
0000124C  13C6 00002715            318          MOVE.B  D6,bit2
00001252                           319          
00001252  0C39 0001 00002715       320          CMP.B   #$1,bit2
0000125A  6700 0056                321          BEQ     MOVEAL
0000125E                           322  
0000125E  43F9 00002665            323          LEA MMOVEL,A1
00001264  103C 000E                324          MOVE.B  #14,D0
00001268  4E4F                     325          TRAP    #15 
0000126A                           326          
0000126A  0C39 0000 00002716       327          CMP.B   #$0,bit3           
00001272  6700 0366                328          BEQ     MOVBDN1
00001276  0C39 0001 00002716       329          CMP.B   #$1,bit3
0000127E  6700 012A                330          BEQ     MOVEAN1
00001282  0C39 0002 00002716       331          CMP.B   #$2,bit3
0000128A  6700 0192                332          BEQ     MOVEIAN1
0000128E  0C39 0003 00002716       333          CMP.B   #$3,bit3
00001296  6700 0212                334          BEQ     MOVEIANI1
0000129A  0C39 0004 00002716       335          CMP.B   #$4,bit3
000012A2  6700 029E                336          BEQ     MOVEIAND1
000012A6  0C39 0007 00002716       337          CMP.B   #$7,bit3
000012AE  6700 00D6                338          BEQ     ADDIMD
000012B2                           339  
000012B2                           340  
000012B2                           341  MOVEAL
000012B2  43F9 00002674            342          LEA MMOVEAL,A1
000012B8  103C 000E                343          MOVE.B  #14,D0
000012BC  4E4F                     344          TRAP    #15 
000012BE                           345          
000012BE  0C39 0000 00002716       346          CMP.B   #$0,bit3           
000012C6  6700 0312                347          BEQ     MOVBDN1
000012CA  0C39 0001 00002716       348          CMP.B   #$1,bit3
000012D2  6700 00D6                349          BEQ     MOVEAN1
000012D6  0C39 0002 00002716       350          CMP.B   #$2,bit3
000012DE  6700 013E                351          BEQ     MOVEIAN1
000012E2  0C39 0003 00002716       352          CMP.B   #$3,bit3
000012EA  6700 01BE                353          BEQ     MOVEIANI1
000012EE  0C39 0004 00002716       354          CMP.B   #$4,bit3
000012F6  6700 024A                355          BEQ     MOVEIAND1
000012FA  0C39 0007 00002716       356          CMP.B   #$7,bit3
00001302  6700 0082                357          BEQ     ADDIMD        
00001306                           358  
00001306                           359  MOVB
00001306  43F9 00002657            360          LEA MMOVEB,A1
0000130C  103C 000E                361          MOVE.B  #14,D0
00001310  4E4F                     362          TRAP    #15 
00001312                           363          
00001312  E20A                     364          LSR.B   #1,D2
00001314  13C2 00002714            365          MOVE.B  D2,bit1
0000131A                           366          
0000131A  1416                     367          MOVE.B  (A6),D2
0000131C  EB0A                     368          LSL.B   #5,D2
0000131E  EA0A                     369          LSR.B   #5,D2
00001320  13C2 00002717            370          MOVE.B  D2,bit4
00001326                           371          
00001326  141E                     372          MOVE.B  (A6)+,D2
00001328  E50A                     373          LSL.B   #2,D2
0000132A  EA0A                     374          LSR.B   #5,D2
0000132C  13C2 00002716            375          MOVE.B  D2,bit3
00001332                           376          
00001332  EF4E                     377          LSL.W   #7,D6
00001334  E04E                     378          LSR.W   #8,D6 
00001336  EA4E                     379          LSR.W   #5,D6 
00001338  13C6 00002715            380          MOVE.B  D6,bit2
0000133E                           381          
0000133E  0C39 0000 00002716       382          CMP.B   #$0,bit3           
00001346  6700 0292                383          BEQ     MOVBDN1
0000134A  0C39 0001 00002716       384          CMP.B   #$1,bit3
00001352  6700 0056                385          BEQ     MOVEAN1
00001356  0C39 0002 00002716       386          CMP.B   #$2,bit3
0000135E  6700 00BE                387          BEQ     MOVEIAN1
00001362  0C39 0003 00002716       388          CMP.B   #$3,bit3
0000136A  6700 013E                389          BEQ     MOVEIANI1
0000136E  0C39 0004 00002716       390          CMP.B   #$4,bit3
00001376  6700 01CA                391          BEQ     MOVEIAND1
0000137A  0C39 0007 00002716       392          CMP.B   #$7,bit3
00001382  6700 0002                393          BEQ     ADDIMD
00001386                           394  
00001386                           395  ADDIMD
00001386  0C39 0000 00002717       396      CMP.B   #$0,bit4
0000138E  6700 001A                397      BEQ     ADDIMD0
00001392  0C39 0001 00002717       398      CMP.B   #$1,bit4
0000139A  6700 000E                399      BEQ     ADDIMD1
0000139E  0C39 0003 00002717       400      CMP.B   #$3,bit4
000013A6  6700 0002                401      BEQ     ADDIMD3
000013AA                           402  
000013AA                           403  ADDIMD0
000013AA                           404      * TODO 
000013AA                           405  ADDIMD1 
000013AA                           406      * TODO
000013AA                           407  ADDIMD3
000013AA                           408      * TODO    
000013AA                           409  MOVEAN1
000013AA  43F9 0000260F            410      LEA TAB,A1
000013B0  103C 000E                411      MOVE.B  #14,D0
000013B4  4E4F                     412      TRAP    #15
000013B6                           413  
000013B6  43F9 0000261F            414      LEA DISPA,A1
000013BC  103C 000E                415      MOVE.B  #14,D0
000013C0  4E4F                     416      TRAP    #15
000013C2                           417      
000013C2  1239 00002717            418      MOVE.B  bit4,D1
000013C8  103C 0003                419      MOVE.B  #3,D0
000013CC  4E4F                     420      TRAP    #15
000013CE                           421      
000013CE  43F9 00002613            422      LEA COMMA,A1
000013D4  103C 000E                423      MOVE.B  #14,D0
000013D8  4E4F                     424      TRAP    #15
000013DA                           425      
000013DA  0C39 0000 00002715       426      CMP.B   #$0,bit2
000013E2  6700 0396                427      BEQ     MOVBDN2
000013E6  0C39 0001 00002715       428      CMP.B   #$1,bit2
000013EE  6700 02BA                429      BEQ     MOVEAN2
000013F2  0C39 0002 00002715       430      CMP.B   #$2,bit2 
000013FA  6700 02CA                431      BEQ     MOVIAN2
000013FE  0C39 0003 00002715       432      CMP.B   #$3,bit2 
00001406  6700 02F2                433      BEQ     MOVIANI2
0000140A  0C39 0004 00002715       434      CMP.B   #$4,bit2 
00001412  6700 0326                435      BEQ     MOVIAND2
00001416  BA3C 0005                436      CMP.B   #$5,D5
0000141A  6700 035E                437      BEQ     MOVBDN2
0000141E                           438      
0000141E                           439  MOVEIAN1
0000141E  43F9 0000260F            440      LEA TAB,A1
00001424  103C 000E                441      MOVE.B  #14,D0
00001428  4E4F                     442      TRAP    #15
0000142A                           443      
0000142A  43F9 00002615            444      LEA OPENBRA,A1
00001430  103C 000E                445      MOVE.B  #14,D0
00001434  4E4F                     446      TRAP    #15
00001436                           447  
00001436  43F9 0000261F            448      LEA DISPA,A1
0000143C  103C 000E                449      MOVE.B  #14,D0
00001440  4E4F                     450      TRAP    #15
00001442                           451      
00001442  1239 00002717            452      MOVE.B  bit4,D1
00001448  103C 0003                453      MOVE.B  #3,D0
0000144C  4E4F                     454      TRAP    #15
0000144E                           455      
0000144E  43F9 00002617            456      LEA CLOSEBRA,A1
00001454  103C 000E                457      MOVE.B  #14,D0
00001458  4E4F                     458      TRAP    #15
0000145A                           459      
0000145A  43F9 00002613            460      LEA COMMA,A1
00001460  103C 000E                461      MOVE.B  #14,D0
00001464  4E4F                     462      TRAP    #15
00001466                           463      
00001466  0C39 0000 00002715       464      CMP.B   #$0,bit2
0000146E  6700 030A                465      BEQ     MOVBDN2
00001472  0C39 0001 00002715       466      CMP.B   #$1,bit2
0000147A  6700 022E                467      BEQ     MOVEAN2
0000147E  0C39 0002 00002715       468      CMP.B   #$2,bit2 
00001486  6700 023E                469      BEQ     MOVIAN2
0000148A  0C39 0003 00002715       470      CMP.B   #$3,bit2 
00001492  6700 0266                471      BEQ     MOVIANI2
00001496  0C39 0004 00002715       472      CMP.B   #$4,bit2 
0000149E  6700 029A                473      BEQ     MOVIAND2
000014A2  BA3C 0005                474      CMP.B   #$5,D5
000014A6  6700 02D2                475      BEQ     MOVBDN2
000014AA                           476  
000014AA                           477  MOVEIANI1
000014AA  43F9 0000260F            478      LEA TAB,A1
000014B0  103C 000E                479      MOVE.B  #14,D0
000014B4  4E4F                     480      TRAP    #15
000014B6                           481      
000014B6  43F9 00002615            482      LEA OPENBRA,A1
000014BC  103C 000E                483      MOVE.B  #14,D0
000014C0  4E4F                     484      TRAP    #15
000014C2                           485  
000014C2  43F9 0000261F            486      LEA DISPA,A1
000014C8  103C 000E                487      MOVE.B  #14,D0
000014CC  4E4F                     488      TRAP    #15
000014CE                           489      
000014CE  1239 00002717            490      MOVE.B  bit4,D1
000014D4  103C 0003                491      MOVE.B  #3,D0
000014D8  4E4F                     492      TRAP    #15
000014DA                           493      
000014DA  43F9 00002617            494      LEA CLOSEBRA,A1
000014E0  103C 000E                495      MOVE.B  #14,D0
000014E4  4E4F                     496      TRAP    #15
000014E6                           497      
000014E6  43F9 00002619            498      LEA POS,A1
000014EC  103C 000E                499      MOVE.B  #14,D0
000014F0  4E4F                     500      TRAP    #15
000014F2                           501      
000014F2  43F9 00002613            502      LEA COMMA,A1
000014F8  103C 000E                503      MOVE.B  #14,D0
000014FC  4E4F                     504      TRAP    #15
000014FE                           505      
000014FE  0C39 0000 00002715       506      CMP.B   #$0,bit2
00001506  6700 0272                507      BEQ     MOVBDN2
0000150A  0C39 0001 00002715       508      CMP.B   #$1,bit2
00001512  6700 0196                509      BEQ     MOVEAN2
00001516  0C39 0002 00002715       510      CMP.B   #$2,bit2 
0000151E  6700 01A6                511      BEQ     MOVIAN2
00001522  0C39 0003 00002715       512      CMP.B   #$3,bit2 
0000152A  6700 01CE                513      BEQ     MOVIANI2
0000152E  0C39 0004 00002715       514      CMP.B   #$4,bit2 
00001536  6700 0202                515      BEQ     MOVIAND2
0000153A  BA3C 0005                516      CMP.B   #$5,D5
0000153E  6700 023A                517      BEQ     MOVBDN2
00001542                           518  
00001542                           519  MOVEIAND1
00001542  43F9 0000260F            520      LEA TAB,A1
00001548  103C 000E                521      MOVE.B  #14,D0
0000154C  4E4F                     522      TRAP    #15
0000154E                           523      
0000154E  43F9 0000261B            524      LEA NEG,A1
00001554  103C 000E                525      MOVE.B  #14,D0
00001558  4E4F                     526      TRAP    #15
0000155A                           527      
0000155A  43F9 00002615            528      LEA OPENBRA,A1
00001560  103C 000E                529      MOVE.B  #14,D0
00001564  4E4F                     530      TRAP    #15
00001566                           531  
00001566  43F9 0000261F            532      LEA DISPA,A1
0000156C  103C 000E                533      MOVE.B  #14,D0
00001570  4E4F                     534      TRAP    #15
00001572                           535      
00001572  1239 00002717            536      MOVE.B  bit4,D1
00001578  103C 0003                537      MOVE.B  #3,D0
0000157C  4E4F                     538      TRAP    #15
0000157E                           539      
0000157E  43F9 00002617            540      LEA CLOSEBRA,A1
00001584  103C 000E                541      MOVE.B  #14,D0
00001588  4E4F                     542      TRAP    #15
0000158A                           543      
0000158A  43F9 00002613            544      LEA COMMA,A1
00001590  103C 000E                545      MOVE.B  #14,D0
00001594  4E4F                     546      TRAP    #15
00001596                           547      
00001596  0C39 0000 00002715       548      CMP.B   #$0,bit2
0000159E  6700 01DA                549      BEQ     MOVBDN2
000015A2  0C39 0001 00002715       550      CMP.B   #$1,bit2
000015AA  6700 00FE                551      BEQ     MOVEAN2
000015AE  0C39 0002 00002715       552      CMP.B   #$2,bit2 
000015B6  6700 010E                553      BEQ     MOVIAN2
000015BA  0C39 0003 00002715       554      CMP.B   #$3,bit2 
000015C2  6700 0136                555      BEQ     MOVIANI2
000015C6  0C39 0004 00002715       556      CMP.B   #$4,bit2 
000015CE  6700 016A                557      BEQ     MOVIAND2
000015D2  BA3C 0005                558      CMP.B   #$5,D5
000015D6  6700 01A2                559      BEQ     MOVBDN2
000015DA                           560  
000015DA                           561  MOVBDN1
000015DA  43F9 0000260F            562      LEA TAB,A1
000015E0  103C 000E                563      MOVE.B  #14,D0
000015E4  4E4F                     564      TRAP    #15
000015E6                           565  
000015E6  BA3C 0006                566      CMP.B   #$6,D5             * Data Reg for LSLR
000015EA  6700 007A                567      BEQ     LSLRSRCD
000015EE                           568  
000015EE  43F9 00002625            569      LEA DISPD,A1
000015F4  103C 000E                570      MOVE.B  #14,D0
000015F8  4E4F                     571      TRAP    #15
000015FA                           572      
000015FA  1239 00002717            573      MOVE.B  bit4,D1
00001600  103C 0003                574      MOVE.B  #3,D0
00001604  4E4F                     575      TRAP    #15
00001606                           576  
00001606  BA3C 0004                577      CMP.B   #$4,D5
0000160A  6700 0192                578      BEQ     ENDNLINC
0000160E                           579  
0000160E  43F9 00002613            580      LEA COMMA,A1
00001614  103C 000E                581      MOVE.B  #14,D0
00001618  4E4F                     582      TRAP    #15
0000161A                           583  
0000161A  BA3C 0006                584      CMP.B   #$6,D5             * Data Reg for LSLR
0000161E  6700 006E                585      BEQ     LSLRDESD
00001622  0C39 0000 00002715       586      CMP.B   #$0,bit2
0000162A  6700 014E                587      BEQ     MOVBDN2
0000162E  0C39 0001 00002715       588      CMP.B   #$1,bit2
00001636  6700 0072                589      BEQ     MOVEAN2
0000163A  0C39 0002 00002715       590      CMP.B   #$2,bit2 
00001642  6700 0082                591      BEQ     MOVIAN2
00001646  0C39 0003 00002715       592      CMP.B   #$3,bit2 
0000164E  6700 00AA                593      BEQ     MOVIANI2
00001652  0C39 0004 00002715       594      CMP.B   #$4,bit2 
0000165A  6700 00DE                595      BEQ     MOVIAND2
0000165E  BA3C 0005                596      CMP.B   #$5,D5
00001662  6700 0116                597      BEQ     MOVBDN2
00001666                           598      
00001666                           599  LSLRSRCD
00001666  43F9 00002625            600      LEA DISPD,A1
0000166C  103C 000E                601      MOVE.B  #14,D0
00001670  4E4F                     602      TRAP    #15
00001672                           603          
00001672  1239 00002713            604      MOVE.B  bit0,D1
00001678  103C 0003                605      MOVE.B  #3,D0
0000167C  4E4F                     606      TRAP    #15    
0000167E                           607  
0000167E  43F9 00002613            608      LEA COMMA,A1
00001684  103C 000E                609      MOVE.B  #14,D0
00001688  4E4F                     610      TRAP    #15  
0000168A                           611      
0000168A  6000 0002                612      BRA     LSLRDESD
0000168E                           613      
0000168E                           614  LSLRDESD
0000168E  43F9 00002625            615      LEA DISPD,A1
00001694  103C 000E                616      MOVE.B  #14,D0
00001698  4E4F                     617      TRAP    #15
0000169A                           618          
0000169A  1239 00002717            619      MOVE.B  bit4,D1
000016A0  103C 0003                620      MOVE.B  #3,D0
000016A4  4E4F                     621      TRAP    #15      
000016A6                           622      
000016A6                           623      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000016A6  6000 0E82                624      BRA     ENDNEWLINE       
000016AA                           625  
000016AA                           626  MOVEAN2
000016AA  43F9 0000261F            627      LEA DISPA,A1
000016B0  103C 000E                628      MOVE.B  #14,D0
000016B4  4E4F                     629      TRAP    #15
000016B6                           630      
000016B6  1239 00002714            631      MOVE.B  bit1,D1
000016BC  103C 0003                632      MOVE.B  #3,D0
000016C0  4E4F                     633      TRAP    #15
000016C2                           634  
000016C2                           635      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000016C2  6000 0E66                636      BRA     ENDNEWLINE    
000016C6                           637  
000016C6                           638  MOVIAN2
000016C6  43F9 00002615            639      LEA OPENBRA,A1
000016CC  103C 000E                640      MOVE.B  #14,D0
000016D0  4E4F                     641      TRAP    #15
000016D2                           642  
000016D2  43F9 0000261F            643      LEA DISPA,A1
000016D8  103C 000E                644      MOVE.B  #14,D0
000016DC  4E4F                     645      TRAP    #15
000016DE                           646      
000016DE  1239 00002714            647      MOVE.B  bit1,D1
000016E4  103C 0003                648      MOVE.B  #3,D0
000016E8  4E4F                     649      TRAP    #15
000016EA                           650      
000016EA  43F9 00002617            651      LEA CLOSEBRA,A1
000016F0  103C 000E                652      MOVE.B  #14,D0
000016F4  4E4F                     653      TRAP    #15
000016F6                           654      
000016F6                           655      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000016F6  6000 0E32                656      BRA     ENDNEWLINE
000016FA                           657  
000016FA                           658  MOVIANI2
000016FA  43F9 00002615            659      LEA OPENBRA,A1
00001700  103C 000E                660      MOVE.B  #14,D0
00001704  4E4F                     661      TRAP    #15
00001706                           662  
00001706  43F9 0000261F            663      LEA DISPA,A1
0000170C  103C 000E                664      MOVE.B  #14,D0
00001710  4E4F                     665      TRAP    #15
00001712                           666      
00001712  1239 00002714            667      MOVE.B  bit1,D1
00001718  103C 0003                668      MOVE.B  #3,D0
0000171C  4E4F                     669      TRAP    #15
0000171E                           670      
0000171E  43F9 00002617            671      LEA CLOSEBRA,A1
00001724  103C 000E                672      MOVE.B  #14,D0
00001728  4E4F                     673      TRAP    #15
0000172A                           674      
0000172A  43F9 00002619            675      LEA POS,A1
00001730  103C 000E                676      MOVE.B  #14,D0
00001734  4E4F                     677      TRAP    #15
00001736                           678      
00001736                           679      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001736  6000 0DF2                680      BRA     ENDNEWLINE
0000173A                           681  
0000173A                           682  MOVIAND2
0000173A  43F9 0000261B            683      LEA NEG,A1
00001740  103C 000E                684      MOVE.B  #14,D0
00001744  4E4F                     685      TRAP    #15
00001746                           686      
00001746  43F9 00002615            687      LEA OPENBRA,A1
0000174C  103C 000E                688      MOVE.B  #14,D0
00001750  4E4F                     689      TRAP    #15
00001752                           690  
00001752  43F9 0000261F            691      LEA DISPA,A1
00001758  103C 000E                692      MOVE.B  #14,D0
0000175C  4E4F                     693      TRAP    #15
0000175E                           694      
0000175E  1239 00002714            695      MOVE.B  bit1,D1
00001764  103C 0003                696      MOVE.B  #3,D0
00001768  4E4F                     697      TRAP    #15
0000176A                           698      
0000176A  43F9 00002617            699      LEA CLOSEBRA,A1
00001770  103C 000E                700      MOVE.B  #14,D0
00001774  4E4F                     701      TRAP    #15
00001776                           702  
00001776                           703      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001776  6000 0DB2                704      BRA     ENDNEWLINE
0000177A                           705  
0000177A                           706  MOVBDN2
0000177A  43F9 00002625            707      LEA DISPD,A1
00001780  103C 000E                708      MOVE.B  #14,D0
00001784  4E4F                     709      TRAP    #15
00001786                           710          
00001786  1239 00002714            711      MOVE.B  bit1,D1
0000178C  103C 0003                712      MOVE.B  #3,D0
00001790  4E4F                     713      TRAP    #15   
00001792                           714      
00001792  B83C 0000                715      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001796  6700 0D92                716      BEQ     ENDNEWLINE
0000179A                           717      
0000179A                           718      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000179A  6000 0D8E                719      BRA     ENDNEWLINE
0000179E                           720      
0000179E                           721      
0000179E                           722  ENDNLINC
0000179E                           723      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000179E  6000 0D8A                724      BRA     ENDNEWLINE    
000017A2                           725      
000017A2                           726  MULSW
000017A2  1407                     727          MOVE.B  D7,D2
000017A4  EB0A                     728          LSL.B   #5,D2
000017A6  EA0A                     729          LSR.B   #5,D2
000017A8  13C2 00002717            730          MOVE.B  D2,bit4
000017AE                           731          
000017AE  1407                     732          MOVE.B  D7,D2
000017B0  E50A                     733          LSL.B   #2,D2
000017B2  EA0A                     734          LSR.B   #5,D2
000017B4  13C2 00002716            735          MOVE.B  D2,bit3
000017BA                           736          
000017BA  3C07                     737          MOVE.W  D7,D6
000017BC  EF4E                     738          LSL.W   #7,D6
000017BE  E04E                     739          LSR.W   #8,D6 
000017C0  EA4E                     740          LSR.W   #5,D6 
000017C2  13C6 00002715            741          MOVE.B  D6,bit2
000017C8                           742          
000017C8  E94F                     743          LSL.W   #4,D7
000017CA  E04F                     744          LSR.W   #8,D7 
000017CC  EA4F                     745          LSR.W   #5,D7 
000017CE  13C7 00002714            746          MOVE.B  D7,bit1
000017D4                           747          
000017D4  43F9 00002650            748          LEA MMULSW,A1
000017DA  323C 000E                749          MOVE    #14,D1
000017DE  4E4F                     750          TRAP    #15
000017E0                           751          
000017E0  1A3C 0005                752          MOVE.B  #$5,D5 
000017E4                           753          
000017E4  0C39 0000 00002716       754          CMP.B   #$0,bit3           
000017EC  6700 FDEC                755          BEQ     MOVBDN1
000017F0  0C39 0001 00002716       756          CMP.B   #$1,bit3
000017F8  6700 FBB0                757          BEQ     MOVEAN1
000017FC  0C39 0002 00002716       758          CMP.B   #$2,bit3
00001804  6700 FC18                759          BEQ     MOVEIAN1
00001808  0C39 0003 00002716       760          CMP.B   #$3,bit3
00001810  6700 FC98                761          BEQ     MOVEIANI1
00001814  0C39 0004 00002716       762          CMP.B   #$4,bit3
0000181C  6700 FD24                763          BEQ     MOVEIAND1
00001820  0C39 0007 00002716       764          CMP.B   #$7,bit3
00001828  6700 FB5C                765          BEQ     ADDIMD
0000182C                           766  
0000182C                           767           
0000182C                           768  DIVSW               
0000182C  1406                     769          MOVE.B  D6,D2
0000182E  EB0A                     770          LSL.B   #5,D2
00001830  EA0A                     771          LSR.B   #5,D2
00001832  13C2 00002717            772          MOVE.B  D2,bit4
00001838                           773          
00001838  1406                     774          MOVE.B  D6,D2
0000183A  E50A                     775          LSL.B   #2,D2
0000183C  EA0A                     776          LSR.B   #5,D2
0000183E  13C2 00002716            777          MOVE.B  D2,bit3
00001844                           778          
00001844  3E06                     779          MOVE.W  D6,D7
00001846  EF4F                     780          LSL.W   #7,D7
00001848  E04F                     781          LSR.W   #8,D7 
0000184A  EA4F                     782          LSR.W   #5,D7 
0000184C  13C7 00002715            783          MOVE.B  D7,bit2
00001852                           784          
00001852  E94E                     785          LSL.W   #4,D6
00001854  E04E                     786          LSR.W   #8,D6 
00001856  EA4E                     787          LSR.W   #5,D6 
00001858  13C6 00002714            788          MOVE.B  D6,bit1
0000185E                           789          
0000185E  43F9 00002649            790          LEA MMDIVSW,A1
00001864  323C 000E                791          MOVE    #14,D1
00001868  4E4F                     792          TRAP    #15
0000186A                           793          
0000186A  1A3C 0005                794          MOVE.B  #$5,D5 
0000186E  183C 0004                795          MOVE.B  #$4,D4
00001872                           796          
00001872  0C39 0000 00002716       797          CMP.B   #$0,bit3           
0000187A  6700 FD5E                798          BEQ     MOVBDN1
0000187E  0C39 0001 00002716       799          CMP.B   #$1,bit3
00001886  6700 FB22                800          BEQ     MOVEAN1
0000188A  0C39 0002 00002716       801          CMP.B   #$2,bit3
00001892  6700 FB8A                802          BEQ     MOVEIAN1
00001896  0C39 0003 00002716       803          CMP.B   #$3,bit3
0000189E  6700 FC0A                804          BEQ     MOVEIANI1
000018A2  0C39 0004 00002716       805          CMP.B   #$4,bit3
000018AA  6700 FC96                806          BEQ     MOVEIAND1
000018AE  0C39 0007 00002716       807          CMP.B   #$7,bit3
000018B6  6700 FACE                808          BEQ     ADDIMD
000018BA                           809  
000018BA                           810  NEGW
000018BA  1406                     811          MOVE.B  D6,D2
000018BC  EB0A                     812          LSL.B   #5,D2
000018BE  EA0A                     813          LSR.B   #5,D2
000018C0  13C2 00002717            814          MOVE.B  D2,bit4
000018C6                           815          
000018C6  1406                     816          MOVE.B  D6,D2
000018C8  E50A                     817          LSL.B   #2,D2
000018CA  EA0A                     818          LSR.B   #5,D2
000018CC  13C2 00002716            819          MOVE.B  D2,bit3
000018D2                           820          
000018D2  3E06                     821          MOVE.W  D6,D7
000018D4  E14F                     822          LSL.W   #8,D7
000018D6  E04F                     823          LSR.W   #8,D7 
000018D8  EC4F                     824          LSR.W   #6,D7 
000018DA  13C7 00002715            825          MOVE.B  D7,bit2
000018E0                           826          
000018E0  43F9 00002644            827          LEA MMNEGW,A1
000018E6  323C 000E                828          MOVE    #14,D1
000018EA  4E4F                     829          TRAP    #15
000018EC                           830          
000018EC  1A3C 0004                831          MOVE.B  #$4,D5
000018F0                           832          
000018F0  0C39 0000 00002715       833          CMP.B   #$0,bit2
000018F8  6700 001A                834          BEQ     PRINTBYTE
000018FC  0C39 0001 00002715       835          CMP.B   #$1,bit2
00001904  6700 0062                836          BEQ     PRINTWORD
00001908  0C39 0002 00002715       837          CMP.B   #$2,bit2
00001910  6700 00AA                838          BEQ     PRINTLONG
00001914                           839          
00001914                           840  PRINTBYTE
00001914  43F9 0000262D            841      LEA MBYTE,A1
0000191A  323C 000E                842      MOVE    #14,D1
0000191E  4E4F                     843      TRAP    #15
00001920                           844  
00001920  0C39 0000 00002716       845      CMP.B   #$0,bit3           
00001928  6700 FCB0                846          BEQ     MOVBDN1
0000192C  0C39 0001 00002716       847          CMP.B   #$1,bit3
00001934  6700 FA74                848          BEQ     MOVEAN1
00001938  0C39 0002 00002716       849          CMP.B   #$2,bit3
00001940  6700 FADC                850          BEQ     MOVEIAN1
00001944  0C39 0003 00002716       851          CMP.B   #$3,bit3
0000194C  6700 FB5C                852          BEQ     MOVEIANI1
00001950  0C39 0004 00002716       853          CMP.B   #$4,bit3
00001958  6700 FBE8                854          BEQ     MOVEIAND1
0000195C  0C39 0007 00002716       855          CMP.B   #$7,bit3
00001964  6700 FA20                856          BEQ     ADDIMD
00001968                           857      
00001968                           858  PRINTWORD
00001968  43F9 00002630            859      LEA MWORD,A1
0000196E  323C 000E                860      MOVE    #14,D1
00001972  4E4F                     861      TRAP    #15
00001974                           862  
00001974  0C39 0000 00002716       863      CMP.B   #$0,bit3           
0000197C  6700 FC5C                864          BEQ     MOVBDN1
00001980  0C39 0001 00002716       865          CMP.B   #$1,bit3
00001988  6700 FA20                866          BEQ     MOVEAN1
0000198C  0C39 0002 00002716       867          CMP.B   #$2,bit3
00001994  6700 FA88                868          BEQ     MOVEIAN1
00001998  0C39 0003 00002716       869          CMP.B   #$3,bit3
000019A0  6700 FB08                870          BEQ     MOVEIANI1
000019A4  0C39 0004 00002716       871          CMP.B   #$4,bit3
000019AC  6700 FB94                872          BEQ     MOVEIAND1
000019B0  0C39 0007 00002716       873          CMP.B   #$7,bit3
000019B8  6700 F9CC                874          BEQ     ADDIMD
000019BC                           875      
000019BC                           876  PRINTLONG
000019BC  43F9 00002633            877      LEA MLONG,A1
000019C2  323C 000E                878      MOVE    #14,D1
000019C6  4E4F                     879      TRAP    #15
000019C8                           880   
000019C8  0C39 0000 00002716       881      CMP.B   #$0,bit3           
000019D0  6700 FC08                882          BEQ     MOVBDN1
000019D4  0C39 0001 00002716       883          CMP.B   #$1,bit3
000019DC  6700 F9CC                884          BEQ     MOVEAN1
000019E0  0C39 0002 00002716       885          CMP.B   #$2,bit3
000019E8  6700 FA34                886          BEQ     MOVEIAN1
000019EC  0C39 0003 00002716       887          CMP.B   #$3,bit3
000019F4  6700 FAB4                888          BEQ     MOVEIANI1
000019F8  0C39 0004 00002716       889          CMP.B   #$4,bit3
00001A00  6700 FB40                890          BEQ     MOVEIAND1
00001A04  0C39 0007 00002716       891          CMP.B   #$7,bit3
00001A0C  6700 F978                892          BEQ     ADDIMD
00001A10                           893          
00001A10                           894  LSLR
00001A10                           895          *MOVE.B  D6,D2
00001A10  141E                     896          MOVE.B  (A6)+,D2
00001A12  EB0A                     897          LSL.B   #5,D2
00001A14  EA0A                     898          LSR.B   #5,D2
00001A16  13C2 00002717            899          MOVE.B  D2,bit4
00001A1C                           900          
00001A1C  1406                     901          MOVE.B  D6,D2
00001A1E  E50A                     902          LSL.B   #2,D2
00001A20  EE0A                     903          LSR.B   #7,D2
00001A22  13C2 00002716            904          MOVE.B  D2,bit3
00001A28                           905          
00001A28  3E06                     906          MOVE.W  D6,D7
00001A2A  E14F                     907          LSL.W   #8,D7
00001A2C  E04F                     908          LSR.W   #8,D7 
00001A2E  EC4F                     909          LSR.W   #6,D7 
00001A30  13C7 00002715            910          MOVE.B  D7,bit2
00001A36                           911          
00001A36  3E06                     912          MOVE.W  D6,D7
00001A38  EF4F                     913          LSL.W   #7,D7
00001A3A  E04F                     914          LSR.W   #8,D7 
00001A3C  EE4F                     915          LSR.W   #7,D7
00001A3E  13C7 00002714            916          MOVE.B  D7,bit1   
00001A44                           917      
00001A44  E94E                     918          LSL.W   #4,D6
00001A46  E04E                     919          LSR.W   #8,D6 
00001A48  EA4E                     920          LSR.W   #5,D6
00001A4A  13C6 00002713            921          MOVE.B  D6,bit0 
00001A50                           922          
00001A50  0C39 0001 00002714       923          CMP.B   #$1,bit1
00001A58  6700 000E                924          BEQ     PRINTLSL
00001A5C  0C39 0000 00002714       925          CMP.B   #$0,bit1
00001A64  6700 00DE                926          BEQ     PRINTLSR
00001A68                           927          
00001A68                           928  PRINTLSL
00001A68  43F9 0000263A            929          LEA MLSL,A1
00001A6E  303C 000E                930          MOVE    #14,D0
00001A72  4E4F                     931          TRAP    #15
00001A74                           932          
00001A74  0C39 0000 00002715       933          CMP.B   #$0,bit2
00001A7C  6700 001A                934          BEQ     PRINTB
00001A80  0C39 0001 00002715       935          CMP.B   #$1,bit2
00001A88  6700 0036                936          BEQ     PRINTW
00001A8C  0C39 0002 00002715       937          CMP.B   #$2,bit2
00001A94  6700 0052                938          BEQ     PRINTL
00001A98                           939          
00001A98                           940  PRINTB
00001A98  43F9 0000262D            941          LEA MBYTE,A1
00001A9E  303C 000E                942          MOVE    #14,D0
00001AA2  4E4F                     943          TRAP    #15
00001AA4                           944          
00001AA4  3A3C 0006                945          MOVE #$6,D5
00001AA8                           946          
00001AA8  0C39 0000 00002716       947          CMP.B   #0,bit3
00001AB0  6700 005E                948          BEQ     PRINTLSLRCOUNT
00001AB4  0C39 0001 00002716       949          CMP.B   #1,bit3
00001ABC  6700 FB1C                950          BEQ     MOVBDN1
00001AC0                           951  
00001AC0                           952  PRINTW 
00001AC0  43F9 00002630            953          LEA MWORD,A1
00001AC6  303C 000E                954          MOVE    #14,D0
00001ACA  4E4F                     955          TRAP    #15
00001ACC                           956          
00001ACC  3A3C 0006                957          MOVE #$6,D5
00001AD0                           958          
00001AD0  0C39 0000 00002716       959          CMP.B   #0,bit3
00001AD8  6700 0036                960          BEQ     PRINTLSLRCOUNT
00001ADC  0C39 0001 00002716       961          CMP.B   #1,bit3
00001AE4  6700 FAF4                962          BEQ     MOVBDN1
00001AE8                           963  
00001AE8                           964  PRINTL
00001AE8  43F9 00002633            965          LEA MLONG,A1
00001AEE  303C 000E                966          MOVE    #14,D0
00001AF2  4E4F                     967          TRAP    #15
00001AF4                           968  
00001AF4  3A3C 0006                969          MOVE #$6,D5
00001AF8                           970          
00001AF8  0C39 0000 00002716       971          CMP.B   #0,bit3
00001B00  6700 000E                972          BEQ     PRINTLSLRCOUNT
00001B04  0C39 0001 00002716       973          CMP.B   #1,bit3
00001B0C  6700 FACC                974          BEQ     MOVBDN1    
00001B10                           975  
00001B10                           976  PRINTLSLRCOUNT
00001B10  43F9 0000260F            977          LEA TAB,A1
00001B16  303C 000E                978          MOVE    #14,D0
00001B1A  4E4F                     979          TRAP    #15
00001B1C                           980          
00001B1C  45F9 0000261D            981          LEA HASH,A2
00001B22  303C 000E                982          MOVE    #14,D0
00001B26  4E4F                     983          TRAP    #15
00001B28                           984          
00001B28  1239 00002713            985          MOVE.B  bit0,D1
00001B2E  303C 0003                986          MOVE    #3,D0
00001B32  4E4F                     987          TRAP    #15
00001B34                           988          
00001B34  43F9 00002613            989          LEA COMMA,A1
00001B3A  303C 000E                990          MOVE    #14,D0
00001B3E  4E4F                     991          TRAP    #15
00001B40                           992          
00001B40  6000 FB4C                993          BRA LSLRDESD
00001B44                           994    
00001B44                           995  PRINTLSR
00001B44  43F9 0000263F            996          LEA MLSR,A1
00001B4A  323C 000E                997          MOVE    #14,D1
00001B4E  4E4F                     998          TRAP    #15
00001B50                           999          
00001B50  0C39 0000 00002715      1000          CMP.B   #$0,bit2
00001B58  6700 FF3E               1001          BEQ     PRINTB
00001B5C  0C39 0001 00002715      1002          CMP.B   #$1,bit2
00001B64  6700 FF5A               1003          BEQ     PRINTW
00001B68  0C39 0002 00002715      1004          CMP.B   #$2,bit2
00001B70  6700 FF76               1005          BEQ     PRINTL
00001B74                          1006  
00001B74                          1007  ******************************************************************************************************
00001B74                          1008  *   Branch, branch to subroutine, and branch conditionally
00001B74                          1009  *   BRA, BSR, Bcc
00001B74                          1010  
00001B74                          1011  BCC
00001B74  13C5 00002714           1012          MOVE.B  D5,bit1             Moves condition code to bit1
00001B7A  1A1E                    1013          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001B7C  13C5 00002715           1014          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001B82  280E                    1015          MOVE.L  A6,D4               Moves current address to D4 register
00001B84                          1016  
00001B84  BA3C 0000               1017          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001B88  6700 0010               1018          BEQ     BCCWORD
00001B8C  BA3C 00FF               1019          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001B90  6700 0010               1020          BEQ     BCCLONG             Else, displacement is 8-bits
00001B94                          1021  
00001B94                          1022          * Calculates 8-bit displacement
00001B94                          1023          * 8-bit displacement is already in D5
00001B94                          1024          * Adds displacement to current address
00001B94  D805                    1025          ADD.B   D5,D4               Adds the displacement to current address
00001B96  6000 0012               1026          BRA     BCCNEXT
00001B9A                          1027  
00001B9A                          1028  * Calculates 16-bit displacement
00001B9A                          1029  BCCWORD
00001B9A  3A1E                    1030          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001B9C  D845                    1031          ADD.W   D5,D4               Adds the displacement to current address
00001B9E  6000 000A               1032          BRA     BCCNEXT
00001BA2                          1033  
00001BA2                          1034  * Calculates 32-bit displacement
00001BA2                          1035  BCCLONG
00001BA2  2A1E                    1036          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001BA4  D885                    1037          ADD.L   D5,D4               Adds the displacement to current address
00001BA6  6000 0002               1038          BRA     BCCNEXT
00001BAA                          1039  
00001BAA                          1040  * Does the actual calculation
00001BAA                          1041  * Adds the displacement to the current address
00001BAA                          1042  BCCNEXT
00001BAA  6100 000E               1043          BSR     BCCDISP             Displays branch op-code
00001BAE  45F9 0000252A           1044          LEA     ENDNEWLINE,A2
00001BB4  2E04                    1045          MOVE.L  D4,D7
00001BB6  6000 F470               1046          BRA     DISPADDRSTART
00001BBA                          1047  
00001BBA                          1048  BCCDISP
00001BBA  B43C 0000               1049          CMP.B   #$0,D2
00001BBE  6700 0026               1050          BEQ     BCCBRA
00001BC2  B43C 0007               1051          CMP.B   #$7,D2
00001BC6  6700 0028               1052          BEQ     BCCBEQ
00001BCA  B43C 0006               1053          CMP.B   #$6,D2
00001BCE  6700 002A               1054          BEQ     BCCBNE
00001BD2  B43C 000D               1055          CMP.B   #$D,D2
00001BD6  6700 002C               1056          BEQ     BCCBLT
00001BDA  B43C 0002               1057          CMP.B   #$2,D2
00001BDE  6700 002E               1058          BEQ     BCCBHI
00001BE2                          1059  
00001BE2  6000 08D4               1060          BRA     INVOP
00001BE6                          1061  
00001BE6                          1062  BCCBRA
00001BE6  43F9 000026BC           1063          LEA     MBRA,A1
00001BEC  6000 002A               1064          BRA     BCCPRINT
00001BF0                          1065  BCCBEQ
00001BF0  43F9 000026AC           1066          LEA     MBEQ,A1
00001BF6  6000 0020               1067          BRA     BCCPRINT
00001BFA                          1068  BCCBNE
00001BFA  43F9 000026B0           1069          LEA     MBNE,A1
00001C00  6000 0016               1070          BRA     BCCPRINT
00001C04                          1071  BCCBLT
00001C04  43F9 000026B4           1072          LEA     MBLT,A1
00001C0A  6000 000C               1073          BRA     BCCPRINT
00001C0E                          1074  BCCBHI
00001C0E  43F9 000026B8           1075          LEA     MBHI,A1
00001C14  6000 0002               1076          BRA     BCCPRINT
00001C18                          1077  BCCPRINT
00001C18  103C 000E               1078          MOVE.B  #14,D0
00001C1C  4E4F                    1079          TRAP    #15
00001C1E  43F9 0000260F           1080          LEA     TAB,A1
00001C24  4E4F                    1081          TRAP    #15
00001C26  4E75                    1082          RTS
00001C28                          1083  
00001C28                          1084  ******************************************************************************************************
00001C28                          1085  *   Immediate data arithmetic operations
00001C28                          1086  *   SUBI
00001C28                          1087  
00001C28  13C5 00002714           1088  IMD     MOVE.B  D5,bit1
00001C2E  141E                    1089          MOVE.B  (A6)+,D2
00001C30                          1090  
00001C30  DE02                    1091          ADD.B   D2,D7
00001C32                          1092  
00001C32  1602                    1093          MOVE.B  D2,D3               Copies data at D2 to D3
00001C34                          1094          *   this gets digit in 10's place
00001C34  E80B                    1095          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001C36                          1096          *   this gets digit in 1's place
00001C36  E90A                    1097          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001C38  E80A                    1098          LSR.B   #4,D2               Shifts back right into 1's place
00001C3A                          1099  
00001C3A                          1100          *   D3 holds digit in 10's place
00001C3A                          1101          *   D2 holds digit in 1's place
00001C3A                          1102  
00001C3A  E20B                    1103          LSR.B   #1,D3
00001C3C  6400 0004               1104          BCC     IMD2
00001C40  5404                    1105          ADD.B   #$2,D4
00001C42  E20B                    1106  IMD2    LSR.B   #1,D3
00001C44  6400 0004               1107          BCC     IMD3
00001C48  5804                    1108          ADD.B   #$4,D4
00001C4A  B43C 0007               1109  IMD3    CMP.B   #$7,D2
00001C4E  6D00 0006               1110          BLT     IMD4
00001C52  5204                    1111          ADD.B   #$1,D4
00001C54  5102                    1112          SUB.B   #$8,D2
00001C56                          1113  
00001C56                          1114          *   Stores them into addr
00001C56  13C3 00002715           1115  IMD4    MOVE.B  D3,bit2
00001C5C  13C4 00002716           1116          MOVE.B  D4,bit3
00001C62  13C2 00002717           1117          MOVE.B  D2,bit4
00001C68                          1118  
00001C68                          1119  **************************
00001C68                          1120  * This finds the size of the operation
00001C68                          1121  
00001C68  0C39 0000 00002715      1122          CMP.B   #$0,bit2
00001C70  6700 0052               1123          BEQ     IMDBYTE
00001C74  0C39 0001 00002715      1124          CMP.B   #$1,bit2
00001C7C  6700 0056               1125          BEQ     IMDWORD
00001C80  0C39 0002 00002715      1126          CMP.B   #$2,bit2
00001C88  6700 0058               1127          BEQ     IMDLONG
00001C8C  6000 082A               1128          BRA     INVOP
00001C90                          1129  
00001C90                          1130  *************************************************************
00001C90                          1131  * Display IMD op-code
00001C90                          1132  IMDPRINT
00001C90  0C39 0000 00002714      1133          CMP.B   #$0,bit1
00001C98  6700 000E               1134          BEQ     IMDPRINTORI
00001C9C  0C39 0004 00002714      1135          CMP.B   #$4,bit1
00001CA4  6700 000C               1136          BEQ     IMDPRINTSUBI
00001CA8                          1137  
00001CA8                          1138  IMDPRINTORI
00001CA8  43F9 0000269C           1139          LEA     MORI,A1
00001CAE  6000 000C               1140          BRA     IMDPRINTEND
00001CB2                          1141  
00001CB2                          1142  IMDPRINTSUBI
00001CB2  43F9 00002696           1143          LEA     MSUBI,A1
00001CB8  6000 0002               1144          BRA     IMDPRINTEND
00001CBC                          1145  
00001CBC                          1146  IMDPRINTEND
00001CBC  103C 000E               1147          MOVE.B  #14,D0
00001CC0  4E4F                    1148          TRAP    #15
00001CC2  4E75                    1149          RTS
00001CC4                          1150  
00001CC4                          1151  *************************************************************
00001CC4                          1152  * Immediate data operation size BYTE
00001CC4                          1153  IMDBYTE
00001CC4  61CA                    1154          BSR     IMDPRINT
00001CC6  43F9 0000262D           1155          LEA     MBYTE,A1
00001CCC                          1156  
00001CCC                          1157          * Moves size to D4, needed to use DISPEA
00001CCC  183C 0001               1158          MOVE.B  #$1,D4
00001CD0  6000 001A               1159          BRA     IMDEA
00001CD4                          1160  
00001CD4                          1161  *************************************************************
00001CD4                          1162  * Immediate data operation size WORD
00001CD4                          1163  IMDWORD
00001CD4  61BA                    1164          BSR     IMDPRINT
00001CD6  43F9 00002630           1165          LEA     MWORD,A1
00001CDC                          1166  
00001CDC  1803                    1167          MOVE.B  D3,D4
00001CDE  6000 000C               1168          BRA     IMDEA
00001CE2                          1169  
00001CE2                          1170  
00001CE2                          1171  *************************************************************
00001CE2                          1172  * Immediate data operation size LONG
00001CE2                          1173  IMDLONG
00001CE2  61AC                    1174          BSR     IMDPRINT
00001CE4  43F9 00002633           1175          LEA     MLONG,A1
00001CEA                          1176          
00001CEA                          1177  
00001CEA                          1178          * Moves size to D4, needed to use DISPEA
00001CEA  1803                    1179          MOVE.B  D3,D4
00001CEC                          1180  
00001CEC                          1181  IMDEA
00001CEC                          1182          * This prints out the size and creates tab
00001CEC  103C 000E               1183          MOVE.B  #14,D0
00001CF0  4E4F                    1184          TRAP    #15
00001CF2  43F9 0000260F           1185          LEA     TAB,A1
00001CF8  103C 000E               1186          MOVE.B  #14,D0
00001CFC  4E4F                    1187          TRAP    #15
00001CFE                          1188          * Loads return address into A2
00001CFE  45F9 00001D08           1189          LEA     IMDEA2,A2
00001D04  6000 074A               1190          BRA     DISPEA
00001D08                          1191  IMDEA2
00001D08  43F9 00002613           1192          LEA     COMMA,A1
00001D0E  103C 000E               1193          MOVE.B  #14,D0
00001D12  4E4F                    1194          TRAP    #15
00001D14                          1195  
00001D14  45F9 00001D1E           1196          LEA     IMDEA3,A2
00001D1A  6000 05E4               1197          BRA     SUBEA
00001D1E                          1198  IMDEA3
00001D1E  6000 080A               1199          BRA     ENDNEWLINE
00001D22                          1200  
00001D22                          1201  ******************************************************************************************************
00001D22                          1202  * Miscellaneous section
00001D22                          1203  *   Not goes here
00001D22                          1204  
00001D22                          1205  MISC
00001D22  13C5 00002714           1206          MOVE.B  D5,bit1
00001D28  141E                    1207          MOVE.B  (A6)+,D2
00001D2A                          1208  
00001D2A  DE02                    1209          ADD.B   D2,D7
00001D2C                          1210  
00001D2C  1602                    1211          MOVE.B  D2,D3               Copies data at D2 to D3
00001D2E                          1212          *   this gets digit in 10's place
00001D2E  E80B                    1213          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001D30                          1214          *   this gets digit in 1's place
00001D30  E90A                    1215          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001D32  E80A                    1216          LSR.B   #4,D2               Shifts back right into 1's place
00001D34                          1217  
00001D34                          1218          *   D5 is bit1
00001D34                          1219          *   D3 is bit2
00001D34                          1220          *   D2 is bit3
00001D34                          1221  
00001D34                          1222  **************************
00001D34                          1223  * This finds the size of the operation
00001D34                          1224          * D5 is bit1
00001D34  BA3C 0004               1225          CMP.B   #$4,D5
00001D38  6700 FB80               1226          BEQ     NEGW
00001D3C  BA3C 0006               1227          CMP.B   #$6,D5              Branches to NOT section
00001D40  6700 0036               1228          BEQ     MISCNOT
00001D44  BA3C 000E               1229          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00001D48  6700 0006               1230          BEQ     MISCBIT2
00001D4C  6000 076A               1231          BRA     INVOP
00001D50                          1232  
00001D50                          1233  MISCBIT2
00001D50                          1234          * D3 is bit2
00001D50  B63C 0007               1235          CMP.B   #$7,D3              Branches to NOP
00001D54  6700 0006               1236          BEQ     MISCBIT3
00001D58  6000 075E               1237          BRA     INVOP
00001D5C                          1238  
00001D5C                          1239  MISCBIT3
00001D5C                          1240          * D2 is bit3
00001D5C  B43C 0001               1241          CMP.B   #$1,D2              Branches to NOP
00001D60  6700 0006               1242          BEQ     MISCNOP
00001D64  6000 0752               1243          BRA     INVOP
00001D68                          1244  
00001D68                          1245  ******************************************************
00001D68                          1246  * NOP
00001D68                          1247  * No operation
00001D68                          1248  MISCNOP
00001D68  43F9 000026C0           1249          LEA     MNOP,A1
00001D6E  103C 000E               1250          MOVE.B  #14,D0
00001D72  4E4F                    1251          TRAP    #15
00001D74                          1252  
00001D74  6000 07B4               1253          BRA     ENDNEWLINE          Goes to next opcode
00001D78                          1254  
00001D78                          1255  ******************************************************
00001D78                          1256  * NOT
00001D78                          1257  * Reuses some of IMD section to display because they have similar format
00001D78                          1258  *  (I was kinda lazy too)
00001D78                          1259  MISCNOT
00001D78  E20B                    1260          LSR.B   #1,D3
00001D7A  6400 0004               1261          BCC     MISCNOT2
00001D7E  5404                    1262          ADD.B   #$2,D4
00001D80                          1263  MISCNOT2   
00001D80  E20B                    1264          LSR.B   #1,D3
00001D82  6400 0004               1265          BCC     MISCNOT3
00001D86  5804                    1266          ADD.B   #$4,D4
00001D88                          1267  MISCNOT3   
00001D88  B43C 0007               1268          CMP.B   #$7,D2
00001D8C  6D00 0006               1269          BLT     MISCNOT4
00001D90  5204                    1270          ADD.B   #$1,D4
00001D92  5102                    1271          SUB.B   #$8,D2
00001D94                          1272  
00001D94                          1273          *   Stores them into addr
00001D94                          1274  MISCNOT4
00001D94  13C3 00002715           1275          MOVE.B  D3,bit2
00001D9A  13C4 00002716           1276          MOVE.B  D4,bit3
00001DA0  13C2 00002717           1277          MOVE.B  D2,bit4
00001DA6                          1278  
00001DA6  B63C 0000               1279          CMP.B   #$0,D3
00001DAA  6700 0016               1280          BEQ     MISCBYTE
00001DAE  B63C 0001               1281          CMP.B   #$1,D3
00001DB2  6700 0020               1282          BEQ     MISCWORD
00001DB6  B63C 0002               1283          CMP.B   #$2,D3
00001DBA  6700 0028               1284          BEQ     MISCLONG
00001DBE  6000 06F8               1285          BRA     INVOP
00001DC2                          1286  *************************************************************
00001DC2                          1287  * Immediate data operation size BYTE
00001DC2                          1288  MISCBYTE
00001DC2  6100 004C               1289          BSR     MISCPRINT
00001DC6  43F9 0000262D           1290          LEA     MBYTE,A1
00001DCC                          1291  
00001DCC                          1292          * Moves size to D4, needed to use DISPEA
00001DCC  183C 0001               1293          MOVE.B  #$1,D4
00001DD0  6000 001E               1294          BRA     MISCEA
00001DD4                          1295  
00001DD4                          1296  *************************************************************
00001DD4                          1297  * Immediate data operation size WORD
00001DD4                          1298  MISCWORD
00001DD4  6100 003A               1299          BSR     MISCPRINT
00001DD8  43F9 00002630           1300          LEA     MWORD,A1
00001DDE                          1301  
00001DDE  1803                    1302          MOVE.B  D3,D4
00001DE0  6000 000E               1303          BRA     MISCEA
00001DE4                          1304  
00001DE4                          1305  
00001DE4                          1306  *************************************************************
00001DE4                          1307  * Immediate data operation size LONG
00001DE4                          1308  MISCLONG
00001DE4  6100 002A               1309          BSR     MISCPRINT
00001DE8  43F9 00002633           1310          LEA     MLONG,A1
00001DEE                          1311  
00001DEE                          1312          * Moves size to D4, needed to use DISPEA
00001DEE  1803                    1313          MOVE.B  D3,D4
00001DF0                          1314  
00001DF0                          1315  MISCEA
00001DF0  103C 000E               1316          MOVE.B  #14,D0
00001DF4  4E4F                    1317          TRAP    #15
00001DF6  43F9 0000260F           1318          LEA     TAB,A1
00001DFC  103C 000E               1319          MOVE.B  #14,D0
00001E00  4E4F                    1320          TRAP    #15
00001E02                          1321  
00001E02  45F9 00001E0C           1322          LEA     MISCEA2,A2
00001E08  6000 04F6               1323          BRA     SUBEA
00001E0C                          1324  MISCEA2
00001E0C  6000 071C               1325          BRA     ENDNEWLINE
00001E10                          1326  
00001E10                          1327  *************************************************************
00001E10                          1328  * Display IMD op-code
00001E10                          1329  MISCPRINT
00001E10  0C39 0004 00002714      1330          CMP.B   #$4,bit1
00001E18  6700 0018               1331          BEQ     MISCPRINTNEG
00001E1C  0C39 0006 00002714      1332          CMP.B   #$6,bit1
00001E24  6700 0002               1333          BEQ     MISCPRINTNOT
00001E28                          1334  
00001E28                          1335  MISCPRINTNOT
00001E28  43F9 000026A1           1336          LEA     MNOT,A1
00001E2E  6000 000C               1337          BRA     MISCPRINTEND
00001E32                          1338  
00001E32                          1339  MISCPRINTNEG
00001E32  43F9 000026AC           1340          LEA     MNEG,A1
00001E38  6000 0002               1341          BRA     MISCPRINTEND
00001E3C                          1342  
00001E3C                          1343  MISCPRINTEND
00001E3C  103C 000E               1344          MOVE.B  #14,D0
00001E40  4E4F                    1345          TRAP    #15
00001E42  4E75                    1346          RTS
00001E44                          1347  
00001E44                          1348  
00001E44                          1349  ******************************************************************************************************
00001E44                          1350  * SUB section
00001E44                          1351  
00001E44                          1352          *   Grabs next two nibbles
00001E44  141E                    1353  SUB     MOVE.B  (A6)+,D2
00001E46                          1354  
00001E46  DE02                    1355          ADD.B   D2,D7
00001E48                          1356  
00001E48  1602                    1357          MOVE.B  D2,D3               Copies data at D2 to D3
00001E4A                          1358          *   this gets digit in 10's place
00001E4A  E80B                    1359          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001E4C                          1360          *   this gets digit in 1's place
00001E4C  E90A                    1361          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001E4E  E80A                    1362          LSR.B   #4,D2               Shifts back right into 1's place
00001E50                          1363  
00001E50                          1364          *   D3 holds digit in 10's place
00001E50                          1365          *   D2 holds digit in 1's place
00001E50                          1366  
00001E50                          1367          
00001E50                          1368          *   Converts nibble into 3-bit parts
00001E50  E20B                    1369          LSR.B   #1,D3
00001E52  6400 0004               1370          BCC     SUB2
00001E56  5404                    1371          ADD.B   #$2,D4
00001E58                          1372          
00001E58  E20B                    1373  SUB2    LSR.B   #1,D3
00001E5A  6400 0004               1374          BCC     SUB3
00001E5E  5804                    1375          ADD.B   #$4,D4
00001E60                          1376          
00001E60  1205                    1377  SUB3    MOVE.B  D5,D1
00001E62  E209                    1378          LSR.B   #1,D1
00001E64  6400 0004               1379          BCC     SUB4
00001E68  5803                    1380          ADD.B   #$4,D3
00001E6A                          1381  
00001E6A  B43C 0007               1382  SUB4    CMP.B   #$7,D2
00001E6E  6D00 0006               1383          BLT     SUB1
00001E72  5204                    1384          ADD.B   #$1,D4
00001E74  5102                    1385          SUB.B   #$8,D2
00001E76                          1386  
00001E76                          1387          *   Stores them into addr
00001E76  13C1 00002714           1388  SUB1    MOVE.B  D1,bit1
00001E7C  13C3 00002715           1389          MOVE.B  D3,bit2
00001E82  13C4 00002716           1390          MOVE.B  D4,bit3
00001E88  13C2 00002717           1391          MOVE.B  D2,bit4
00001E8E                          1392  
00001E8E                          1393          * do this later
00001E8E  4241                    1394          CLR     D1
00001E90  7400                    1395          MOVE.L  #0,D2
00001E92  7600                    1396          MOVE.L  #0,D3
00001E94  7800                    1397          MOVE.L  #0,D4
00001E96  7A00                    1398          MOVE.L  #0,D5
00001E98  7C00                    1399          MOVE.L  #0,D6
00001E9A                          1400  
00001E9A                          1401          
00001E9A                          1402  ******************************************************************************************************
00001E9A                          1403  * After spliting the op-code into SUB's defined groupings
00001E9A                          1404  *   This figures out which operation it is and goes to that sub-routine
00001E9A                          1405  
00001E9A                          1406          * This will display SUBA instead  -- check this later
00001E9A  0C39 0003 00002715      1407          CMP.B   #$3,bit2
00001EA2  6700 01E6               1408          BEQ     SUBA
00001EA6  0C39 0007 00002715      1409          CMP.B   #$7,bit2
00001EAE  6700 01DA               1410          BEQ     SUBA
00001EB2                          1411          * Both muls and SUBA branch from #7 -- check it out
00001EB2                          1412          * check out SUBPRINT to see how i fixed it
00001EB2                          1413          * BEQ     MULSW
00001EB2                          1414  
00001EB2                          1415          * This will find the size and stuff
00001EB2  0C39 0000 00002715      1416          CMP.B   #$0,bit2
00001EBA  6700 003E               1417          BEQ     SUBSIZE1
00001EBE  0C39 0001 00002715      1418          CMP.B   #$1,bit2
00001EC6  6700 0072               1419          BEQ     SUBSIZE2
00001ECA  0C39 0002 00002715      1420          CMP.B   #$2,bit2
00001ED2  6700 00A6               1421          BEQ     SUBSIZE3
00001ED6  0C39 0004 00002715      1422          CMP.B   #$4,bit2
00001EDE  6700 00DA               1423          BEQ     SUBSIZE4
00001EE2  0C39 0005 00002715      1424          CMP.B   #$5,bit2
00001EEA  6700 0112               1425          BEQ     SUBSIZE5
00001EEE  0C39 0006 00002715      1426          CMP.B   #$6,bit2
00001EF6  6700 014A               1427          BEQ     SUBSIZE6
00001EFA                          1428     
00001EFA                          1429  ******************************************************************************************************
00001EFA                          1430  *   Displays size, then does operation order
00001EFA                          1431  
00001EFA                          1432  *   000 byte    EA,DN
00001EFA                          1433  SUBSIZE1
00001EFA  6100 0228               1434          BSR     SUBPRINT
00001EFE  43F9 0000262D           1435          LEA     MBYTE,A1
00001F04  103C 000E               1436          MOVE.B  #14,D0
00001F08  4E4F                    1437          TRAP    #15
00001F0A  43F9 0000260F           1438          LEA     TAB,A1
00001F10  103C 000E               1439          MOVE.B  #14,D0
00001F14  4E4F                    1440          TRAP    #15
00001F16                          1441  
00001F16  45F9 00001F20           1442          LEA     SUBSIZE11,A2
00001F1C  6000 03E2               1443          BRA     SUBEA
00001F20                          1444  SUBSIZE11
00001F20  45F9 00001F36           1445          LEA     SUBSIZE12,A2
00001F26  43F9 00002613           1446          LEA     COMMA,A1
00001F2C  103C 000E               1447          MOVE.B  #14,D0
00001F30  4E4F                    1448          TRAP    #15
00001F32  6000 02A8               1449          BRA     SUBDN
00001F36                          1450  SUBSIZE12
00001F36  6000 05F2               1451          BRA     ENDNEWLINE
00001F3A                          1452  
00001F3A                          1453  *************************************************
00001F3A                          1454  *   001 word    EA,DN
00001F3A                          1455  SUBSIZE2
00001F3A  6100 01E8               1456          BSR     SUBPRINT
00001F3E  43F9 00002630           1457          LEA     MWORD,A1
00001F44  103C 000E               1458          MOVE.B  #14,D0
00001F48  4E4F                    1459          TRAP    #15
00001F4A  43F9 0000260F           1460          LEA     TAB,A1
00001F50  103C 000E               1461          MOVE.B  #14,D0
00001F54  4E4F                    1462          TRAP    #15
00001F56                          1463  
00001F56  45F9 00001F60           1464          LEA     SUBSIZE21,A2
00001F5C  6000 03A2               1465          BRA     SUBEA
00001F60                          1466  SUBSIZE21
00001F60  45F9 00001F76           1467          LEA     SUBSIZE22,A2
00001F66  43F9 00002613           1468          LEA     COMMA,A1
00001F6C  103C 000E               1469          MOVE.B  #14,D0
00001F70  4E4F                    1470          TRAP    #15
00001F72  6000 0268               1471          BRA     SUBDN
00001F76                          1472  SUBSIZE22
00001F76  6000 05B2               1473          BRA     ENDNEWLINE
00001F7A                          1474  
00001F7A                          1475  *************************************************
00001F7A                          1476  *   010 long    EA,DN
00001F7A                          1477  SUBSIZE3
00001F7A  6100 01A8               1478          BSR     SUBPRINT
00001F7E  43F9 00002633           1479          LEA     MLONG,A1
00001F84  103C 000E               1480          MOVE.B  #14,D0
00001F88  4E4F                    1481          TRAP    #15
00001F8A  43F9 0000260F           1482          LEA     TAB,A1
00001F90  103C 000E               1483          MOVE.B  #14,D0
00001F94  4E4F                    1484          TRAP    #15
00001F96                          1485  
00001F96  45F9 00001FA0           1486          LEA     SUBSIZE31,A2
00001F9C  6000 0362               1487          BRA     SUBEA
00001FA0                          1488  SUBSIZE31
00001FA0  45F9 00001FB6           1489          LEA     SUBSIZE32,A2
00001FA6  43F9 00002613           1490          LEA     COMMA,A1
00001FAC  103C 000E               1491          MOVE.B  #14,D0
00001FB0  4E4F                    1492          TRAP    #15
00001FB2  6000 0228               1493          BRA     SUBDN
00001FB6                          1494  SUBSIZE32
00001FB6  6000 0572               1495          BRA     ENDNEWLINE
00001FBA                          1496  
00001FBA                          1497  *************************************************
00001FBA                          1498  *   100 byte    DN,EA
00001FBA                          1499  SUBSIZE4
00001FBA  6100 0168               1500          BSR     SUBPRINT
00001FBE  43F9 0000262D           1501          LEA     MBYTE,A1
00001FC4  103C 000E               1502          MOVE.B  #14,D0
00001FC8  4E4F                    1503          TRAP    #15
00001FCA  43F9 0000260F           1504          LEA     TAB,A1
00001FD0  103C 000E               1505          MOVE.B  #14,D0
00001FD4  4E4F                    1506          TRAP    #15
00001FD6                          1507  
00001FD6  6100 01C2               1508          BSR     SUBERRORTEST1
00001FDA                          1509  
00001FDA  45F9 00001FE4           1510          LEA     SUBSIZE41,A2
00001FE0  6000 01FA               1511          BRA     SUBDN
00001FE4                          1512  SUBSIZE41
00001FE4  45F9 00001FFA           1513          LEA     SUBSIZE42,A2
00001FEA  43F9 00002613           1514          LEA     COMMA,A1
00001FF0  103C 000E               1515          MOVE.B  #14,D0
00001FF4  4E4F                    1516          TRAP    #15
00001FF6  6000 0308               1517          BRA     SUBEA
00001FFA                          1518  SUBSIZE42
00001FFA  6000 052E               1519          BRA     ENDNEWLINE
00001FFE                          1520  
00001FFE                          1521  *************************************************
00001FFE                          1522  *   101 word    DN,EA
00001FFE                          1523  SUBSIZE5
00001FFE  6100 019A               1524          BSR     SUBERRORTEST1               * This does error testing
00002002  6100 0120               1525          BSR     SUBPRINT                    * Prints out 'SUB.'
00002006  43F9 00002630           1526          LEA     MWORD,A1
0000200C  103C 000E               1527          MOVE.B  #14,D0
00002010  4E4F                    1528          TRAP    #15
00002012  43F9 0000260F           1529          LEA     TAB,A1
00002018  103C 000E               1530          MOVE.B  #14,D0
0000201C  4E4F                    1531          TRAP    #15
0000201E                          1532  
0000201E  45F9 00002028           1533          LEA     SUBSIZE51,A2
00002024  6000 01B6               1534          BRA     SUBDN
00002028                          1535  SUBSIZE51
00002028  45F9 0000203E           1536          LEA     SUBSIZE52,A2
0000202E  43F9 00002613           1537          LEA     COMMA,A1
00002034  103C 000E               1538          MOVE.B  #14,D0
00002038  4E4F                    1539          TRAP    #15
0000203A  6000 02C4               1540          BRA     SUBEA
0000203E                          1541  SUBSIZE52
0000203E  6000 04EA               1542          BRA     ENDNEWLINE
00002042                          1543  
00002042                          1544  *************************************************
00002042                          1545  *   110 long    DN,EA
00002042                          1546  SUBSIZE6
00002042  6100 0156               1547          BSR     SUBERRORTEST1               * This does error testing
00002046  6100 00DC               1548          BSR     SUBPRINT                    * Prints out 'SUB.'
0000204A  43F9 00002633           1549          LEA     MLONG,A1
00002050  103C 000E               1550          MOVE.B  #14,D0
00002054  4E4F                    1551          TRAP    #15
00002056  43F9 0000260F           1552          LEA     TAB,A1
0000205C  103C 000E               1553          MOVE.B  #14,D0
00002060  4E4F                    1554          TRAP    #15
00002062                          1555  
00002062  6100 0136               1556          BSR     SUBERRORTEST1
00002066                          1557  
00002066  45F9 00002070           1558          LEA     SUBSIZE61,A2
0000206C  6000 016E               1559          BRA     SUBDN
00002070                          1560  SUBSIZE61
00002070  45F9 00002086           1561          LEA     SUBSIZE62,A2
00002076  43F9 00002613           1562          LEA     COMMA,A1
0000207C  103C 000E               1563          MOVE.B  #14,D0
00002080  4E4F                    1564          TRAP    #15
00002082  6000 027C               1565          BRA     SUBEA
00002086                          1566  SUBSIZE62
00002086  6000 04A2               1567          BRA     ENDNEWLINE
0000208A                          1568  
0000208A                          1569  ****************************************************************************
0000208A                          1570  *   This section is for SUBA
0000208A                          1571  *   Displays 'SUBA.' then decodes the op-code as SUBA
0000208A                          1572  SUBA
0000208A  43F9 00002686           1573          LEA     MSUBA,A1                    Displays 'SUBA.'
00002090  103C 000E               1574          MOVE.B  #14,D0
00002094  4E4F                    1575          TRAP    #15
00002096                          1576          
00002096                          1577          * Does the rest of SUBA
00002096  0C39 0003 00002715      1578          CMP.B   #$3,bit2
0000209E  6700 000E               1579          BEQ     SUBSIZE7
000020A2  0C39 0007 00002715      1580          CMP.B   #$7,bit2
000020AA  6700 003E               1581          BEQ     SUBSIZE8
000020AE                          1582  
000020AE                          1583  *************************************************
000020AE                          1584  *   SUBA Word   ea,An
000020AE                          1585  SUBSIZE7
000020AE  43F9 00002630           1586          LEA     MWORD,A1
000020B4  103C 000E               1587          MOVE.B  #14,D0
000020B8  4E4F                    1588          TRAP    #15
000020BA  43F9 0000260F           1589          LEA     TAB,A1
000020C0  103C 000E               1590          MOVE.B  #14,D0
000020C4  4E4F                    1591          TRAP    #15
000020C6                          1592  
000020C6  45F9 000020D0           1593          LEA     SUBSIZE71,A2
000020CC  6000 0232               1594          BRA     SUBEA
000020D0                          1595  SUBSIZE71
000020D0  45F9 000020E6           1596          LEA     SUBSIZE72,A2
000020D6  43F9 00002613           1597          LEA     COMMA,A1
000020DC  103C 000E               1598          MOVE.B  #14,D0
000020E0  4E4F                    1599          TRAP    #15
000020E2  6000 014C               1600          BRA     SUBAN2
000020E6                          1601  SUBSIZE72
000020E6  6000 0442               1602          BRA     ENDNEWLINE
000020EA                          1603  
000020EA                          1604  *************************************************
000020EA                          1605  *   SUBA longword   ea,An
000020EA                          1606  SUBSIZE8
000020EA  43F9 00002633           1607          LEA     MLONG,A1
000020F0  103C 000E               1608          MOVE.B  #14,D0
000020F4  4E4F                    1609          TRAP    #15
000020F6  43F9 0000260F           1610          LEA     TAB,A1
000020FC  103C 000E               1611          MOVE.B  #14,D0
00002100  4E4F                    1612          TRAP    #15
00002102                          1613  
00002102  45F8 20D0               1614          LEA     SUBSIZE71,A2
00002106  6000 01F8               1615          BRA     SUBEA
0000210A                          1616  SUBSIZE81
0000210A  45F8 20E6               1617          LEA     SUBSIZE72,A2
0000210E  43F9 00002613           1618          LEA     COMMA,A1
00002114  103C 000E               1619          MOVE.B  #14,D0
00002118  4E4F                    1620          TRAP    #15
0000211A  6000 0114               1621          BRA     SUBAN2
0000211E                          1622  SUBSIZE82
0000211E  6000 040A               1623          BRA     ENDNEWLINE
00002122                          1624  
00002122                          1625  *************************************************
00002122                          1626  * Jumps to memory location at A2
00002122                          1627  SUBJMPA2
00002122  4ED2                    1628          JMP     (A2)
00002124                          1629  
00002124                          1630  *************************************************
00002124                          1631  * Prints out opcode name
00002124                          1632  SUBPRINT
00002124  0C39 0009 00002713      1633          CMP.B   #$9,bit0                Prints SUB
0000212C  6700 002A               1634          BEQ     SUBPRINTSUB
00002130  0C39 000C 00002713      1635          CMP.B   #$C,bit0                Prints AND
00002138  6700 000E               1636          BEQ     SUBPRINTC
0000213C  0C39 000D 00002713      1637          CMP.B   #$D,bit0                Prints ADD
00002144  6700 0032               1638          BEQ     SUBPRINTADD
00002148                          1639  
00002148                          1640  SUBPRINTC
00002148  0C39 0007 00002715      1641          CMP.B   #$7,bit2                If bit2 is 7, op-code is MULS
00002150  6700 0036               1642          BEQ     SUBPRINTMULS
00002154                          1643          
00002154  6000 0012               1644          BRA     SUBPRINTAND             Else, op-code is AND
00002158                          1645  
00002158                          1646  SUBPRINTSUB   * Displays 'SUB.' 
00002158  43F9 00002681           1647          LEA     MSUB,A1
0000215E  103C 000E               1648          MOVE.B  #14,D0
00002162  4E4F                    1649          TRAP    #15
00002164  6000 0032               1650          BRA     SUBPRINTEND
00002168                          1651  
00002168                          1652  SUBPRINTAND   * Displays 'AND.' 
00002168  43F9 0000268C           1653          LEA     MAND,A1
0000216E  103C 000E               1654          MOVE.B  #14,D0
00002172  4E4F                    1655          TRAP    #15
00002174  6000 0022               1656          BRA     SUBPRINTEND
00002178                          1657  
00002178                          1658  SUBPRINTADD   * Displays 'ADD.' 
00002178  43F9 00002691           1659          LEA     MADD,A1
0000217E  103C 000E               1660          MOVE.B  #14,D0
00002182  4E4F                    1661          TRAP    #15
00002184  6000 0012               1662          BRA     SUBPRINTEND
00002188                          1663  
00002188                          1664  SUBPRINTMULS
00002188  43F9 000026A6           1665          LEA     MMUL,A1
0000218E  103C 000E               1666          MOVE.B  #14,D0
00002192  4E4F                    1667          TRAP    #15
00002194  6000 0002               1668          BRA     SUBPRINTEND
00002198                          1669  
00002198                          1670  SUBPRINTEND
00002198  4E75                    1671          RTS
0000219A                          1672  
0000219A                          1673  
0000219A                          1674  *******************************************************************
0000219A                          1675  * Error testing for DN->EA operations
0000219A                          1676  *  Data register, address register, and immediate data cannot be destinations
0000219A                          1677  SUBERRORTEST1
0000219A                          1678          * test for DN or AN register, branches to invalid op code if true
0000219A  0C39 0000 00002716      1679          CMP.B   #0,bit3
000021A2  6700 0314               1680          BEQ     INVOP
000021A6  0C39 0001 00002716      1681          CMP.B   #1,bit3
000021AE  6700 0308               1682          BEQ     INVOP
000021B2                          1683          
000021B2                          1684          * check if destination is immediate data
000021B2  0C39 0007 00002716      1685          CMP.B   #7,bit3
000021BA  6600 001E               1686          BNE     SUBERRORTEST11
000021BE  0C39 0000 00002717      1687          CMP.B   #0,bit4
000021C6  6700 0012               1688          BEQ     SUBERRORTEST11
000021CA  0C39 0001 00002717      1689          CMP.B   #1,bit4
000021D2  6700 0006               1690          BEQ     SUBERRORTEST11
000021D6  6000 02E0               1691          BRA     INVOP
000021DA                          1692          
000021DA                          1693  SUBERRORTEST11
000021DA  4E75                    1694          RTS
000021DC                          1695  
000021DC                          1696  
000021DC                          1697  ******************************************************************************************************
000021DC                          1698  *   Displays data register
000021DC                          1699  SUBDN
000021DC  43F9 00002636           1700          LEA     MDN,A1
000021E2  103C 000E               1701          MOVE.B  #14,D0
000021E6  4E4F                    1702          TRAP    #15
000021E8                          1703  
000021E8  1239 00002714           1704          MOVE.B  bit1,D1
000021EE  103C 0003               1705          MOVE.B  #3,D0
000021F2  4E4F                    1706          TRAP    #15
000021F4                          1707          
000021F4  6000 FF2C               1708          BRA     SUBJMPA2
000021F8                          1709  
000021F8                          1710  *   Displays data register
000021F8                          1711  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
000021F8                          1712  SUBDN2
000021F8  43F9 00002636           1713          LEA     MDN,A1
000021FE  103C 000E               1714          MOVE.B  #14,D0
00002202  4E4F                    1715          TRAP    #15
00002204                          1716  
00002204  1239 00002717           1717          MOVE.B  bit4,D1
0000220A  103C 0003               1718          MOVE.B  #3,D0
0000220E  4E4F                    1719          TRAP    #15
00002210                          1720          
00002210  6000 FF10               1721          BRA     SUBJMPA2
00002214                          1722  
00002214                          1723  *   Displays address register
00002214                          1724  SUBAN
00002214  43F9 00002638           1725          LEA     MAN,A1
0000221A  103C 000E               1726          MOVE.B  #14,D0
0000221E  4E4F                    1727          TRAP    #15
00002220                          1728  
00002220  1239 00002717           1729          MOVE.B  bit4,D1
00002226  103C 0003               1730          MOVE.B  #3,D0
0000222A  4E4F                    1731          TRAP    #15
0000222C                          1732          
0000222C  6000 FEF4               1733          BRA     SUBJMPA2
00002230                          1734  
00002230                          1735  *   Displays address register
00002230                          1736  *   This is for SUBA, SUBA puts An into bit1
00002230                          1737  SUBAN2
00002230  43F9 00002638           1738          LEA     MAN,A1
00002236  103C 000E               1739          MOVE.B  #14,D0
0000223A  4E4F                    1740          TRAP    #15
0000223C                          1741  
0000223C  1239 00002714           1742          MOVE.B  bit1,D1
00002242  103C 0003               1743          MOVE.B  #3,D0
00002246  4E4F                    1744          TRAP    #15
00002248                          1745          
00002248  6000 FED8               1746          BRA     SUBJMPA2
0000224C                          1747  
0000224C                          1748  
0000224C                          1749  *   Displays indirect address register
0000224C                          1750  SUBANID
0000224C  43F9 00002615           1751          LEA     OPENBRA,A1
00002252  103C 000E               1752          MOVE.B  #14,D0
00002256  4E4F                    1753          TRAP    #15
00002258                          1754  
00002258  43F9 00002638           1755          LEA     MAN,A1
0000225E  103C 000E               1756          MOVE.B  #14,D0
00002262  4E4F                    1757          TRAP    #15
00002264                          1758  
00002264  1239 00002717           1759          MOVE.B  bit4,D1
0000226A  103C 0003               1760          MOVE.B  #3,D0
0000226E  4E4F                    1761          TRAP    #15
00002270                          1762  
00002270  43F9 00002617           1763          LEA     CLOSEBRA,A1
00002276  103C 000E               1764          MOVE.B  #14,D0
0000227A  4E4F                    1765          TRAP    #15
0000227C                          1766  
0000227C  6000 FEA4               1767          BRA     SUBJMPA2
00002280                          1768  
00002280                          1769  *   Displays indirect address register with post increment
00002280                          1770  SUBANIDPOS
00002280  43F9 00002615           1771          LEA     OPENBRA,A1
00002286  103C 000E               1772          MOVE.B  #14,D0
0000228A  4E4F                    1773          TRAP    #15
0000228C                          1774  
0000228C  43F9 00002638           1775          LEA     MAN,A1
00002292  103C 000E               1776          MOVE.B  #14,D0
00002296  4E4F                    1777          TRAP    #15
00002298                          1778  
00002298  1239 00002717           1779          MOVE.B  bit4,D1
0000229E  103C 0003               1780          MOVE.B  #3,D0
000022A2  4E4F                    1781          TRAP    #15
000022A4                          1782  
000022A4  43F9 00002617           1783          LEA     CLOSEBRA,A1
000022AA  103C 000E               1784          MOVE.B  #14,D0
000022AE  4E4F                    1785          TRAP    #15
000022B0                          1786  
000022B0  43F9 00002619           1787          LEA     POS,A1
000022B6  103C 000E               1788          MOVE.B  #14,D0
000022BA  4E4F                    1789          TRAP    #15
000022BC                          1790  
000022BC  6000 FE64               1791          BRA     SUBJMPA2
000022C0                          1792  
000022C0                          1793  *   Displays indirect address register with pre decrement
000022C0                          1794  SUBANIDNEG
000022C0  43F9 0000261B           1795          LEA     NEG,A1
000022C6  103C 000E               1796          MOVE.B  #14,D0
000022CA  4E4F                    1797          TRAP    #15
000022CC                          1798  
000022CC  43F9 00002615           1799          LEA     OPENBRA,A1
000022D2  103C 000E               1800          MOVE.B  #14,D0
000022D6  4E4F                    1801          TRAP    #15
000022D8                          1802  
000022D8  43F9 00002638           1803          LEA     MAN,A1
000022DE  103C 000E               1804          MOVE.B  #14,D0
000022E2  4E4F                    1805          TRAP    #15
000022E4                          1806  
000022E4  1239 00002717           1807          MOVE.B  bit4,D1
000022EA  103C 0003               1808          MOVE.B  #3,D0
000022EE  4E4F                    1809          TRAP    #15
000022F0                          1810  
000022F0  43F9 00002617           1811          LEA     CLOSEBRA,A1
000022F6  103C 000E               1812          MOVE.B  #14,D0
000022FA  4E4F                    1813          TRAP    #15
000022FC                          1814  
000022FC  6000 FE24               1815          BRA     SUBJMPA2
00002300                          1816  
00002300                          1817  
00002300                          1818  
00002300                          1819  
00002300                          1820  ******************************************************************************************************
00002300                          1821  * Displays the EA as hex numbers
00002300                          1822  * 
00002300                          1823  SUBEA
00002300                          1824          *   This finds which mode to use
00002300  0C39 0000 00002716      1825          CMP.B   #$0,bit3
00002308  6700 FEEE               1826          BEQ     SUBDN2
0000230C  0C39 0001 00002716      1827          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002314  6700 FEFE               1828          BEQ     SUBAN
00002318  0C39 0002 00002716      1829          CMP.B   #$2,bit3
00002320  6700 FF2A               1830          BEQ     SUBANID
00002324  0C39 0003 00002716      1831          CMP.B   #$3,bit3
0000232C  6700 FF52               1832          BEQ     SUBANIDPOS
00002330  0C39 0004 00002716      1833          CMP.B   #$4,bit3
00002338  6786                    1834          BEQ     SUBANIDNEG
0000233A  0C39 0005 00002716      1835          CMP.B   #$5,bit3
00002342  6700 02A4               1836          BEQ     ERROR
00002346  0C39 0006 00002716      1837          CMP.B   #$6,bit3
0000234E  6700 0298               1838          BEQ     ERROR
00002352  0C39 0007 00002716      1839          CMP.B   #$7,bit3
0000235A  6700 0002               1840          BEQ     SUBEAHEX
0000235E                          1841  
0000235E                          1842  SUBEAHEX
0000235E  0C39 0004 00002717      1843          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002366  6700 0086               1844          BEQ     SUBEAID
0000236A                          1845  SUBEAID2
0000236A                          1846          *   Else it will assume it is absolute addressing mode
0000236A  43F9 0000262B           1847          LEA     MHEX,A1
00002370  103C 000E               1848          MOVE.B  #14,D0
00002374  4E4F                    1849          TRAP    #15
00002376                          1850  
00002376  0C39 0000 00002717      1851          CMP.B   #$0,bit4
0000237E  6700 007E               1852          BEQ     SUBEAHEX1
00002382  0C39 0001 00002717      1853          CMP.B   #$1,bit4
0000238A  6700 007A               1854          BEQ     SUBEAHEX2
0000238E                          1855  
0000238E  0C39 0000 00002715      1856          CMP.B   #$0,bit2            * SUB byte displays as word
00002396  6700 0066               1857          BEQ     SUBEAHEX1
0000239A  0C39 0004 00002715      1858          CMP.B   #$4,bit2            * SUB byte displays as word
000023A2  6700 005A               1859          BEQ     SUBEAHEX1
000023A6  0C39 0001 00002715      1860          CMP.B   #$1,bit2            * SUB word
000023AE  6700 004E               1861          BEQ     SUBEAHEX1
000023B2  0C39 0005 00002715      1862          CMP.B   #$5,bit2            * SUB word
000023BA  6700 0042               1863          BEQ     SUBEAHEX1
000023BE  0C39 0003 00002715      1864          CMP.B   #$3,bit2            * SUBA word
000023C6  6700 0036               1865          BEQ     SUBEAHEX1
000023CA  0C39 0002 00002715      1866          CMP.B   #$2,bit2            * SUB longword
000023D2  6700 0032               1867          BEQ     SUBEAHEX2
000023D6  0C39 0006 00002715      1868          CMP.B   #$6,bit2            * SUB longword
000023DE  6700 0026               1869          BEQ     SUBEAHEX2
000023E2  0C39 0007 00002715      1870          CMP.B   #$7,bit2            * SUBA longword
000023EA  6700 001A               1871          BEQ     SUBEAHEX2
000023EE                          1872  
000023EE                          1873  SUBEAID
000023EE  43F9 0000261D           1874          LEA     HASH,A1
000023F4  103C 000E               1875          MOVE.B  #14,D0
000023F8  4E4F                    1876          TRAP    #15
000023FA  6000 FF6E               1877          BRA     SUBEAID2
000023FE                          1878  
000023FE                          1879  SUBEAHEX1  
000023FE                          1880          *absolute address word
000023FE  1E3C 0002               1881          MOVE.B  #2,D7
00002402  6000 000A               1882          BRA     SUBEAHEX3
00002406                          1883  
00002406                          1884  SUBEAHEX2  *absolute address long
00002406  1E3C 0004               1885          MOVE.B  #4,D7
0000240A  6000 0002               1886          BRA     SUBEAHEX3
0000240E                          1887  
0000240E                          1888  SUBEAHEX3
0000240E  BE3C 0000               1889          CMP.B   #0,D7               Compares current addr to ending addr
00002412  6700 FD0E               1890          BEQ     SUBJMPA2            Branches to done if they are equal
00002416                          1891  
00002416                          1892      
00002416  141E                    1893          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002418                          1894          
00002418  1602                    1895          MOVE.B  D2,D3               Copies data at D2 to D3
0000241A                          1896          *   this gets digit in 10's place
0000241A  E80B                    1897          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000241C                          1898          *   this gets digit in 1's place
0000241C  E90A                    1899          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000241E  E80A                    1900          LSR.B   #4,D2               Shifts back right into 1's place
00002420                          1901  
00002420                          1902          
00002420                          1903          *   D3 holds digit in 10's place
00002420                          1904          *   D2 holds digit in 1's place
00002420                          1905          
00002420  1203                    1906          MOVE.B  D3,D1               Displays digit in 10's place first
00002422                          1907  
00002422                          1908          *   converts digits 10+ into letters
00002422                          1909  
00002422  47F9 00002436           1910          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002428  B23C 0009               1911          CMP.B   #9,D1               Compares digit to 9
0000242C  6E00 0146               1912          BGT     CONV                Print out letter representation if greater than 9
00002430                          1913  
00002430  103C 0003               1914          MOVE.B  #3,D0               Displays digit if it is less than A
00002434  4E4F                    1915          TRAP    #15
00002436                          1916          
00002436                          1917  SUBEAHEX4    
00002436  1202                    1918          MOVE.B  D2,D1               Displays digit in 1's place second
00002438                          1919  
00002438                          1920          *   converts digits 10+ into letters
00002438  47F9 0000244C           1921          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
0000243E  B23C 0009               1922          CMP.B   #9,D1               Compares digit to 9
00002442  6E00 0130               1923          BGT     CONV                Print out letter representation if greater than 9
00002446                          1924          
00002446  103C 0003               1925          MOVE.B  #3,D0               Displays digit if it is less than A
0000244A  4E4F                    1926          TRAP    #15
0000244C                          1927          
0000244C                          1928  SUBEAHEX5         
0000244C                          1929  * Display counter -- creates new line every 8 bytes
0000244C                          1930          * D7 is used as counter
0000244C                          1931          
0000244C  5307                    1932          SUB.B   #1,D7                       
0000244E  60BE                    1933          BRA     SUBEAHEX3              Loops back to display next address
00002450                          1934  
00002450                          1935  ***   display EA ends here
00002450                          1936  
00002450                          1937  ******************************************************************************************************
00002450                          1938  * Displays the EA as hex numbers
00002450                          1939  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002450                          1940  * OUTPUT: Displays size of EA reading from A6
00002450                          1941  * Jumps to location stored in A2 when finished
00002450                          1942  DISPEA
00002450  43F9 0000262B           1943          LEA     MHEX,A1
00002456  103C 000E               1944          MOVE.B  #14,D0
0000245A  4E4F                    1945          TRAP    #15
0000245C                          1946  
0000245C  B83C 0002               1947          CMP.B   #$2,D4              Branches to longword display if size is 2
00002460  6700 000A               1948          BEQ     DISPEALONG          Else it will assume word length
00002464                          1949  
00002464                          1950  DISPEAWORD
00002464                          1951          *absolute address word
00002464  1E3C 0002               1952          MOVE.B  #2,D7
00002468  6000 000A               1953          BRA     DISPEA3
0000246C                          1954   
0000246C                          1955  DISPEALONG
0000246C                          1956          *absolute address long
0000246C  1E3C 0004               1957          MOVE.B  #4,D7
00002470  6000 0002               1958          BRA     DISPEA3
00002474                          1959  
00002474                          1960  DISPEA3
00002474  BE3C 0000               1961          CMP.B   #0,D7               Compares current addr to ending addr
00002478  6700 FCA8               1962          BEQ     SUBJMPA2            Branches to done if they are equal
0000247C                          1963  
0000247C                          1964      
0000247C  141E                    1965          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000247E                          1966          
0000247E  1602                    1967          MOVE.B  D2,D3               Copies data at D2 to D3
00002480                          1968          *   this gets digit in 10's place
00002480  E80B                    1969          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002482                          1970          *   this gets digit in 1's place
00002482  E90A                    1971          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002484  E80A                    1972          LSR.B   #4,D2               Shifts back right into 1's place
00002486                          1973  
00002486                          1974          
00002486                          1975          *   D3 holds digit in 10's place
00002486                          1976          *   D2 holds digit in 1's place
00002486                          1977          
00002486  1203                    1978          MOVE.B  D3,D1               Displays digit in 10's place first
00002488                          1979  
00002488                          1980          *   converts digits 10+ into letters
00002488                          1981  
00002488  47F9 0000249C           1982          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
0000248E  B23C 0009               1983          CMP.B   #9,D1               Compares digit to 9
00002492  6E00 00E0               1984          BGT     CONV                Print out letter representation if greater than 9
00002496                          1985  
00002496  103C 0003               1986          MOVE.B  #3,D0               Displays digit if it is less than A
0000249A  4E4F                    1987          TRAP    #15
0000249C                          1988    
0000249C                          1989  DISPEA4
0000249C  1202                    1990          MOVE.B  D2,D1               Displays digit in 1's place second
0000249E                          1991  
0000249E                          1992          *   converts digits 10+ into letters
0000249E  47F9 000024B2           1993          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
000024A4  B23C 0009               1994          CMP.B   #9,D1               Compares digit to 9
000024A8  6E00 00CA               1995          BGT     CONV                Print out letter representation if greater than 9
000024AC                          1996          
000024AC  103C 0003               1997          MOVE.B  #3,D0               Displays digit if it is less than A
000024B0  4E4F                    1998          TRAP    #15
000024B2                          1999        
000024B2                          2000  DISPEA5
000024B2                          2001  * Display counter -- creates new line every 8 bytes
000024B2                          2002          * D7 is used as counter
000024B2                          2003          
000024B2  5307                    2004          SUB.B   #1,D7                       
000024B4  60BE                    2005          BRA     DISPEA3              Loops back to display next address
000024B6                          2006  
000024B6                          2007  ***   display EA ends here
000024B6                          2008  
000024B6                          2009  
000024B6                          2010  ********************************************************************
000024B6                          2011  * Invalid op-code handling
000024B6                          2012  * Displays DATA YYYY
000024B6                          2013  *  YYYY represents the op-code that failed
000024B6                          2014  INVOPCODE
000024B6  DE1E                    2015          ADD.B   (A6)+,D7
000024B8                          2016  
000024B8                          2017  INVOP
000024B8  43F9 0000267C           2018          LEA     MDATA,A1
000024BE  103C 000E               2019          MOVE.B  #14,D0
000024C2  4E4F                    2020          TRAP    #15
000024C4  43F9 0000260F           2021          LEA     TAB,A1
000024CA  103C 000E               2022          MOVE.B  #14,D0
000024CE  4E4F                    2023          TRAP    #15
000024D0  43F9 0000262B           2024          LEA     MHEX,A1
000024D6  103C 000E               2025          MOVE.B  #14,D0
000024DA  4E4F                    2026          TRAP    #15
000024DC                          2027          
000024DC  1C3C 0002               2028          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
000024E0                          2029          
000024E0  3407                    2030          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
000024E2  E04A                    2031          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
000024E4  6000 0004               2032          BRA     INVOP2              Skips the second part to do later
000024E8                          2033  
000024E8                          2034  INVOP1
000024E8  1407                    2035          MOVE.B  D7,D2
000024EA                          2036  INVOP2
000024EA  1602                    2037          MOVE.B  D2,D3               Copies data at D2 to D3
000024EC                          2038          *   this gets digit in 10's place
000024EC  E80B                    2039          LSR.B   #4,D3               Shifts right to get rid of 1's place
000024EE                          2040          *   this gets digit in 1's place
000024EE  E90A                    2041          LSL.B   #4,D2               Shifts left to get rid of 10's place
000024F0  E80A                    2042          LSR.B   #4,D2               Shifts back right into 1's place
000024F2                          2043  
000024F2                          2044          
000024F2                          2045          *   D3 holds digit in 10's place
000024F2                          2046          *   D2 holds digit in 1's place
000024F2                          2047          
000024F2  1203                    2048          MOVE.B  D3,D1               Displays digit in 10's place first
000024F4                          2049  
000024F4                          2050          *   converts digits 10+ into letters
000024F4                          2051  
000024F4  47F9 00002508           2052          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
000024FA  B23C 0009               2053          CMP.B   #9,D1               Compares digit to 9
000024FE  6E00 0074               2054          BGT     CONV                Print out letter representation if greater than 9
00002502                          2055  
00002502  103C 0003               2056          MOVE.B  #3,D0               Displays digit if it is less than A
00002506  4E4F                    2057          TRAP    #15
00002508                          2058          
00002508                          2059  INVOP3   
00002508  1202                    2060          MOVE.B  D2,D1               Displays digit in 1's place second
0000250A                          2061  
0000250A                          2062          *   converts digits 10+ into letters
0000250A  47F9 0000251E           2063          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002510  B23C 0009               2064          CMP.B   #9,D1               Compares digit to 9
00002514  6E00 005E               2065          BGT     CONV                Print out letter representation if greater than 9
00002518                          2066          
00002518  103C 0003               2067          MOVE.B  #3,D0               Displays digit if it is less than A
0000251C  4E4F                    2068          TRAP    #15
0000251E                          2069          
0000251E                          2070  INVOP4
0000251E                          2071  * Display counter -- creates new line every 8 bytes
0000251E                          2072          * D6 is used as counter
0000251E                          2073          
0000251E  5306                    2074          SUB.B   #1,D6
00002520  BC3C 0000               2075          CMP.B   #0,D6
00002524  6700 0004               2076          BEQ     ENDNEWLINE
00002528  60BE                    2077          BRA     INVOP1              Loops back to display next address
0000252A                          2078  
0000252A                          2079  
0000252A                          2080  ******************************************************************************************************
0000252A                          2081  * Creates a new line after an op-code is displayed, loops back to start to display next code
0000252A                          2082  ENDNEWLINE
0000252A  43F9 0000260C           2083          LEA     NEWLINE,A1          Creates a new line in output window
00002530  103C 000E               2084          MOVE.B  #14,D0
00002534  4E4F                    2085          TRAP    #15
00002536                          2086  
00002536  5339 00002712           2087          SUB.B   #1,dispcount
0000253C  0C39 0000 00002712      2088          CMP.B   #0,dispcount               Checks if display counter is zero
00002544  6600 EAD0               2089          BNE     NEWADDR
00002548                          2090  
00002548                          2091  * Asks user to press enter to continue
00002548                          2092  * Resets counter
00002548  43F9 0000260C           2093          LEA     NEWLINE,A1          Creates a new line in output window
0000254E  103C 000E               2094          MOVE.B  #14,D0
00002552  4E4F                    2095          TRAP    #15
00002554                          2096          
00002554  43F9 000026F6           2097          LEA     MCONT,A1            Asks user to press enter to continue
0000255A  103C 000E               2098          MOVE.B  #14,D0
0000255E  4E4F                    2099          TRAP    #15
00002560                          2100  
00002560  103C 0004               2101          MOVE.B  #4,D0               Takes in user input
00002564  4E4F                    2102          TRAP    #15
00002566  4281                    2103          CLR.L   D1                  Clears D1 incase user decides to input something
00002568                          2104  
00002568  13FC 001E 00002712      2105          MOVE.B  #dispnum,dispcount  Resets display counter
00002570  6000 EAA4               2106          BRA     NEWADDR             Loops back to beginning
00002574                          2107  
00002574                          2108  
00002574                          2109  ******************************************************************************************************
00002574                          2110  * Converts decimal number into hex and displays it
00002574                          2111  *   converts number 10-15 to A-F
00002574                          2112  *   INPUT: decimal number in D1
00002574                          2113  *   OUTPUT: HEX number to output
00002574  B23C 000A               2114  CONV    CMP.B   #10,D1              Displays 10 as A
00002578  6700 002A               2115          BEQ     HEXA
0000257C  B23C 000B               2116          CMP.B   #11,D1              Displays 11 as B
00002580  6700 002C               2117          BEQ     HEXB
00002584  B23C 000C               2118          CMP.B   #12,D1              Displays 12 as C
00002588  6700 002E               2119          BEQ     HEXC
0000258C  B23C 000D               2120          CMP.B   #13,D1              Displays 13 as D
00002590  6700 0030               2121          BEQ     HEXD
00002594  B23C 000E               2122          CMP.B   #14,D1              Displays 14 as E
00002598  6700 0032               2123          BEQ     HEXE
0000259C  B23C 000F               2124          CMP.B   #15,D1              Displays 15 as F
000025A0  6700 0034               2125          BEQ     HEXF
000025A4                          2126  
000025A4  43F9 0000261F           2127  HEXA    LEA     DISPA,A1            Loads A character
000025AA  6000 0034               2128          BRA     PRINT
000025AE                          2129    
000025AE  43F9 00002621           2130  HEXB    LEA     DISPB,A1            Loads B character
000025B4  6000 002A               2131          BRA     PRINT
000025B8                          2132  
000025B8  43F9 00002623           2133  HEXC    LEA     DISPC,A1            Loads C character
000025BE  6000 0020               2134          BRA     PRINT
000025C2                          2135  
000025C2  43F9 00002625           2136  HEXD    LEA     DISPD,A1            Loads D character
000025C8  6000 0016               2137          BRA     PRINT
000025CC                          2138  
000025CC  43F9 00002627           2139  HEXE    LEA     DISPE,A1            Loads E character
000025D2  6000 000C               2140          BRA     PRINT
000025D6                          2141  
000025D6  43F9 00002629           2142  HEXF    LEA     DISPF,A1            Loads F character
000025DC  6000 0002               2143          BRA     PRINT
000025E0                          2144  
000025E0  103C 000E               2145  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000025E4  4E4F                    2146          TRAP    #15                 Prints out message in A1
000025E6  4ED3                    2147          JMP     (A3)
000025E8                          2148  
000025E8  43F9 000026C4           2149  ERROR   LEA     MERROR,A1
000025EE  103C 000E               2150          MOVE.B  #14,D0
000025F2  4E4F                    2151          TRAP    #15
000025F4  6000 000E               2152          BRA     EXIT
000025F8                          2153  
000025F8  43F9 000026DB           2154  DONE    LEA     MDONE,A1
000025FE  103C 000E               2155          MOVE.B  #14,D0
00002602  4E4F                    2156          TRAP    #15
00002604                          2157  
00002604  103C 0009               2158  EXIT    MOVE.B  #9,D0
00002608  4E4F                    2159          TRAP    #15
0000260A                          2160  
0000260A                          2161  ************************************ Output stuff **************************************
0000260A                          2162  * Stuff for output
0000260A                          2163  
0000260A  =0000000D               2164  CR      EQU     $0D
0000260A  =0000000A               2165  LF      EQU     $0A
0000260A                          2166  
0000260A= 20 00                   2167  SPACE       DC.B    ' ',0
0000260C= 0D 0A 00                2168  NEWLINE     DC.B    '',CR,LF,0
0000260F= 20 20 20 00             2169  TAB         DC.B    '   ',0
00002613= 2C 00                   2170  COMMA       DC.B    ',',0
00002615= 28 00                   2171  OPENBRA     DC.B    '(',0
00002617= 29 00                   2172  CLOSEBRA    DC.B    ')',0
00002619= 2B 00                   2173  POS         DC.B    '+',0
0000261B= 2D 00                   2174  NEG         DC.B    '-',0
0000261D= 23 00                   2175  HASH        DC.B    '#',0
0000261F                          2176  
0000261F                          2177  
0000261F= 41 00                   2178  DISPA       DC.B    'A',0
00002621= 42 00                   2179  DISPB       DC.B    'B',0
00002623= 43 00                   2180  DISPC       DC.B    'C',0
00002625= 44 00                   2181  DISPD       DC.B    'D',0
00002627= 45 00                   2182  DISPE       DC.B    'E',0
00002629= 46 00                   2183  DISPF       DC.B    'F',0
0000262B                          2184  
0000262B= 24 00                   2185  MHEX        DC.B    '$',0
0000262D= 42 20 00                2186  MBYTE       DC.B    'B ',0
00002630= 57 20 00                2187  MWORD       DC.B    'W ',0
00002633= 4C 20 00                2188  MLONG       DC.B    'L ',0
00002636= 44 00                   2189  MDN         DC.B    'D',0
00002638= 41 00                   2190  MAN         DC.B    'A',0
0000263A                          2191  
0000263A= 4C 53 4C 2E 00          2192  MLSL        DC.B    'LSL.',0
0000263F= 4C 53 52 2E 00          2193  MLSR        DC.B    'LSR.',0
00002644= 4E 45 47 2E 00          2194  MMNEGW      DC.B    'NEG.',0
00002649= 44 49 56 53 2E 57 00    2195  MMDIVSW     DC.B    'DIVS.W',0
00002650= 4D 55 4C 53 2E 57 00    2196  MMULSW      DC.B    'MULS.W',0
00002657= 4D 4F 56 45 2E 42 00    2197  MMOVEB      DC.B    'MOVE.B',0
0000265E= 4D 4F 56 45 2E 57 00    2198  MMOVEW      DC.B    'MOVE.W',0
00002665= 4D 4F 56 45 2E 4C 00    2199  MMOVEL      DC.B    'MOVE.L',0
0000266C= 4D 4F 56 45 41 2E ...   2200  MMOVEAW     DC.B    'MOVEA.W',0
00002674= 4D 4F 56 45 41 2E ...   2201  MMOVEAL     DC.B    'MOVEA.L',0
0000267C                          2202  
0000267C= 44 41 54 41 00          2203  MDATA       DC.B    'DATA',0
00002681= 53 55 42 2E 00          2204  MSUB        DC.B    'SUB.',0
00002686= 53 55 42 41 2E 00       2205  MSUBA       DC.B    'SUBA.',0
0000268C= 41 4E 44 2E 00          2206  MAND        DC.B    'AND.',0
00002691= 41 44 44 2E 00          2207  MADD        DC.B    'ADD.',0
00002696= 53 55 42 49 2E 00       2208  MSUBI       DC.B    'SUBI.',0
0000269C= 4F 52 49 2E 00          2209  MORI        DC.B    'ORI.',0
000026A1= 4E 4F 54 2E 00          2210  MNOT        DC.B    'NOT.',0
000026A6= 4D 55 4C 53 2E 00       2211  MMUL        DC.B    'MULS.',0
000026AC                          2212  MNEG
000026AC                          2213  
000026AC= 42 45 51 00             2214  MBEQ        DC.B    'BEQ',0
000026B0= 42 4E 45 00             2215  MBNE        DC.B    'BNE',0
000026B4= 42 4C 54 00             2216  MBLT        DC.B    'BLT',0
000026B8= 42 48 49 00             2217  MBHI        DC.B    'BHI',0
000026BC= 42 48 49 00             2218  MBRA        DC.B    'BHI',0
000026C0= 4E 4F 50 00             2219  MNOP        DC.B    'NOP',0
000026C4                          2220  
000026C4= 45 52 52 4F 52 3A ...   2221  MERROR      DC.B    'ERROR: Something broke',0
000026DB= 43 4F 4D 50 4C 45 ...   2222  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
000026F6= 2A 2A 50 52 45 53 ...   2223  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00002712                          2224  
00002712                          2225  
00002712                          2226  ********************************** MEMORY STORAGE **********************************************
00002712                          2227  * Stores memory locations at the end of the program
00002712                          2228  * How DS works: Give it a variable name.
00002712                          2229  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00002712                          2230  *   Last is the number of storage you want. 
00002712                          2231  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00002712                          2232  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00002712                          2233  *            
00002712                          2234  
00002712                          2235  dispcount   DS.B    1           Used to count display lines
00002713                          2236  
00002713                          2237  bit0        DS.B    1           SEE NOTE UP TOP
00002714                          2238  bit1        DS.B    1           SEE NOTE UP TOP
00002715                          2239  bit2        DS.B    1           SEE NOTE UP TOP
00002716                          2240  bit3        DS.B    1           SEE NOTE UP TOP
00002717                          2241  bit4        DS.B    1           SEE NOTE UP TOP
00002718                          2242  
00002718                          2243  
00002718                          2244      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1386
ADDIMD0             13AA
ADDIMD1             13AA
ADDIMD3             13AA
ADDR1               7000
ADDR2               726C
BCC                 1B74
BCCBEQ              1BF0
BCCBHI              1C0E
BCCBLT              1C04
BCCBNE              1BFA
BCCBRA              1BE6
BCCDISP             1BBA
BCCLONG             1BA2
BCCNEXT             1BAA
BCCPRINT            1C18
BCCWORD             1B9A
BIT0                2713
BIT1                2714
BIT2                2715
BIT3                2716
BIT4                2717
CLOSEBRA            2617
CODE                10EA
COMMA               2613
CONV                2574
CR                  D
DISPA               261F
DISPADDR1           1034
DISPADDR2           1036
DISPADDR3           106A
DISPADDR4           1080
DISPADDR5           1096
DISPADDR6           10AC
DISPADDREND         10B6
DISPADDRSTART       1028
DISPB               2621
DISPC               2623
DISPCOUNT           2712
DISPD               2625
DISPE               2627
DISPEA              2450
DISPEA3             2474
DISPEA4             249C
DISPEA5             24B2
DISPEALONG          246C
DISPEAWORD          2464
DISPF               2629
DISPNUM             1E
DIVSW               182C
DONE                25F8
ENDNEWLINE          252A
ENDNLINC            179E
ERROR               25E8
EXIT                2604
HASH                261D
HEXA                25A4
HEXB                25AE
HEXC                25B8
HEXD                25C2
HEXE                25CC
HEXF                25D6
IMD                 1C28
IMD2                1C42
IMD3                1C4A
IMD4                1C56
IMDBYTE             1CC4
IMDEA               1CEC
IMDEA2              1D08
IMDEA3              1D1E
IMDLONG             1CE2
IMDPRINT            1C90
IMDPRINTEND         1CBC
IMDPRINTORI         1CA8
IMDPRINTSUBI        1CB2
IMDWORD             1CD4
INVOP               24B8
INVOP1              24E8
INVOP2              24EA
INVOP3              2508
INVOP4              251E
INVOPCODE           24B6
LF                  A
LSLR                1A10
LSLRDESD            168E
LSLRSRCD            1666
MADD                2691
MAN                 2638
MAND                268C
MBEQ                26AC
MBHI                26B8
MBLT                26B4
MBNE                26B0
MBRA                26BC
MBYTE               262D
MCONT               26F6
MDATA               267C
MDN                 2636
MDONE               26DB
MERROR              26C4
MHEX                262B
MISC                1D22
MISCBIT2            1D50
MISCBIT3            1D5C
MISCBYTE            1DC2
MISCEA              1DF0
MISCEA2             1E0C
MISCLONG            1DE4
MISCNOP             1D68
MISCNOT             1D78
MISCNOT2            1D80
MISCNOT3            1D88
MISCNOT4            1D94
MISCPRINT           1E10
MISCPRINTEND        1E3C
MISCPRINTNEG        1E32
MISCPRINTNOT        1E28
MISCWORD            1DD4
MLONG               2633
MLSL                263A
MLSR                263F
MMDIVSW             2649
MMNEGW              2644
MMOVEAL             2674
MMOVEAW             266C
MMOVEB              2657
MMOVEL              2665
MMOVEW              265E
MMUL                26A6
MMULSW              2650
MNEG                26AC
MNOP                26C0
MNOT                26A1
MORI                269C
MOVB                1306
MOVBDN1             15DA
MOVBDN2             177A
MOVEAL              12B2
MOVEAN1             13AA
MOVEAN2             16AA
MOVEAW              11D2
MOVEIAN1            141E
MOVEIAND1           1542
MOVEIANI1           14AA
MOVIAN2             16C6
MOVIAND2            173A
MOVIANI2            16FA
MOVL                1226
MOVW                1146
MSUB                2681
MSUBA               2686
MSUBI               2696
MULSW               17A2
MWORD               2630
NEG                 261B
NEGW                18BA
NEWADDR             1016
NEWLINE             260C
OPENBRA             2615
POS                 2619
PRINT               25E0
PRINTB              1A98
PRINTBYTE           1914
PRINTL              1AE8
PRINTLONG           19BC
PRINTLSL            1A68
PRINTLSLRCOUNT      1B10
PRINTLSR            1B44
PRINTW              1AC0
PRINTWORD           1968
SPACE               260A
START               1000
SUB                 1E44
SUB1                1E76
SUB2                1E58
SUB3                1E60
SUB4                1E6A
SUBA                208A
SUBAN               2214
SUBAN2              2230
SUBANID             224C
SUBANIDNEG          22C0
SUBANIDPOS          2280
SUBDN               21DC
SUBDN2              21F8
SUBEA               2300
SUBEAHEX            235E
SUBEAHEX1           23FE
SUBEAHEX2           2406
SUBEAHEX3           240E
SUBEAHEX4           2436
SUBEAHEX5           244C
SUBEAID             23EE
SUBEAID2            236A
SUBERRORTEST1       219A
SUBERRORTEST11      21DA
SUBJMPA2            2122
SUBPRINT            2124
SUBPRINTADD         2178
SUBPRINTAND         2168
SUBPRINTC           2148
SUBPRINTEND         2198
SUBPRINTMULS        2188
SUBPRINTSUB         2158
SUBSIZE1            1EFA
SUBSIZE11           1F20
SUBSIZE12           1F36
SUBSIZE2            1F3A
SUBSIZE21           1F60
SUBSIZE22           1F76
SUBSIZE3            1F7A
SUBSIZE31           1FA0
SUBSIZE32           1FB6
SUBSIZE4            1FBA
SUBSIZE41           1FE4
SUBSIZE42           1FFA
SUBSIZE5            1FFE
SUBSIZE51           2028
SUBSIZE52           203E
SUBSIZE6            2042
SUBSIZE61           2070
SUBSIZE62           2086
SUBSIZE7            20AE
SUBSIZE71           20D0
SUBSIZE72           20E6
SUBSIZE8            20EA
SUBSIZE81           210A
SUBSIZE82           211E
TAB                 260F
