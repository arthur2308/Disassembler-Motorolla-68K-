00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/8/2015 2:11:51 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000                            64  
00000000                            65  
00000000  =00007000                 66  addr1       EQU     $7000
00000000                            67  *addr2      EQU     $703C
00000000  =0000726C                 68  addr2       EQU     $726C
00000000                            69  
00000000  =0000001E                 70  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            71  
00000000                            72  
00000000                            73  
00001000                            74      ORG    $1000
00001000                            75  START:                  ; first instruction of program
00001000                            76  
00001000                            77          
00001000                            78          
00001000                            79  
00001000                            80          *   this stores some test EA into memory m,
00001000                            81          *LEA     addr1,A1
00001000                            82          *MOVE.W  #$0440,(A1)+        *917C
00001000                            83          *MOVE.W  #$917C,(A1)+       
00001000                            84          *MOVE.L  #$5555A7FF,(A1)+
00001000                            85          *MOVE.W  #$9078,(A1)+
00001000                            86          *MOVE.W  #$5555,(A1)+
00001000                            87          
00001000                            88          
00001000                            89          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            90          
00001000                            91          *MOVE.L  #$6700F0D8,$7000
00001000                            92          *MOVE.W  #$4E71,$7000         NOP
00001000                            93  
00001000                            94          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            95          *MOVE.L  #$48E3FAF5,$7000
00001000                            96          *MOVE.L  #$4CF8CDD9,$7004
00001000                            97          *MOVE.W  #$4000,$7008
00001000                            98  
00001000                            99  
00001000                           100          * start address: 7000
00001000                           101          * end address:   766C
00001000                           102  
00001000  21FC 46004610 7000       103          MOVE.L  #$46004610,$7000
00001008                           104          *MOVE.W  #$5A80,$7000
00001008                           105          *MOVE.L  #$47F80033,$7000
00001008                           106          *MOVE.W  #$4000,$7008
00001008                           107  
00001008                           108  *********************************************************************************************************************
00001008                           109  * Takes in user start and end address
00001008                           110  
00001008                           111  IOSTART
00001008                           112  *   Displays message asking for address
00001008  43F9 00003340            113          LEA     MADDR1,A1           Loads message to retrieve first number
0000100E  6100 0020                114          BSR     IOGETADDR
00001012                           115  
00001012  0804 0000                116          BTST    #0,D4               Checks of the starting address is an odd number
00001016  6600 0090                117          BNE     IOERROR4            Throws an error if it is because it will crash
0000101A                           118  
0000101A  2E04                     119          MOVE.L  D4,D7               Moves starting address to D7 for now
0000101C  43F9 00003363            120          LEA     MADDR2,A1           Then grabs the ending address
00001022  6100 000C                121          BSR     IOGETADDR
00001026  B887                     122          CMP.L   D7,D4               Compares the start address to end address
00001028  6E00 008E                123          BGT     DISPADDR            Continues if start < end
0000102C  6000 004C                124          BRA     IOERROR1            Error if not
00001030                           125  
00001030                           126  IOGETADDR
00001030  2649                     127          MOVEA.L A1,A3               Saves the message incase of an error
00001032  103C 000E                128          MOVE.B  #14,D0              Prepares to display message
00001036  4E4F                     129          TRAP    #15                 Displays message
00001038                           130  
00001038  4244                     131          CLR     D4                  Clears D4 register to prevent errors
0000103A                           132  
0000103A  43F9 0000349C            133          LEA     startaddr,A1        Uses this memory location to store the data
00001040  103C 0002                134          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001044  4E4F                     135          TRAP    #15
00001046                           136  
00001046  B23C 0008                137          CMP.B   #8,D1               Throws an error if the input is longer than a longword
0000104A  6E00 003C                138          BGT     IOERROR2
0000104E  1A01                     139          MOVE.B  D1,D5               Moves the length of the input to D5
00001050                           140  
00001050                           141  IOSTARTLOOP
00001050  45F9 0000349C            142          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
00001056                           143  
00001056                           144  IOLOOP
00001056  141A                     145          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001058  5305                     146          SUB.B   #1,D5               Subtract 1 from counter
0000105A  6100 2050                147          BSR     DEC2HEX             Converts decimal to hex number
0000105E  B23C 000F                148          CMP.B   #$F,D1
00001062  6700 0034                149          BEQ     IOERROR3
00001066                           150  
00001066  1C05                     151          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001068  CDFC 0004                152          MULS    #4,D6               Multiply by 4 to find number of shifts left
0000106C                           153          
0000106C  EDAB                     154          LSL.L   D6,D3               Shifts hex left
0000106E  D883                     155          ADD.L   D3,D4               Adds number to new total
00001070                           156          
00001070  7600                     157          MOVE.L  #0,D3               Clears D3 to prevent errors
00001072                           158          
00001072  BA3C 0000                159          CMP.B   #0,D5               Compares counter to 0    
00001076  66DE                     160          BNE     IOLOOP              Otherwise will loop
00001078  4E75                     161          RTS
0000107A                           162  
0000107A                           163  * Error message for start address greater than end address
0000107A                           164  IOERROR1
0000107A  43F9 000033A6            165          LEA     MIOERR1,A1
00001080  103C 000D                166          MOVE.B  #13,D0
00001084  4E4F                     167          TRAP    #15
00001086  6080                     168          BRA     IOSTART
00001088                           169  
00001088                           170  * Error message if user input address is longer than longword
00001088                           171  IOERROR2
00001088  43F9 000033DE            172          LEA     MIOERR2,A1
0000108E  103C 000D                173          MOVE.B  #13,D0
00001092  4E4F                     174          TRAP    #15
00001094  224B                     175          MOVEA.L A3,A1
00001096  6098                     176          BRA     IOGETADDR
00001098                           177  
00001098                           178  * Error message if user enters non-valid hex numbers
00001098                           179  IOERROR3
00001098  43F9 00003411            180          LEA     MIOERR3,A1
0000109E  103C 000D                181          MOVE.B  #13,D0
000010A2  4E4F                     182          TRAP    #15
000010A4  224B                     183          MOVEA.L A3,A1
000010A6  6088                     184          BRA     IOGETADDR
000010A8                           185  
000010A8                           186  * Error message for odd numbered addresses
000010A8                           187  IOERROR4
000010A8  43F9 0000342D            188          LEA     MIOERR4,A1
000010AE  103C 000D                189          MOVE.B  #13,D0
000010B2  4E4F                     190          TRAP    #15
000010B4  6000 FF52                191          BRA     IOSTART
000010B8                           192  
000010B8                           193  ******************************************** displays address location***********************************************
000010B8                           194  * This displays the address location of the op-code being worked on
000010B8                           195  * A6 is used as current address
000010B8                           196  DISPADDR
000010B8  23C7 0000349C            197          MOVE.L  D7,startaddr
000010BE  23C4 000034A0            198          MOVE.L  D4,endaddr
000010C4  6100 1E96                199          BSR     CLRDN
000010C8  2C79 0000349C            200          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010CE  13FC 001E 0000349B       201          MOVE.B  #dispnum,dispcount  Sets display line counter
000010D6                           202  
000010D6  43F9 00003232            203          LEA     NEWLINE,A1          Creates a new line in output window
000010DC  103C 000E                204          MOVE.B  #14,D0
000010E0  4E4F                     205          TRAP    #15
000010E2                           206  
000010E2                           207  NEWADDR
000010E2  2E0E                     208          MOVE.L  A6,D7               Loads the current address into D7
000010E4  BEB9 000034A0            209          CMP.L   endaddr,D7          Compares current address to end address
000010EA  6E00 20D6                210          BGT     ASK4REPEAT          Branches to done if current address > end address
000010EE  45F9 00001182            211          LEA     DISPADDREND,A2
000010F4                           212  
000010F4                           213  ************************************************
000010F4                           214  * Displays address as HEX
000010F4                           215  * INPUT: address stored into D7
000010F4                           216  * OUTPUT: prints hex address to output window
000010F4                           217  DISPADDRSTART
000010F4  1C3C 0002                218          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F8  2407                     219          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010FA  4842                     220          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010FC  6000 0004                221          BRA     DISPADDR2           Skips the second part to do later
00001100                           222  
00001100                           223  DISPADDR1
00001100  3407                     224          MOVE.W  D7,D2
00001102                           225  DISPADDR2
00001102  3202                     226          MOVE.W  D2,D1               D1 will be the first byte of the word
00001104  3602                     227          MOVE.W  D2,D3               D3 will be the second byte of the word
00001106  3802                     228          MOVE.W  D2,D4               D4 will be the third byte of the word
00001108  3A02                     229          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000110A                           230  
0000110A  E049                     231          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000110C  E849                     232          LSR.W   #4,D1
0000110E  E94B                     233          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001110  E04B                     234          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001112  E84B                     235          LSR.W   #4,D3
00001114  E14C                     236          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001116  E04C                     237          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001118  E84C                     238          LSR.W   #4,D4
0000111A  E14D                     239          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000111C  E94D                     240          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000111E  E04D                     241          LSR.W   #8,D5
00001120  E84D                     242          LSR.W   #4,D5
00001122                           243          
00001122                           244          
00001122  47F9 00001136            245          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001128  B23C 0009                246          CMP.B   #9,D1               Compares digit to 9
0000112C  6E00 1F0A                247          BGT     CONV                Print out letter representation if greater than 9
00001130                           248  
00001130  103C 0003                249          MOVE.B  #3,D0               Displays digit if it is less than A
00001134  4E4F                     250          TRAP    #15
00001136                           251          
00001136                           252  DISPADDR3   
00001136  1203                     253          MOVE.B  D3,D1               Displays digit in 1's place second
00001138                           254  
00001138                           255          *   converts digits 10+ into letters
00001138  47F9 0000114C            256          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
0000113E  B23C 0009                257          CMP.B   #9,D1               Compares digit to 9
00001142  6E00 1EF4                258          BGT     CONV                Print out letter representation if greater than 9
00001146                           259          
00001146  103C 0003                260          MOVE.B  #3,D0               Displays digit if it is less than A
0000114A  4E4F                     261          TRAP    #15
0000114C                           262  
0000114C                           263  DISPADDR4
0000114C  1204                     264          MOVE.B  D4,D1               Displays digit in 1's place second
0000114E                           265  
0000114E                           266          *   converts digits 10+ into letters
0000114E  47F9 00001162            267          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001154  B23C 0009                268          CMP.B   #9,D1               Compares digit to 9
00001158  6E00 1EDE                269          BGT     CONV                Print out letter representation if greater than 9
0000115C                           270          
0000115C  103C 0003                271          MOVE.B  #3,D0               Displays digit if it is less than A
00001160  4E4F                     272          TRAP    #15
00001162                           273  
00001162                           274  DISPADDR5
00001162  1205                     275          MOVE.B  D5,D1               Displays digit in 1's place second
00001164                           276  
00001164                           277          *   converts digits 10+ into letters
00001164  47F9 00001178            278          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000116A  B23C 0009                279          CMP.B   #9,D1               Compares digit to 9
0000116E  6E00 1EC8                280          BGT     CONV                Print out letter representation if greater than 9
00001172                           281          
00001172  103C 0003                282          MOVE.B  #3,D0               Displays digit if it is less than A
00001176  4E4F                     283          TRAP    #15
00001178                           284          
00001178                           285  DISPADDR6
00001178                           286  * Display counter -- creates new line every 8 bytes
00001178                           287          * D6 is used as counter
00001178                           288          
00001178  5306                     289          SUB.B   #1,D6
0000117A  BC3C 0000                290          CMP.B   #0,D6
0000117E  6680                     291          BNE     DISPADDR1
00001180                           292  
00001180  4ED2                     293          JMP     (A2)                Jumps to address stored in A2 when complete
00001182                           294  
00001182                           295  DISPADDREND
00001182  43F9 00003235            296          LEA     TAB,A1
00001188  103C 000E                297          MOVE.B  #14,D0
0000118C  4E4F                     298          TRAP    #15
0000118E                           299          
0000118E                           300  *********************************************************************************************************************
0000118E                           301  * Splits the first byte of the op code into nibbles
0000118E                           302  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000118E                           303  
0000118E  4281                     304          CLR.L   D1                  Clears the data registers
00001190  4282                     305          CLR.L   D2
00001192  4283                     306          CLR.L   D3
00001194  4284                     307          CLR.L   D4
00001196  4285                     308          CLR.L   D5
00001198  4286                     309          CLR.L   D6
0000119A  3C16                     310          MOVE.W  (A6),D6
0000119C  141E                     311          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000119E                           312    
0000119E  1E02                     313          MOVE.B  D2,D7
000011A0  E14F                     314          LSL.W   #8,D7
000011A2                           315          
000011A2  1602                     316          MOVE.B  D2,D3               Copies data at D2 to D3
000011A4                           317          *   this gets digit in 10's place
000011A4  E80B                     318          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011A6                           319          *   this gets digit in 1's place
000011A6  E90A                     320          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A8  E80A                     321          LSR.B   #4,D2               Shifts back right into 1's place
000011AA                           322          
000011AA                           323          *   D3 holds digit in 10's place
000011AA                           324          *   D2 holds digit in 1's place
000011AA                           325  
000011AA                           326          *   Moves second nibble to D5 to be used later
000011AA  1A02                     327          MOVE.B  D2,D5
000011AC  13C3 000034A4            328          MOVE.B  D3,bit0
000011B2                           329          *   Goes to a branch-table to figure out which op code it is
000011B2  6000 0002                330          BRA     CODE
000011B6                           331  
000011B6                           332  ******************************************************************************************************
000011B6                           333  *   This is where the table goes to detirmine which op-code to use
000011B6                           334  CODE    
000011B6  B63C 0000                335          CMP.B   #$0,D3              Goes to immediate operation section
000011BA  6700 0F0A                336          BEQ     IMD
000011BE  B63C 0004                337          CMP.B   #$4,D3              Goes to miscellaneous section
000011C2  6700 104C                338          BEQ     MISC
000011C6  B63C 0005                339          CMP.B   #$5,D3
000011CA  6700 12CE                340          BEQ     ADDQ                Goes to addq section
000011CE  B63C 0006                341          CMP.B   #$6,D3
000011D2  6700 0E3E                342          BEQ     BCC
000011D6  B63C 0009                343          CMP.B   #$9,D3              Goes to sub section
000011DA  6700 16A6                344          BEQ     SUB
000011DE  B63C 000C                345          CMP.B   #$C,D3              Goes to sub but displays as AND
000011E2  6700 169E                346          BEQ     SUB
000011E6  B63C 000D                347          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011EA  6700 1696                348          BEQ     SUB
000011EE  B63C 000B                349          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011F2  6700 168E                350          BEQ     SUB
000011F6  B63C 0001                351          CMP.B   #$1,D3
000011FA  6700 02C4                352          BEQ     MOVB                Goes to movb
000011FE  B63C 0003                353          CMP.B   #$3,D3
00001202  6700 00FC                354          BEQ     MOVW                Goes to movb
00001206  B63C 0002                355          CMP.B   #$2,D3
0000120A  6700 01D4                356          BEQ     MOVL                Goes to movb
0000120E  B63C 0008                357          CMP.B   #$8,D3
00001212  6700 08E4                358          BEQ     DIVSW               Goes to divsw
00001216  B63C 000E                359          CMP.B   #$E,D3
0000121A  6700 0AC0                360          BEQ     LSLR                Goes to divsw
0000121E                           361  
0000121E  6000 1D4E                362          BRA     INVOPCODE
00001222                           363  
00001222                           364  ******************************************************************************************************
00001222                           365  * 
00001222                           366  JSR
00001222  43F9 00003264            367          LEA MJSR,A1
00001228  103C 000E                368          MOVE.B  #14,D0
0000122C  4E4F                     369          TRAP    #15 
0000122E                           370          
0000122E  1406                     371          MOVE.B  D6,D2
00001230  EB0A                     372          LSL.B   #5,D2
00001232  EA0A                     373          LSR.B   #5,D2
00001234  13C2 000034A8            374          MOVE.B  D2,bit4
0000123A                           375          
0000123A  1406                     376          MOVE.B  D6,D2
0000123C  E50A                     377          LSL.B   #2,D2
0000123E  EA0A                     378          LSR.B   #5,D2
00001240  13C2 000034A7            379          MOVE.B  D2,bit3
00001246                           380  
00001246  183C 0003                381          MOVE.B  #$3,D4
0000124A                           382  
0000124A  0C39 0002 000034A7       383          CMP.B   #$2,bit3
00001252  6700 0476                384          BEQ     MOVEIAN1
00001256                           385          
00001256  43F9 00003235            386          LEA     TAB,A1
0000125C  323C 0003                387          MOVE    #3,D1
00001260  4E4F                     388          TRAP    #15
00001262                           389          
00001262  0C39 0007 000034A7       390          CMP.B   #$7,bit3
0000126A  6700 0394                391          BEQ     ADDIMDDES
0000126E                           392          
0000126E                           393  BTST 
0000126E  43F9 00003268            394          LEA MBTST,A1
00001274  103C 000E                395          MOVE.B  #14,D0
00001278  4E4F                     396          TRAP    #15 
0000127A                           397          
0000127A  1406                     398          MOVE.B  D6,D2
0000127C  EB0A                     399          LSL.B   #5,D2
0000127E  EA0A                     400          LSR.B   #5,D2
00001280  13C2 000034A5            401          MOVE.B  D2,bit1
00001286                           402          
00001286  1406                     403          MOVE.B  D6,D2
00001288  E50A                     404          LSL.B   #2,D2
0000128A  EA0A                     405          LSR.B   #5,D2
0000128C  13C2 000034A6            406          MOVE.B  D2,bit2
00001292                           407          
00001292  3406                     408          MOVE.W  D6,D2
00001294  E94A                     409          LSL.W   #4,D2
00001296  E04A                     410          LSR.W   #8,D2
00001298  EA4A                     411          LSR.W   #5,D2
0000129A  13C2 000034A7            412          MOVE.B  D2,bit3
000012A0                           413          
000012A0  3406                     414          MOVE.W  D6,D2
000012A2  EF4A                     415          LSL.W   #7,D2
000012A4  E04A                     416          LSR.W   #8,D2
000012A6  EE4A                     417          LSR.W   #7,D2
000012A8  13C2 000034A4            418          MOVE.B  D2,bit0
000012AE                           419          
000012AE  0C39 0000 000034A4       420          CMP.B   #0,bit0
000012B6  6700 002E                421          BEQ     BTSTMEM
000012BA                           422          
000012BA  43F9 00003235            423          LEA TAB,A1
000012C0  103C 000E                424          MOVE.B  #14,D0
000012C4  4E4F                     425          TRAP    #15
000012C6                           426  
000012C6  43F9 0000324D            427          LEA DISPD,A1
000012CC  103C 000E                428          MOVE.B  #14,D0
000012D0  4E4F                     429          TRAP    #15
000012D2                           430          
000012D2  1A3C 0004                431          MOVE.B   #$4,D5
000012D6                           432          
000012D6  1239 000034A7            433          MOVE.B  bit3,D1
000012DC  103C 0003                434          MOVE.B  #3,D0
000012E0  4E4F                     435          TRAP    #15
000012E2                           436          
000012E2  6000 02C4                437          BRA HANDLEDES
000012E6                           438          
000012E6                           439  BTSTMEM
000012E6  43F9 00003235            440          LEA TAB,A1
000012EC  123C 0003                441          MOVE.B  #3,D1
000012F0  4E4F                     442          TRAP    #15
000012F2                           443          
000012F2  183C 0001                444          MOVE.B  #$1,D4
000012F6  45F9 000015A8            445          LEA     HANDLEDES,A2
000012FC  6000 1BF8                446          BRA     DISPEA
00001300                           447          
00001300                           448  MOVW
00001300  E20A                     449          LSR.B   #1,D2
00001302  13C2 000034A5            450          MOVE.B  D2,bit1
00001308                           451          
00001308  1416                     452          MOVE.B  (A6),D2
0000130A  EB0A                     453          LSL.B   #5,D2
0000130C  EA0A                     454          LSR.B   #5,D2
0000130E  13C2 000034A8            455          MOVE.B  D2,bit4
00001314                           456          
00001314  141E                     457          MOVE.B  (A6)+,D2
00001316  E50A                     458          LSL.B   #2,D2
00001318  EA0A                     459          LSR.B   #5,D2
0000131A  13C2 000034A7            460          MOVE.B  D2,bit3
00001320                           461          
00001320  EF4E                     462          LSL.W   #7,D6
00001322  E04E                     463          LSR.W   #8,D6 
00001324  EA4E                     464          LSR.W   #5,D6 
00001326  13C6 000034A6            465          MOVE.B  D6,bit2
0000132C                           466  
0000132C  0C39 0001 000034A6       467          CMP.B   #$1,bit2
00001334  6700 0056                468          BEQ     MOVEAW
00001338                           469  
00001338  43F9 00003297            470          LEA MMOVEW,A1
0000133E  103C 000E                471          MOVE.B  #14,D0
00001342  4E4F                     472          TRAP    #15 
00001344                           473  
00001344  0C39 0000 000034A7       474          CMP.B   #$0,bit3           
0000134C  6700 0558                475          BEQ     MOVBDN1
00001350  0C39 0001 000034A7       476          CMP.B   #$1,bit3
00001358  6700 02FC                477          BEQ     MOVEAN1
0000135C  0C39 0002 000034A7       478          CMP.B   #$2,bit3
00001364  6700 0364                479          BEQ     MOVEIAN1
00001368  0C39 0003 000034A7       480          CMP.B   #$3,bit3
00001370  6700 03EC                481          BEQ     MOVEIANI1
00001374  0C39 0004 000034A7       482          CMP.B   #$4,bit3
0000137C  6700 0488                483          BEQ     MOVEIAND1
00001380  0C39 0007 000034A7       484          CMP.B   #$7,bit3
00001388  6700 01BC                485          BEQ     ADDIMD
0000138C                           486  
0000138C                           487  MOVEAW
0000138C  43F9 000032A5            488          LEA MMOVEAW,A1
00001392  103C 000E                489          MOVE.B  #14,D0
00001396  4E4F                     490          TRAP    #15 
00001398                           491          
00001398  0C39 0000 000034A7       492          CMP.B   #$0,bit3           
000013A0  6700 0504                493          BEQ     MOVBDN1
000013A4  0C39 0001 000034A7       494          CMP.B   #$1,bit3
000013AC  6700 02A8                495          BEQ     MOVEAN1
000013B0  0C39 0002 000034A7       496          CMP.B   #$2,bit3
000013B8  6700 0310                497          BEQ     MOVEIAN1
000013BC  0C39 0003 000034A7       498          CMP.B   #$3,bit3
000013C4  6700 0398                499          BEQ     MOVEIANI1
000013C8  0C39 0004 000034A7       500          CMP.B   #$4,bit3
000013D0  6700 0434                501          BEQ     MOVEIAND1
000013D4  0C39 0007 000034A7       502          CMP.B   #$7,bit3
000013DC  6700 0168                503          BEQ     ADDIMD
000013E0                           504  
000013E0                           505  MOVL
000013E0  E20A                     506          LSR.B   #1,D2
000013E2  13C2 000034A5            507          MOVE.B  D2,bit1
000013E8                           508          
000013E8  1416                     509          MOVE.B  (A6),D2
000013EA  EB0A                     510          LSL.B   #5,D2
000013EC  EA0A                     511          LSR.B   #5,D2
000013EE  13C2 000034A8            512          MOVE.B  D2,bit4
000013F4                           513          
000013F4  141E                     514          MOVE.B  (A6)+,D2
000013F6  E50A                     515          LSL.B   #2,D2
000013F8  EA0A                     516          LSR.B   #5,D2
000013FA  13C2 000034A7            517          MOVE.B  D2,bit3
00001400                           518          
00001400  EF4E                     519          LSL.W   #7,D6
00001402  E04E                     520          LSR.W   #8,D6 
00001404  EA4E                     521          LSR.W   #5,D6 
00001406  13C6 000034A6            522          MOVE.B  D6,bit2
0000140C                           523          
0000140C  0C39 0001 000034A6       524          CMP.B   #$1,bit2
00001414  6700 0056                525          BEQ     MOVEAL
00001418                           526  
00001418  43F9 0000329E            527          LEA MMOVEL,A1
0000141E  103C 000E                528          MOVE.B  #14,D0
00001422  4E4F                     529          TRAP    #15 
00001424                           530          
00001424  0C39 0000 000034A7       531          CMP.B   #$0,bit3           
0000142C  6700 0478                532          BEQ     MOVBDN1
00001430  0C39 0001 000034A7       533          CMP.B   #$1,bit3
00001438  6700 021C                534          BEQ     MOVEAN1
0000143C  0C39 0002 000034A7       535          CMP.B   #$2,bit3
00001444  6700 0284                536          BEQ     MOVEIAN1
00001448  0C39 0003 000034A7       537          CMP.B   #$3,bit3
00001450  6700 030C                538          BEQ     MOVEIANI1
00001454  0C39 0004 000034A7       539          CMP.B   #$4,bit3
0000145C  6700 03A8                540          BEQ     MOVEIAND1
00001460  0C39 0007 000034A7       541          CMP.B   #$7,bit3
00001468  6700 00DC                542          BEQ     ADDIMD
0000146C                           543  
0000146C                           544  MOVEAL
0000146C  43F9 000032AD            545          LEA MMOVEAL,A1
00001472  103C 000E                546          MOVE.B  #14,D0
00001476  4E4F                     547          TRAP    #15 
00001478                           548          
00001478  0C39 0000 000034A7       549          CMP.B   #$0,bit3           
00001480  6700 0424                550          BEQ     MOVBDN1
00001484  0C39 0001 000034A7       551          CMP.B   #$1,bit3
0000148C  6700 01C8                552          BEQ     MOVEAN1
00001490  0C39 0002 000034A7       553          CMP.B   #$2,bit3
00001498  6700 0230                554          BEQ     MOVEIAN1
0000149C  0C39 0003 000034A7       555          CMP.B   #$3,bit3
000014A4  6700 02B8                556          BEQ     MOVEIANI1
000014A8  0C39 0004 000034A7       557          CMP.B   #$4,bit3
000014B0  6700 0354                558          BEQ     MOVEIAND1
000014B4  0C39 0007 000034A7       559          CMP.B   #$7,bit3
000014BC  6700 0088                560          BEQ     ADDIMD        
000014C0                           561  
000014C0                           562  MOVB
000014C0  43F9 00003290            563          LEA MMOVEB,A1
000014C6  103C 000E                564          MOVE.B  #14,D0
000014CA  4E4F                     565          TRAP    #15 
000014CC                           566          
000014CC  E20A                     567          LSR.B   #1,D2
000014CE  13C2 000034A5            568          MOVE.B  D2,bit1
000014D4                           569          
000014D4  1416                     570          MOVE.B  (A6),D2
000014D6  EB0A                     571          LSL.B   #5,D2
000014D8  EA0A                     572          LSR.B   #5,D2
000014DA  13C2 000034A8            573          MOVE.B  D2,bit4
000014E0                           574          
000014E0  141E                     575          MOVE.B  (A6)+,D2
000014E2  E50A                     576          LSL.B   #2,D2
000014E4  EA0A                     577          LSR.B   #5,D2
000014E6  13C2 000034A7            578          MOVE.B  D2,bit3
000014EC                           579          
000014EC  EF4E                     580          LSL.W   #7,D6
000014EE  E04E                     581          LSR.W   #8,D6 
000014F0  EA4E                     582          LSR.W   #5,D6 
000014F2  13C6 000034A6            583          MOVE.B  D6,bit2
000014F8                           584          
000014F8                           585      
000014F8  4285                     586          CLR.L   D5
000014FA                           587          
000014FA  0C39 0000 000034A7       588          CMP.B   #$0,bit3           
00001502  6700 03A2                589          BEQ     MOVBDN1
00001506  0C39 0001 000034A7       590          CMP.B   #$1,bit3
0000150E  6700 0146                591          BEQ     MOVEAN1
00001512  0C39 0002 000034A7       592          CMP.B   #$2,bit3
0000151A  6700 01AE                593          BEQ     MOVEIAN1
0000151E  0C39 0003 000034A7       594          CMP.B   #$3,bit3
00001526  6700 0236                595          BEQ     MOVEIANI1
0000152A  0C39 0004 000034A7       596          CMP.B   #$4,bit3
00001532  6700 02D2                597          BEQ     MOVEIAND1
00001536  0C39 0007 000034A7       598          CMP.B   #$7,bit3
0000153E  6700 0006                599          BEQ     ADDIMD
00001542                           600          
00001542  6000 1A2C                601          BRA     INVOP
00001546                           602  
00001546                           603  ADDIMD
00001546  43F9 00003235            604      LEA     TAB,A1
0000154C  103C 000E                605      MOVE.B  #14,D0
00001550  4E4F                     606      TRAP    #15
00001552                           607      
00001552  0C39 0000 000034A8       608      CMP.B   #$0,bit4
0000155A  6700 001A                609      BEQ     ADDIMD0
0000155E  0C39 0001 000034A8       610      CMP.B   #$1,bit4
00001566  6700 001C                611      BEQ     ADDIMD1
0000156A  0C39 0004 000034A8       612      CMP.B   #$4,bit4
00001572  6700 001E                613      BEQ     ADDIMD4
00001576                           614  
00001576                           615  ADDIMD0
00001576  183C 0001                616      MOVE.B  #$1,D4
0000157A  45F9 000015A8            617      LEA     HANDLEDES,A2
00001580  6000 1974                618      BRA     DISPEA
00001584                           619  ADDIMD1 
00001584  183C 0002                620      MOVE.B  #$2,D4
00001588  45F9 000015A8            621      LEA     HANDLEDES,A2
0000158E  6000 1966                622      BRA     DISPEA
00001592                           623  ADDIMD4
00001592  43F9 00003243            624      LEA     HASH,A1
00001598  103C 000E                625      MOVE.B  #14,D0
0000159C  4E4F                     626      TRAP    #15
0000159E                           627      
0000159E  45F9 000015A8            628      LEA     HANDLEDES,A2
000015A4  6000 1950                629      BRA     DISPEA 
000015A8                           630      
000015A8                           631  HANDLEDES
000015A8  43F9 00003239            632      LEA     COMMA,A1
000015AE  103C 000E                633      MOVE.B  #14,D0
000015B2  4E4F                     634      TRAP    #15
000015B4                           635      
000015B4  0C39 0000 000034A6       636      CMP.B   #$0,bit2
000015BC  6700 0488                637      BEQ     MOVBDN2
000015C0  0C39 0001 000034A6       638      CMP.B   #$1,bit2
000015C8  6700 03AC                639      BEQ     MOVEAN2
000015CC  0C39 0002 000034A6       640      CMP.B   #$2,bit2 
000015D4  6700 03BC                641      BEQ     MOVIAN2
000015D8  0C39 0003 000034A6       642      CMP.B   #$3,bit2 
000015E0  6700 03E4                643      BEQ     MOVIANI2
000015E4  0C39 0004 000034A6       644      CMP.B   #$4,bit2 
000015EC  6700 0418                645      BEQ     MOVIAND2
000015F0  BA3C 0005                646      CMP.B   #$5,D5
000015F4  6700 0450                647      BEQ     MOVBDN2
000015F8  BA3C 0007                648      CMP.B   #$7,D5
000015FC  6700 0002                649      BEQ     ADDIMDDES
00001600                           650  
00001600                           651  ADDIMDDES
00001600  0C39 0000 000034A8       652      CMP.B   #$0,bit4
00001608  6700 001A                653      BEQ     ADDIMDDES0
0000160C  0C39 0001 000034A8       654      CMP.B   #$1,bit4
00001614  6700 001C                655      BEQ     ADDIMDDES1
00001618  0C39 0004 000034A8       656      CMP.B   #$4,bit4
00001620  6700 001E                657      BEQ     ADDIMDDES4
00001624                           658      
00001624                           659  ADDIMDDES0
00001624  183C 0001                660      MOVE.B  #$1,D4
00001628  45F9 00002FE2            661      LEA     ENDNEWLINE,A2
0000162E  6000 18C6                662      BRA     DISPEA
00001632                           663      
00001632                           664  ADDIMDDES1
00001632  183C 0002                665      MOVE.B  #$2,D4
00001636  45F9 00002FE2            666      LEA     ENDNEWLINE,A2
0000163C  6000 18B8                667      BRA     DISPEA
00001640                           668      
00001640                           669  ADDIMDDES4    
00001640  43F9 00003243            670      LEA     HASH,A1
00001646  103C 000E                671      MOVE.B  #14,D0
0000164A  4E4F                     672      TRAP    #15
0000164C                           673      
0000164C  45F9 00002FE2            674      LEA     ENDNEWLINE,A2
00001652  6000 18A2                675      BRA     DISPEA 
00001656                           676          
00001656                           677  MOVEAN1
00001656  43F9 00003235            678      LEA TAB,A1
0000165C  103C 000E                679      MOVE.B  #14,D0
00001660  4E4F                     680      TRAP    #15
00001662                           681  
00001662  43F9 00003247            682      LEA DISPA,A1
00001668  103C 000E                683      MOVE.B  #14,D0
0000166C  4E4F                     684      TRAP    #15
0000166E                           685      
0000166E  1239 000034A8            686      MOVE.B  bit4,D1
00001674  103C 0003                687      MOVE.B  #3,D0
00001678  4E4F                     688      TRAP    #15
0000167A                           689      
0000167A  43F9 00003239            690      LEA COMMA,A1
00001680  103C 000E                691      MOVE.B  #14,D0
00001684  4E4F                     692      TRAP    #15
00001686                           693      
00001686  0C39 0000 000034A6       694      CMP.B   #$0,bit2
0000168E  6700 03B6                695      BEQ     MOVBDN2
00001692  0C39 0001 000034A6       696      CMP.B   #$1,bit2
0000169A  6700 02DA                697      BEQ     MOVEAN2
0000169E  0C39 0002 000034A6       698      CMP.B   #$2,bit2 
000016A6  6700 02EA                699      BEQ     MOVIAN2
000016AA  0C39 0003 000034A6       700      CMP.B   #$3,bit2 
000016B2  6700 0312                701      BEQ     MOVIANI2
000016B6  0C39 0004 000034A6       702      CMP.B   #$4,bit2 
000016BE  6700 0346                703      BEQ     MOVIAND2
000016C2  BA3C 0005                704      CMP.B   #$5,D5
000016C6  6700 037E                705      BEQ     MOVBDN2
000016CA                           706      
000016CA                           707  MOVEIAN1
000016CA  43F9 00003235            708      LEA TAB,A1
000016D0  103C 000E                709      MOVE.B  #14,D0
000016D4  4E4F                     710      TRAP    #15
000016D6                           711      
000016D6  43F9 0000323B            712      LEA OPENBRA,A1
000016DC  103C 000E                713      MOVE.B  #14,D0
000016E0  4E4F                     714      TRAP    #15
000016E2                           715  
000016E2  43F9 00003247            716      LEA DISPA,A1
000016E8  103C 000E                717      MOVE.B  #14,D0
000016EC  4E4F                     718      TRAP    #15
000016EE                           719      
000016EE  1239 000034A8            720      MOVE.B  bit4,D1
000016F4  103C 0003                721      MOVE.B  #3,D0
000016F8  4E4F                     722      TRAP    #15
000016FA                           723      
000016FA  43F9 0000323D            724      LEA CLOSEBRA,A1
00001700  103C 000E                725      MOVE.B  #14,D0
00001704  4E4F                     726      TRAP    #15
00001706                           727      
00001706  B83C 0003                728      CMP.B   #$3,D4
0000170A  6700 18D6                729      BEQ     ENDNEWLINE
0000170E                           730      
0000170E  43F9 00003239            731      LEA COMMA,A1
00001714  103C 000E                732      MOVE.B  #14,D0
00001718  4E4F                     733      TRAP    #15
0000171A                           734      
0000171A  0C39 0000 000034A6       735      CMP.B   #$0,bit2
00001722  6700 0322                736      BEQ     MOVBDN2
00001726  0C39 0001 000034A6       737      CMP.B   #$1,bit2
0000172E  6700 0246                738      BEQ     MOVEAN2
00001732  0C39 0002 000034A6       739      CMP.B   #$2,bit2 
0000173A  6700 0256                740      BEQ     MOVIAN2
0000173E  0C39 0003 000034A6       741      CMP.B   #$3,bit2 
00001746  6700 027E                742      BEQ     MOVIANI2
0000174A  0C39 0004 000034A6       743      CMP.B   #$4,bit2 
00001752  6700 02B2                744      BEQ     MOVIAND2
00001756  BA3C 0005                745      CMP.B   #$5,D5
0000175A  6700 02EA                746      BEQ     MOVBDN2
0000175E                           747  
0000175E                           748  MOVEIANI1
0000175E  43F9 00003235            749      LEA TAB,A1
00001764  103C 000E                750      MOVE.B  #14,D0
00001768  4E4F                     751      TRAP    #15
0000176A                           752      
0000176A  43F9 0000323B            753      LEA OPENBRA,A1
00001770  103C 000E                754      MOVE.B  #14,D0
00001774  4E4F                     755      TRAP    #15
00001776                           756  
00001776  43F9 00003247            757      LEA DISPA,A1
0000177C  103C 000E                758      MOVE.B  #14,D0
00001780  4E4F                     759      TRAP    #15
00001782                           760      
00001782  1239 000034A8            761      MOVE.B  bit4,D1
00001788  103C 0003                762      MOVE.B  #3,D0
0000178C  4E4F                     763      TRAP    #15
0000178E                           764      
0000178E  43F9 0000323D            765      LEA CLOSEBRA,A1
00001794  103C 000E                766      MOVE.B  #14,D0
00001798  4E4F                     767      TRAP    #15
0000179A                           768      
0000179A  43F9 0000323F            769      LEA POS,A1
000017A0  103C 000E                770      MOVE.B  #14,D0
000017A4  4E4F                     771      TRAP    #15
000017A6                           772      
000017A6  BA3C 0003                773      CMP.B   #$3,D5
000017AA  6700 1836                774      BEQ     ENDNEWLINE
000017AE                           775             
000017AE  BA3C 0004                776      CMP.B   #$4,D5
000017B2  6700 182E                777      BEQ     ENDNEWLINE
000017B6                           778          
000017B6                           779          
000017B6  43F9 00003239            780      LEA COMMA,A1
000017BC  103C 000E                781      MOVE.B  #14,D0
000017C0  4E4F                     782      TRAP    #15
000017C2                           783      
000017C2  0C39 0000 000034A6       784      CMP.B   #$0,bit2
000017CA  6700 027A                785      BEQ     MOVBDN2
000017CE  0C39 0001 000034A6       786      CMP.B   #$1,bit2
000017D6  6700 019E                787      BEQ     MOVEAN2
000017DA  0C39 0002 000034A6       788      CMP.B   #$2,bit2 
000017E2  6700 01AE                789      BEQ     MOVIAN2
000017E6  0C39 0003 000034A6       790      CMP.B   #$3,bit2 
000017EE  6700 01D6                791      BEQ     MOVIANI2
000017F2  0C39 0004 000034A6       792      CMP.B   #$4,bit2 
000017FA  6700 020A                793      BEQ     MOVIAND2
000017FE  BA3C 0005                794      CMP.B   #$5,D5
00001802  6700 0242                795      BEQ     MOVBDN2
00001806                           796  
00001806                           797  MOVEIAND1
00001806  43F9 00003235            798      LEA TAB,A1
0000180C  103C 000E                799      MOVE.B  #14,D0
00001810  4E4F                     800      TRAP    #15
00001812                           801      
00001812  43F9 00003241            802      LEA NEG,A1
00001818  103C 000E                803      MOVE.B  #14,D0
0000181C  4E4F                     804      TRAP    #15
0000181E                           805      
0000181E  43F9 0000323B            806      LEA OPENBRA,A1
00001824  103C 000E                807      MOVE.B  #14,D0
00001828  4E4F                     808      TRAP    #15
0000182A                           809  
0000182A  43F9 00003247            810      LEA DISPA,A1
00001830  103C 000E                811      MOVE.B  #14,D0
00001834  4E4F                     812      TRAP    #15
00001836                           813      
00001836  1239 000034A8            814      MOVE.B  bit4,D1
0000183C  103C 0003                815      MOVE.B  #3,D0
00001840  4E4F                     816      TRAP    #15
00001842                           817      
00001842  43F9 0000323D            818      LEA CLOSEBRA,A1
00001848  103C 000E                819      MOVE.B  #14,D0
0000184C  4E4F                     820      TRAP    #15
0000184E                           821      
0000184E  BA3C 0004                822      CMP.B   #$4,D5
00001852  6700 178E                823      BEQ     ENDNEWLINE
00001856                           824      
00001856  43F9 00003239            825      LEA COMMA,A1
0000185C  103C 000E                826      MOVE.B  #14,D0
00001860  4E4F                     827      TRAP    #15
00001862                           828      
00001862  0C39 0000 000034A6       829      CMP.B   #$0,bit2
0000186A  6700 01DA                830      BEQ     MOVBDN2
0000186E  0C39 0001 000034A6       831      CMP.B   #$1,bit2
00001876  6700 00FE                832      BEQ     MOVEAN2
0000187A  0C39 0002 000034A6       833      CMP.B   #$2,bit2 
00001882  6700 010E                834      BEQ     MOVIAN2
00001886  0C39 0003 000034A6       835      CMP.B   #$3,bit2 
0000188E  6700 0136                836      BEQ     MOVIANI2
00001892  0C39 0004 000034A6       837      CMP.B   #$4,bit2 
0000189A  6700 016A                838      BEQ     MOVIAND2
0000189E  BA3C 0005                839      CMP.B   #$5,D5
000018A2  6700 01A2                840      BEQ     MOVBDN2
000018A6                           841  
000018A6                           842  MOVBDN1
000018A6  43F9 00003235            843      LEA TAB,A1
000018AC  103C 000E                844      MOVE.B  #14,D0
000018B0  4E4F                     845      TRAP    #15
000018B2                           846  
000018B2  BA3C 0006                847      CMP.B   #$6,D5             * Data Reg for LSLR
000018B6  6700 007A                848      BEQ     LSLRSRCD
000018BA                           849  
000018BA  43F9 0000324D            850      LEA DISPD,A1
000018C0  103C 000E                851      MOVE.B  #14,D0
000018C4  4E4F                     852      TRAP    #15
000018C6                           853      
000018C6  1239 000034A8            854      MOVE.B  bit4,D1
000018CC  103C 0003                855      MOVE.B  #3,D0
000018D0  4E4F                     856      TRAP    #15
000018D2                           857  
000018D2  BA3C 0004                858      CMP.B   #$4,D5
000018D6  6700 0192                859      BEQ     ENDNLINC
000018DA                           860  
000018DA  43F9 00003239            861      LEA COMMA,A1
000018E0  103C 000E                862      MOVE.B  #14,D0
000018E4  4E4F                     863      TRAP    #15
000018E6                           864  
000018E6  BA3C 0006                865      CMP.B   #$6,D5             * Data Reg for LSLR
000018EA  6700 006E                866      BEQ     LSLRDESD
000018EE  0C39 0000 000034A6       867      CMP.B   #$0,bit2
000018F6  6700 014E                868      BEQ     MOVBDN2
000018FA  0C39 0001 000034A6       869      CMP.B   #$1,bit2
00001902  6700 0072                870      BEQ     MOVEAN2
00001906  0C39 0002 000034A6       871      CMP.B   #$2,bit2 
0000190E  6700 0082                872      BEQ     MOVIAN2
00001912  0C39 0003 000034A6       873      CMP.B   #$3,bit2 
0000191A  6700 00AA                874      BEQ     MOVIANI2
0000191E  0C39 0004 000034A6       875      CMP.B   #$4,bit2 
00001926  6700 00DE                876      BEQ     MOVIAND2
0000192A  BA3C 0005                877      CMP.B   #$5,D5
0000192E  6700 0116                878      BEQ     MOVBDN2
00001932                           879      
00001932                           880  LSLRSRCD
00001932  43F9 0000324D            881      LEA DISPD,A1
00001938  103C 000E                882      MOVE.B  #14,D0
0000193C  4E4F                     883      TRAP    #15
0000193E                           884          
0000193E  1239 000034A4            885      MOVE.B  bit0,D1
00001944  103C 0003                886      MOVE.B  #3,D0
00001948  4E4F                     887      TRAP    #15    
0000194A                           888  
0000194A  43F9 00003239            889      LEA COMMA,A1
00001950  103C 000E                890      MOVE.B  #14,D0
00001954  4E4F                     891      TRAP    #15  
00001956                           892      
00001956  6000 0002                893      BRA     LSLRDESD
0000195A                           894      
0000195A                           895  LSLRDESD
0000195A  43F9 0000324D            896      LEA DISPD,A1
00001960  103C 000E                897      MOVE.B  #14,D0
00001964  4E4F                     898      TRAP    #15
00001966                           899          
00001966  1239 000034A8            900      MOVE.B  bit4,D1
0000196C  103C 0003                901      MOVE.B  #3,D0
00001970  4E4F                     902      TRAP    #15      
00001972                           903      
00001972                           904      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001972  6000 166E                905      BRA     ENDNEWLINE       
00001976                           906  
00001976                           907  MOVEAN2
00001976  43F9 00003247            908      LEA DISPA,A1
0000197C  103C 000E                909      MOVE.B  #14,D0
00001980  4E4F                     910      TRAP    #15
00001982                           911      
00001982  1239 000034A5            912      MOVE.B  bit1,D1
00001988  103C 0003                913      MOVE.B  #3,D0
0000198C  4E4F                     914      TRAP    #15
0000198E                           915  
0000198E                           916      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000198E  6000 1652                917      BRA     ENDNEWLINE    
00001992                           918  
00001992                           919  MOVIAN2
00001992  43F9 0000323B            920      LEA OPENBRA,A1
00001998  103C 000E                921      MOVE.B  #14,D0
0000199C  4E4F                     922      TRAP    #15
0000199E                           923  
0000199E  43F9 00003247            924      LEA DISPA,A1
000019A4  103C 000E                925      MOVE.B  #14,D0
000019A8  4E4F                     926      TRAP    #15
000019AA                           927      
000019AA  1239 000034A5            928      MOVE.B  bit1,D1
000019B0  103C 0003                929      MOVE.B  #3,D0
000019B4  4E4F                     930      TRAP    #15
000019B6                           931      
000019B6  43F9 0000323D            932      LEA CLOSEBRA,A1
000019BC  103C 000E                933      MOVE.B  #14,D0
000019C0  4E4F                     934      TRAP    #15
000019C2                           935      
000019C2                           936      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019C2  6000 161E                937      BRA     ENDNEWLINE
000019C6                           938  
000019C6                           939  MOVIANI2
000019C6  43F9 0000323B            940      LEA OPENBRA,A1
000019CC  103C 000E                941      MOVE.B  #14,D0
000019D0  4E4F                     942      TRAP    #15
000019D2                           943  
000019D2  43F9 00003247            944      LEA DISPA,A1
000019D8  103C 000E                945      MOVE.B  #14,D0
000019DC  4E4F                     946      TRAP    #15
000019DE                           947      
000019DE  1239 000034A5            948      MOVE.B  bit1,D1
000019E4  103C 0003                949      MOVE.B  #3,D0
000019E8  4E4F                     950      TRAP    #15
000019EA                           951      
000019EA  43F9 0000323D            952      LEA CLOSEBRA,A1
000019F0  103C 000E                953      MOVE.B  #14,D0
000019F4  4E4F                     954      TRAP    #15
000019F6                           955      
000019F6  43F9 0000323F            956      LEA POS,A1
000019FC  103C 000E                957      MOVE.B  #14,D0
00001A00  4E4F                     958      TRAP    #15
00001A02                           959      
00001A02                           960      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A02  6000 15DE                961      BRA     ENDNEWLINE
00001A06                           962  
00001A06                           963  MOVIAND2
00001A06  43F9 00003241            964      LEA NEG,A1
00001A0C  103C 000E                965      MOVE.B  #14,D0
00001A10  4E4F                     966      TRAP    #15
00001A12                           967      
00001A12  43F9 0000323B            968      LEA OPENBRA,A1
00001A18  103C 000E                969      MOVE.B  #14,D0
00001A1C  4E4F                     970      TRAP    #15
00001A1E                           971  
00001A1E  43F9 00003247            972      LEA DISPA,A1
00001A24  103C 000E                973      MOVE.B  #14,D0
00001A28  4E4F                     974      TRAP    #15
00001A2A                           975      
00001A2A  1239 000034A5            976      MOVE.B  bit1,D1
00001A30  103C 0003                977      MOVE.B  #3,D0
00001A34  4E4F                     978      TRAP    #15
00001A36                           979      
00001A36  43F9 0000323D            980      LEA CLOSEBRA,A1
00001A3C  103C 000E                981      MOVE.B  #14,D0
00001A40  4E4F                     982      TRAP    #15
00001A42                           983  
00001A42                           984      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A42  6000 159E                985      BRA     ENDNEWLINE
00001A46                           986  
00001A46                           987  MOVBDN2
00001A46  43F9 0000324D            988      LEA DISPD,A1
00001A4C  103C 000E                989      MOVE.B  #14,D0
00001A50  4E4F                     990      TRAP    #15
00001A52                           991          
00001A52  1239 000034A5            992      MOVE.B  bit1,D1
00001A58  103C 0003                993      MOVE.B  #3,D0
00001A5C  4E4F                     994      TRAP    #15   
00001A5E                           995      
00001A5E  B83C 0000                996      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A62  6700 157E                997      BEQ     ENDNEWLINE
00001A66                           998      
00001A66                           999      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A66  6000 157A               1000      BRA     ENDNEWLINE
00001A6A                          1001      
00001A6A                          1002      
00001A6A                          1003  ENDNLINC
00001A6A                          1004      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A6A  6000 1576               1005      BRA     ENDNEWLINE    
00001A6E                          1006      
00001A6E                          1007  MULSW
00001A6E  1407                    1008          MOVE.B  D7,D2
00001A70  EB0A                    1009          LSL.B   #5,D2
00001A72  EA0A                    1010          LSR.B   #5,D2
00001A74  13C2 000034A8           1011          MOVE.B  D2,bit4
00001A7A                          1012          
00001A7A  1407                    1013          MOVE.B  D7,D2
00001A7C  E50A                    1014          LSL.B   #2,D2
00001A7E  EA0A                    1015          LSR.B   #5,D2
00001A80  13C2 000034A7           1016          MOVE.B  D2,bit3
00001A86                          1017          
00001A86  3C07                    1018          MOVE.W  D7,D6
00001A88  EF4E                    1019          LSL.W   #7,D6
00001A8A  E04E                    1020          LSR.W   #8,D6 
00001A8C  EA4E                    1021          LSR.W   #5,D6 
00001A8E  13C6 000034A6           1022          MOVE.B  D6,bit2
00001A94                          1023          
00001A94  E94F                    1024          LSL.W   #4,D7
00001A96  E04F                    1025          LSR.W   #8,D7 
00001A98  EA4F                    1026          LSR.W   #5,D7 
00001A9A  13C7 000034A5           1027          MOVE.B  D7,bit1
00001AA0                          1028          
00001AA0  43F9 00003289           1029          LEA MMULSW,A1
00001AA6  323C 000E               1030          MOVE    #14,D1
00001AAA  4E4F                    1031          TRAP    #15
00001AAC                          1032          
00001AAC  1A3C 0005               1033          MOVE.B  #$5,D5 
00001AB0                          1034          
00001AB0  0C39 0000 000034A7      1035          CMP.B   #$0,bit3           
00001AB8  6700 FDEC               1036          BEQ     MOVBDN1
00001ABC  0C39 0001 000034A7      1037          CMP.B   #$1,bit3
00001AC4  6700 FB90               1038          BEQ     MOVEAN1
00001AC8  0C39 0002 000034A7      1039          CMP.B   #$2,bit3
00001AD0  6700 FBF8               1040          BEQ     MOVEIAN1
00001AD4  0C39 0003 000034A7      1041          CMP.B   #$3,bit3
00001ADC  6700 FC80               1042          BEQ     MOVEIANI1
00001AE0  0C39 0004 000034A7      1043          CMP.B   #$4,bit3
00001AE8  6700 FD1C               1044          BEQ     MOVEIAND1
00001AEC  0C39 0007 000034A7      1045          CMP.B   #$7,bit3
00001AF4  6700 FA50               1046          BEQ     ADDIMD
00001AF8                          1047  
00001AF8                          1048           
00001AF8                          1049  DIVSW               
00001AF8                          1050          *MOVE.B  D6,D2
00001AF8  141E                    1051          MOVE.B  (A6)+,D2
00001AFA  EB0A                    1052          LSL.B   #5,D2
00001AFC  EA0A                    1053          LSR.B   #5,D2
00001AFE  13C2 000034A8           1054          MOVE.B  D2,bit4
00001B04                          1055          
00001B04  1406                    1056          MOVE.B  D6,D2
00001B06  E50A                    1057          LSL.B   #2,D2
00001B08  EA0A                    1058          LSR.B   #5,D2
00001B0A  13C2 000034A7           1059          MOVE.B  D2,bit3
00001B10                          1060          
00001B10  3E06                    1061          MOVE.W  D6,D7
00001B12  EF4F                    1062          LSL.W   #7,D7
00001B14  E04F                    1063          LSR.W   #8,D7 
00001B16  EA4F                    1064          LSR.W   #5,D7 
00001B18  13C7 000034A6           1065          MOVE.B  D7,bit2
00001B1E                          1066          
00001B1E  E94E                    1067          LSL.W   #4,D6
00001B20  E04E                    1068          LSR.W   #8,D6 
00001B22  EA4E                    1069          LSR.W   #5,D6 
00001B24  13C6 000034A5           1070          MOVE.B  D6,bit1
00001B2A                          1071          
00001B2A  43F9 00003282           1072          LEA MMDIVSW,A1
00001B30  323C 000E               1073          MOVE    #14,D1
00001B34  4E4F                    1074          TRAP    #15
00001B36                          1075          
00001B36  1A3C 0005               1076          MOVE.B  #$5,D5 
00001B3A  183C 0004               1077          MOVE.B  #$4,D4
00001B3E                          1078          
00001B3E  0C39 0000 000034A7      1079          CMP.B   #$0,bit3           
00001B46  6700 FD5E               1080          BEQ     MOVBDN1
00001B4A  0C39 0001 000034A7      1081          CMP.B   #$1,bit3
00001B52  6700 FB02               1082          BEQ     MOVEAN1
00001B56  0C39 0002 000034A7      1083          CMP.B   #$2,bit3
00001B5E  6700 FB6A               1084          BEQ     MOVEIAN1
00001B62  0C39 0003 000034A7      1085          CMP.B   #$3,bit3
00001B6A  6700 FBF2               1086          BEQ     MOVEIANI1
00001B6E  0C39 0004 000034A7      1087          CMP.B   #$4,bit3
00001B76  6700 FC8E               1088          BEQ     MOVEIAND1
00001B7A  0C39 0007 000034A7      1089          CMP.B   #$7,bit3
00001B82  6700 F9C2               1090          BEQ     ADDIMD
00001B86                          1091  
00001B86                          1092  NEGW
00001B86  1406                    1093          MOVE.B  D6,D2
00001B88  EB0A                    1094          LSL.B   #5,D2
00001B8A  EA0A                    1095          LSR.B   #5,D2
00001B8C  13C2 000034A8           1096          MOVE.B  D2,bit4
00001B92                          1097          
00001B92  1406                    1098          MOVE.B  D6,D2
00001B94  E50A                    1099          LSL.B   #2,D2
00001B96  EA0A                    1100          LSR.B   #5,D2
00001B98  13C2 000034A7           1101          MOVE.B  D2,bit3
00001B9E                          1102          
00001B9E  3E06                    1103          MOVE.W  D6,D7
00001BA0  E14F                    1104          LSL.W   #8,D7
00001BA2  E04F                    1105          LSR.W   #8,D7 
00001BA4  EC4F                    1106          LSR.W   #6,D7 
00001BA6  13C7 000034A6           1107          MOVE.B  D7,bit2
00001BAC                          1108          
00001BAC  43F9 0000327D           1109          LEA MMNEGW,A1
00001BB2  323C 000E               1110          MOVE    #14,D1
00001BB6  4E4F                    1111          TRAP    #15
00001BB8                          1112          
00001BB8  183C 0003               1113          MOVE.B  #$3,D4
00001BBC                          1114          
00001BBC  0C39 0000 000034A6      1115          CMP.B   #$0,bit2
00001BC4  6700 001A               1116          BEQ     PRINTBYTE
00001BC8  0C39 0001 000034A6      1117          CMP.B   #$1,bit2
00001BD0  6700 0062               1118          BEQ     PRINTWORD
00001BD4  0C39 0002 000034A6      1119          CMP.B   #$2,bit2
00001BDC  6700 00AA               1120          BEQ     PRINTLONG
00001BE0                          1121          
00001BE0                          1122  PRINTBYTE
00001BE0  43F9 00003257           1123      LEA MBYTE,A1
00001BE6  323C 000E               1124      MOVE    #14,D1
00001BEA  4E4F                    1125      TRAP    #15
00001BEC                          1126  
00001BEC  0C39 0000 000034A7      1127      CMP.B   #$0,bit3           
00001BF4  6700 FCB0               1128          BEQ     MOVBDN1
00001BF8  0C39 0001 000034A7      1129          CMP.B   #$1,bit3
00001C00  6700 FA54               1130          BEQ     MOVEAN1
00001C04  0C39 0002 000034A7      1131          CMP.B   #$2,bit3
00001C0C  6700 FABC               1132          BEQ     MOVEIAN1
00001C10  0C39 0003 000034A7      1133          CMP.B   #$3,bit3
00001C18  6700 FB44               1134          BEQ     MOVEIANI1
00001C1C  0C39 0004 000034A7      1135          CMP.B   #$4,bit3
00001C24  6700 FBE0               1136          BEQ     MOVEIAND1
00001C28  0C39 0007 000034A7      1137          CMP.B   #$7,bit3
00001C30  6700 F9CE               1138          BEQ     ADDIMDDES
00001C34                          1139      
00001C34                          1140  PRINTWORD
00001C34  43F9 0000325A           1141      LEA MWORD,A1
00001C3A  323C 000E               1142      MOVE    #14,D1
00001C3E  4E4F                    1143      TRAP    #15
00001C40                          1144  
00001C40  0C39 0000 000034A7      1145      CMP.B   #$0,bit3           
00001C48  6700 FC5C               1146          BEQ     MOVBDN1
00001C4C  0C39 0001 000034A7      1147          CMP.B   #$1,bit3
00001C54  6700 FA00               1148          BEQ     MOVEAN1
00001C58  0C39 0002 000034A7      1149          CMP.B   #$2,bit3
00001C60  6700 FA68               1150          BEQ     MOVEIAN1
00001C64  0C39 0003 000034A7      1151          CMP.B   #$3,bit3
00001C6C  6700 FAF0               1152          BEQ     MOVEIANI1
00001C70  0C39 0004 000034A7      1153          CMP.B   #$4,bit3
00001C78  6700 FB8C               1154          BEQ     MOVEIAND1
00001C7C  0C39 0007 000034A7      1155          CMP.B   #$7,bit3
00001C84  6700 F97A               1156          BEQ     ADDIMDDES
00001C88                          1157      
00001C88                          1158  PRINTLONG
00001C88  43F9 0000325D           1159      LEA MLONG,A1
00001C8E  323C 000E               1160      MOVE    #14,D1
00001C92  4E4F                    1161      TRAP    #15
00001C94                          1162   
00001C94  0C39 0000 000034A7      1163      CMP.B   #$0,bit3           
00001C9C  6700 FC08               1164          BEQ     MOVBDN1
00001CA0  0C39 0001 000034A7      1165          CMP.B   #$1,bit3
00001CA8  6700 F9AC               1166          BEQ     MOVEAN1
00001CAC  0C39 0002 000034A7      1167          CMP.B   #$2,bit3
00001CB4  6700 FA14               1168          BEQ     MOVEIAN1
00001CB8  0C39 0003 000034A7      1169          CMP.B   #$3,bit3
00001CC0  6700 FA9C               1170          BEQ     MOVEIANI1
00001CC4  0C39 0004 000034A7      1171          CMP.B   #$4,bit3
00001CCC  6700 FB38               1172          BEQ     MOVEIAND1
00001CD0  0C39 0007 000034A7      1173          CMP.B   #$7,bit3
00001CD8  6700 F926               1174          BEQ     ADDIMDDES
00001CDC                          1175          
00001CDC                          1176  LSLR
00001CDC                          1177          *MOVE.B  D6,D2
00001CDC  141E                    1178          MOVE.B  (A6)+,D2
00001CDE  EB0A                    1179          LSL.B   #5,D2
00001CE0  EA0A                    1180          LSR.B   #5,D2
00001CE2  13C2 000034A8           1181          MOVE.B  D2,bit4
00001CE8                          1182          
00001CE8  1406                    1183          MOVE.B  D6,D2
00001CEA  E50A                    1184          LSL.B   #2,D2
00001CEC  EE0A                    1185          LSR.B   #7,D2
00001CEE  13C2 000034A7           1186          MOVE.B  D2,bit3
00001CF4                          1187          
00001CF4  3E06                    1188          MOVE.W  D6,D7
00001CF6  E14F                    1189          LSL.W   #8,D7
00001CF8  E04F                    1190          LSR.W   #8,D7 
00001CFA  EC4F                    1191          LSR.W   #6,D7 
00001CFC  13C7 000034A6           1192          MOVE.B  D7,bit2
00001D02                          1193          
00001D02  3E06                    1194          MOVE.W  D6,D7
00001D04  EF4F                    1195          LSL.W   #7,D7
00001D06  E04F                    1196          LSR.W   #8,D7 
00001D08  EE4F                    1197          LSR.W   #7,D7
00001D0A  13C7 000034A5           1198          MOVE.B  D7,bit1   
00001D10                          1199      
00001D10  1806                    1200          MOVE.B  D6,D4
00001D12                          1201          
00001D12  3E06                    1202          MOVE.W  D6,D7
00001D14  E94F                    1203          LSL.W   #4,D7
00001D16  E04F                    1204          LSR.W   #8,D7 
00001D18  EA4F                    1205          LSR.W   #5,D7
00001D1A  13C7 000034A4           1206          MOVE.B  D7,bit0 
00001D20                          1207          
00001D20  1E06                    1208          MOVE.B  D6,D7
00001D22  E90F                    1209          LSL.B   #4,D7
00001D24  EE0F                    1210          LSR.B   #7,D7
00001D26                          1211          
00001D26  0C39 0003 000034A6      1212          CMP.B   #3,bit2
00001D2E  6700 00B4               1213          BEQ     LSLRMEMH
00001D32                          1214          
00001D32  BE3C 0000               1215          CMP.B   #0,D7
00001D36  6700 0028               1216          BEQ     ASLRMEMH
00001D3A                          1217          
00001D3A  1606                    1218          MOVE.B  D6,D3
00001D3C  E70B                    1219          LSL.B   #3,D3
00001D3E  EC0B                    1220          LSR.B   #6,D3
00001D40  B63C 0003               1221          CMP.B   #3,D3
00001D44  6700 00CA               1222          BEQ     RORL
00001D48                          1223          
00001D48  0C39 0001 000034A5      1224          CMP.B   #$1,bit1
00001D50  6700 013E               1225          BEQ     PRINTLSL
00001D54  0C39 0000 000034A5      1226          CMP.B   #$0,bit1
00001D5C  6700 0280               1227          BEQ     PRINTLSR
00001D60                          1228          
00001D60                          1229  ASLRMEMH
00001D60  1A3C 0004               1230          MOVE.B  #4,D5
00001D64  0C39 0001 000034A5      1231          CMP.B   #$1,bit1
00001D6C  6700 000E               1232          BEQ     PRINTASL
00001D70  0C39 0000 000034A5      1233          CMP.B   #$0,bit1
00001D78  6700 0036               1234          BEQ     PRINTASR
00001D7C                          1235          
00001D7C                          1236  PRINTASL
00001D7C  43F9 000032BC           1237          LEA MASL,A1
00001D82  303C 000E               1238          MOVE    #14,D0
00001D86  4E4F                    1239          TRAP    #15
00001D88                          1240          
00001D88  0C39 0000 000034A6      1241          CMP.B   #$0,bit2
00001D90  6700 017C               1242          BEQ     PRINTB
00001D94  0C39 0001 000034A6      1243          CMP.B   #$1,bit2
00001D9C  6700 01A4               1244          BEQ     PRINTW
00001DA0  0C39 0002 000034A6      1245          CMP.B   #$2,bit2
00001DA8  6700 01CC               1246          BEQ     PRINTL
00001DAC  6000 0116               1247          BRA     LSLRMEM
00001DB0                          1248          
00001DB0                          1249  PRINTASR        
00001DB0  43F9 000032C0           1250          LEA MASR,A1
00001DB6  303C 000E               1251          MOVE    #14,D0
00001DBA  4E4F                    1252          TRAP    #15
00001DBC                          1253          
00001DBC  0C39 0000 000034A6      1254          CMP.B   #$0,bit2
00001DC4  6700 0148               1255          BEQ     PRINTB
00001DC8  0C39 0001 000034A6      1256          CMP.B   #$1,bit2
00001DD0  6700 0170               1257          BEQ     PRINTW
00001DD4  0C39 0002 000034A6      1258          CMP.B   #$2,bit2
00001DDC  6700 0198               1259          BEQ     PRINTL
00001DE0  6000 00E2               1260          BRA     LSLRMEM
00001DE4                          1261          
00001DE4                          1262  LSLRMEMH
00001DE4  3E06                    1263          MOVE.W  D6,D7
00001DE6  ED4F                    1264          LSL.W   #6,D7
00001DE8  E04F                    1265          LSR.W   #8,D7
00001DEA  EE4F                    1266          LSR.W   #7,D7
00001DEC  BE3C 0000               1267          CMP.B   #0,D7
00001DF0  6700 FF6E               1268          BEQ     ASLRMEMH
00001DF4                          1269          
00001DF4  1A3C 0004               1270          MOVE.B  #4,D5
00001DF8  0C39 0001 000034A5      1271          CMP.B   #$1,bit1
00001E00  6700 008E               1272          BEQ     PRINTLSL
00001E04  0C39 0000 000034A5      1273          CMP.B   #$0,bit1
00001E0C  6700 01D0               1274          BEQ     PRINTLSR
00001E10                          1275  RORL
00001E10  0C39 0001 000034A5      1276          CMP.B   #$1,bit1
00001E18  6700 000E               1277          BEQ     PRINTROL
00001E1C  0C39 0000 000034A5      1278          CMP.B   #$0,bit1
00001E24  6700 0036               1279          BEQ     PRINTROR
00001E28                          1280  PRINTROL
00001E28  43F9 0000326D           1281          LEA MROL,A1
00001E2E  303C 000E               1282          MOVE    #14,D0
00001E32  4E4F                    1283          TRAP    #15
00001E34                          1284          
00001E34  0C39 0000 000034A6      1285          CMP.B   #$0,bit2
00001E3C  6700 00D0               1286          BEQ     PRINTB
00001E40  0C39 0001 000034A6      1287          CMP.B   #$1,bit2
00001E48  6700 00F8               1288          BEQ     PRINTW
00001E4C  0C39 0002 000034A6      1289          CMP.B   #$2,bit2
00001E54  6700 0120               1290          BEQ     PRINTL
00001E58  6000 006A               1291          BRA     LSLRMEM
00001E5C                          1292  PRINTROR
00001E5C  43F9 00003271           1293          LEA MROR,A1
00001E62  323C 000E               1294          MOVE    #14,D1
00001E66  4E4F                    1295          TRAP    #15
00001E68                          1296          
00001E68  0C39 0000 000034A6      1297          CMP.B   #$0,bit2
00001E70  6700 009C               1298          BEQ     PRINTB
00001E74  0C39 0001 000034A6      1299          CMP.B   #$1,bit2
00001E7C  6700 00C4               1300          BEQ     PRINTW
00001E80  0C39 0002 000034A6      1301          CMP.B   #$2,bit2
00001E88  6700 00EC               1302          BEQ     PRINTL
00001E8C  6000 0036               1303          BRA     LSLRMEM
00001E90                          1304  PRINTLSL
00001E90  43F9 00003275           1305          LEA MLSL,A1
00001E96  303C 000E               1306          MOVE    #14,D0
00001E9A  4E4F                    1307          TRAP    #15
00001E9C                          1308          
00001E9C  0C39 0000 000034A6      1309          CMP.B   #$0,bit2
00001EA4  6700 0068               1310          BEQ     PRINTB
00001EA8  0C39 0001 000034A6      1311          CMP.B   #$1,bit2
00001EB0  6700 0090               1312          BEQ     PRINTW
00001EB4  0C39 0002 000034A6      1313          CMP.B   #$2,bit2
00001EBC  6700 00B8               1314          BEQ     PRINTL
00001EC0  6000 0002               1315          BRA     LSLRMEM
00001EC4                          1316          
00001EC4                          1317  LSLRMEM
00001EC4                          1318          
00001EC4  E50C                    1319          LSL.B   #2,D4
00001EC6  EA0C                    1320          LSR.B   #5,D4
00001EC8  13C4 000034A7           1321          MOVE.B  D4,bit3
00001ECE                          1322          
00001ECE  183C 0003               1323          MOVE.B  #$3,D4
00001ED2                          1324          
00001ED2  0C39 0002 000034A7      1325          CMP.B   #$2,bit3
00001EDA  6700 F7EE               1326          BEQ     MOVEIAN1
00001EDE  0C39 0003 000034A7      1327          CMP.B   #$3,bit3
00001EE6  6700 F876               1328          BEQ     MOVEIANI1
00001EEA  0C39 0004 000034A7      1329          CMP.B   #$4,bit3
00001EF2  6700 F912               1330          BEQ     MOVEIAND1
00001EF6                          1331          
00001EF6  43F9 00003235           1332          LEA TAB,A1
00001EFC  123C 0003               1333          MOVE.B  #3,D1
00001F00  4E4F                    1334          TRAP    #15 
00001F02                          1335          
00001F02  0C39 0007 000034A7      1336          CMP.B   #$7,bit3
00001F0A  6700 F6F4               1337          BEQ     ADDIMDDES
00001F0E                          1338  PRINTB
00001F0E  43F9 00003253           1339          LEA MDOT,A1
00001F14  303C 000E               1340          MOVE    #14,D0
00001F18  4E4F                    1341          TRAP    #15
00001F1A                          1342  
00001F1A  43F9 00003257           1343          LEA MBYTE,A1
00001F20  303C 000E               1344          MOVE    #14,D0
00001F24  4E4F                    1345          TRAP    #15
00001F26                          1346          
00001F26  3A3C 0006               1347          MOVE #$6,D5
00001F2A                          1348          
00001F2A  0C39 0000 000034A7      1349          CMP.B   #0,bit3
00001F32  6700 0076               1350          BEQ     PRINTLSLRCOUNT
00001F36  0C39 0001 000034A7      1351          CMP.B   #1,bit3
00001F3E  6700 F966               1352          BEQ     MOVBDN1
00001F42                          1353  
00001F42                          1354  PRINTW 
00001F42  43F9 00003253           1355          LEA MDOT,A1
00001F48  303C 000E               1356          MOVE    #14,D0
00001F4C  4E4F                    1357          TRAP    #15
00001F4E                          1358  
00001F4E  43F9 0000325A           1359          LEA MWORD,A1
00001F54  303C 000E               1360          MOVE    #14,D0
00001F58  4E4F                    1361          TRAP    #15
00001F5A                          1362          
00001F5A  3A3C 0006               1363          MOVE #$6,D5
00001F5E                          1364          
00001F5E  0C39 0000 000034A7      1365          CMP.B   #0,bit3
00001F66  6700 0042               1366          BEQ     PRINTLSLRCOUNT
00001F6A  0C39 0001 000034A7      1367          CMP.B   #1,bit3
00001F72  6700 F932               1368          BEQ     MOVBDN1
00001F76                          1369  
00001F76                          1370  PRINTL
00001F76  43F9 00003253           1371          LEA MDOT,A1
00001F7C  303C 000E               1372          MOVE    #14,D0
00001F80  4E4F                    1373          TRAP    #15
00001F82                          1374  
00001F82  43F9 0000325D           1375          LEA MLONG,A1
00001F88  303C 000E               1376          MOVE    #14,D0
00001F8C  4E4F                    1377          TRAP    #15
00001F8E                          1378  
00001F8E  3A3C 0006               1379          MOVE #$6,D5
00001F92                          1380          
00001F92  0C39 0000 000034A7      1381          CMP.B   #0,bit3
00001F9A  6700 000E               1382          BEQ     PRINTLSLRCOUNT
00001F9E  0C39 0001 000034A7      1383          CMP.B   #1,bit3
00001FA6  6700 F8FE               1384          BEQ     MOVBDN1    
00001FAA                          1385  
00001FAA                          1386  PRINTLSLRCOUNT
00001FAA  43F9 00003235           1387          LEA TAB,A1
00001FB0  303C 000E               1388          MOVE    #14,D0
00001FB4  4E4F                    1389          TRAP    #15
00001FB6                          1390          
00001FB6  43F9 00003243           1391          LEA HASH,A1
00001FBC  303C 000E               1392          MOVE    #14,D0
00001FC0  4E4F                    1393          TRAP    #15
00001FC2                          1394          
00001FC2  1239 000034A4           1395          MOVE.B  bit0,D1
00001FC8  303C 0003               1396          MOVE    #3,D0
00001FCC  4E4F                    1397          TRAP    #15
00001FCE                          1398          
00001FCE  43F9 00003239           1399          LEA COMMA,A1
00001FD4  303C 000E               1400          MOVE    #14,D0
00001FD8  4E4F                    1401          TRAP    #15
00001FDA                          1402          
00001FDA  6000 F97E               1403          BRA LSLRDESD
00001FDE                          1404    
00001FDE                          1405  PRINTLSR
00001FDE  43F9 00003279           1406          LEA MLSR,A1
00001FE4  323C 000E               1407          MOVE    #14,D1
00001FE8  4E4F                    1408          TRAP    #15
00001FEA                          1409          
00001FEA  0C39 0000 000034A6      1410          CMP.B   #$0,bit2
00001FF2  6700 FF1A               1411          BEQ     PRINTB
00001FF6  0C39 0001 000034A6      1412          CMP.B   #$1,bit2
00001FFE  6700 FF42               1413          BEQ     PRINTW
00002002  0C39 0002 000034A6      1414          CMP.B   #$2,bit2
0000200A  6700 FF6A               1415          BEQ     PRINTL
0000200E  6000 FEB4               1416          BRA     LSLRMEM
00002012                          1417  
00002012                          1418  ******************************************************************************************************
00002012                          1419  *   Branch, branch to subroutine, and branch conditionally
00002012                          1420  *   BRA, BSR, Bcc
00002012                          1421  
00002012                          1422  BCC
00002012  13C5 000034A5           1423          MOVE.B  D5,bit1             Moves condition code to bit1
00002018  1A1E                    1424          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
0000201A  13C5 000034A6           1425          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00002020  280E                    1426          MOVE.L  A6,D4               Moves current address to D4 register
00002022                          1427  
00002022  BA3C 0000               1428          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00002026  6700 0010               1429          BEQ     BCCWORD
0000202A  BA3C 00FF               1430          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
0000202E  6700 0010               1431          BEQ     BCCLONG             Else, displacement is 8-bits
00002032                          1432  
00002032                          1433          * Calculates 8-bit displacement
00002032                          1434          * 8-bit displacement is already in D5
00002032                          1435          * Adds displacement to current address
00002032  D805                    1436          ADD.B   D5,D4               Adds the displacement to current address
00002034  6000 0012               1437          BRA     BCCNEXT
00002038                          1438  
00002038                          1439  * Calculates 16-bit displacement
00002038                          1440  BCCWORD
00002038  3A1E                    1441          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
0000203A  D845                    1442          ADD.W   D5,D4               Adds the displacement to current address
0000203C  6000 000A               1443          BRA     BCCNEXT
00002040                          1444  
00002040                          1445  * Calculates 32-bit displacement
00002040                          1446  BCCLONG
00002040  2A1E                    1447          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00002042  D885                    1448          ADD.L   D5,D4               Adds the displacement to current address
00002044  6000 0002               1449          BRA     BCCNEXT
00002048                          1450  
00002048                          1451  * Does the actual calculation
00002048                          1452  * Adds the displacement to the current address
00002048                          1453  BCCNEXT
00002048  6100 000E               1454          BSR     BCCDISP             Displays branch op-code
0000204C  45F9 00002FE2           1455          LEA     ENDNEWLINE,A2
00002052  2E04                    1456          MOVE.L  D4,D7
00002054  6000 F09E               1457          BRA     DISPADDRSTART
00002058                          1458  
00002058                          1459  BCCDISP * Figures out which conditional code it is
00002058  B43C 0000               1460          CMP.B   #$0,D2
0000205C  6700 0026               1461          BEQ     BCCBRA
00002060  B43C 0007               1462          CMP.B   #$7,D2
00002064  6700 0028               1463          BEQ     BCCBEQ
00002068  B43C 0006               1464          CMP.B   #$6,D2
0000206C  6700 002A               1465          BEQ     BCCBNE
00002070  B43C 000D               1466          CMP.B   #$D,D2
00002074  6700 002C               1467          BEQ     BCCBLT
00002078  B43C 0002               1468          CMP.B   #$2,D2
0000207C  6700 002E               1469          BEQ     BCCBHI
00002080                          1470  
00002080  6000 0EEE               1471          BRA     INVOP
00002084                          1472  
00002084                          1473  * Prints out the appropiate code
00002084                          1474  BCCBRA
00002084  43F9 00003330           1475          LEA     MBRA,A1
0000208A  6000 002A               1476          BRA     BCCPRINT
0000208E                          1477  BCCBEQ
0000208E  43F9 00003320           1478          LEA     MBEQ,A1
00002094  6000 0020               1479          BRA     BCCPRINT
00002098                          1480  BCCBNE
00002098  43F9 00003324           1481          LEA     MBNE,A1
0000209E  6000 0016               1482          BRA     BCCPRINT
000020A2                          1483  BCCBLT
000020A2  43F9 00003328           1484          LEA     MBLT,A1
000020A8  6000 000C               1485          BRA     BCCPRINT
000020AC                          1486  BCCBHI
000020AC  43F9 0000332C           1487          LEA     MBHI,A1
000020B2  6000 0002               1488          BRA     BCCPRINT
000020B6                          1489  BCCPRINT
000020B6  103C 000E               1490          MOVE.B  #14,D0
000020BA  4E4F                    1491          TRAP    #15
000020BC  43F9 00003235           1492          LEA     TAB,A1
000020C2  4E4F                    1493          TRAP    #15
000020C4  4E75                    1494          RTS
000020C6                          1495  
000020C6                          1496  ******************************************************************************************************
000020C6                          1497  *   Immediate data arithmetic operations
000020C6                          1498  *   SUBI
000020C6                          1499  
000020C6  13C5 000034A5           1500  IMD     MOVE.B  D5,bit1
000020CC  1202                    1501          MOVE.B  D2,D1
000020CE  141E                    1502          MOVE.B  (A6)+,D2
000020D0                          1503          
000020D0  3805                    1504          MOVE    D5,D4
000020D2  C83C 0001               1505          AND.B   #$0001,D4
000020D6  B83C 0001               1506          CMP.B   #$1,D4
000020DA  6700 F192               1507          BEQ     BTST
000020DE  B23C 0008               1508          CMP.B   #8,D1
000020E2  6700 F18A               1509          BEQ     BTST
000020E6                          1510  
000020E6  DE02                    1511          ADD.B   D2,D7
000020E8                          1512  
000020E8  1602                    1513          MOVE.B  D2,D3               Copies data at D2 to D3
000020EA                          1514          *   this gets digit in 10's place
000020EA  E80B                    1515          LSR.B   #4,D3               Shifts right to get rid of 1's place
000020EC                          1516          *   this gets digit in 1's place
000020EC  E90A                    1517          LSL.B   #4,D2               Shifts left to get rid of 10's place
000020EE  E80A                    1518          LSR.B   #4,D2               Shifts back right into 1's place
000020F0                          1519  
000020F0                          1520          *   D3 holds digit in 10's place
000020F0                          1521          *   D2 holds digit in 1's place
000020F0                          1522  
000020F0  E20B                    1523          LSR.B   #1,D3
000020F2  6400 0004               1524          BCC     IMD2
000020F6  5404                    1525          ADD.B   #$2,D4
000020F8  E20B                    1526  IMD2    LSR.B   #1,D3
000020FA  6400 0004               1527          BCC     IMD3
000020FE  5804                    1528          ADD.B   #$4,D4
00002100  B43C 0007               1529  IMD3    CMP.B   #$7,D2
00002104  6D00 0006               1530          BLT     IMD4
00002108  5204                    1531          ADD.B   #$1,D4
0000210A  5102                    1532          SUB.B   #$8,D2
0000210C                          1533  
0000210C                          1534          *   Stores them into addr
0000210C  13C3 000034A6           1535  IMD4    MOVE.B  D3,bit2
00002112  13C4 000034A7           1536          MOVE.B  D4,bit3
00002118  13C2 000034A8           1537          MOVE.B  D2,bit4
0000211E                          1538  
0000211E                          1539  **************************
0000211E                          1540  * This finds the size of the operation
0000211E                          1541  
0000211E  0C39 0000 000034A6      1542          CMP.B   #$0,bit2
00002126  6700 007E               1543          BEQ     IMDBYTE
0000212A  0C39 0001 000034A6      1544          CMP.B   #$1,bit2
00002132  6700 0082               1545          BEQ     IMDWORD
00002136  0C39 0002 000034A6      1546          CMP.B   #$2,bit2
0000213E  6700 0084               1547          BEQ     IMDLONG
00002142  6000 0E2C               1548          BRA     INVOP
00002146                          1549  
00002146                          1550  *************************************************************
00002146                          1551  * Display IMD op-code
00002146                          1552  IMDPRINT
00002146  0C39 0000 000034A5      1553          CMP.B   #$0,bit1
0000214E  6700 0026               1554          BEQ     IMDPRINTORI
00002152  0C39 0004 000034A5      1555          CMP.B   #$4,bit1
0000215A  6700 0024               1556          BEQ     IMDPRINTSUBI
0000215E  0C39 000A 000034A5      1557          CMP.B   #$A,bit1
00002166  6700 0022               1558          BEQ     IMDPRINTEORI
0000216A  0C39 000C 000034A5      1559          CMP.B   #$C,bit1
00002172  6700 0020               1560          BEQ     IMDPRINTCMPI
00002176                          1561  
00002176                          1562  IMDPRINTORI
00002176  43F9 000032E4           1563          LEA     MORI,A1
0000217C  6000 0020               1564          BRA     IMDPRINTEND
00002180                          1565  
00002180                          1566  IMDPRINTSUBI
00002180  43F9 000032DE           1567          LEA     MSUBI,A1
00002186  6000 0016               1568          BRA     IMDPRINTEND
0000218A                          1569  
0000218A                          1570  IMDPRINTEORI
0000218A  43F9 0000330E           1571          LEA     MEORI,A1
00002190  6000 000C               1572          BRA     IMDPRINTEND
00002194                          1573  
00002194                          1574  IMDPRINTCMPI
00002194  43F9 000032FD           1575          LEA     MCMPI,A1
0000219A  6000 0002               1576          BRA     IMDPRINTEND
0000219E                          1577  
0000219E                          1578  IMDPRINTEND
0000219E  103C 000E               1579          MOVE.B  #14,D0
000021A2  4E4F                    1580          TRAP    #15
000021A4  4E75                    1581          RTS
000021A6                          1582  
000021A6                          1583  *************************************************************
000021A6                          1584  * Immediate data operation size BYTE
000021A6                          1585  IMDBYTE
000021A6  619E                    1586          BSR     IMDPRINT
000021A8  43F9 00003257           1587          LEA     MBYTE,A1
000021AE                          1588  
000021AE                          1589          * Moves size to D4, needed to use DISPEA
000021AE  183C 0001               1590          MOVE.B  #$1,D4
000021B2  6000 001A               1591          BRA     IMDEA
000021B6                          1592  
000021B6                          1593  *************************************************************
000021B6                          1594  * Immediate data operation size WORD
000021B6                          1595  IMDWORD
000021B6  618E                    1596          BSR     IMDPRINT
000021B8  43F9 0000325A           1597          LEA     MWORD,A1
000021BE                          1598  
000021BE  1803                    1599          MOVE.B  D3,D4
000021C0  6000 000C               1600          BRA     IMDEA
000021C4                          1601  
000021C4                          1602  
000021C4                          1603  *************************************************************
000021C4                          1604  * Immediate data operation size LONG
000021C4                          1605  IMDLONG
000021C4  6180                    1606          BSR     IMDPRINT
000021C6  43F9 0000325D           1607          LEA     MLONG,A1
000021CC                          1608          
000021CC                          1609  
000021CC                          1610          * Moves size to D4, needed to use DISPEA
000021CC  1803                    1611          MOVE.B  D3,D4
000021CE                          1612  
000021CE                          1613  IMDEA
000021CE                          1614          * This prints out the size and creates tab
000021CE  103C 000E               1615          MOVE.B  #14,D0
000021D2  4E4F                    1616          TRAP    #15
000021D4  43F9 00003235           1617          LEA     TAB,A1
000021DA  103C 000E               1618          MOVE.B  #14,D0
000021DE  4E4F                    1619          TRAP    #15
000021E0  43F9 00003243           1620          LEA     HASH,A1
000021E6  103C 000E               1621          MOVE.B  #14,D0
000021EA  4E4F                    1622          TRAP    #15
000021EC                          1623          * Loads return address into A2
000021EC  45F9 000021F6           1624          LEA     IMDEA2,A2
000021F2  6000 0D02               1625          BRA     DISPEA
000021F6                          1626  IMDEA2
000021F6  43F9 00003239           1627          LEA     COMMA,A1
000021FC  103C 000E               1628          MOVE.B  #14,D0
00002200  4E4F                    1629          TRAP    #15
00002202                          1630  
00002202  45F9 0000220C           1631          LEA     IMDEA3,A2
00002208  6000 0B9C               1632          BRA     SUBEA
0000220C                          1633  IMDEA3
0000220C  6000 0DD4               1634          BRA     ENDNEWLINE
00002210                          1635  
00002210                          1636  ******************************************************************************************************
00002210                          1637  * Miscellaneous section
00002210                          1638  *   Not goes here
00002210                          1639  
00002210                          1640  MISC
00002210  13C5 000034A5           1641          MOVE.B  D5,bit1
00002216  141E                    1642          MOVE.B  (A6)+,D2
00002218                          1643  
00002218  DE02                    1644          ADD.B   D2,D7
0000221A                          1645  
0000221A  1602                    1646          MOVE.B  D2,D3               Copies data at D2 to D3
0000221C                          1647          *   this gets digit in 10's place
0000221C  E80B                    1648          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000221E                          1649          *   this gets digit in 1's place
0000221E  E90A                    1650          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002220  E80A                    1651          LSR.B   #4,D2               Shifts back right into 1's place
00002222                          1652  
00002222                          1653  
00002222  3806                    1654          MOVE.W  D6,D4
00002224  E94C                    1655          LSL.W   #$4,D4
00002226  E04C                    1656          LSR.W   #$8,D4
00002228  E44C                    1657          LSR.W   #$2,D4
0000222A  13C4 000034A6           1658          MOVE.B  D4,bit2
00002230  0C39 003A 000034A6      1659          CMP.B   #$3A,bit2
00002238  6700 EFE8               1660          BEQ     JSR
0000223C                          1661  
0000223C                          1662      ***
0000223C                          1663          *BTST.B  #$04,bit0
0000223C                          1664          *BEQ     MISCLEA
0000223C                          1665          *   D5 is bit1
0000223C                          1666          *   D3 is bit2
0000223C                          1667          *   D2 is bit3
0000223C                          1668  
0000223C                          1669  **************************
0000223C                          1670  * This finds the size of the operation
0000223C                          1671          * D5 is bit1
0000223C  BA3C 0004               1672          CMP.B   #$4,D5
00002240  6700 F944               1673          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00002244  BA3C 0006               1674          CMP.B   #$6,D5              Branches to NOT section
00002248  6700 0182               1675          BEQ     MISCNOT
0000224C  BA3C 000E               1676          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00002250  6700 0006               1677          BEQ     MISCBIT2
00002254  6000 0022               1678          BRA     MISCCHKLEA          Check bits to see if LEA, else branch to MoveM
00002258                          1679  
00002258                          1680  MISCBIT2
00002258                          1681          * D3 is bit2
00002258  B63C 0007               1682          CMP.B   #$7,D3              Branches to NOP
0000225C  6700 0006               1683          BEQ     MISCBIT3
00002260  6000 0D0E               1684          BRA     INVOP
00002264                          1685  
00002264                          1686  MISCBIT3
00002264                          1687          * D2 is bit3
00002264  B43C 0001               1688          CMP.B   #$1,D2              Branches to NOP
00002268  6700 004E               1689          BEQ     MISCNOP
0000226C  B43C 0005               1690          CMP.B   #$5,D2              Branches to NOP
00002270  6700 014A               1691          BEQ     MISCRTS
00002274  6000 0CFA               1692          BRA     INVOP
00002278                          1693  
00002278                          1694  * Checks if the opcode is LEA
00002278                          1695  MISCCHKLEA
00002278  1805                    1696          MOVE.B  D5,D4
0000227A  C83C 0001               1697          AND.B   #$1,D4
0000227E  B83C 0001               1698          CMP.B   #$1,D4
00002282  6600 0014               1699          BNE     MISCCHECKM
00002286  1803                    1700          MOVE.B  D3,D4
00002288  C83C 000C               1701          AND.B   #$C,D4
0000228C  B83C 000C               1702          CMP.B   #$C,D4
00002290  6600 0006               1703          BNE     MISCCHECKM
00002294  6000 0032               1704          BRA     MISCLEA
00002298                          1705  
00002298                          1706  * Checks if the opcode is MOVEM
00002298                          1707  MISCCHECKM
00002298  1805                    1708          MOVE.B  D5,D4
0000229A  C83C 0008               1709          AND.B   #$8,D4
0000229E  B83C 0008               1710          CMP.B   #$8,D4
000022A2  6600 0CCC               1711          BNE     INVOP
000022A6  1803                    1712          MOVE.B  D3,D4
000022A8  C83C 0008               1713          AND.B   #$8,D4
000022AC  B83C 0008               1714          CMP.B   #$8,D4
000022B0  6600 0CBE               1715          BNE     INVOP
000022B4  6000 03DA               1716          BRA     MISCMOVEM
000022B8                          1717  
000022B8                          1718  ******************************************************
000022B8                          1719  * NOP
000022B8                          1720  * No operation
000022B8                          1721  MISCNOP
000022B8  43F9 00003334           1722          LEA     MNOP,A1
000022BE  103C 000E               1723          MOVE.B  #14,D0
000022C2  4E4F                    1724          TRAP    #15
000022C4                          1725  
000022C4  6000 0D1C               1726          BRA     ENDNEWLINE          Goes to next opcode
000022C8                          1727  
000022C8                          1728  ******************************************************
000022C8                          1729  MISCLEA
000022C8                          1730      
000022C8  43F9 0000333C           1731          LEA     MLEA,A1
000022CE  103C 000E               1732          MOVE.B  #14,D0
000022D2  4E4F                    1733          TRAP    #15
000022D4  43F9 00003235           1734          LEA     TAB,A1
000022DA  103C 000E               1735          MOVE.B  #14,D0
000022DE  4E4F                    1736          TRAP    #15        
000022E0                          1737          
000022E0  E20D                    1738          LSR.B   #1,D5   *isolate addr register
000022E2  3C02                    1739          MOVE.W  D2,D6   *copy over bit3 for potential manip of ea reg
000022E4                          1740  
000022E4  E30B                    1741          LSL.B   #1,D3               Shifts the byte to the left
000022E6  C63C 0007               1742          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
000022EA                          1743  
000022EA  0882 0003               1744          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
000022EE  6700 0004               1745          BEQ     MISCLEA2             If it was already zero, then it will skip this next step
000022F2  5203                    1746          ADD.B   #$1,D3              It it was one, then it will add one to the mode
000022F4                          1747  
000022F4                          1748  MISCLEA2
000022F4  13C3 000034A7           1749          MOVE.B  D3,bit3     *MODE?
000022FA  13C2 000034A8           1750          MOVE.B  D2,bit4     *REG?
00002300                          1751  
00002300                          1752          ***
00002300                          1753  *        AND.L   D2,D7
00002300                          1754  *        CMP.L   #$0,D7
00002300                          1755  *        BEQ     LEAMODE0
00002300                          1756  *        CMP.L   #$1,D7 
00002300                          1757  *        BEQ     LEAMODE1
00002300                          1758  *        
00002300                          1759  *        CMP.B   #1,D7
00002300                          1760  *        BEQ     LEAMODE1
00002300                          1761  *        CMP.B   #0,D7
00002300                          1762  *        BEQ     LEAMODE0
00002300                          1763  *        
00002300                          1764  *        ***
00002300                          1765          
00002300                          1766  LEAMODE1
00002300                          1767          *ea mode should be set to 111
00002300  B63C 0007               1768          CMP.B   #7,D3   *error check
00002304  6700 000E               1769          BEQ     LEA_ABS_EA 
00002308                          1770          
00002308                          1771  LEAMODE0
00002308                          1772          *ea mode should be set to 010
00002308  B63C 0002               1773          CMP.B   #2,D3   *error check
0000230C  6700 005E               1774          BEQ     LEA_INDIR_AN
00002310  6600 0C5E               1775          BNE     INVOP
00002314                          1776  
00002314                          1777  LEA_ABS_EA
00002314                          1778          *MOVE RET LOC INTO A2
00002314  0C39 0000 000034A8      1779          CMP.B   #$0,bit4
0000231C  6700 000E               1780          BEQ     LEAIMD0
00002320  0C39 0001 000034A8      1781          CMP.B   #$1,bit4
00002328  6700 0010               1782          BEQ     LEAIMD1
0000232C                          1783  
0000232C                          1784  LEAIMD0
0000232C  183C 0001               1785          MOVE.B  #$1,D4
00002330  45F9 00002348           1786          LEA     CONTPRINTLEA,A2
00002336  6000 0BBE               1787          BRA     DISPEA
0000233A                          1788  LEAIMD1 
0000233A  183C 0002               1789          MOVE.B  #$2,D4
0000233E  45F9 00002348           1790          LEA     CONTPRINTLEA,A2
00002344  6000 0BB0               1791          BRA     DISPEA  
00002348                          1792          
00002348                          1793  CONTPRINTLEA
00002348  43F9 00003239           1794          LEA     COMMA,A1
0000234E  103C 000E               1795          MOVE.B  #14,D0
00002352  4E4F                    1796          TRAP    #15
00002354  43F9 00003247           1797          LEA     DISPA,A1
0000235A  103C 000E               1798          MOVE.B  #14,D0
0000235E  4E4F                    1799          TRAP    #15
00002360  1205                    1800          MOVE.B  D5,D1
00002362  103C 0003               1801          MOVE.B  #3,D0
00002366  4E4F                    1802          TRAP    #15
00002368  6000 0C78               1803          BRA     ENDNEWLINE
0000236C                          1804          
0000236C                          1805  LEA_INDIR_AN
0000236C                          1806  
0000236C  43F9 0000323B           1807          LEA     OPENBRA,A1
00002372  103C 000E               1808          MOVE.B  #14,D0
00002376  4E4F                    1809          TRAP    #15
00002378                          1810          
00002378  43F9 00003247           1811          LEA     DISPA,A1
0000237E  103C 000E               1812          MOVE.B  #14,D0
00002382  4E4F                    1813          TRAP    #15
00002384                          1814          
00002384  1202                    1815          MOVE.B  D2,D1
00002386  103C 0003               1816          MOVE.B  #3,D0
0000238A  4E4F                    1817          TRAP    #15
0000238C                          1818          
0000238C  43F9 0000323D           1819          LEA     CLOSEBRA,A1
00002392  103C 000E               1820          MOVE.B  #14,D0
00002396  4E4F                    1821          TRAP    #15
00002398                          1822          
00002398  43F9 00003239           1823          LEA     COMMA,A1
0000239E  103C 000E               1824          MOVE.B  #14,D0
000023A2  4E4F                    1825          TRAP    #15
000023A4                          1826          
000023A4  43F9 00003247           1827          LEA     DISPA,A1
000023AA  103C 000E               1828          MOVE.B  #14,D0
000023AE  4E4F                    1829          TRAP    #15
000023B0                          1830  
000023B0  1205                    1831          MOVE.B  D5,D1
000023B2  103C 0003               1832          MOVE.B  #3,D0
000023B6  4E4F                    1833          TRAP    #15
000023B8                          1834  
000023B8  6000 0C28               1835          BRA     ENDNEWLINE
000023BC                          1836  
000023BC                          1837  ******************************************************
000023BC                          1838  * RTS
000023BC                          1839  * Return to sub routine
000023BC                          1840  MISCRTS
000023BC  43F9 00003338           1841          LEA     MRTS,A1
000023C2  103C 000E               1842          MOVE.B  #14,D0
000023C6  4E4F                    1843          TRAP    #15
000023C8                          1844  
000023C8  6000 0C18               1845          BRA     ENDNEWLINE          Goes to next opcode
000023CC                          1846  
000023CC                          1847  ******************************************************
000023CC                          1848  * NOT
000023CC                          1849  * Reuses some of IMD section to display because they have similar format
000023CC                          1850  *  (I was kinda lazy too)
000023CC                          1851  MISCNOT
000023CC  4244                    1852          CLR     D4
000023CE  E20B                    1853          LSR.B   #1,D3
000023D0  6400 0004               1854          BCC     MISCNOT2
000023D4  5404                    1855          ADD.B   #$2,D4
000023D6                          1856  MISCNOT2   
000023D6  E20B                    1857          LSR.B   #1,D3
000023D8  6400 0004               1858          BCC     MISCNOT3
000023DC  5804                    1859          ADD.B   #$4,D4
000023DE                          1860  MISCNOT3   
000023DE  B43C 0007               1861          CMP.B   #$7,D2
000023E2  6D00 0006               1862          BLT     MISCNOT4
000023E6  5204                    1863          ADD.B   #$1,D4
000023E8  5102                    1864          SUB.B   #$8,D2
000023EA                          1865  
000023EA                          1866          *   Stores them into addr
000023EA                          1867  MISCNOT4
000023EA  13C3 000034A6           1868          MOVE.B  D3,bit2
000023F0  13C4 000034A7           1869          MOVE.B  D4,bit3
000023F6  13C2 000034A8           1870          MOVE.B  D2,bit4
000023FC                          1871  
000023FC  B63C 0000               1872          CMP.B   #$0,D3
00002400  6700 0016               1873          BEQ     MISCBYTE
00002404  B63C 0001               1874          CMP.B   #$1,D3
00002408  6700 0020               1875          BEQ     MISCWORD
0000240C  B63C 0002               1876          CMP.B   #$2,D3
00002410  6700 0028               1877          BEQ     MISCLONG
00002414  6000 0B5A               1878          BRA     INVOP
00002418                          1879  *************************************************************
00002418                          1880  * Immediate data operation size BYTE
00002418                          1881  MISCBYTE
00002418  6100 004C               1882          BSR     MISCPRINT
0000241C  43F9 00003257           1883          LEA     MBYTE,A1
00002422                          1884  
00002422                          1885          * Moves size to D4, needed to use DISPEA
00002422  183C 0001               1886          MOVE.B  #$1,D4
00002426  6000 001E               1887          BRA     MISCEA
0000242A                          1888  
0000242A                          1889  *************************************************************
0000242A                          1890  * Immediate data operation size WORD
0000242A                          1891  MISCWORD
0000242A  6100 003A               1892          BSR     MISCPRINT
0000242E  43F9 0000325A           1893          LEA     MWORD,A1
00002434                          1894  
00002434  1803                    1895          MOVE.B  D3,D4
00002436  6000 000E               1896          BRA     MISCEA
0000243A                          1897  
0000243A                          1898  
0000243A                          1899  *************************************************************
0000243A                          1900  * Immediate data operation size LONG
0000243A                          1901  MISCLONG
0000243A  6100 002A               1902          BSR     MISCPRINT
0000243E  43F9 0000325D           1903          LEA     MLONG,A1
00002444                          1904  
00002444                          1905          * Moves size to D4, needed to use DISPEA
00002444  1803                    1906          MOVE.B  D3,D4
00002446                          1907  
00002446                          1908  MISCEA
00002446  103C 000E               1909          MOVE.B  #14,D0
0000244A  4E4F                    1910          TRAP    #15
0000244C  43F9 00003235           1911          LEA     TAB,A1
00002452  103C 000E               1912          MOVE.B  #14,D0
00002456  4E4F                    1913          TRAP    #15
00002458                          1914  
00002458  45F9 00002462           1915          LEA     MISCEA2,A2
0000245E  6000 0946               1916          BRA     SUBEA
00002462                          1917  MISCEA2
00002462  6000 0B7E               1918          BRA     ENDNEWLINE
00002466                          1919  
00002466                          1920  *************************************************************
00002466                          1921  * Display IMD op-code
00002466                          1922  MISCPRINT
00002466  0C39 0004 000034A5      1923          CMP.B   #$4,bit1
0000246E  6700 0018               1924          BEQ     MISCPRINTNEG
00002472  0C39 0006 000034A5      1925          CMP.B   #$6,bit1
0000247A  6700 0002               1926          BEQ     MISCPRINTNOT
0000247E                          1927  
0000247E                          1928  MISCPRINTNOT
0000247E  43F9 000032E9           1929          LEA     MNOT,A1
00002484  6000 000C               1930          BRA     MISCPRINTEND
00002488                          1931  
00002488                          1932  MISCPRINTNEG
00002488  43F9 000032F4           1933          LEA     MNEG,A1
0000248E  6000 0002               1934          BRA     MISCPRINTEND
00002492                          1935  
00002492                          1936  MISCPRINTEND
00002492  103C 000E               1937          MOVE.B  #14,D0
00002496  4E4F                    1938          TRAP    #15
00002498  4E75                    1939          RTS
0000249A                          1940  
0000249A                          1941  *******************************************************************************
0000249A                          1942  * ADDQ section 
0000249A                          1943  
0000249A                          1944  ADDQ    
0000249A                          1945  *       BRA     IMD
0000249A                          1946          
0000249A  13C5 000034A5           1947          MOVE.B  D5,bit1
000024A0  141E                    1948          MOVE.B  (A6)+,D2
000024A2                          1949  
000024A2  DE02                    1950          ADD.B   D2,D7
000024A4                          1951  
000024A4  1602                    1952          MOVE.B  D2,D3               *copy data at D2 to D3
000024A6                          1953                                      *get digit in 10's place
000024A6  E80B                    1954          LSR.B   #4,D3               Shifts right to get rid of 1's place
000024A8                          1955                                      *get digit in 1's place
000024A8  E90A                    1956          LSL.B   #4,D2               Shift left to get rid of 10's place
000024AA  E80A                    1957          LSR.B   #4,D2               Shift back right into 1's place
000024AC                          1958  
000024AC                          1959          * gets size
000024AC  3803                    1960          MOVE.W  D3,D4
000024AE  E44C                    1961          LSR.W   #$2,D4
000024B0  13C4 000034A6           1962          MOVE.B  D4,bit2
000024B6                          1963      
000024B6                          1964  
000024B6                          1965  *        BRA     IMD
000024B6  43F9 0000331A           1966          LEA     MADDQ,A1
000024BC  103C 000E               1967          MOVE.B  #14,D0
000024C0  4E4F                    1968          TRAP    #15
000024C2                          1969          
000024C2                          1970          *determine size
000024C2  B83C 0000               1971          CMP.B   #$0,D4
000024C6  6700 0018               1972          BEQ     ADDQB
000024CA  B87C 0001               1973          CMP.W   #$1,D4
000024CE  6700 0020               1974          BEQ     ADDQW
000024D2  B8BC 00000002           1975          CMP.L   #$2,D4
000024D8  6700 0026               1976          BEQ     ADDQL
000024DC  6000 0A92               1977          BRA     INVOP
000024E0                          1978  
000024E0                          1979  ADDQB
000024E0  43F9 00003257           1980          LEA     MBYTE,A1
000024E6  103C 000E               1981          MOVE.B  #14,D0
000024EA  4E4F                    1982          TRAP    #15
000024EC  6000 0022               1983          BRA     ADDQCONT
000024F0                          1984          
000024F0                          1985  ADDQW
000024F0  43F9 0000325A           1986          LEA     MWORD,A1
000024F6  103C 000E               1987          MOVE.B  #14,D0
000024FA  4E4F                    1988          TRAP    #15
000024FC  6000 0012               1989          BRA     ADDQCONT
00002500                          1990          
00002500                          1991  ADDQL        
00002500  43F9 0000325D           1992          LEA     MLONG,A1
00002506  103C 000E               1993          MOVE.B  #14,D0
0000250A  4E4F                    1994          TRAP    #15
0000250C  6000 0002               1995          BRA     ADDQCONT
00002510                          1996          
00002510                          1997  ADDQCONT        
00002510  43F9 00003235           1998          LEA     TAB,A1
00002516  103C 000E               1999          MOVE.B  #14,D0
0000251A  4E4F                    2000          TRAP    #15
0000251C                          2001  
0000251C  43F9 00003243           2002          LEA     HASH,A1
00002522  103C 000E               2003          MOVE.B  #14,D0
00002526  4E4F                    2004          TRAP    #15
00002528                          2005          
00002528  E20D                    2006          LSR.B   #1,D5               Shifts the byte over to get the value of the immediate data
0000252A  BA3C 0000               2007          CMP.B   #$0,D5              Checks if the value is 0
0000252E  6600 0006               2008          BNE     ADDQCONT2           If it isn't then skips this next part
00002532  1A3C 0008               2009          MOVE.B  #8,D5               If it is, then replaces the 0 with 8
00002536                          2010  
00002536                          2011  ADDQCONT2
00002536  1205                    2012          MOVE.B  D5,D1
00002538  103C 0003               2013          MOVE.B  #3,D0
0000253C  4E4F                    2014          TRAP    #15
0000253E                          2015          
0000253E  43F9 00003239           2016          LEA     COMMA,A1
00002544  103C 000E               2017          MOVE.B  #14,D0
00002548  4E4F                    2018          TRAP    #15
0000254A                          2019          
0000254A  6000 0002               2020          BRA     ADDQEA
0000254E                          2021          
0000254E                          2022  ADDQEA
0000254E  E30B                    2023          LSL.B   #1,D3               Shifts the byte to the left
00002550  C63C 0007               2024          AND.B   #$07,D3             Clears everything except the last 3 bits because those 3 are the mode bits
00002554                          2025  
00002554  0882 0003               2026          BCLR    #3,D2               Clears the first bit of the byte because it isn't part of the reg
00002558  6700 0004               2027          BEQ     ADDQEA2             If it was already zero, then it will skip this next step
0000255C  5203                    2028          ADD.B   #$1,D3              It it was one, then it will add one to the mode
0000255E                          2029  
0000255E                          2030  ADDQEA2
0000255E  13C2 000034A8           2031          MOVE.B  D2,bit4     *REG?
00002564  13C3 000034A7           2032          MOVE.B  D3,bit3     *MODE?
0000256A  13C4 000034A6           2033          MOVE.B  D4,bit2     *SIZE?
00002570  45F9 00002FE2           2034          LEA     ENDNEWLINE,A2
00002576  6000 082E               2035          BRA     SUBEA
0000257A                          2036          ***
0000257A                          2037          
0000257A                          2038          
0000257A  B63C 0000               2039          CMP.B   #$0,D3
0000257E  6700 002A               2040          BEQ     DN_EAM
00002582  B63C 0001               2041          CMP.B   #$1,D3
00002586  6700 003A               2042          BEQ     AN_EAM
0000258A  B63C 0002               2043          CMP.B   #$2,D3
0000258E  6700 004A               2044          BEQ     INAN_EAM
00002592  B63C 0003               2045          CMP.B   #$3,D3
00002596  6700 0072               2046          BEQ     INC_EAM
0000259A  B63C 0004               2047          CMP.B   #$4,D3
0000259E  6700 00A6               2048          BEQ     DEC_EAM
000025A2  B63C 0007               2049          CMP.B   #$7,D3
000025A6  6700 00DA               2050          BEQ     ABS_EA
000025AA                          2051          
000025AA                          2052  DN_EAM
000025AA  43F9 0000324D           2053          LEA     DISPD,A1
000025B0  103C 000E               2054          MOVE.B  #14,D0
000025B4  4E4F                    2055          TRAP    #15
000025B6  1202                    2056          MOVE.B  D2,D1
000025B8  103C 0003               2057          MOVE.B  #3,D0
000025BC  4E4F                    2058          TRAP    #15
000025BE  6000 0A22               2059          BRA     ENDNEWLINE
000025C2                          2060          
000025C2                          2061  AN_EAM
000025C2  43F9 00003247           2062          LEA     DISPA,A1
000025C8  103C 000E               2063          MOVE.B  #14,D0
000025CC  4E4F                    2064          TRAP    #15
000025CE  1202                    2065          MOVE.B  D2,D1
000025D0  103C 0003               2066          MOVE.B  #3,D0
000025D4  4E4F                    2067          TRAP    #15
000025D6  6000 0A0A               2068          BRA     ENDNEWLINE
000025DA                          2069          
000025DA                          2070  INAN_EAM
000025DA  43F9 0000323B           2071          LEA     OPENBRA,A1
000025E0  103C 000E               2072          MOVE.B  #14,D0
000025E4  4E4F                    2073          TRAP    #15
000025E6  43F9 00003247           2074          LEA     DISPA,A1
000025EC  103C 000E               2075          MOVE.B  #14,D0
000025F0  4E4F                    2076          TRAP    #15
000025F2  1202                    2077          MOVE.B  D2,D1
000025F4  103C 0003               2078          MOVE.B  #3,D0
000025F8  4E4F                    2079          TRAP    #15
000025FA  43F9 0000323D           2080          LEA     CLOSEBRA,A1
00002600  103C 000E               2081          MOVE.B  #14,D0
00002604  4E4F                    2082          TRAP    #15
00002606  6000 09DA               2083          BRA     ENDNEWLINE
0000260A                          2084          
0000260A                          2085  INC_EAM                             *Consider combining inc and dec with in and removing dup com
0000260A  43F9 0000323B           2086          LEA     OPENBRA,A1
00002610  103C 000E               2087          MOVE.B  #14,D0
00002614  4E4F                    2088          TRAP    #15
00002616  43F9 00003247           2089          LEA     DISPA,A1
0000261C  103C 000E               2090          MOVE.B  #14,D0
00002620  4E4F                    2091          TRAP    #15
00002622                          2092          
00002622  3202                    2093          MOVE.W  D2,D1
00002624  103C 0003               2094          MOVE.B  #3,D0
00002628  4E4F                    2095          TRAP    #15
0000262A                          2096          
0000262A  43F9 0000323D           2097          LEA     CLOSEBRA,A1
00002630  103C 000E               2098          MOVE.B  #14,D0
00002634  4E4F                    2099          TRAP    #15
00002636  43F9 0000323F           2100          LEA     POS,A1
0000263C  103C 000E               2101          MOVE.B  #14,D0
00002640  4E4F                    2102          TRAP    #15
00002642  6000 099E               2103          BRA     ENDNEWLINE
00002646                          2104          
00002646                          2105  DEC_EAM
00002646  43F9 00003241           2106          LEA     NEG,A1
0000264C  103C 000E               2107          MOVE.B  #14,D0
00002650  4E4F                    2108          TRAP    #15
00002652  43F9 0000323B           2109          LEA     OPENBRA,A1
00002658  103C 000E               2110          MOVE.B  #14,D0
0000265C  4E4F                    2111          TRAP    #15
0000265E  43F9 00003247           2112          LEA     DISPA,A1
00002664  103C 000E               2113          MOVE.B  #14,D0
00002668  4E4F                    2114          TRAP    #15
0000266A  1202                    2115          MOVE.B  D2,D1
0000266C  103C 0003               2116          MOVE.B  #3,D0
00002670  4E4F                    2117          TRAP    #15
00002672  43F9 0000323D           2118          LEA     CLOSEBRA,A1
00002678  103C 000E               2119          MOVE.B  #14,D0
0000267C  4E4F                    2120          TRAP    #15
0000267E  6000 0962               2121          BRA     ENDNEWLINE
00002682                          2122          
00002682                          2123  ABS_EA  
00002682                          2124          *USE D5 TO SET SIZE APPROPRIATELY AND TO FULFILL REQ TO USE DISPEA SR
00002682  45F9 0000268C           2125          LEA     ABS_EA2,A2
00002688  6000 086C               2126          BRA     DISPEA
0000268C                          2127          
0000268C                          2128  ABS_EA2
0000268C  6000 0954               2129          BRA     ENDNEWLINE
00002690                          2130  
00002690                          2131  *************************************************************************
00002690                          2132  * MOVEM stuff
00002690                          2133          *   D5 is bit1
00002690                          2134          *   D3 is bit2
00002690                          2135          *   D2 is bit3
00002690                          2136  MISCMOVEM
00002690  1805                    2137          MOVE.B  D5,D4               Gets the dr field and stores it into D5
00002692  4245                    2138          CLR     D5                  Moves 0 to D5
00002694  0804 0002               2139          BTST    #2,D4               Checks the bit at spot 2
00002698  6700 0006               2140          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
0000269C  1A3C 0001               2141          MOVE.B  #1,D5               Else, it will skip it
000026A0                          2142  
000026A0                          2143  MISCMOVEM2
000026A0  4246                    2144          CLR     D6                  Clears D6, setting it to 0
000026A2  1803                    2145          MOVE.B  D3,D4               Gets the size field and stores it into D6
000026A4  0804 0002               2146          BTST    #2,D4               Checks the bit at spot 2
000026A8  6700 0006               2147          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
000026AC  1C3C 0001               2148          MOVE.B  #1,D6               Else, it will skip it. 
000026B0                          2149  
000026B0                          2150  MISCMOVEM3
000026B0  C63C 0003               2151          AND.B   #$3,D3              Gets ride of the first 2 bits
000026B4  E30B                    2152          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
000026B6  0882 0003               2153          BCLR    #3,D2               Checks furthest left bit and set it to 0
000026BA  6700 0006               2154          BEQ     MISCMOVEM4
000026BE  08C3 0000               2155          BSET    #0,D3               If bit was 1, adds 1 to mode
000026C2                          2156  
000026C2                          2157      * bit1 is in D5 dr field
000026C2                          2158      * bit2 is in D6 size
000026C2                          2159      * bit3 is in D3 mode
000026C2                          2160      * bit4 is in D2 reg
000026C2                          2161  MISCMOVEM4
000026C2  13C5 000034A5           2162          MOVE.B  D5,bit1
000026C8  13C6 000034A6           2163          MOVE.B  D6,bit2
000026CE  13C3 000034A7           2164          MOVE.B  D3,bit3
000026D4  13C2 000034A8           2165          MOVE.B  D2,bit4
000026DA                          2166  
000026DA                          2167      * Prints out MOVEM and size + tab
000026DA  43F9 000032B5           2168          LEA     MMOVEM,A1
000026E0  103C 000E               2169          MOVE.B  #14,D0
000026E4  4E4F                    2170          TRAP    #15
000026E6                          2171  
000026E6                          2172  * Finds the appropiate size and prints it out
000026E6  BC3C 0001               2173          CMP.B   #1,D6
000026EA  6700 000C               2174          BEQ     MISCMMSIZEL
000026EE  43F9 0000325A           2175          LEA     MWORD,A1
000026F4  6000 0008               2176          BRA     MISCMMPRINTSIZE
000026F8                          2177  
000026F8                          2178  MISCMMSIZEL
000026F8  43F9 0000325D           2179          LEA     MLONG,A1
000026FE                          2180  
000026FE                          2181  MISCMMPRINTSIZE
000026FE  4E4F                    2182          TRAP    #15
00002700  43F9 00003235           2183          LEA     TAB,A1
00002706  4E4F                    2184          TRAP    #15
00002708                          2185  
00002708                          2186  * Figures out if it is REG-to-MEM or MEM-to-REG
00002708  3C1E                    2187          MOVE.W  (A6)+,D6
0000270A  BA3C 0000               2188          CMP.B   #0,D5
0000270E  6700 0006               2189          BEQ     MISCMMPREDECCHECK
00002712  6000 007C               2190          BRA     MISCMMPOSTINC
00002716                          2191  
00002716                          2192  MISCMMPREDECCHECK
00002716  B63C 0004               2193          CMP.B   #$4,D3
0000271A  6700 0006               2194          BEQ     MISCMMPREDEC
0000271E  6000 00DE               2195          BRA     MISCMMREGMEM
00002722                          2196  
00002722                          2197  ******************************************************************
00002722                          2198  * MOVEM Post-decrement
00002722                          2199  * Prints out registers from post-decrement
00002722                          2200  * D6 holds the reg list
00002722                          2201  MISCMMPREDEC
00002722  1806                    2202          MOVE.B  D6,D4
00002724  3E3C 0008               2203          MOVE.W  #8,D7               Counter
00002728  123C 000F               2204          MOVE.B  #$F,D1
0000272C                          2205  
0000272C  49F9 00003247           2206          LEA     DISPA,A4
00002732  6100 0032               2207          BSR     MISCMMPREDECPRINT
00002736                          2208  
00002736  3806                    2209          MOVE.W  D6,D4
00002738  E04C                    2210          LSR.W   #8,D4
0000273A  3E3C 0008               2211          MOVE.W  #8,D7               Counter
0000273E  49F9 0000324D           2212          LEA     DISPD,A4
00002744  6100 0020               2213          BSR     MISCMMPREDECPRINT
00002748  6000 0002               2214          BRA     MISCMMPREDEC2
0000274C                          2215  
0000274C                          2216  MISCMMPREDEC2
0000274C  43F9 00003239           2217          LEA     COMMA,A1
00002752  103C 000E               2218          MOVE.B  #14,D0
00002756  4E4F                    2219          TRAP    #15
00002758                          2220  
00002758  45F9 00002762           2221          LEA     MISCMMPREDEC3,A2
0000275E  6000 0646               2222          BRA     SUBEA
00002762                          2223  
00002762                          2224  MISCMMPREDEC3
00002762  6000 087E               2225          BRA     ENDNEWLINE
00002766                          2226  
00002766                          2227  * Prints out reg list
00002766                          2228  MISCMMPREDECPRINT
00002766  E30C                    2229          LSL.B   #1,D4
00002768  6400 001C               2230          BCC     MISCMMPREDECPRINT3
0000276C                          2231  
0000276C  B23C 000F               2232          CMP.B   #$F,D1
00002770  6700 0008               2233          BEQ     MISCMMPREDECPRINT2
00002774  4EB9 00002874           2234          JSR     MISCMMSLASH
0000277A                          2235  
0000277A                          2236  MISCMMPREDECPRINT2
0000277A  224C                    2237          MOVEA.L A4,A1
0000277C  103C 000E               2238          MOVE.B  #14,D0
00002780  4E4F                    2239          TRAP    #15
00002782  6100 00E2               2240          BSR     MISCMMPRINTNUM
00002786                          2241  
00002786                          2242  MISCMMPREDECPRINT3
00002786  5307                    2243          SUB.B   #1,D7
00002788  BE3C 0000               2244          CMP.B   #0,D7
0000278C  66D8                    2245          BNE     MISCMMPREDECPRINT
0000278E  4E75                    2246          RTS
00002790                          2247  
00002790                          2248  ******************************************************************
00002790                          2249  * MOVEM Post-increment
00002790                          2250  * Prints out registers from post-increment
00002790                          2251  * D6 holds the reg list
00002790                          2252  MISCMMPOSTINC
00002790  45F9 0000279A           2253          LEA     MISCMMPOSTINC2,A2
00002796  6000 060E               2254          BRA     SUBEA
0000279A                          2255  
0000279A                          2256  MISCMMPOSTINC2
0000279A  43F9 00003239           2257          LEA     COMMA,A1
000027A0  103C 000E               2258          MOVE.B  #14,D0
000027A4  4E4F                    2259          TRAP    #15
000027A6                          2260  
000027A6  3806                    2261          MOVE.W  D6,D4
000027A8  E04C                    2262          LSR.W   #8,D4
000027AA  3E3C 0008               2263          MOVE.W  #8,D7               Counter
000027AE  123C 000F               2264          MOVE.B  #$F,D1
000027B2                          2265  
000027B2  49F9 00003247           2266          LEA     DISPA,A4
000027B8  6100 001A               2267          BSR     MISCMMPOSTINCPRINT
000027BC                          2268  
000027BC  1806                    2269          MOVE.B  D6,D4
000027BE  3E3C 0008               2270          MOVE.W  #8,D7               Counter
000027C2  49F9 0000324D           2271          LEA     DISPD,A4
000027C8  6100 000A               2272          BSR     MISCMMPOSTINCPRINT
000027CC  6000 0002               2273          BRA     MISCMMPOSTINC3
000027D0                          2274  
000027D0                          2275  MISCMMPOSTINC3
000027D0  6000 0810               2276          BRA     ENDNEWLINE
000027D4                          2277  
000027D4                          2278  * Prints out reg list
000027D4                          2279  MISCMMPOSTINCPRINT
000027D4  E20C                    2280          LSR.B   #1,D4
000027D6  6400 001C               2281          BCC     MISCMMPOSTINCPRINT3
000027DA                          2282  
000027DA  B23C 000F               2283          CMP.B   #$F,D1
000027DE  6700 0008               2284          BEQ     MISCMMPOSTINCPRINT2
000027E2  4EB9 00002874           2285          JSR     MISCMMSLASH
000027E8                          2286  
000027E8                          2287  MISCMMPOSTINCPRINT2
000027E8  224C                    2288          MOVEA.L A4,A1
000027EA  103C 000E               2289          MOVE.B  #14,D0
000027EE  4E4F                    2290          TRAP    #15
000027F0  6100 0074               2291          BSR     MISCMMPRINTNUM
000027F4                          2292  
000027F4                          2293  MISCMMPOSTINCPRINT3
000027F4  5307                    2294          SUB.B   #1,D7
000027F6  BE3C 0000               2295          CMP.B   #0,D7
000027FA  66D8                    2296          BNE     MISCMMPOSTINCPRINT
000027FC  4E75                    2297          RTS
000027FE                          2298  
000027FE                          2299  ******************************************************************
000027FE                          2300  * MOVEM REG-to-MEM non-predecrement
000027FE                          2301  * Prints out a register to memory when it is NOT in predecrement
000027FE                          2302  * D6 holds the reg list
000027FE                          2303  MISCMMREGMEM
000027FE  1806                    2304          MOVE.B  D6,D4
00002800  3E3C 0008               2305          MOVE.W  #8,D7               Counter
00002804  123C 000F               2306          MOVE.B  #$F,D1
00002808                          2307  
00002808  49F9 0000324D           2308          LEA     DISPD,A4
0000280E  61C4                    2309          BSR     MISCMMPOSTINCPRINT
00002810                          2310  
00002810  3806                    2311          MOVE.W  D6,D4
00002812  E04C                    2312          LSR.W   #8,D4
00002814  3E3C 0008               2313          MOVE.W  #8,D7               Counter
00002818  49F9 00003247           2314          LEA     DISPA,A4
0000281E  61B4                    2315          BSR     MISCMMPOSTINCPRINT
00002820  6000 0002               2316          BRA     MISCMMREGMEM2
00002824                          2317  
00002824                          2318  MISCMMREGMEM2
00002824  43F9 00003239           2319          LEA     COMMA,A1
0000282A  103C 000E               2320          MOVE.B  #14,D0
0000282E  4E4F                    2321          TRAP    #15
00002830                          2322  
00002830  45F9 0000283A           2323          LEA     MISCMMREGMEM3,A2
00002836  6000 056E               2324          BRA     SUBEA
0000283A                          2325  
0000283A                          2326  MISCMMREGMEM3
0000283A  6000 07A6               2327          BRA     ENDNEWLINE
0000283E                          2328  
0000283E                          2329  * Prints out reg list
0000283E                          2330  MISCMMREGMEMPRINT
0000283E  E20C                    2331          LSR.B   #1,D4
00002840  64B2                    2332          BCC     MISCMMPOSTINCPRINT3
00002842                          2333  
00002842  B23C 000F               2334          CMP.B   #$F,D1
00002846  67A0                    2335          BEQ     MISCMMPOSTINCPRINT2
00002848  4EB9 00002874           2336          JSR     MISCMMSLASH
0000284E                          2337  
0000284E                          2338  MISCMMREGMEMPRINT2
0000284E  224C                    2339          MOVEA.L A4,A1
00002850  103C 000E               2340          MOVE.B  #14,D0
00002854  4E4F                    2341          TRAP    #15
00002856  6100 000E               2342          BSR     MISCMMPRINTNUM
0000285A                          2343  
0000285A                          2344  MISCMMREGMEMPRINT3
0000285A  5307                    2345          SUB.B   #1,D7
0000285C  BE3C 0000               2346          CMP.B   #0,D7
00002860  6600 FF72               2347          BNE     MISCMMPOSTINCPRINT
00002864  4E75                    2348          RTS
00002866                          2349  
00002866                          2350  
00002866                          2351  
00002866                          2352  ***********************************************
00002866                          2353  * Stuff for printing reg list
00002866                          2354  MISCMMPRINTNUM
00002866  123C 0008               2355          MOVE.B  #8,D1
0000286A  9207                    2356          SUB.B   D7,D1
0000286C  103C 0003               2357          MOVE.B  #3,D0
00002870  4E4F                    2358          TRAP    #15
00002872  4E75                    2359          RTS
00002874                          2360  
00002874                          2361  MISCMMSLASH
00002874  43F9 00003245           2362          LEA     SLASH,A1
0000287A  103C 000E               2363          MOVE.B  #14,D0
0000287E  4E4F                    2364          TRAP    #15
00002880  4E75                    2365          RTS
00002882                          2366  
00002882                          2367  ******************************************************************************************************
00002882                          2368  * SUB section
00002882                          2369  
00002882                          2370          *   Grabs next two nibbles
00002882  141E                    2371  SUB     MOVE.B  (A6)+,D2
00002884                          2372  
00002884  DE02                    2373          ADD.B   D2,D7
00002886                          2374  
00002886  1602                    2375          MOVE.B  D2,D3               Copies data at D2 to D3
00002888                          2376          *   this gets digit in 10's place
00002888  E80B                    2377          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000288A                          2378          *   this gets digit in 1's place
0000288A  E90A                    2379          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000288C  E80A                    2380          LSR.B   #4,D2               Shifts back right into 1's place
0000288E                          2381  
0000288E                          2382          *   D3 holds digit in 10's place
0000288E                          2383          *   D2 holds digit in 1's place
0000288E                          2384  
0000288E                          2385          
0000288E                          2386          *   Converts nibble into 3-bit parts
0000288E  E20B                    2387          LSR.B   #1,D3
00002890  6400 0004               2388          BCC     SUB2
00002894  5404                    2389          ADD.B   #$2,D4
00002896                          2390          
00002896  E20B                    2391  SUB2    LSR.B   #1,D3
00002898  6400 0004               2392          BCC     SUB3
0000289C  5804                    2393          ADD.B   #$4,D4
0000289E                          2394          
0000289E  1205                    2395  SUB3    MOVE.B  D5,D1
000028A0  E209                    2396          LSR.B   #1,D1
000028A2  6400 0004               2397          BCC     SUB4
000028A6  5803                    2398          ADD.B   #$4,D3
000028A8                          2399  
000028A8  B43C 0007               2400  SUB4    CMP.B   #$7,D2
000028AC  6D00 0006               2401          BLT     SUB1
000028B0  5204                    2402          ADD.B   #$1,D4
000028B2  5102                    2403          SUB.B   #$8,D2
000028B4                          2404  
000028B4                          2405          *   Stores them into addr
000028B4  13C1 000034A5           2406  SUB1    MOVE.B  D1,bit1
000028BA  13C3 000034A6           2407          MOVE.B  D3,bit2
000028C0  13C4 000034A7           2408          MOVE.B  D4,bit3
000028C6  13C2 000034A8           2409          MOVE.B  D2,bit4
000028CC                          2410  
000028CC                          2411          * do this later
000028CC  4241                    2412          CLR     D1
000028CE  7400                    2413          MOVE.L  #0,D2
000028D0  7600                    2414          MOVE.L  #0,D3
000028D2  7800                    2415          MOVE.L  #0,D4
000028D4  7A00                    2416          MOVE.L  #0,D5
000028D6  7C00                    2417          MOVE.L  #0,D6
000028D8                          2418  
000028D8                          2419          
000028D8                          2420  ******************************************************************************************************
000028D8                          2421  * After spliting the op-code into SUB's defined groupings
000028D8                          2422  *   This figures out which operation it is and goes to that sub-routine
000028D8                          2423  
000028D8                          2424          * This checks if bit0 is C which is either AND or MULS
000028D8  0C39 000C 000034A4      2425          CMP.B   #$C,bit0
000028E0  6600 000E               2426          BNE     SUBACHECK
000028E4  0C39 0007 000034A6      2427          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
000028EC  6700 F180               2428          BEQ     MULSW                       AND will use SUB's routine
000028F0                          2429  
000028F0                          2430  SUBACHECK
000028F0                          2431          * This will display SUBA instead  -- check this later
000028F0  0C39 0003 000034A6      2432          CMP.B   #$3,bit2
000028F8  6700 01D6               2433          BEQ     SUBA
000028FC  0C39 0007 000034A6      2434          CMP.B   #$7,bit2
00002904  6700 01CA               2435          BEQ     SUBA
00002908                          2436  
00002908                          2437          * This will find the size and stuff
00002908  0C39 0000 000034A6      2438          CMP.B   #$0,bit2
00002910  6700 003E               2439          BEQ     SUBSIZE1
00002914  0C39 0001 000034A6      2440          CMP.B   #$1,bit2
0000291C  6700 0072               2441          BEQ     SUBSIZE2
00002920  0C39 0002 000034A6      2442          CMP.B   #$2,bit2
00002928  6700 00A6               2443          BEQ     SUBSIZE3
0000292C  0C39 0004 000034A6      2444          CMP.B   #$4,bit2
00002934  6700 00DA               2445          BEQ     SUBSIZE4
00002938  0C39 0005 000034A6      2446          CMP.B   #$5,bit2
00002940  6700 010E               2447          BEQ     SUBSIZE5
00002944  0C39 0006 000034A6      2448          CMP.B   #$6,bit2
0000294C  6700 0142               2449          BEQ     SUBSIZE6
00002950                          2450     
00002950                          2451  ******************************************************************************************************
00002950                          2452  *   Displays size, then does operation order
00002950                          2453  
00002950                          2454  *   000 byte    EA,DN
00002950                          2455  SUBSIZE1
00002950  6100 0260               2456          BSR     SUBPRINT
00002954  43F9 00003257           2457          LEA     MBYTE,A1
0000295A  103C 000E               2458          MOVE.B  #14,D0
0000295E  4E4F                    2459          TRAP    #15
00002960  43F9 00003235           2460          LEA     TAB,A1
00002966  103C 000E               2461          MOVE.B  #14,D0
0000296A  4E4F                    2462          TRAP    #15
0000296C                          2463  
0000296C  45F9 00002976           2464          LEA     SUBSIZE11,A2
00002972  6000 0432               2465          BRA     SUBEA
00002976                          2466  SUBSIZE11
00002976  45F9 0000298C           2467          LEA     SUBSIZE12,A2
0000297C  43F9 00003239           2468          LEA     COMMA,A1
00002982  103C 000E               2469          MOVE.B  #14,D0
00002986  4E4F                    2470          TRAP    #15
00002988  6000 02F8               2471          BRA     SUBDN
0000298C                          2472  SUBSIZE12
0000298C  6000 0654               2473          BRA     ENDNEWLINE
00002990                          2474  
00002990                          2475  *************************************************
00002990                          2476  *   001 word    EA,DN
00002990                          2477  SUBSIZE2
00002990  6100 0220               2478          BSR     SUBPRINT
00002994  43F9 0000325A           2479          LEA     MWORD,A1
0000299A  103C 000E               2480          MOVE.B  #14,D0
0000299E  4E4F                    2481          TRAP    #15
000029A0  43F9 00003235           2482          LEA     TAB,A1
000029A6  103C 000E               2483          MOVE.B  #14,D0
000029AA  4E4F                    2484          TRAP    #15
000029AC                          2485  
000029AC  45F9 000029B6           2486          LEA     SUBSIZE21,A2
000029B2  6000 03F2               2487          BRA     SUBEA
000029B6                          2488  SUBSIZE21
000029B6  45F9 000029CC           2489          LEA     SUBSIZE22,A2
000029BC  43F9 00003239           2490          LEA     COMMA,A1
000029C2  103C 000E               2491          MOVE.B  #14,D0
000029C6  4E4F                    2492          TRAP    #15
000029C8  6000 02B8               2493          BRA     SUBDN
000029CC                          2494  SUBSIZE22
000029CC  6000 0614               2495          BRA     ENDNEWLINE
000029D0                          2496  
000029D0                          2497  *************************************************
000029D0                          2498  *   010 long    EA,DN
000029D0                          2499  SUBSIZE3
000029D0  6100 01E0               2500          BSR     SUBPRINT
000029D4  43F9 0000325D           2501          LEA     MLONG,A1
000029DA  103C 000E               2502          MOVE.B  #14,D0
000029DE  4E4F                    2503          TRAP    #15
000029E0  43F9 00003235           2504          LEA     TAB,A1
000029E6  103C 000E               2505          MOVE.B  #14,D0
000029EA  4E4F                    2506          TRAP    #15
000029EC                          2507  
000029EC  45F9 000029F6           2508          LEA     SUBSIZE31,A2
000029F2  6000 03B2               2509          BRA     SUBEA
000029F6                          2510  SUBSIZE31
000029F6  45F9 00002A0C           2511          LEA     SUBSIZE32,A2
000029FC  43F9 00003239           2512          LEA     COMMA,A1
00002A02  103C 000E               2513          MOVE.B  #14,D0
00002A06  4E4F                    2514          TRAP    #15
00002A08  6000 0278               2515          BRA     SUBDN
00002A0C                          2516  SUBSIZE32
00002A0C  6000 05D4               2517          BRA     ENDNEWLINE
00002A10                          2518  
00002A10                          2519  *************************************************
00002A10                          2520  *   100 byte    DN,EA
00002A10                          2521  SUBSIZE4
00002A10  6100 01A0               2522          BSR     SUBPRINT
00002A14  43F9 00003257           2523          LEA     MBYTE,A1
00002A1A  103C 000E               2524          MOVE.B  #14,D0
00002A1E  4E4F                    2525          TRAP    #15
00002A20  43F9 00003235           2526          LEA     TAB,A1
00002A26  103C 000E               2527          MOVE.B  #14,D0
00002A2A  4E4F                    2528          TRAP    #15
00002A2C                          2529  
00002A2C                          2530          *BSR     SUBERRORTEST1
00002A2C                          2531  
00002A2C  45F9 00002A36           2532          LEA     SUBSIZE41,A2
00002A32  6000 024E               2533          BRA     SUBDN
00002A36                          2534  SUBSIZE41
00002A36  45F9 00002A4C           2535          LEA     SUBSIZE42,A2
00002A3C  43F9 00003239           2536          LEA     COMMA,A1
00002A42  103C 000E               2537          MOVE.B  #14,D0
00002A46  4E4F                    2538          TRAP    #15
00002A48  6000 035C               2539          BRA     SUBEA
00002A4C                          2540  SUBSIZE42
00002A4C  6000 0594               2541          BRA     ENDNEWLINE
00002A50                          2542  
00002A50                          2543  *************************************************
00002A50                          2544  *   101 word    DN,EA
00002A50                          2545  SUBSIZE5
00002A50                          2546          *BSR     SUBERRORTEST1               * This does error testing
00002A50  6100 0160               2547          BSR     SUBPRINT                    * Prints out 'SUB.'
00002A54  43F9 0000325A           2548          LEA     MWORD,A1
00002A5A  103C 000E               2549          MOVE.B  #14,D0
00002A5E  4E4F                    2550          TRAP    #15
00002A60  43F9 00003235           2551          LEA     TAB,A1
00002A66  103C 000E               2552          MOVE.B  #14,D0
00002A6A  4E4F                    2553          TRAP    #15
00002A6C                          2554  
00002A6C  45F9 00002A76           2555          LEA     SUBSIZE51,A2
00002A72  6000 020E               2556          BRA     SUBDN
00002A76                          2557  SUBSIZE51
00002A76  45F9 00002A8C           2558          LEA     SUBSIZE52,A2
00002A7C  43F9 00003239           2559          LEA     COMMA,A1
00002A82  103C 000E               2560          MOVE.B  #14,D0
00002A86  4E4F                    2561          TRAP    #15
00002A88  6000 031C               2562          BRA     SUBEA
00002A8C                          2563  SUBSIZE52
00002A8C  6000 0554               2564          BRA     ENDNEWLINE
00002A90                          2565  
00002A90                          2566  *************************************************
00002A90                          2567  *   110 long    DN,EA
00002A90                          2568  SUBSIZE6
00002A90                          2569          *BSR     SUBERRORTEST1               * This does error testing
00002A90  6100 0120               2570          BSR     SUBPRINT                    * Prints out 'SUB.'
00002A94  43F9 0000325D           2571          LEA     MLONG,A1
00002A9A  103C 000E               2572          MOVE.B  #14,D0
00002A9E  4E4F                    2573          TRAP    #15
00002AA0  43F9 00003235           2574          LEA     TAB,A1
00002AA6  103C 000E               2575          MOVE.B  #14,D0
00002AAA  4E4F                    2576          TRAP    #15
00002AAC                          2577  
00002AAC                          2578          *BSR     SUBERRORTEST1
00002AAC                          2579  
00002AAC  45F9 00002AB6           2580          LEA     SUBSIZE61,A2
00002AB2  6000 01CE               2581          BRA     SUBDN
00002AB6                          2582  SUBSIZE61
00002AB6  45F9 00002ACC           2583          LEA     SUBSIZE62,A2
00002ABC  43F9 00003239           2584          LEA     COMMA,A1
00002AC2  103C 000E               2585          MOVE.B  #14,D0
00002AC6  4E4F                    2586          TRAP    #15
00002AC8  6000 02DC               2587          BRA     SUBEA
00002ACC                          2588  SUBSIZE62
00002ACC  6000 0514               2589          BRA     ENDNEWLINE
00002AD0                          2590  
00002AD0                          2591  ****************************************************************************
00002AD0                          2592  *   This section is for SUBA
00002AD0                          2593  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002AD0                          2594  SUBA
00002AD0  0C39 0009 000034A4      2595          CMP.B   #$9,bit0
00002AD8  6700 001A               2596          BEQ     SUBPRINTSUBA
00002ADC  0C39 000B 000034A4      2597          CMP.B   #$B,bit0
00002AE4  6700 001E               2598          BEQ     SUBPRINTCMPA
00002AE8  0C39 000D 000034A4      2599          CMP.B   #$D,bit0
00002AF0  6700 0022               2600          BEQ     SUBPRINTADDA
00002AF4                          2601  
00002AF4                          2602  
00002AF4                          2603  SUBPRINTSUBA
00002AF4  43F9 000032CE           2604          LEA     MSUBA,A1                    Displays 'SUBA.'
00002AFA  103C 000E               2605          MOVE.B  #14,D0
00002AFE  4E4F                    2606          TRAP    #15
00002B00  6000 0022               2607          BRA     SUBACONT
00002B04                          2608  
00002B04                          2609  SUBPRINTCMPA
00002B04  43F9 00003303           2610          LEA     MCMPA,A1                    Displays 'SUBA.'
00002B0A  103C 000E               2611          MOVE.B  #14,D0
00002B0E  4E4F                    2612          TRAP    #15
00002B10  6000 0012               2613          BRA     SUBACONT
00002B14                          2614  
00002B14                          2615  SUBPRINTADDA
00002B14  43F9 00003314           2616          LEA     MADDA,A1                    Displays 'SUBA.'
00002B1A  103C 000E               2617          MOVE.B  #14,D0
00002B1E  4E4F                    2618          TRAP    #15
00002B20  6000 0002               2619          BRA     SUBACONT
00002B24                          2620  
00002B24                          2621  SUBACONT
00002B24                          2622          * Does the rest of SUBA
00002B24  0C39 0003 000034A6      2623          CMP.B   #$3,bit2
00002B2C  6700 000E               2624          BEQ     SUBSIZE7
00002B30  0C39 0007 000034A6      2625          CMP.B   #$7,bit2
00002B38  6700 003E               2626          BEQ     SUBSIZE8
00002B3C                          2627  
00002B3C                          2628  *************************************************
00002B3C                          2629  *   SUBA Word   ea,An
00002B3C                          2630  SUBSIZE7
00002B3C  43F9 0000325A           2631          LEA     MWORD,A1
00002B42  103C 000E               2632          MOVE.B  #14,D0
00002B46  4E4F                    2633          TRAP    #15
00002B48  43F9 00003235           2634          LEA     TAB,A1
00002B4E  103C 000E               2635          MOVE.B  #14,D0
00002B52  4E4F                    2636          TRAP    #15
00002B54                          2637  
00002B54  45F9 00002B5E           2638          LEA     SUBSIZE71,A2
00002B5A  6000 024A               2639          BRA     SUBEA
00002B5E                          2640  SUBSIZE71
00002B5E  45F9 00002B74           2641          LEA     SUBSIZE72,A2
00002B64  43F9 00003239           2642          LEA     COMMA,A1
00002B6A  103C 000E               2643          MOVE.B  #14,D0
00002B6E  4E4F                    2644          TRAP    #15
00002B70  6000 0164               2645          BRA     SUBAN2
00002B74                          2646  SUBSIZE72
00002B74  6000 046C               2647          BRA     ENDNEWLINE
00002B78                          2648  
00002B78                          2649  *************************************************
00002B78                          2650  *   SUBA longword   ea,An
00002B78                          2651  SUBSIZE8
00002B78  43F9 0000325D           2652          LEA     MLONG,A1
00002B7E  103C 000E               2653          MOVE.B  #14,D0
00002B82  4E4F                    2654          TRAP    #15
00002B84  43F9 00003235           2655          LEA     TAB,A1
00002B8A  103C 000E               2656          MOVE.B  #14,D0
00002B8E  4E4F                    2657          TRAP    #15
00002B90                          2658  
00002B90  45F8 2B5E               2659          LEA     SUBSIZE71,A2
00002B94  6000 0210               2660          BRA     SUBEA
00002B98                          2661  SUBSIZE81
00002B98  45F8 2B74               2662          LEA     SUBSIZE72,A2
00002B9C  43F9 00003239           2663          LEA     COMMA,A1
00002BA2  103C 000E               2664          MOVE.B  #14,D0
00002BA6  4E4F                    2665          TRAP    #15
00002BA8  6000 012C               2666          BRA     SUBAN2
00002BAC                          2667  SUBSIZE82
00002BAC  6000 0434               2668          BRA     ENDNEWLINE
00002BB0                          2669  
00002BB0                          2670  *************************************************
00002BB0                          2671  * Jumps to memory location at A2
00002BB0                          2672  SUBJMPA2
00002BB0  4ED2                    2673          JMP     (A2)
00002BB2                          2674  
00002BB2                          2675  *************************************************
00002BB2                          2676  * Prints out opcode name
00002BB2                          2677  SUBPRINT
00002BB2  0C39 0009 000034A4      2678          CMP.B   #$9,bit0                Prints SUB
00002BBA  6700 0026               2679          BEQ     SUBPRINTSUB
00002BBE  0C39 000B 000034A4      2680          CMP.B   #$B,bit0                Prints CMP or EOR
00002BC6  6700 004A               2681          BEQ     SUBPRINTB
00002BCA  0C39 000C 000034A4      2682          CMP.B   #$C,bit0                Prints AND
00002BD2  6700 001E               2683          BEQ     SUBPRINTAND
00002BD6  0C39 000D 000034A4      2684          CMP.B   #$D,bit0                Prints ADD
00002BDE  6700 0022               2685          BEQ     SUBPRINTADD
00002BE2                          2686  
00002BE2                          2687  SUBPRINTSUB   * Displays 'SUB.' 
00002BE2  43F9 000032C9           2688          LEA     MSUB,A1
00002BE8  103C 000E               2689          MOVE.B  #14,D0
00002BEC  4E4F                    2690          TRAP    #15
00002BEE  6000 004E               2691          BRA     SUBPRINTEND
00002BF2                          2692  
00002BF2                          2693  SUBPRINTAND   * Displays 'AND.' 
00002BF2  43F9 000032D4           2694          LEA     MAND,A1
00002BF8  103C 000E               2695          MOVE.B  #14,D0
00002BFC  4E4F                    2696          TRAP    #15
00002BFE  6000 003E               2697          BRA     SUBPRINTEND
00002C02                          2698  
00002C02                          2699  SUBPRINTADD   * Displays 'ADD.' 
00002C02  43F9 000032D9           2700          LEA     MADD,A1
00002C08  103C 000E               2701          MOVE.B  #14,D0
00002C0C  4E4F                    2702          TRAP    #15
00002C0E  6000 002E               2703          BRA     SUBPRINTEND
00002C12                          2704  
00002C12                          2705  SUBPRINTB
00002C12  0C39 0004 000034A6      2706          CMP.B   #$4,bit2
00002C1A  6D00 0012               2707          BLT     SUBPRINTCMP
00002C1E                          2708  
00002C1E                          2709  SUBPRINTEOR   * Displays 'EOR.' 
00002C1E  43F9 00003309           2710          LEA     MEOR,A1
00002C24  103C 000E               2711          MOVE.B  #14,D0
00002C28  4E4F                    2712          TRAP    #15
00002C2A  6000 0012               2713          BRA     SUBPRINTEND
00002C2E                          2714  
00002C2E                          2715  SUBPRINTCMP   * Displays 'CMP.' 
00002C2E  43F9 000032F8           2716          LEA     MCMP,A1
00002C34  103C 000E               2717          MOVE.B  #14,D0
00002C38  4E4F                    2718          TRAP    #15
00002C3A  6000 0002               2719          BRA     SUBPRINTEND
00002C3E                          2720  
00002C3E                          2721  SUBPRINTEND
00002C3E  4E75                    2722          RTS
00002C40                          2723  
00002C40                          2724  
00002C40                          2725  *******************************************************************
00002C40                          2726  * Error testing for DN->EA operations
00002C40                          2727  *  Data register, address register, and immediate data cannot be destinations
00002C40                          2728  SUBERRORTEST1
00002C40                          2729          * test for DN or AN register, branches to invalid op code if true
00002C40  0C39 0000 000034A7      2730          CMP.B   #0,bit3
00002C48  6700 0326               2731          BEQ     INVOP
00002C4C  0C39 0001 000034A7      2732          CMP.B   #1,bit3
00002C54  6700 031A               2733          BEQ     INVOP
00002C58                          2734          
00002C58                          2735          * check if destination is immediate data
00002C58  0C39 0007 000034A7      2736          CMP.B   #7,bit3
00002C60  6600 001E               2737          BNE     SUBERRORTEST11
00002C64  0C39 0000 000034A8      2738          CMP.B   #0,bit4
00002C6C  6700 0012               2739          BEQ     SUBERRORTEST11
00002C70  0C39 0001 000034A8      2740          CMP.B   #1,bit4
00002C78  6700 0006               2741          BEQ     SUBERRORTEST11
00002C7C  6000 02F2               2742          BRA     INVOP
00002C80                          2743          
00002C80                          2744  SUBERRORTEST11
00002C80  4E75                    2745          RTS
00002C82                          2746  
00002C82                          2747  
00002C82                          2748  ******************************************************************************************************
00002C82                          2749  *   Displays data register
00002C82                          2750  SUBDN
00002C82  43F9 00003260           2751          LEA     MDN,A1
00002C88  103C 000E               2752          MOVE.B  #14,D0
00002C8C  4E4F                    2753          TRAP    #15
00002C8E                          2754  
00002C8E  1239 000034A5           2755          MOVE.B  bit1,D1
00002C94  103C 0003               2756          MOVE.B  #3,D0
00002C98  4E4F                    2757          TRAP    #15
00002C9A                          2758          
00002C9A  6000 FF14               2759          BRA     SUBJMPA2
00002C9E                          2760  
00002C9E                          2761  *   Displays data register
00002C9E                          2762  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002C9E                          2763  SUBDN2
00002C9E  43F9 00003260           2764          LEA     MDN,A1
00002CA4  103C 000E               2765          MOVE.B  #14,D0
00002CA8  4E4F                    2766          TRAP    #15
00002CAA                          2767  
00002CAA  1239 000034A8           2768          MOVE.B  bit4,D1
00002CB0  103C 0003               2769          MOVE.B  #3,D0
00002CB4  4E4F                    2770          TRAP    #15
00002CB6                          2771          
00002CB6  6000 FEF8               2772          BRA     SUBJMPA2
00002CBA                          2773  
00002CBA                          2774  *   Displays address register
00002CBA                          2775  SUBAN
00002CBA  43F9 00003262           2776          LEA     MAN,A1
00002CC0  103C 000E               2777          MOVE.B  #14,D0
00002CC4  4E4F                    2778          TRAP    #15
00002CC6                          2779  
00002CC6  1239 000034A8           2780          MOVE.B  bit4,D1
00002CCC  103C 0003               2781          MOVE.B  #3,D0
00002CD0  4E4F                    2782          TRAP    #15
00002CD2                          2783          
00002CD2  6000 FEDC               2784          BRA     SUBJMPA2
00002CD6                          2785  
00002CD6                          2786  *   Displays address register
00002CD6                          2787  *   This is for SUBA, SUBA puts An into bit1
00002CD6                          2788  SUBAN2
00002CD6  43F9 00003262           2789          LEA     MAN,A1
00002CDC  103C 000E               2790          MOVE.B  #14,D0
00002CE0  4E4F                    2791          TRAP    #15
00002CE2                          2792  
00002CE2  1239 000034A5           2793          MOVE.B  bit1,D1
00002CE8  103C 0003               2794          MOVE.B  #3,D0
00002CEC  4E4F                    2795          TRAP    #15
00002CEE                          2796          
00002CEE  6000 FEC0               2797          BRA     SUBJMPA2
00002CF2                          2798  
00002CF2                          2799  
00002CF2                          2800  *   Displays indirect address register
00002CF2                          2801  SUBANID
00002CF2  43F9 0000323B           2802          LEA     OPENBRA,A1
00002CF8  103C 000E               2803          MOVE.B  #14,D0
00002CFC  4E4F                    2804          TRAP    #15
00002CFE                          2805  
00002CFE  43F9 00003262           2806          LEA     MAN,A1
00002D04  103C 000E               2807          MOVE.B  #14,D0
00002D08  4E4F                    2808          TRAP    #15
00002D0A                          2809  
00002D0A  1239 000034A8           2810          MOVE.B  bit4,D1
00002D10  103C 0003               2811          MOVE.B  #3,D0
00002D14  4E4F                    2812          TRAP    #15
00002D16                          2813  
00002D16  43F9 0000323D           2814          LEA     CLOSEBRA,A1
00002D1C  103C 000E               2815          MOVE.B  #14,D0
00002D20  4E4F                    2816          TRAP    #15
00002D22                          2817  
00002D22  6000 FE8C               2818          BRA     SUBJMPA2
00002D26                          2819  
00002D26                          2820  *   Displays indirect address register with post increment
00002D26                          2821  SUBANIDPOS
00002D26  43F9 0000323B           2822          LEA     OPENBRA,A1
00002D2C  103C 000E               2823          MOVE.B  #14,D0
00002D30  4E4F                    2824          TRAP    #15
00002D32                          2825  
00002D32  43F9 00003262           2826          LEA     MAN,A1
00002D38  103C 000E               2827          MOVE.B  #14,D0
00002D3C  4E4F                    2828          TRAP    #15
00002D3E                          2829  
00002D3E  1239 000034A8           2830          MOVE.B  bit4,D1
00002D44  103C 0003               2831          MOVE.B  #3,D0
00002D48  4E4F                    2832          TRAP    #15
00002D4A                          2833  
00002D4A  43F9 0000323D           2834          LEA     CLOSEBRA,A1
00002D50  103C 000E               2835          MOVE.B  #14,D0
00002D54  4E4F                    2836          TRAP    #15
00002D56                          2837  
00002D56  43F9 0000323F           2838          LEA     POS,A1
00002D5C  103C 000E               2839          MOVE.B  #14,D0
00002D60  4E4F                    2840          TRAP    #15
00002D62                          2841  
00002D62  6000 FE4C               2842          BRA     SUBJMPA2
00002D66                          2843  
00002D66                          2844  *   Displays indirect address register with pre decrement
00002D66                          2845  SUBANIDNEG
00002D66  43F9 00003241           2846          LEA     NEG,A1
00002D6C  103C 000E               2847          MOVE.B  #14,D0
00002D70  4E4F                    2848          TRAP    #15
00002D72                          2849  
00002D72  43F9 0000323B           2850          LEA     OPENBRA,A1
00002D78  103C 000E               2851          MOVE.B  #14,D0
00002D7C  4E4F                    2852          TRAP    #15
00002D7E                          2853  
00002D7E  43F9 00003262           2854          LEA     MAN,A1
00002D84  103C 000E               2855          MOVE.B  #14,D0
00002D88  4E4F                    2856          TRAP    #15
00002D8A                          2857  
00002D8A  1239 000034A8           2858          MOVE.B  bit4,D1
00002D90  103C 0003               2859          MOVE.B  #3,D0
00002D94  4E4F                    2860          TRAP    #15
00002D96                          2861  
00002D96  43F9 0000323D           2862          LEA     CLOSEBRA,A1
00002D9C  103C 000E               2863          MOVE.B  #14,D0
00002DA0  4E4F                    2864          TRAP    #15
00002DA2                          2865  
00002DA2  6000 FE0C               2866          BRA     SUBJMPA2
00002DA6                          2867  
00002DA6                          2868  
00002DA6                          2869  
00002DA6                          2870  
00002DA6                          2871  ******************************************************************************************************
00002DA6                          2872  * Displays the EA as hex numbers
00002DA6                          2873  * 
00002DA6                          2874  SUBEA
00002DA6                          2875          *   This finds which mode to use
00002DA6  0C39 0000 000034A7      2876          CMP.B   #$0,bit3
00002DAE  6700 FEEE               2877          BEQ     SUBDN2
00002DB2  0C39 0001 000034A7      2878          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002DBA  6700 FEFE               2879          BEQ     SUBAN
00002DBE  0C39 0002 000034A7      2880          CMP.B   #$2,bit3
00002DC6  6700 FF2A               2881          BEQ     SUBANID
00002DCA  0C39 0003 000034A7      2882          CMP.B   #$3,bit3
00002DD2  6700 FF52               2883          BEQ     SUBANIDPOS
00002DD6  0C39 0004 000034A7      2884          CMP.B   #$4,bit3
00002DDE  6786                    2885          BEQ     SUBANIDNEG
00002DE0  0C39 0005 000034A7      2886          CMP.B   #$5,bit3
00002DE8  6700 0424               2887          BEQ     ERROR
00002DEC  0C39 0006 000034A7      2888          CMP.B   #$6,bit3
00002DF4  6700 0418               2889          BEQ     ERROR
00002DF8  0C39 0007 000034A7      2890          CMP.B   #$7,bit3
00002E00  6700 0002               2891          BEQ     SUBEAHEX
00002E04                          2892  
00002E04                          2893  SUBEAHEX
00002E04  0C39 0004 000034A8      2894          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002E0C  6700 0086               2895          BEQ     SUBEAID
00002E10                          2896  SUBEAID2
00002E10                          2897          *   Else it will assume it is absolute addressing mode
00002E10  43F9 00003255           2898          LEA     MHEX,A1
00002E16  103C 000E               2899          MOVE.B  #14,D0
00002E1A  4E4F                    2900          TRAP    #15
00002E1C                          2901  
00002E1C  0C39 0000 000034A8      2902          CMP.B   #$0,bit4
00002E24  6700 007E               2903          BEQ     SUBEAHEX1
00002E28  0C39 0001 000034A8      2904          CMP.B   #$1,bit4
00002E30  6700 007A               2905          BEQ     SUBEAHEX2
00002E34                          2906  
00002E34  0C39 0000 000034A6      2907          CMP.B   #$0,bit2            * SUB byte displays as word
00002E3C  6700 0066               2908          BEQ     SUBEAHEX1
00002E40  0C39 0004 000034A6      2909          CMP.B   #$4,bit2            * SUB byte displays as word
00002E48  6700 005A               2910          BEQ     SUBEAHEX1
00002E4C  0C39 0001 000034A6      2911          CMP.B   #$1,bit2            * SUB word
00002E54  6700 004E               2912          BEQ     SUBEAHEX1
00002E58  0C39 0005 000034A6      2913          CMP.B   #$5,bit2            * SUB word
00002E60  6700 0042               2914          BEQ     SUBEAHEX1
00002E64  0C39 0003 000034A6      2915          CMP.B   #$3,bit2            * SUBA word
00002E6C  6700 0036               2916          BEQ     SUBEAHEX1
00002E70  0C39 0002 000034A6      2917          CMP.B   #$2,bit2            * SUB longword
00002E78  6700 0032               2918          BEQ     SUBEAHEX2
00002E7C  0C39 0006 000034A6      2919          CMP.B   #$6,bit2            * SUB longword
00002E84  6700 0026               2920          BEQ     SUBEAHEX2
00002E88  0C39 0007 000034A6      2921          CMP.B   #$7,bit2            * SUBA longword
00002E90  6700 001A               2922          BEQ     SUBEAHEX2
00002E94                          2923  
00002E94                          2924  SUBEAID
00002E94  43F9 00003243           2925          LEA     HASH,A1
00002E9A  103C 000E               2926          MOVE.B  #14,D0
00002E9E  4E4F                    2927          TRAP    #15
00002EA0  6000 FF6E               2928          BRA     SUBEAID2
00002EA4                          2929  
00002EA4                          2930  SUBEAHEX1  
00002EA4                          2931          *absolute address word
00002EA4  1E3C 0002               2932          MOVE.B  #2,D7
00002EA8  6000 000A               2933          BRA     SUBEAHEX3
00002EAC                          2934  
00002EAC                          2935  SUBEAHEX2  *absolute address long
00002EAC  1E3C 0004               2936          MOVE.B  #4,D7
00002EB0  6000 0002               2937          BRA     SUBEAHEX3
00002EB4                          2938  
00002EB4                          2939  SUBEAHEX3
00002EB4  BE3C 0000               2940          CMP.B   #0,D7               Compares current addr to ending addr
00002EB8  6700 FCF6               2941          BEQ     SUBJMPA2            Branches to done if they are equal
00002EBC                          2942  
00002EBC                          2943      
00002EBC  141E                    2944          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002EBE                          2945          
00002EBE  1602                    2946          MOVE.B  D2,D3               Copies data at D2 to D3
00002EC0                          2947          *   this gets digit in 10's place
00002EC0  E80B                    2948          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002EC2                          2949          *   this gets digit in 1's place
00002EC2  E90A                    2950          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002EC4  E80A                    2951          LSR.B   #4,D2               Shifts back right into 1's place
00002EC6                          2952  
00002EC6                          2953          
00002EC6                          2954          *   D3 holds digit in 10's place
00002EC6                          2955          *   D2 holds digit in 1's place
00002EC6                          2956          
00002EC6  1203                    2957          MOVE.B  D3,D1               Displays digit in 10's place first
00002EC8                          2958  
00002EC8                          2959          *   converts digits 10+ into letters
00002EC8                          2960  
00002EC8  47F9 00002EDC           2961          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002ECE  B23C 0009               2962          CMP.B   #9,D1               Compares digit to 9
00002ED2  6E00 0164               2963          BGT     CONV                Print out letter representation if greater than 9
00002ED6                          2964  
00002ED6  103C 0003               2965          MOVE.B  #3,D0               Displays digit if it is less than A
00002EDA  4E4F                    2966          TRAP    #15
00002EDC                          2967          
00002EDC                          2968  SUBEAHEX4    
00002EDC  1202                    2969          MOVE.B  D2,D1               Displays digit in 1's place second
00002EDE                          2970  
00002EDE                          2971          *   converts digits 10+ into letters
00002EDE  47F9 00002EF2           2972          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002EE4  B23C 0009               2973          CMP.B   #9,D1               Compares digit to 9
00002EE8  6E00 014E               2974          BGT     CONV                Print out letter representation if greater than 9
00002EEC                          2975          
00002EEC  103C 0003               2976          MOVE.B  #3,D0               Displays digit if it is less than A
00002EF0  4E4F                    2977          TRAP    #15
00002EF2                          2978          
00002EF2                          2979  SUBEAHEX5         
00002EF2                          2980  * Display counter -- creates new line every 8 bytes
00002EF2                          2981          * D7 is used as counter
00002EF2                          2982          
00002EF2  5307                    2983          SUB.B   #1,D7                       
00002EF4  60BE                    2984          BRA     SUBEAHEX3              Loops back to display next address
00002EF6                          2985  
00002EF6                          2986  ***   display EA ends here
00002EF6                          2987  
00002EF6                          2988  ******************************************************************************************************
00002EF6                          2989  * Displays the EA as hex numbers
00002EF6                          2990  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002EF6                          2991  * OUTPUT: Displays size of EA reading from A6
00002EF6                          2992  * Jumps to location stored in A2 when finished
00002EF6                          2993  DISPEA
00002EF6  43F9 00003255           2994          LEA     MHEX,A1
00002EFC  103C 000E               2995          MOVE.B  #14,D0
00002F00  4E4F                    2996          TRAP    #15
00002F02                          2997  
00002F02  B83C 0002               2998          CMP.B   #$2,D4              Branches to longword display if size is 2
00002F06  6700 000A               2999          BEQ     DISPEALONG          Else it will assume word length
00002F0A                          3000  
00002F0A                          3001  DISPEAWORD
00002F0A                          3002          *absolute address word
00002F0A  1E3C 0002               3003          MOVE.B  #2,D7
00002F0E  6000 000A               3004          BRA     DISPEA3
00002F12                          3005   
00002F12                          3006  DISPEALONG
00002F12                          3007          *absolute address long
00002F12  1E3C 0004               3008          MOVE.B  #4,D7
00002F16  6000 0002               3009          BRA     DISPEA3
00002F1A                          3010  
00002F1A                          3011  DISPEA3
00002F1A  BE3C 0000               3012          CMP.B   #0,D7               Compares current addr to ending addr
00002F1E  6700 FC90               3013          BEQ     SUBJMPA2            Branches to done if they are equal
00002F22                          3014  
00002F22                          3015      
00002F22  141E                    3016          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002F24                          3017          
00002F24  1602                    3018          MOVE.B  D2,D3               Copies data at D2 to D3
00002F26                          3019          *   this gets digit in 10's place
00002F26  E80B                    3020          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002F28                          3021          *   this gets digit in 1's place
00002F28  E90A                    3022          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002F2A  E80A                    3023          LSR.B   #4,D2               Shifts back right into 1's place
00002F2C                          3024  
00002F2C                          3025          
00002F2C                          3026          *   D3 holds digit in 10's place
00002F2C                          3027          *   D2 holds digit in 1's place
00002F2C                          3028          
00002F2C  1203                    3029          MOVE.B  D3,D1               Displays digit in 10's place first
00002F2E                          3030  
00002F2E                          3031          *   converts digits 10+ into letters
00002F2E                          3032  
00002F2E  47F9 00002F42           3033          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002F34  B23C 0009               3034          CMP.B   #9,D1               Compares digit to 9
00002F38  6E00 00FE               3035          BGT     CONV                Print out letter representation if greater than 9
00002F3C                          3036  
00002F3C  103C 0003               3037          MOVE.B  #3,D0               Displays digit if it is less than A
00002F40  4E4F                    3038          TRAP    #15
00002F42                          3039    
00002F42                          3040  DISPEA4
00002F42  1202                    3041          MOVE.B  D2,D1               Displays digit in 1's place second
00002F44                          3042  
00002F44                          3043          *   converts digits 10+ into letters
00002F44  47F9 00002F58           3044          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002F4A  B23C 0009               3045          CMP.B   #9,D1               Compares digit to 9
00002F4E  6E00 00E8               3046          BGT     CONV                Print out letter representation if greater than 9
00002F52                          3047          
00002F52  103C 0003               3048          MOVE.B  #3,D0               Displays digit if it is less than A
00002F56  4E4F                    3049          TRAP    #15
00002F58                          3050        
00002F58                          3051  DISPEA5
00002F58                          3052  * Display counter -- creates new line every 8 bytes
00002F58                          3053          * D7 is used as counter
00002F58                          3054          
00002F58  5307                    3055          SUB.B   #1,D7                       
00002F5A  60BE                    3056          BRA     DISPEA3              Loops back to display next address
00002F5C                          3057  
00002F5C                          3058  ***   display EA ends here
00002F5C                          3059  
00002F5C                          3060  *******************************************************************
00002F5C                          3061  * Clears all of the data registers
00002F5C                          3062  CLRDN
00002F5C  4280                    3063          CLR.L   D0
00002F5E  4281                    3064          CLR.L   D1
00002F60  4282                    3065          CLR.L   D2
00002F62  4283                    3066          CLR.L   D3
00002F64  4284                    3067          CLR.L   D4
00002F66  4285                    3068          CLR.L   D5
00002F68  4286                    3069          CLR.L   D6
00002F6A  4287                    3070          CLR.L   D7
00002F6C  4E75                    3071          RTS
00002F6E                          3072  
00002F6E                          3073  ********************************************************************
00002F6E                          3074  * Invalid op-code handling
00002F6E                          3075  * Displays DATA YYYY
00002F6E                          3076  *  YYYY represents the op-code that failed
00002F6E                          3077  INVOPCODE
00002F6E  DE1E                    3078          ADD.B   (A6)+,D7
00002F70                          3079  
00002F70                          3080  INVOP
00002F70  43F9 000032C4           3081          LEA     MDATA,A1
00002F76  103C 000E               3082          MOVE.B  #14,D0
00002F7A  4E4F                    3083          TRAP    #15
00002F7C  43F9 00003235           3084          LEA     TAB,A1
00002F82  103C 000E               3085          MOVE.B  #14,D0
00002F86  4E4F                    3086          TRAP    #15
00002F88  43F9 00003255           3087          LEA     MHEX,A1
00002F8E  103C 000E               3088          MOVE.B  #14,D0
00002F92  4E4F                    3089          TRAP    #15
00002F94                          3090          
00002F94  1C3C 0002               3091          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002F98                          3092          
00002F98  3407                    3093          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002F9A  E04A                    3094          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002F9C  6000 0004               3095          BRA     INVOP2              Skips the second part to do later
00002FA0                          3096  
00002FA0                          3097  INVOP1
00002FA0  1407                    3098          MOVE.B  D7,D2
00002FA2                          3099  INVOP2
00002FA2  1602                    3100          MOVE.B  D2,D3               Copies data at D2 to D3
00002FA4                          3101          *   this gets digit in 10's place
00002FA4  E80B                    3102          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002FA6                          3103          *   this gets digit in 1's place
00002FA6  E90A                    3104          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002FA8  E80A                    3105          LSR.B   #4,D2               Shifts back right into 1's place
00002FAA                          3106  
00002FAA                          3107          
00002FAA                          3108          *   D3 holds digit in 10's place
00002FAA                          3109          *   D2 holds digit in 1's place
00002FAA                          3110          
00002FAA  1203                    3111          MOVE.B  D3,D1               Displays digit in 10's place first
00002FAC                          3112  
00002FAC                          3113          *   converts digits 10+ into letters
00002FAC                          3114  
00002FAC  47F9 00002FC0           3115          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002FB2  B23C 0009               3116          CMP.B   #9,D1               Compares digit to 9
00002FB6  6E00 0080               3117          BGT     CONV                Print out letter representation if greater than 9
00002FBA                          3118  
00002FBA  103C 0003               3119          MOVE.B  #3,D0               Displays digit if it is less than A
00002FBE  4E4F                    3120          TRAP    #15
00002FC0                          3121          
00002FC0                          3122  INVOP3   
00002FC0  1202                    3123          MOVE.B  D2,D1               Displays digit in 1's place second
00002FC2                          3124  
00002FC2                          3125          *   converts digits 10+ into letters
00002FC2  47F9 00002FD6           3126          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002FC8  B23C 0009               3127          CMP.B   #9,D1               Compares digit to 9
00002FCC  6E00 006A               3128          BGT     CONV                Print out letter representation if greater than 9
00002FD0                          3129          
00002FD0  103C 0003               3130          MOVE.B  #3,D0               Displays digit if it is less than A
00002FD4  4E4F                    3131          TRAP    #15
00002FD6                          3132          
00002FD6                          3133  INVOP4
00002FD6                          3134  * Display counter -- creates new line every 8 bytes
00002FD6                          3135          * D6 is used as counter
00002FD6                          3136          
00002FD6  5306                    3137          SUB.B   #1,D6
00002FD8  BC3C 0000               3138          CMP.B   #0,D6
00002FDC  6700 0004               3139          BEQ     ENDNEWLINE
00002FE0  60BE                    3140          BRA     INVOP1              Loops back to display next address
00002FE2                          3141  
00002FE2                          3142  
00002FE2                          3143  ******************************************************************************************************
00002FE2                          3144  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002FE2                          3145  ENDNEWLINE
00002FE2  43F9 00003232           3146          LEA     NEWLINE,A1          Creates a new line in output window
00002FE8  103C 000E               3147          MOVE.B  #14,D0
00002FEC  4E4F                    3148          TRAP    #15
00002FEE                          3149  
00002FEE  5339 0000349B           3150          SUB.B   #1,dispcount
00002FF4  0C39 0000 0000349B      3151          CMP.B   #0,dispcount               Checks if display counter is zero
00002FFC  6600 E0E4               3152          BNE     NEWADDR
00003000                          3153  
00003000                          3154  * Asks user to press enter to continue
00003000                          3155  * Resets counter
00003000  43F9 00003232           3156          LEA     NEWLINE,A1          Creates a new line in output window
00003006  103C 000E               3157          MOVE.B  #14,D0
0000300A  4E4F                    3158          TRAP    #15
0000300C                          3159          
0000300C  43F9 0000347F           3160          LEA     MCONT,A1            Asks user to press enter to continue
00003012  103C 000E               3161          MOVE.B  #14,D0
00003016  4E4F                    3162          TRAP    #15
00003018                          3163  
00003018  103C 0004               3164          MOVE.B  #4,D0               Takes in user input
0000301C  4E4F                    3165          TRAP    #15
0000301E  4281                    3166          CLR.L   D1                  Clears D1 incase user decides to input something
00003020                          3167  
00003020  43F9 00003232           3168          LEA     NEWLINE,A1          Creates a new line in output window
00003026  103C 000E               3169          MOVE.B  #14,D0
0000302A  4E4F                    3170          TRAP    #15
0000302C                          3171  
0000302C  13FC 001E 0000349B      3172          MOVE.B  #dispnum,dispcount  Resets display counter
00003034  6000 E0AC               3173          BRA     NEWADDR             Loops back to beginning
00003038                          3174  
00003038                          3175  
00003038                          3176  ******************************************************************************************************
00003038                          3177  * Converts decimal number into hex and displays it
00003038                          3178  *   converts number 10-15 to A-F
00003038                          3179  *   INPUT: decimal number in D1
00003038                          3180  *   OUTPUT: HEX number to output
00003038  B23C 000A               3181  CONV    CMP.B   #10,D1              Displays 10 as A
0000303C  6700 002A               3182          BEQ     HEXA
00003040  B23C 000B               3183          CMP.B   #11,D1              Displays 11 as B
00003044  6700 002C               3184          BEQ     HEXB
00003048  B23C 000C               3185          CMP.B   #12,D1              Displays 12 as C
0000304C  6700 002E               3186          BEQ     HEXC
00003050  B23C 000D               3187          CMP.B   #13,D1              Displays 13 as D
00003054  6700 0030               3188          BEQ     HEXD
00003058  B23C 000E               3189          CMP.B   #14,D1              Displays 14 as E
0000305C  6700 0032               3190          BEQ     HEXE
00003060  B23C 000F               3191          CMP.B   #15,D1              Displays 15 as F
00003064  6700 0034               3192          BEQ     HEXF
00003068                          3193  
00003068  43F9 00003247           3194  HEXA    LEA     DISPA,A1            Loads A character
0000306E  6000 0034               3195          BRA     PRINT
00003072                          3196    
00003072  43F9 00003249           3197  HEXB    LEA     DISPB,A1            Loads B character
00003078  6000 002A               3198          BRA     PRINT
0000307C                          3199  
0000307C  43F9 0000324B           3200  HEXC    LEA     DISPC,A1            Loads C character
00003082  6000 0020               3201          BRA     PRINT
00003086                          3202  
00003086  43F9 0000324D           3203  HEXD    LEA     DISPD,A1            Loads D character
0000308C  6000 0016               3204          BRA     PRINT
00003090                          3205  
00003090  43F9 0000324F           3206  HEXE    LEA     DISPE,A1            Loads E character
00003096  6000 000C               3207          BRA     PRINT
0000309A                          3208  
0000309A  43F9 00003251           3209  HEXF    LEA     DISPF,A1            Loads F character
000030A0  6000 0002               3210          BRA     PRINT
000030A4                          3211  
000030A4  103C 000E               3212  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000030A8  4E4F                    3213          TRAP    #15                 Prints out message in A1
000030AA  4ED3                    3214          JMP     (A3)
000030AC                          3215  
000030AC                          3216  ******************************************************************************
000030AC                          3217  * Converts decimal input to hex
000030AC                          3218  * INPUT: Decimal inside D2
000030AC                          3219  * OUTPUT: HEX into D3
000030AC                          3220  *   Converts number in decimal to hex        
000030AC                          3221  DEC2HEX
000030AC  B43C 0030               3222          CMP.B   #$30,D2             0
000030B0  6700 00B0               3223          BEQ     D2HZERO
000030B4  B43C 0031               3224          CMP.B   #$31,D2             1
000030B8  6700 00AE               3225          BEQ     D2HONE
000030BC  B43C 0032               3226          CMP.B   #$32,D2             2
000030C0  6700 00AC               3227          BEQ     D2HTWO
000030C4  B43C 0033               3228          CMP.B   #$33,D2             3
000030C8  6700 00AA               3229          BEQ     D2HTHREE
000030CC  B43C 0034               3230          CMP.B   #$34,D2             4
000030D0  6700 00A8               3231          BEQ     D2HFOUR
000030D4  B43C 0035               3232          CMP.B   #$35,D2             5
000030D8  6700 00A6               3233          BEQ     D2HFIVE
000030DC  B43C 0036               3234          CMP.B   #$36,D2             6
000030E0  6700 00A4               3235          BEQ     D2HSIX
000030E4  B43C 0037               3236          CMP.B   #$37,D2             7
000030E8  6700 00A2               3237          BEQ     D2HSEVEN
000030EC  B43C 0038               3238          CMP.B   #$38,D2             8
000030F0  6700 00A0               3239          BEQ     D2HEIGHT
000030F4  B43C 0039               3240          CMP.B   #$39,D2             9
000030F8  6700 009E               3241          BEQ     D2HNINE
000030FC  B43C 0041               3242          CMP.B   #$41,D2             A
00003100  6700 009C               3243          BEQ     D2HHEXA
00003104  B43C 0042               3244          CMP.B   #$42,D2             B
00003108  6700 009A               3245          BEQ     D2HHEXB
0000310C  B43C 0043               3246          CMP.B   #$43,D2             C
00003110  6700 0098               3247          BEQ     D2HHEXC
00003114  B43C 0044               3248          CMP.B   #$44,D2             D
00003118  6700 0096               3249          BEQ     D2HHEXD
0000311C  B43C 0045               3250          CMP.B   #$45,D2             E
00003120  6700 0094               3251          BEQ     D2HHEXE
00003124  B43C 0046               3252          CMP.B   #$46,D2             F
00003128  6700 0092               3253          BEQ     D2HHEXF
0000312C  B43C 0061               3254          CMP.B   #$61,D2             A
00003130  6700 006C               3255          BEQ     D2HHEXA
00003134  B43C 0062               3256          CMP.B   #$62,D2             B
00003138  6700 006A               3257          BEQ     D2HHEXB
0000313C  B43C 0063               3258          CMP.B   #$63,D2             C
00003140  6700 0068               3259          BEQ     D2HHEXC
00003144  B43C 0064               3260          CMP.B   #$64,D2             D
00003148  6700 0066               3261          BEQ     D2HHEXD
0000314C  B43C 0065               3262          CMP.B   #$65,D2             E
00003150  6700 0064               3263          BEQ     D2HHEXE
00003154  B43C 0066               3264          CMP.B   #$66,D2             F
00003158  6700 0062               3265          BEQ     D2HHEXF
0000315C                          3266  
0000315C                          3267          * User entered a non-hex character
0000315C                          3268          * Moves F to D1 to indicate error before returning
0000315C  123C 000F               3269          MOVE.B  #$F,D1
00003160  4E75                    3270          RTS
00003162                          3271  
00003162                          3272  *   Moves the appropiate hex number to D3
00003162  163C 0000               3273  D2HZERO MOVE.B  #$0,D3
00003166  4E75                    3274          RTS
00003168                          3275  
00003168                          3276  D2HONE
00003168  163C 0001               3277          MOVE.B  #$1,D3
0000316C  4E75                    3278          RTS
0000316E                          3279  
0000316E                          3280  D2HTWO
0000316E  163C 0002               3281          MOVE.B  #$2,D3
00003172  4E75                    3282          RTS
00003174                          3283  
00003174                          3284  D2HTHREE
00003174  163C 0003               3285          MOVE.B  #$3,D3
00003178  4E75                    3286          RTS
0000317A                          3287  
0000317A                          3288  D2HFOUR
0000317A  163C 0004               3289          MOVE.B  #$4,D3
0000317E  4E75                    3290          RTS
00003180                          3291  
00003180                          3292  D2HFIVE
00003180  163C 0005               3293          MOVE.B  #$5,D3
00003184  4E75                    3294          RTS
00003186                          3295  
00003186                          3296  D2HSIX
00003186  163C 0006               3297          MOVE.B  #$6,D3
0000318A  4E75                    3298          RTS
0000318C                          3299  
0000318C                          3300  D2HSEVEN
0000318C  163C 0007               3301          MOVE.B  #$7,D3
00003190  4E75                    3302          RTS
00003192                          3303  
00003192                          3304  D2HEIGHT
00003192  163C 0008               3305          MOVE.B  #$8,D3
00003196  4E75                    3306          RTS
00003198                          3307  
00003198                          3308  D2HNINE
00003198  163C 0009               3309          MOVE.B  #$9,D3
0000319C  4E75                    3310          RTS
0000319E                          3311  
0000319E                          3312  D2HHEXA
0000319E  163C 000A               3313          MOVE.B  #$A,D3
000031A2  4E75                    3314          RTS
000031A4                          3315  
000031A4                          3316  D2HHEXB
000031A4  163C 000B               3317          MOVE.B  #$B,D3
000031A8  4E75                    3318          RTS
000031AA                          3319  
000031AA                          3320  D2HHEXC
000031AA  163C 000C               3321          MOVE.B  #$C,D3
000031AE  4E75                    3322          RTS
000031B0                          3323  
000031B0                          3324  D2HHEXD
000031B0  163C 000D               3325          MOVE.B  #$D,D3
000031B4  4E75                    3326          RTS
000031B6                          3327  
000031B6                          3328  D2HHEXE
000031B6  163C 000E               3329          MOVE.B  #$E,D3
000031BA  4E75                    3330          RTS
000031BC                          3331  
000031BC                          3332  D2HHEXF
000031BC  163C 000F               3333          MOVE.B  #$F,D3
000031C0  4E75                    3334          RTS
000031C2                          3335  
000031C2                          3336  *************************************************************************************************
000031C2                          3337  ASK4REPEAT
000031C2  43F9 00003232           3338          LEA     NEWLINE,A1          Creates a new line in output window
000031C8  103C 000E               3339          MOVE.B  #14,D0
000031CC  4E4F                    3340          TRAP    #15
000031CE                          3341  ASK4REPEAT2
000031CE  43F9 00003386           3342          LEA     MREPEAT,A1          Asks user if they want to start over or exit
000031D4  103C 000E               3343          MOVE.B  #14,D0
000031D8  4E4F                    3344          TRAP    #15
000031DA                          3345  
000031DA  43F9 000034A8           3346          LEA     bit4,A1             User has to enter Y to start over
000031E0  103C 0002               3347          MOVE.B  #2,D0               N to exit
000031E4  4E4F                    3348          TRAP    #15
000031E6                          3349  
000031E6  1239 000034A8           3350          MOVE.B  bit4,D1             User input was stored in bit4
000031EC  B23C 0059               3351          CMP.B   #$59,D1             Char Y
000031F0  6700 DE16               3352          BEQ     IOSTART
000031F4  B23C 0079               3353          CMP.B   #$79,D1             Char y
000031F8  6700 DE0E               3354          BEQ     IOSTART
000031FC  B23C 004E               3355          CMP.B   #$4E,D1             Char N
00003200  6700 001C               3356          BEQ     DONE
00003204  B23C 006E               3357          CMP.B   #$6E,D1             Char n
00003208  6700 0014               3358          BEQ     DONE
0000320C  60C0                    3359          BRA     ASK4REPEAT2          Asks again if user enters invalid character
0000320E                          3360  
0000320E                          3361  
0000320E                          3362  **************************************************************************************************
0000320E  43F9 0000344D           3363  ERROR   LEA     MERROR,A1
00003214  103C 000E               3364          MOVE.B  #14,D0
00003218  4E4F                    3365          TRAP    #15
0000321A  6000 000E               3366          BRA     EXIT
0000321E                          3367  
0000321E  43F9 00003464           3368  DONE    LEA     MDONE,A1
00003224  103C 000E               3369          MOVE.B  #14,D0
00003228  4E4F                    3370          TRAP    #15
0000322A                          3371  
0000322A  103C 0009               3372  EXIT    MOVE.B  #9,D0
0000322E  4E4F                    3373          TRAP    #15
00003230                          3374  
00003230                          3375  ************************************ Output stuff **************************************
00003230                          3376  * Stuff for output
00003230                          3377  
00003230  =0000000D               3378  CR      EQU     $0D
00003230  =0000000A               3379  LF      EQU     $0A
00003230                          3380  
00003230= 20 00                   3381  SPACE       DC.B    ' ',0
00003232= 0D 0A 00                3382  NEWLINE     DC.B    '',CR,LF,0
00003235= 20 20 20 00             3383  TAB         DC.B    '   ',0
00003239= 2C 00                   3384  COMMA       DC.B    ',',0
0000323B= 28 00                   3385  OPENBRA     DC.B    '(',0
0000323D= 29 00                   3386  CLOSEBRA    DC.B    ')',0
0000323F= 2B 00                   3387  POS         DC.B    '+',0
00003241= 2D 00                   3388  NEG         DC.B    '-',0
00003243= 23 00                   3389  HASH        DC.B    '#',0
00003245= 2F 00                   3390  SLASH       DC.B    '/',0
00003247                          3391  
00003247                          3392  
00003247= 41 00                   3393  DISPA       DC.B    'A',0
00003249= 42 00                   3394  DISPB       DC.B    'B',0
0000324B= 43 00                   3395  DISPC       DC.B    'C',0
0000324D= 44 00                   3396  DISPD       DC.B    'D',0
0000324F= 45 00                   3397  DISPE       DC.B    'E',0
00003251= 46 00                   3398  DISPF       DC.B    'F',0
00003253                          3399  
00003253= 2E 00                   3400  MDOT        DC.B    '.',0
00003255= 24 00                   3401  MHEX        DC.B    '$',0
00003257= 42 20 00                3402  MBYTE       DC.B    'B ',0
0000325A= 57 20 00                3403  MWORD       DC.B    'W ',0
0000325D= 4C 20 00                3404  MLONG       DC.B    'L ',0
00003260= 44 00                   3405  MDN         DC.B    'D',0
00003262= 41 00                   3406  MAN         DC.B    'A',0
00003264                          3407  
00003264= 4A 53 52 00             3408  MJSR        DC.B    'JSR',0
00003268= 42 54 53 54 00          3409  MBTST       DC.B    'BTST',0
0000326D= 52 4F 4C 00             3410  MROL        DC.B    'ROL',0
00003271= 52 4F 52 00             3411  MROR        DC.B    'ROR',0
00003275= 4C 53 4C 00             3412  MLSL        DC.B    'LSL',0
00003279= 4C 53 52 00             3413  MLSR        DC.B    'LSR',0
0000327D= 4E 45 47 2E 00          3414  MMNEGW      DC.B    'NEG.',0
00003282= 44 49 56 53 2E 57 00    3415  MMDIVSW     DC.B    'DIVS.W',0
00003289= 4D 55 4C 53 2E 57 00    3416  MMULSW      DC.B    'MULS.W',0
00003290= 4D 4F 56 45 2E 42 00    3417  MMOVEB      DC.B    'MOVE.B',0
00003297= 4D 4F 56 45 2E 57 00    3418  MMOVEW      DC.B    'MOVE.W',0
0000329E= 4D 4F 56 45 2E 4C 00    3419  MMOVEL      DC.B    'MOVE.L',0
000032A5= 4D 4F 56 45 41 2E ...   3420  MMOVEAW     DC.B    'MOVEA.W',0
000032AD= 4D 4F 56 45 41 2E ...   3421  MMOVEAL     DC.B    'MOVEA.L',0
000032B5= 4D 4F 56 45 4D 2E 00    3422  MMOVEM      DC.B    'MOVEM.',0
000032BC                          3423  
000032BC= 41 53 4C 00             3424  MASL        DC.B    'ASL',0
000032C0= 41 53 52 00             3425  MASR        DC.B    'ASR',0
000032C4= 44 41 54 41 00          3426  MDATA       DC.B    'DATA',0
000032C9= 53 55 42 2E 00          3427  MSUB        DC.B    'SUB.',0
000032CE= 53 55 42 41 2E 00       3428  MSUBA       DC.B    'SUBA.',0
000032D4= 41 4E 44 2E 00          3429  MAND        DC.B    'AND.',0
000032D9= 41 44 44 2E 00          3430  MADD        DC.B    'ADD.',0
000032DE= 53 55 42 49 2E 00       3431  MSUBI       DC.B    'SUBI.',0
000032E4= 4F 52 49 2E 00          3432  MORI        DC.B    'ORI.',0
000032E9= 4E 4F 54 2E 00          3433  MNOT        DC.B    'NOT.',0
000032EE= 4D 55 4C 53 2E 00       3434  MMUL        DC.B    'MULS.',0
000032F4= 4E 45 47 00             3435  MNEG        DC.B    'NEG',0
000032F8= 43 4D 50 2E 00          3436  MCMP        DC.B    'CMP.',0
000032FD= 43 4D 50 49 2E 00       3437  MCMPI       DC.B    'CMPI.',0
00003303= 43 4D 50 41 2E 00       3438  MCMPA       DC.B    'CMPA.',0
00003309= 45 4F 52 2E 00          3439  MEOR        DC.B    'EOR.',0
0000330E= 45 4F 52 49 2E 00       3440  MEORI       DC.B    'EORI.',0
00003314= 41 44 44 41 2E 00       3441  MADDA       DC.B    'ADDA.',0
0000331A= 41 44 44 51 2E 00       3442  MADDQ       DC.B    'ADDQ.',0
00003320                          3443  
00003320= 42 45 51 00             3444  MBEQ        DC.B    'BEQ',0
00003324= 42 4E 45 00             3445  MBNE        DC.B    'BNE',0
00003328= 42 4C 54 00             3446  MBLT        DC.B    'BLT',0
0000332C= 42 48 49 00             3447  MBHI        DC.B    'BHI',0
00003330= 42 52 41 00             3448  MBRA        DC.B    'BRA',0
00003334= 4E 4F 50 00             3449  MNOP        DC.B    'NOP',0
00003338= 52 54 53 00             3450  MRTS        DC.B    'RTS',0
0000333C= 4C 45 41 00             3451  MLEA        DC.B    'LEA',0
00003340                          3452  
00003340= 4C 65 6D 6D 65 20 ...   3453  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00003363= 47 69 6D 6D 65 20 ...   3454  MADDR2      DC.B    'Gimme that end address too homie: ',0
00003386= 54 72 79 6E 61 20 ...   3455  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
000033A6= 45 6E 64 20 61 64 ...   3456  MIOERR1     DC.B    'End address must be after the start address, try again.',0
000033DE= 41 64 64 72 65 73 ...   3457  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003411= 52 65 2D 65 6E 74 ...   3458  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
0000342D= 41 64 64 72 65 73 ...   3459  MIOERR4     DC.B    'Address must be an even number.',0
0000344D= 45 52 52 4F 52 3A ...   3460  MERROR      DC.B    'ERROR: Something broke',0
00003464= 43 4F 4D 50 4C 45 ...   3461  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
0000347F= 2A 2A 50 52 45 53 ...   3462  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
0000349B                          3463  
0000349B                          3464  
0000349B                          3465  ********************************** MEMORY STORAGE **********************************************
0000349B                          3466  * Stores memory locations at the end of the program
0000349B                          3467  * How DS works: Give it a variable name.
0000349B                          3468  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
0000349B                          3469  *   Last is the number of storage you want. 
0000349B                          3470  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
0000349B                          3471  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
0000349B                          3472  *            
0000349B                          3473  
0000349B                          3474  dispcount   DS.B    1           Used to count display lines
0000349C                          3475  
0000349C                          3476  startaddr   DS.L    1
000034A0                          3477  endaddr     DS.L    1
000034A4                          3478  
000034A4                          3479  bit0        DS.B    1           SEE NOTE UP TOP
000034A5                          3480  bit1        DS.B    1           SEE NOTE UP TOP
000034A6                          3481  bit2        DS.B    1           SEE NOTE UP TOP
000034A7                          3482  bit3        DS.B    1           SEE NOTE UP TOP
000034A8                          3483  bit4        DS.B    1           SEE NOTE UP TOP
000034A9                          3484  
000034A9                          3485  
000034A9                          3486      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_EA              2682
ABS_EA2             268C
ADDIMD              1546
ADDIMD0             1576
ADDIMD1             1584
ADDIMD4             1592
ADDIMDDES           1600
ADDIMDDES0          1624
ADDIMDDES1          1632
ADDIMDDES4          1640
ADDQ                249A
ADDQB               24E0
ADDQCONT            2510
ADDQCONT2           2536
ADDQEA              254E
ADDQEA2             255E
ADDQL               2500
ADDQW               24F0
ADDR1               7000
ADDR2               726C
AN_EAM              25C2
ASK4REPEAT          31C2
ASK4REPEAT2         31CE
ASLRMEMH            1D60
BCC                 2012
BCCBEQ              208E
BCCBHI              20AC
BCCBLT              20A2
BCCBNE              2098
BCCBRA              2084
BCCDISP             2058
BCCLONG             2040
BCCNEXT             2048
BCCPRINT            20B6
BCCWORD             2038
BIT0                34A4
BIT1                34A5
BIT2                34A6
BIT3                34A7
BIT4                34A8
BTST                126E
BTSTMEM             12E6
CLOSEBRA            323D
CLRDN               2F5C
CODE                11B6
COMMA               3239
CONTPRINTLEA        2348
CONV                3038
CR                  D
D2HEIGHT            3192
D2HFIVE             3180
D2HFOUR             317A
D2HHEXA             319E
D2HHEXB             31A4
D2HHEXC             31AA
D2HHEXD             31B0
D2HHEXE             31B6
D2HHEXF             31BC
D2HNINE             3198
D2HONE              3168
D2HSEVEN            318C
D2HSIX              3186
D2HTHREE            3174
D2HTWO              316E
D2HZERO             3162
DEC2HEX             30AC
DEC_EAM             2646
DISPA               3247
DISPADDR            10B8
DISPADDR1           1100
DISPADDR2           1102
DISPADDR3           1136
DISPADDR4           114C
DISPADDR5           1162
DISPADDR6           1178
DISPADDREND         1182
DISPADDRSTART       10F4
DISPB               3249
DISPC               324B
DISPCOUNT           349B
DISPD               324D
DISPE               324F
DISPEA              2EF6
DISPEA3             2F1A
DISPEA4             2F42
DISPEA5             2F58
DISPEALONG          2F12
DISPEAWORD          2F0A
DISPF               3251
DISPNUM             1E
DIVSW               1AF8
DN_EAM              25AA
DONE                321E
ENDADDR             34A0
ENDNEWLINE          2FE2
ENDNLINC            1A6A
ERROR               320E
EXIT                322A
HANDLEDES           15A8
HASH                3243
HEXA                3068
HEXB                3072
HEXC                307C
HEXD                3086
HEXE                3090
HEXF                309A
IMD                 20C6
IMD2                20F8
IMD3                2100
IMD4                210C
IMDBYTE             21A6
IMDEA               21CE
IMDEA2              21F6
IMDEA3              220C
IMDLONG             21C4
IMDPRINT            2146
IMDPRINTCMPI        2194
IMDPRINTEND         219E
IMDPRINTEORI        218A
IMDPRINTORI         2176
IMDPRINTSUBI        2180
IMDWORD             21B6
INAN_EAM            25DA
INC_EAM             260A
INVOP               2F70
INVOP1              2FA0
INVOP2              2FA2
INVOP3              2FC0
INVOP4              2FD6
INVOPCODE           2F6E
IOERROR1            107A
IOERROR2            1088
IOERROR3            1098
IOERROR4            10A8
IOGETADDR           1030
IOLOOP              1056
IOSTART             1008
IOSTARTLOOP         1050
JSR                 1222
LEAIMD0             232C
LEAIMD1             233A
LEAMODE0            2308
LEAMODE1            2300
LEA_ABS_EA          2314
LEA_INDIR_AN        236C
LF                  A
LSLR                1CDC
LSLRDESD            195A
LSLRMEM             1EC4
LSLRMEMH            1DE4
LSLRSRCD            1932
MADD                32D9
MADDA               3314
MADDQ               331A
MADDR1              3340
MADDR2              3363
MAN                 3262
MAND                32D4
MASL                32BC
MASR                32C0
MBEQ                3320
MBHI                332C
MBLT                3328
MBNE                3324
MBRA                3330
MBTST               3268
MBYTE               3257
MCMP                32F8
MCMPA               3303
MCMPI               32FD
MCONT               347F
MDATA               32C4
MDN                 3260
MDONE               3464
MDOT                3253
MEOR                3309
MEORI               330E
MERROR              344D
MHEX                3255
MIOERR1             33A6
MIOERR2             33DE
MIOERR3             3411
MIOERR4             342D
MISC                2210
MISCBIT2            2258
MISCBIT3            2264
MISCBYTE            2418
MISCCHECKM          2298
MISCCHKLEA          2278
MISCEA              2446
MISCEA2             2462
MISCLEA             22C8
MISCLEA2            22F4
MISCLONG            243A
MISCMMPOSTINC       2790
MISCMMPOSTINC2      279A
MISCMMPOSTINC3      27D0
MISCMMPOSTINCPRINT  27D4
MISCMMPOSTINCPRINT2  27E8
MISCMMPOSTINCPRINT3  27F4
MISCMMPREDEC        2722
MISCMMPREDEC2       274C
MISCMMPREDEC3       2762
MISCMMPREDECCHECK   2716
MISCMMPREDECPRINT   2766
MISCMMPREDECPRINT2  277A
MISCMMPREDECPRINT3  2786
MISCMMPRINTNUM      2866
MISCMMPRINTSIZE     26FE
MISCMMREGMEM        27FE
MISCMMREGMEM2       2824
MISCMMREGMEM3       283A
MISCMMREGMEMPRINT   283E
MISCMMREGMEMPRINT2  284E
MISCMMREGMEMPRINT3  285A
MISCMMSIZEL         26F8
MISCMMSLASH         2874
MISCMOVEM           2690
MISCMOVEM2          26A0
MISCMOVEM3          26B0
MISCMOVEM4          26C2
MISCNOP             22B8
MISCNOT             23CC
MISCNOT2            23D6
MISCNOT3            23DE
MISCNOT4            23EA
MISCPRINT           2466
MISCPRINTEND        2492
MISCPRINTNEG        2488
MISCPRINTNOT        247E
MISCRTS             23BC
MISCWORD            242A
MJSR                3264
MLEA                333C
MLONG               325D
MLSL                3275
MLSR                3279
MMDIVSW             3282
MMNEGW              327D
MMOVEAL             32AD
MMOVEAW             32A5
MMOVEB              3290
MMOVEL              329E
MMOVEM              32B5
MMOVEW              3297
MMUL                32EE
MMULSW              3289
MNEG                32F4
MNOP                3334
MNOT                32E9
MORI                32E4
MOVB                14C0
MOVBDN1             18A6
MOVBDN2             1A46
MOVEAL              146C
MOVEAN1             1656
MOVEAN2             1976
MOVEAW              138C
MOVEIAN1            16CA
MOVEIAND1           1806
MOVEIANI1           175E
MOVIAN2             1992
MOVIAND2            1A06
MOVIANI2            19C6
MOVL                13E0
MOVW                1300
MREPEAT             3386
MROL                326D
MROR                3271
MRTS                3338
MSUB                32C9
MSUBA               32CE
MSUBI               32DE
MULSW               1A6E
MWORD               325A
NEG                 3241
NEGW                1B86
NEWADDR             10E2
NEWLINE             3232
OPENBRA             323B
POS                 323F
PRINT               30A4
PRINTASL            1D7C
PRINTASR            1DB0
PRINTB              1F0E
PRINTBYTE           1BE0
PRINTL              1F76
PRINTLONG           1C88
PRINTLSL            1E90
PRINTLSLRCOUNT      1FAA
PRINTLSR            1FDE
PRINTROL            1E28
PRINTROR            1E5C
PRINTW              1F42
PRINTWORD           1C34
RORL                1E10
SLASH               3245
SPACE               3230
START               1000
STARTADDR           349C
SUB                 2882
SUB1                28B4
SUB2                2896
SUB3                289E
SUB4                28A8
SUBA                2AD0
SUBACHECK           28F0
SUBACONT            2B24
SUBAN               2CBA
SUBAN2              2CD6
SUBANID             2CF2
SUBANIDNEG          2D66
SUBANIDPOS          2D26
SUBDN               2C82
SUBDN2              2C9E
SUBEA               2DA6
SUBEAHEX            2E04
SUBEAHEX1           2EA4
SUBEAHEX2           2EAC
SUBEAHEX3           2EB4
SUBEAHEX4           2EDC
SUBEAHEX5           2EF2
SUBEAID             2E94
SUBEAID2            2E10
SUBERRORTEST1       2C40
SUBERRORTEST11      2C80
SUBJMPA2            2BB0
SUBPRINT            2BB2
SUBPRINTADD         2C02
SUBPRINTADDA        2B14
SUBPRINTAND         2BF2
SUBPRINTB           2C12
SUBPRINTCMP         2C2E
SUBPRINTCMPA        2B04
SUBPRINTEND         2C3E
SUBPRINTEOR         2C1E
SUBPRINTSUB         2BE2
SUBPRINTSUBA        2AF4
SUBSIZE1            2950
SUBSIZE11           2976
SUBSIZE12           298C
SUBSIZE2            2990
SUBSIZE21           29B6
SUBSIZE22           29CC
SUBSIZE3            29D0
SUBSIZE31           29F6
SUBSIZE32           2A0C
SUBSIZE4            2A10
SUBSIZE41           2A36
SUBSIZE42           2A4C
SUBSIZE5            2A50
SUBSIZE51           2A76
SUBSIZE52           2A8C
SUBSIZE6            2A90
SUBSIZE61           2AB6
SUBSIZE62           2ACC
SUBSIZE7            2B3C
SUBSIZE71           2B5E
SUBSIZE72           2B74
SUBSIZE8            2B78
SUBSIZE81           2B98
SUBSIZE82           2BAC
TAB                 3235
