00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/4/2015 2:54:48 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * 
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  *
00000000                            43  * 
00000000                            44  * MOVE      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       1806
00000000                            45  * MOVEA     MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       3846
00000000                            46  * MULS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       CFC6
00000000                            47  * DIVS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       85C3
00000000                            48  * NEG       MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       4443
00000000                            49  * LSL       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E76A
00000000                            50  * LSR       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E66A
00000000                            51  ****************************************************************************
00000000                            52  
00000000                            53  
00000000                            54  * sets start and end address
00000000                            55  * temp hard code
00000000                            56  * make UI later for input
00000000  =00007000                 57  addr1       EQU     $7000
00000000                            58  *addr2   EQU     $703C
00000000  =0000726C                 59  addr2       EQU     $726C
00000000  =0000001E                 60  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            61  
00000000                            62  
00001000                            63      ORG    $1000
00001000                            64  START:                  ; first instruction of program
00001000                            65  
00001000                            66          
00001000                            67  
00001000                            68  
00001000                            69          *   this stores some test EA into memory
00001000                            70          *LEA     addr1,A1
00001000                            71          *MOVE.W  #$0440,(A1)+        *917C
00001000                            72          *MOVE.W  #$917C,(A1)+       
00001000                            73          *MOVE.L  #$5555A7FF,(A1)+
00001000                            74          *MOVE.W  #$9078,(A1)+
00001000                            75          *MOVE.W  #$5555,(A1)+
00001000                            76          
00001000                            77  
00001000                            78          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            79          
00001000                            80          *MOVE.L  #$6700F0D8,$7000
00001000                            81          *MOVE.W  #$4E71,$7000         NOP
00001000                            82  
00001000                            83          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            84  
00001000  21FC 48E3F5FA 7000        85          MOVE.L  #$48E3F5FA,$7000
00001008                            86  
00001008                            87  *********************************************************************************************************************
00001008                            88  * Takes in user start and end address
00001008                            89  
00001008                            90  IOSTART
00001008                            91  *   Displays message asking for address
00001008  43F9 00002B04             92          LEA     MADDR1,A1           Loads message to retrieve first number
0000100E  6100 0020                 93          BSR     IOGETADDR
00001012                            94  
00001012  0804 0000                 95          BTST    #0,D4               Checks of the starting address is an odd number
00001016  6600 0090                 96          BNE     IOERROR4            Throws an error if it is because it will crash
0000101A                            97  
0000101A  2E04                      98          MOVE.L  D4,D7               Moves starting address to D7 for now
0000101C  43F9 00002B27             99          LEA     MADDR2,A1           Then grabs the ending address
00001022  6100 000C                100          BSR     IOGETADDR
00001026  B887                     101          CMP.L   D7,D4               Compares the start address to end address
00001028  6E00 008E                102          BGT     DISPADDR            Continues if start < end
0000102C  6000 004C                103          BRA     IOERROR1            Error if not
00001030                           104  
00001030                           105  IOGETADDR
00001030  2649                     106          MOVEA.L A1,A3               Saves the message incase of an error
00001032  103C 000E                107          MOVE.B  #14,D0              Prepares to display message
00001036  4E4F                     108          TRAP    #15                 Displays message
00001038                           109  
00001038  4244                     110          CLR     D4                  Clears D4 register to prevent errors
0000103A                           111  
0000103A  43F9 00002C60            112          LEA     startaddr,A1        Uses this memory location to store the data
00001040  103C 0002                113          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001044  4E4F                     114          TRAP    #15
00001046                           115  
00001046  B23C 0008                116          CMP.B   #8,D1               Throws an error if the input is longer than a longword
0000104A  6E00 003C                117          BGT     IOERROR2
0000104E  1A01                     118          MOVE.B  D1,D5               Moves the length of the input to D5
00001050                           119  
00001050                           120  IOSTARTLOOP
00001050  45F9 00002C60            121          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
00001056                           122          
00001056                           123  IOLOOP
00001056  141A                     124          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001058  5305                     125          SUB.B   #1,D5               Subtract 1 from counter
0000105A  6100 1840                126          BSR     DEC2HEX             Converts decimal to hex number
0000105E  B23C 000F                127          CMP.B   #$F,D1
00001062  6700 0034                128          BEQ     IOERROR3
00001066                           129  
00001066  1C05                     130          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001068  CDFC 0004                131          MULS    #4,D6               Multiply by 4 to find number of shifts left
0000106C                           132          
0000106C  EDAB                     133          LSL.L   D6,D3               Shifts hex left
0000106E  D883                     134          ADD.L   D3,D4               Adds number to new total
00001070                           135          
00001070  7600                     136          MOVE.L  #0,D3               Clears D3 to prevent errors
00001072                           137          
00001072  BA3C 0000                138          CMP.B   #0,D5               Compares counter to 0    
00001076  66DE                     139          BNE     IOLOOP              Otherwise will loop
00001078  4E75                     140          RTS
0000107A                           141  
0000107A                           142  * Error message for start address greater than end address
0000107A                           143  IOERROR1
0000107A  43F9 00002B6A            144          LEA     MIOERR1,A1
00001080  103C 000D                145          MOVE.B  #13,D0
00001084  4E4F                     146          TRAP    #15
00001086  6080                     147          BRA     IOSTART
00001088                           148  
00001088                           149  * Error message if user input address is longer than longword
00001088                           150  IOERROR2
00001088  43F9 00002BA2            151          LEA     MIOERR2,A1
0000108E  103C 000D                152          MOVE.B  #13,D0
00001092  4E4F                     153          TRAP    #15
00001094  224B                     154          MOVEA.L A3,A1
00001096  6098                     155          BRA     IOGETADDR
00001098                           156  
00001098                           157  * Error message if user enters non-valid hex numbers
00001098                           158  IOERROR3
00001098  43F9 00002BD5            159          LEA     MIOERR3,A1
0000109E  103C 000D                160          MOVE.B  #13,D0
000010A2  4E4F                     161          TRAP    #15
000010A4  224B                     162          MOVEA.L A3,A1
000010A6  6088                     163          BRA     IOGETADDR
000010A8                           164  
000010A8                           165  * Error message for odd numbered addresses
000010A8                           166  IOERROR4
000010A8  43F9 00002BF1            167          LEA     MIOERR4,A1
000010AE  103C 000D                168          MOVE.B  #13,D0
000010B2  4E4F                     169          TRAP    #15
000010B4  6000 FF52                170          BRA     IOSTART
000010B8                           171  
000010B8                           172  ******************************************** displays address location***********************************************
000010B8                           173  * This displays the address location of the op-code being worked on
000010B8                           174  * A6 is used as current address
000010B8                           175  DISPADDR
000010B8  23C7 00002C60            176          MOVE.L  D7,startaddr
000010BE  23C4 00002C64            177          MOVE.L  D4,endaddr
000010C4  6100 1686                178          BSR     CLRDN
000010C8  2C79 00002C60            179          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010CE  13FC 001E 00002C5F       180          MOVE.B  #dispnum,dispcount  Sets display line counter
000010D6                           181  
000010D6  43F9 00002A22            182          LEA     NEWLINE,A1          Creates a new line in output window
000010DC  103C 000E                183          MOVE.B  #14,D0
000010E0  4E4F                     184          TRAP    #15
000010E2                           185  
000010E2                           186  NEWADDR
000010E2  2E0E                     187          MOVE.L  A6,D7               Loads the current address into D7
000010E4  BEB9 00002C64            188          CMP.L   endaddr,D7          Compares current address to end address
000010EA  6E00 18C6                189          BGT     ASK4REPEAT          Branches to done if current address > end address
000010EE  45F9 00001182            190          LEA     DISPADDREND,A2
000010F4                           191  
000010F4                           192  ************************************************
000010F4                           193  * Displays address as HEX
000010F4                           194  * INPUT: address stored into D7
000010F4                           195  * OUTPUT: prints hex address to output window
000010F4                           196  DISPADDRSTART
000010F4  1C3C 0002                197          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F8  2407                     198          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010FA  4842                     199          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010FC  6000 0004                200          BRA     DISPADDR2           Skips the second part to do later
00001100                           201  
00001100                           202  DISPADDR1
00001100  3407                     203          MOVE.W  D7,D2
00001102                           204  DISPADDR2
00001102  3202                     205          MOVE.W  D2,D1               D1 will be the first byte of the word
00001104  3602                     206          MOVE.W  D2,D3               D3 will be the second byte of the word
00001106  3802                     207          MOVE.W  D2,D4               D4 will be the third byte of the word
00001108  3A02                     208          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000110A                           209  
0000110A  E049                     210          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000110C  E849                     211          LSR.W   #4,D1
0000110E  E94B                     212          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001110  E04B                     213          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001112  E84B                     214          LSR.W   #4,D3
00001114  E14C                     215          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001116  E04C                     216          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001118  E84C                     217          LSR.W   #4,D4
0000111A  E14D                     218          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000111C  E94D                     219          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000111E  E04D                     220          LSR.W   #8,D5
00001120  E84D                     221          LSR.W   #4,D5
00001122                           222          
00001122                           223          
00001122  47F9 00001136            224          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001128  B23C 0009                225          CMP.B   #9,D1               Compares digit to 9
0000112C  6E00 16FA                226          BGT     CONV                Print out letter representation if greater than 9
00001130                           227  
00001130  103C 0003                228          MOVE.B  #3,D0               Displays digit if it is less than A
00001134  4E4F                     229          TRAP    #15
00001136                           230          
00001136                           231  DISPADDR3   
00001136  1203                     232          MOVE.B  D3,D1               Displays digit in 1's place second
00001138                           233  
00001138                           234          *   converts digits 10+ into letters
00001138  47F9 0000114C            235          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
0000113E  B23C 0009                236          CMP.B   #9,D1               Compares digit to 9
00001142  6E00 16E4                237          BGT     CONV                Print out letter representation if greater than 9
00001146                           238          
00001146  103C 0003                239          MOVE.B  #3,D0               Displays digit if it is less than A
0000114A  4E4F                     240          TRAP    #15
0000114C                           241  
0000114C                           242  DISPADDR4
0000114C  1204                     243          MOVE.B  D4,D1               Displays digit in 1's place second
0000114E                           244  
0000114E                           245          *   converts digits 10+ into letters
0000114E  47F9 00001162            246          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001154  B23C 0009                247          CMP.B   #9,D1               Compares digit to 9
00001158  6E00 16CE                248          BGT     CONV                Print out letter representation if greater than 9
0000115C                           249          
0000115C  103C 0003                250          MOVE.B  #3,D0               Displays digit if it is less than A
00001160  4E4F                     251          TRAP    #15
00001162                           252  
00001162                           253  DISPADDR5
00001162  1205                     254          MOVE.B  D5,D1               Displays digit in 1's place second
00001164                           255  
00001164                           256          *   converts digits 10+ into letters
00001164  47F9 00001178            257          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000116A  B23C 0009                258          CMP.B   #9,D1               Compares digit to 9
0000116E  6E00 16B8                259          BGT     CONV                Print out letter representation if greater than 9
00001172                           260          
00001172  103C 0003                261          MOVE.B  #3,D0               Displays digit if it is less than A
00001176  4E4F                     262          TRAP    #15
00001178                           263          
00001178                           264  DISPADDR6
00001178                           265  * Display counter -- creates new line every 8 bytes
00001178                           266          * D6 is used as counter
00001178                           267          
00001178  5306                     268          SUB.B   #1,D6
0000117A  BC3C 0000                269          CMP.B   #0,D6
0000117E  6680                     270          BNE     DISPADDR1
00001180                           271  
00001180  4ED2                     272          JMP     (A2)                Jumps to address stored in A2 when complete
00001182                           273  
00001182                           274  DISPADDREND
00001182  43F9 00002A25            275          LEA     TAB,A1
00001188  103C 000E                276          MOVE.B  #14,D0
0000118C  4E4F                     277          TRAP    #15
0000118E                           278          
0000118E                           279  *********************************************************************************************************************
0000118E                           280  * Splits the first byte of the op code into nibbles
0000118E                           281  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000118E                           282  
0000118E  4281                     283          CLR.L   D1                  Clears the data registers
00001190  4282                     284          CLR.L   D2
00001192  4283                     285          CLR.L   D3
00001194  4284                     286          CLR.L   D4
00001196  4285                     287          CLR.L   D5
00001198  4286                     288          CLR.L   D6
0000119A  3C16                     289          MOVE.W  (A6),D6
0000119C  141E                     290          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000119E                           291    
0000119E  1E02                     292          MOVE.B  D2,D7
000011A0  E14F                     293          LSL.W   #8,D7
000011A2                           294          
000011A2  1602                     295          MOVE.B  D2,D3               Copies data at D2 to D3
000011A4                           296          *   this gets digit in 10's place
000011A4  E80B                     297          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011A6                           298          *   this gets digit in 1's place
000011A6  E90A                     299          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A8  E80A                     300          LSR.B   #4,D2               Shifts back right into 1's place
000011AA                           301          
000011AA                           302          *   D3 holds digit in 10's place
000011AA                           303          *   D2 holds digit in 1's place
000011AA                           304  
000011AA                           305          *   Moves second nibble to D5 to be used later
000011AA  1A02                     306          MOVE.B  D2,D5
000011AC  13C3 00002C68            307          MOVE.B  D3,bit0
000011B2                           308          *   Goes to a branch-table to figure out which op code it is
000011B2  6000 0002                309          BRA     CODE
000011B6                           310  
000011B6                           311  ******************************************************************************************************
000011B6                           312  *   This is where the table goes to detirmine which op-code to use
000011B6                           313  CODE    
000011B6  B63C 0000                314          CMP.B   #$0,D3              Goes to immediate operation section
000011BA  6700 0C56                315          BEQ     IMD
000011BE  B63C 0004                316          CMP.B   #$4,D3              Goes to miscellaneous section
000011C2  6700 0D74                317          BEQ     MISC
000011C6  B63C 0006                318          CMP.B   #$6,D3
000011CA  6700 0B92                319          BEQ     BCC
000011CE  B63C 0009                320          CMP.B   #$9,D3              Goes to sub section
000011D2  6700 0E9E                321          BEQ     SUB
000011D6  B63C 000C                322          CMP.B   #$C,D3              Goes to sub but displays as AND
000011DA  6700 0E96                323          BEQ     SUB
000011DE  B63C 000D                324          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011E2  6700 0E8E                325          BEQ     SUB
000011E6  B63C 000B                326          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011EA  6700 0E86                327          BEQ     SUB
000011EE  B63C 0001                328          CMP.B   #$1,D3
000011F2  6700 01E6                329          BEQ     MOVB                Goes to movb
000011F6  B63C 0003                330          CMP.B   #$3,D3
000011FA  6700 001E                331          BEQ     MOVW                Goes to movb
000011FE  B63C 0002                332          CMP.B   #$2,D3
00001202  6700 00F6                333          BEQ     MOVL                Goes to movb
00001206  B63C 0008                334          CMP.B   #$8,D3
0000120A  6700 079E                335          BEQ     DIVSW               Goes to divsw
0000120E  B63C 000E                336          CMP.B   #$E,D3
00001212  6700 097A                337          BEQ     LSLR                Goes to divsw
00001216                           338  
00001216  6000 1546                339          BRA     INVOPCODE
0000121A                           340  
0000121A                           341  MOVW
0000121A  E20A                     342          LSR.B   #1,D2
0000121C  13C2 00002C69            343          MOVE.B  D2,bit1
00001222                           344          
00001222  1416                     345          MOVE.B  (A6),D2
00001224  EB0A                     346          LSL.B   #5,D2
00001226  EA0A                     347          LSR.B   #5,D2
00001228  13C2 00002C6C            348          MOVE.B  D2,bit4
0000122E                           349          
0000122E  141E                     350          MOVE.B  (A6)+,D2
00001230  E50A                     351          LSL.B   #2,D2
00001232  EA0A                     352          LSR.B   #5,D2
00001234  13C2 00002C6B            353          MOVE.B  D2,bit3
0000123A                           354          
0000123A  EF4E                     355          LSL.W   #7,D6
0000123C  E04E                     356          LSR.W   #8,D6 
0000123E  EA4E                     357          LSR.W   #5,D6 
00001240  13C6 00002C6A            358          MOVE.B  D6,bit2
00001246                           359  
00001246  0C39 0001 00002C6A       360          CMP.B   #$1,bit2
0000124E  6700 0056                361          BEQ     MOVEAW
00001252                           362  
00001252  43F9 00002A74            363          LEA MMOVEW,A1
00001258  103C 000E                364          MOVE.B  #14,D0
0000125C  4E4F                     365          TRAP    #15 
0000125E                           366  
0000125E  0C39 0000 00002C6B       367          CMP.B   #$0,bit3           
00001266  6700 04F0                368          BEQ     MOVBDN1
0000126A  0C39 0001 00002C6B       369          CMP.B   #$1,bit3
00001272  6700 029C                370          BEQ     MOVEAN1
00001276  0C39 0002 00002C6B       371          CMP.B   #$2,bit3
0000127E  6700 0304                372          BEQ     MOVEIAN1
00001282  0C39 0003 00002C6B       373          CMP.B   #$3,bit3
0000128A  6700 038C                374          BEQ     MOVEIANI1
0000128E  0C39 0004 00002C6B       375          CMP.B   #$4,bit3
00001296  6700 0420                376          BEQ     MOVEIAND1
0000129A  0C39 0007 00002C6B       377          CMP.B   #$7,bit3
000012A2  6700 01BA                378          BEQ     ADDIMD
000012A6                           379  
000012A6                           380  MOVEAW
000012A6  43F9 00002A82            381          LEA MMOVEAW,A1
000012AC  103C 000E                382          MOVE.B  #14,D0
000012B0  4E4F                     383          TRAP    #15 
000012B2                           384          
000012B2  0C39 0000 00002C6B       385          CMP.B   #$0,bit3           
000012BA  6700 049C                386          BEQ     MOVBDN1
000012BE  0C39 0001 00002C6B       387          CMP.B   #$1,bit3
000012C6  6700 0248                388          BEQ     MOVEAN1
000012CA  0C39 0002 00002C6B       389          CMP.B   #$2,bit3
000012D2  6700 02B0                390          BEQ     MOVEIAN1
000012D6  0C39 0003 00002C6B       391          CMP.B   #$3,bit3
000012DE  6700 0338                392          BEQ     MOVEIANI1
000012E2  0C39 0004 00002C6B       393          CMP.B   #$4,bit3
000012EA  6700 03CC                394          BEQ     MOVEIAND1
000012EE  0C39 0007 00002C6B       395          CMP.B   #$7,bit3
000012F6  6700 0166                396          BEQ     ADDIMD
000012FA                           397  
000012FA                           398  MOVL
000012FA  E20A                     399          LSR.B   #1,D2
000012FC  13C2 00002C69            400          MOVE.B  D2,bit1
00001302                           401          
00001302  1416                     402          MOVE.B  (A6),D2
00001304  EB0A                     403          LSL.B   #5,D2
00001306  EA0A                     404          LSR.B   #5,D2
00001308  13C2 00002C6C            405          MOVE.B  D2,bit4
0000130E                           406          
0000130E  141E                     407          MOVE.B  (A6)+,D2
00001310  E50A                     408          LSL.B   #2,D2
00001312  EA0A                     409          LSR.B   #5,D2
00001314  13C2 00002C6B            410          MOVE.B  D2,bit3
0000131A                           411          
0000131A  EF4E                     412          LSL.W   #7,D6
0000131C  E04E                     413          LSR.W   #8,D6 
0000131E  EA4E                     414          LSR.W   #5,D6 
00001320  13C6 00002C6A            415          MOVE.B  D6,bit2
00001326                           416          
00001326  0C39 0001 00002C6A       417          CMP.B   #$1,bit2
0000132E  6700 0056                418          BEQ     MOVEAL
00001332                           419  
00001332  43F9 00002A7B            420          LEA MMOVEL,A1
00001338  103C 000E                421          MOVE.B  #14,D0
0000133C  4E4F                     422          TRAP    #15 
0000133E                           423          
0000133E  0C39 0000 00002C6B       424          CMP.B   #$0,bit3           
00001346  6700 0410                425          BEQ     MOVBDN1
0000134A  0C39 0001 00002C6B       426          CMP.B   #$1,bit3
00001352  6700 01BC                427          BEQ     MOVEAN1
00001356  0C39 0002 00002C6B       428          CMP.B   #$2,bit3
0000135E  6700 0224                429          BEQ     MOVEIAN1
00001362  0C39 0003 00002C6B       430          CMP.B   #$3,bit3
0000136A  6700 02AC                431          BEQ     MOVEIANI1
0000136E  0C39 0004 00002C6B       432          CMP.B   #$4,bit3
00001376  6700 0340                433          BEQ     MOVEIAND1
0000137A  0C39 0007 00002C6B       434          CMP.B   #$7,bit3
00001382  6700 00DA                435          BEQ     ADDIMD
00001386                           436  
00001386                           437  MOVEAL
00001386  43F9 00002A8A            438          LEA MMOVEAL,A1
0000138C  103C 000E                439          MOVE.B  #14,D0
00001390  4E4F                     440          TRAP    #15 
00001392                           441          
00001392  0C39 0000 00002C6B       442          CMP.B   #$0,bit3           
0000139A  6700 03BC                443          BEQ     MOVBDN1
0000139E  0C39 0001 00002C6B       444          CMP.B   #$1,bit3
000013A6  6700 0168                445          BEQ     MOVEAN1
000013AA  0C39 0002 00002C6B       446          CMP.B   #$2,bit3
000013B2  6700 01D0                447          BEQ     MOVEIAN1
000013B6  0C39 0003 00002C6B       448          CMP.B   #$3,bit3
000013BE  6700 0258                449          BEQ     MOVEIANI1
000013C2  0C39 0004 00002C6B       450          CMP.B   #$4,bit3
000013CA  6700 02EC                451          BEQ     MOVEIAND1
000013CE  0C39 0007 00002C6B       452          CMP.B   #$7,bit3
000013D6  6700 0086                453          BEQ     ADDIMD        
000013DA                           454  
000013DA                           455  MOVB
000013DA  43F9 00002A6D            456          LEA MMOVEB,A1
000013E0  103C 000E                457          MOVE.B  #14,D0
000013E4  4E4F                     458          TRAP    #15 
000013E6                           459          
000013E6  E20A                     460          LSR.B   #1,D2
000013E8  13C2 00002C69            461          MOVE.B  D2,bit1
000013EE                           462          
000013EE  1416                     463          MOVE.B  (A6),D2
000013F0  EB0A                     464          LSL.B   #5,D2
000013F2  EA0A                     465          LSR.B   #5,D2
000013F4  13C2 00002C6C            466          MOVE.B  D2,bit4
000013FA                           467          
000013FA  141E                     468          MOVE.B  (A6)+,D2
000013FC  E50A                     469          LSL.B   #2,D2
000013FE  EA0A                     470          LSR.B   #5,D2
00001400  13C2 00002C6B            471          MOVE.B  D2,bit3
00001406                           472          
00001406  EF4E                     473          LSL.W   #7,D6
00001408  E04E                     474          LSR.W   #8,D6 
0000140A  EA4E                     475          LSR.W   #5,D6 
0000140C  13C6 00002C6A            476          MOVE.B  D6,bit2
00001412                           477          
00001412                           478          *MOVE.B  #$1,D4
00001412                           479          
00001412  0C39 0000 00002C6B       480          CMP.B   #$0,bit3           
0000141A  6700 033C                481          BEQ     MOVBDN1
0000141E  0C39 0001 00002C6B       482          CMP.B   #$1,bit3
00001426  6700 00E8                483          BEQ     MOVEAN1
0000142A  0C39 0002 00002C6B       484          CMP.B   #$2,bit3
00001432  6700 0150                485          BEQ     MOVEIAN1
00001436  0C39 0003 00002C6B       486          CMP.B   #$3,bit3
0000143E  6700 01D8                487          BEQ     MOVEIANI1
00001442  0C39 0004 00002C6B       488          CMP.B   #$4,bit3
0000144A  6700 026C                489          BEQ     MOVEIAND1
0000144E  0C39 0007 00002C6B       490          CMP.B   #$7,bit3
00001456  6700 0006                491          BEQ     ADDIMD
0000145A                           492          
0000145A  6000 1304                493          BRA     INVOP
0000145E                           494  
0000145E                           495  ADDIMD
0000145E  43F9 00002A25            496      LEA     TAB,A1
00001464  103C 000E                497      MOVE.B  #14,D0
00001468  4E4F                     498      TRAP    #15
0000146A                           499      
0000146A  0C39 0000 00002C6C       500      CMP.B   #$0,bit4
00001472  6700 001A                501      BEQ     ADDIMD0
00001476  0C39 0001 00002C6C       502      CMP.B   #$1,bit4
0000147E  6700 001C                503      BEQ     ADDIMD1
00001482  0C39 0004 00002C6C       504      CMP.B   #$4,bit4
0000148A  6700 001E                505      BEQ     ADDIMD4
0000148E                           506  
0000148E                           507  ADDIMD0
0000148E  183C 0001                508      MOVE.B  #$1,D4
00001492  45F9 000014C0            509      LEA     HANDLEDES,A2
00001498  6000 124C                510      BRA     DISPEA
0000149C                           511  ADDIMD1 
0000149C  183C 0002                512      MOVE.B  #$2,D4
000014A0  45F9 000014C0            513      LEA     HANDLEDES,A2
000014A6  6000 123E                514      BRA     DISPEA
000014AA                           515  ADDIMD4
000014AA  43F9 00002A33            516      LEA     HASH,A1
000014B0  103C 000E                517      MOVE.B  #14,D0
000014B4  4E4F                     518      TRAP    #15
000014B6                           519      
000014B6  45F9 000014C0            520      LEA     HANDLEDES,A2
000014BC  6000 1228                521      BRA     DISPEA 
000014C0                           522      
000014C0                           523  HANDLEDES
000014C0  43F9 00002A29            524      LEA     COMMA,A1
000014C6  103C 000E                525      MOVE.B  #14,D0
000014CA  4E4F                     526      TRAP    #15
000014CC                           527      
000014CC  0C39 0000 00002C6A       528      CMP.B   #$0,bit2
000014D4  6700 0422                529      BEQ     MOVBDN2
000014D8  0C39 0001 00002C6A       530      CMP.B   #$1,bit2
000014E0  6700 0346                531      BEQ     MOVEAN2
000014E4  0C39 0002 00002C6A       532      CMP.B   #$2,bit2 
000014EC  6700 0356                533      BEQ     MOVIAN2
000014F0  0C39 0003 00002C6A       534      CMP.B   #$3,bit2 
000014F8  6700 037E                535      BEQ     MOVIANI2
000014FC  0C39 0004 00002C6A       536      CMP.B   #$4,bit2 
00001504  6700 03B2                537      BEQ     MOVIAND2
00001508  BA3C 0005                538      CMP.B   #$5,D5
0000150C  6700 03EA                539      BEQ     MOVBDN2
00001510                           540  MOVEAN1
00001510  43F9 00002A25            541      LEA TAB,A1
00001516  103C 000E                542      MOVE.B  #14,D0
0000151A  4E4F                     543      TRAP    #15
0000151C                           544  
0000151C  43F9 00002A35            545      LEA DISPA,A1
00001522  103C 000E                546      MOVE.B  #14,D0
00001526  4E4F                     547      TRAP    #15
00001528                           548      
00001528  1239 00002C6C            549      MOVE.B  bit4,D1
0000152E  103C 0003                550      MOVE.B  #3,D0
00001532  4E4F                     551      TRAP    #15
00001534                           552      
00001534  43F9 00002A29            553      LEA COMMA,A1
0000153A  103C 000E                554      MOVE.B  #14,D0
0000153E  4E4F                     555      TRAP    #15
00001540                           556      
00001540  0C39 0000 00002C6A       557      CMP.B   #$0,bit2
00001548  6700 03AE                558      BEQ     MOVBDN2
0000154C  0C39 0001 00002C6A       559      CMP.B   #$1,bit2
00001554  6700 02D2                560      BEQ     MOVEAN2
00001558  0C39 0002 00002C6A       561      CMP.B   #$2,bit2 
00001560  6700 02E2                562      BEQ     MOVIAN2
00001564  0C39 0003 00002C6A       563      CMP.B   #$3,bit2 
0000156C  6700 030A                564      BEQ     MOVIANI2
00001570  0C39 0004 00002C6A       565      CMP.B   #$4,bit2 
00001578  6700 033E                566      BEQ     MOVIAND2
0000157C  BA3C 0005                567      CMP.B   #$5,D5
00001580  6700 0376                568      BEQ     MOVBDN2
00001584                           569      
00001584                           570  MOVEIAN1
00001584  43F9 00002A25            571      LEA TAB,A1
0000158A  103C 000E                572      MOVE.B  #14,D0
0000158E  4E4F                     573      TRAP    #15
00001590                           574      
00001590  43F9 00002A2B            575      LEA OPENBRA,A1
00001596  103C 000E                576      MOVE.B  #14,D0
0000159A  4E4F                     577      TRAP    #15
0000159C                           578  
0000159C  43F9 00002A35            579      LEA DISPA,A1
000015A2  103C 000E                580      MOVE.B  #14,D0
000015A6  4E4F                     581      TRAP    #15
000015A8                           582      
000015A8  1239 00002C6C            583      MOVE.B  bit4,D1
000015AE  103C 0003                584      MOVE.B  #3,D0
000015B2  4E4F                     585      TRAP    #15
000015B4                           586      
000015B4  43F9 00002A2D            587      LEA CLOSEBRA,A1
000015BA  103C 000E                588      MOVE.B  #14,D0
000015BE  4E4F                     589      TRAP    #15
000015C0                           590      
000015C0  B83C 0003                591      CMP.B   #$3,D4
000015C4  6700 120C                592      BEQ     ENDNEWLINE
000015C8                           593      
000015C8  43F9 00002A29            594      LEA COMMA,A1
000015CE  103C 000E                595      MOVE.B  #14,D0
000015D2  4E4F                     596      TRAP    #15
000015D4                           597      
000015D4  0C39 0000 00002C6A       598      CMP.B   #$0,bit2
000015DC  6700 031A                599      BEQ     MOVBDN2
000015E0  0C39 0001 00002C6A       600      CMP.B   #$1,bit2
000015E8  6700 023E                601      BEQ     MOVEAN2
000015EC  0C39 0002 00002C6A       602      CMP.B   #$2,bit2 
000015F4  6700 024E                603      BEQ     MOVIAN2
000015F8  0C39 0003 00002C6A       604      CMP.B   #$3,bit2 
00001600  6700 0276                605      BEQ     MOVIANI2
00001604  0C39 0004 00002C6A       606      CMP.B   #$4,bit2 
0000160C  6700 02AA                607      BEQ     MOVIAND2
00001610  BA3C 0005                608      CMP.B   #$5,D5
00001614  6700 02E2                609      BEQ     MOVBDN2
00001618                           610  
00001618                           611  MOVEIANI1
00001618  43F9 00002A25            612      LEA TAB,A1
0000161E  103C 000E                613      MOVE.B  #14,D0
00001622  4E4F                     614      TRAP    #15
00001624                           615      
00001624  43F9 00002A2B            616      LEA OPENBRA,A1
0000162A  103C 000E                617      MOVE.B  #14,D0
0000162E  4E4F                     618      TRAP    #15
00001630                           619  
00001630  43F9 00002A35            620      LEA DISPA,A1
00001636  103C 000E                621      MOVE.B  #14,D0
0000163A  4E4F                     622      TRAP    #15
0000163C                           623      
0000163C  1239 00002C6C            624      MOVE.B  bit4,D1
00001642  103C 0003                625      MOVE.B  #3,D0
00001646  4E4F                     626      TRAP    #15
00001648                           627      
00001648  43F9 00002A2D            628      LEA CLOSEBRA,A1
0000164E  103C 000E                629      MOVE.B  #14,D0
00001652  4E4F                     630      TRAP    #15
00001654                           631      
00001654  43F9 00002A2F            632      LEA POS,A1
0000165A  103C 000E                633      MOVE.B  #14,D0
0000165E  4E4F                     634      TRAP    #15
00001660                           635      
00001660  BA3C 0003                636      CMP.B   #$3,D5
00001664  6700 116C                637      BEQ     ENDNEWLINE
00001668                           638          
00001668  43F9 00002A29            639      LEA COMMA,A1
0000166E  103C 000E                640      MOVE.B  #14,D0
00001672  4E4F                     641      TRAP    #15
00001674                           642      
00001674  0C39 0000 00002C6A       643      CMP.B   #$0,bit2
0000167C  6700 027A                644      BEQ     MOVBDN2
00001680  0C39 0001 00002C6A       645      CMP.B   #$1,bit2
00001688  6700 019E                646      BEQ     MOVEAN2
0000168C  0C39 0002 00002C6A       647      CMP.B   #$2,bit2 
00001694  6700 01AE                648      BEQ     MOVIAN2
00001698  0C39 0003 00002C6A       649      CMP.B   #$3,bit2 
000016A0  6700 01D6                650      BEQ     MOVIANI2
000016A4  0C39 0004 00002C6A       651      CMP.B   #$4,bit2 
000016AC  6700 020A                652      BEQ     MOVIAND2
000016B0  BA3C 0005                653      CMP.B   #$5,D5
000016B4  6700 0242                654      BEQ     MOVBDN2
000016B8                           655  
000016B8                           656  MOVEIAND1
000016B8  43F9 00002A25            657      LEA TAB,A1
000016BE  103C 000E                658      MOVE.B  #14,D0
000016C2  4E4F                     659      TRAP    #15
000016C4                           660      
000016C4  43F9 00002A31            661      LEA NEG,A1
000016CA  103C 000E                662      MOVE.B  #14,D0
000016CE  4E4F                     663      TRAP    #15
000016D0                           664      
000016D0  43F9 00002A2B            665      LEA OPENBRA,A1
000016D6  103C 000E                666      MOVE.B  #14,D0
000016DA  4E4F                     667      TRAP    #15
000016DC                           668  
000016DC  43F9 00002A35            669      LEA DISPA,A1
000016E2  103C 000E                670      MOVE.B  #14,D0
000016E6  4E4F                     671      TRAP    #15
000016E8                           672      
000016E8  1239 00002C6C            673      MOVE.B  bit4,D1
000016EE  103C 0003                674      MOVE.B  #3,D0
000016F2  4E4F                     675      TRAP    #15
000016F4                           676      
000016F4  43F9 00002A2D            677      LEA CLOSEBRA,A1
000016FA  103C 000E                678      MOVE.B  #14,D0
000016FE  4E4F                     679      TRAP    #15
00001700                           680      
00001700  BA3C 0004                681      CMP.B   #$4,D5
00001704  6700 10CC                682      BEQ     ENDNEWLINE
00001708                           683      
00001708  43F9 00002A29            684      LEA COMMA,A1
0000170E  103C 000E                685      MOVE.B  #14,D0
00001712  4E4F                     686      TRAP    #15
00001714                           687      
00001714  0C39 0000 00002C6A       688      CMP.B   #$0,bit2
0000171C  6700 01DA                689      BEQ     MOVBDN2
00001720  0C39 0001 00002C6A       690      CMP.B   #$1,bit2
00001728  6700 00FE                691      BEQ     MOVEAN2
0000172C  0C39 0002 00002C6A       692      CMP.B   #$2,bit2 
00001734  6700 010E                693      BEQ     MOVIAN2
00001738  0C39 0003 00002C6A       694      CMP.B   #$3,bit2 
00001740  6700 0136                695      BEQ     MOVIANI2
00001744  0C39 0004 00002C6A       696      CMP.B   #$4,bit2 
0000174C  6700 016A                697      BEQ     MOVIAND2
00001750  BA3C 0005                698      CMP.B   #$5,D5
00001754  6700 01A2                699      BEQ     MOVBDN2
00001758                           700  
00001758                           701  MOVBDN1
00001758  43F9 00002A25            702      LEA TAB,A1
0000175E  103C 000E                703      MOVE.B  #14,D0
00001762  4E4F                     704      TRAP    #15
00001764                           705  
00001764  BA3C 0006                706      CMP.B   #$6,D5             * Data Reg for LSLR
00001768  6700 007A                707      BEQ     LSLRSRCD
0000176C                           708  
0000176C  43F9 00002A3B            709      LEA DISPD,A1
00001772  103C 000E                710      MOVE.B  #14,D0
00001776  4E4F                     711      TRAP    #15
00001778                           712      
00001778  1239 00002C6C            713      MOVE.B  bit4,D1
0000177E  103C 0003                714      MOVE.B  #3,D0
00001782  4E4F                     715      TRAP    #15
00001784                           716  
00001784  BA3C 0004                717      CMP.B   #$4,D5
00001788  6700 0192                718      BEQ     ENDNLINC
0000178C                           719  
0000178C  43F9 00002A29            720      LEA COMMA,A1
00001792  103C 000E                721      MOVE.B  #14,D0
00001796  4E4F                     722      TRAP    #15
00001798                           723  
00001798  BA3C 0006                724      CMP.B   #$6,D5             * Data Reg for LSLR
0000179C  6700 006E                725      BEQ     LSLRDESD
000017A0  0C39 0000 00002C6A       726      CMP.B   #$0,bit2
000017A8  6700 014E                727      BEQ     MOVBDN2
000017AC  0C39 0001 00002C6A       728      CMP.B   #$1,bit2
000017B4  6700 0072                729      BEQ     MOVEAN2
000017B8  0C39 0002 00002C6A       730      CMP.B   #$2,bit2 
000017C0  6700 0082                731      BEQ     MOVIAN2
000017C4  0C39 0003 00002C6A       732      CMP.B   #$3,bit2 
000017CC  6700 00AA                733      BEQ     MOVIANI2
000017D0  0C39 0004 00002C6A       734      CMP.B   #$4,bit2 
000017D8  6700 00DE                735      BEQ     MOVIAND2
000017DC  BA3C 0005                736      CMP.B   #$5,D5
000017E0  6700 0116                737      BEQ     MOVBDN2
000017E4                           738      
000017E4                           739  LSLRSRCD
000017E4  43F9 00002A3B            740      LEA DISPD,A1
000017EA  103C 000E                741      MOVE.B  #14,D0
000017EE  4E4F                     742      TRAP    #15
000017F0                           743          
000017F0  1239 00002C68            744      MOVE.B  bit0,D1
000017F6  103C 0003                745      MOVE.B  #3,D0
000017FA  4E4F                     746      TRAP    #15    
000017FC                           747  
000017FC  43F9 00002A29            748      LEA COMMA,A1
00001802  103C 000E                749      MOVE.B  #14,D0
00001806  4E4F                     750      TRAP    #15  
00001808                           751      
00001808  6000 0002                752      BRA     LSLRDESD
0000180C                           753      
0000180C                           754  LSLRDESD
0000180C  43F9 00002A3B            755      LEA DISPD,A1
00001812  103C 000E                756      MOVE.B  #14,D0
00001816  4E4F                     757      TRAP    #15
00001818                           758          
00001818  1239 00002C6C            759      MOVE.B  bit4,D1
0000181E  103C 0003                760      MOVE.B  #3,D0
00001822  4E4F                     761      TRAP    #15      
00001824                           762      
00001824                           763      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001824  6000 0FAC                764      BRA     ENDNEWLINE       
00001828                           765  
00001828                           766  MOVEAN2
00001828  43F9 00002A35            767      LEA DISPA,A1
0000182E  103C 000E                768      MOVE.B  #14,D0
00001832  4E4F                     769      TRAP    #15
00001834                           770      
00001834  1239 00002C69            771      MOVE.B  bit1,D1
0000183A  103C 0003                772      MOVE.B  #3,D0
0000183E  4E4F                     773      TRAP    #15
00001840                           774  
00001840                           775      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001840  6000 0F90                776      BRA     ENDNEWLINE    
00001844                           777  
00001844                           778  MOVIAN2
00001844  43F9 00002A2B            779      LEA OPENBRA,A1
0000184A  103C 000E                780      MOVE.B  #14,D0
0000184E  4E4F                     781      TRAP    #15
00001850                           782  
00001850  43F9 00002A35            783      LEA DISPA,A1
00001856  103C 000E                784      MOVE.B  #14,D0
0000185A  4E4F                     785      TRAP    #15
0000185C                           786      
0000185C  1239 00002C69            787      MOVE.B  bit1,D1
00001862  103C 0003                788      MOVE.B  #3,D0
00001866  4E4F                     789      TRAP    #15
00001868                           790      
00001868  43F9 00002A2D            791      LEA CLOSEBRA,A1
0000186E  103C 000E                792      MOVE.B  #14,D0
00001872  4E4F                     793      TRAP    #15
00001874                           794      
00001874                           795      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001874  6000 0F5C                796      BRA     ENDNEWLINE
00001878                           797  
00001878                           798  MOVIANI2
00001878  43F9 00002A2B            799      LEA OPENBRA,A1
0000187E  103C 000E                800      MOVE.B  #14,D0
00001882  4E4F                     801      TRAP    #15
00001884                           802  
00001884  43F9 00002A35            803      LEA DISPA,A1
0000188A  103C 000E                804      MOVE.B  #14,D0
0000188E  4E4F                     805      TRAP    #15
00001890                           806      
00001890  1239 00002C69            807      MOVE.B  bit1,D1
00001896  103C 0003                808      MOVE.B  #3,D0
0000189A  4E4F                     809      TRAP    #15
0000189C                           810      
0000189C  43F9 00002A2D            811      LEA CLOSEBRA,A1
000018A2  103C 000E                812      MOVE.B  #14,D0
000018A6  4E4F                     813      TRAP    #15
000018A8                           814      
000018A8  43F9 00002A2F            815      LEA POS,A1
000018AE  103C 000E                816      MOVE.B  #14,D0
000018B2  4E4F                     817      TRAP    #15
000018B4                           818      
000018B4                           819      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000018B4  6000 0F1C                820      BRA     ENDNEWLINE
000018B8                           821  
000018B8                           822  MOVIAND2
000018B8  43F9 00002A31            823      LEA NEG,A1
000018BE  103C 000E                824      MOVE.B  #14,D0
000018C2  4E4F                     825      TRAP    #15
000018C4                           826      
000018C4  43F9 00002A2B            827      LEA OPENBRA,A1
000018CA  103C 000E                828      MOVE.B  #14,D0
000018CE  4E4F                     829      TRAP    #15
000018D0                           830  
000018D0  43F9 00002A35            831      LEA DISPA,A1
000018D6  103C 000E                832      MOVE.B  #14,D0
000018DA  4E4F                     833      TRAP    #15
000018DC                           834      
000018DC  1239 00002C69            835      MOVE.B  bit1,D1
000018E2  103C 0003                836      MOVE.B  #3,D0
000018E6  4E4F                     837      TRAP    #15
000018E8                           838      
000018E8  43F9 00002A2D            839      LEA CLOSEBRA,A1
000018EE  103C 000E                840      MOVE.B  #14,D0
000018F2  4E4F                     841      TRAP    #15
000018F4                           842  
000018F4                           843      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000018F4  6000 0EDC                844      BRA     ENDNEWLINE
000018F8                           845  
000018F8                           846  MOVBDN2
000018F8  43F9 00002A3B            847      LEA DISPD,A1
000018FE  103C 000E                848      MOVE.B  #14,D0
00001902  4E4F                     849      TRAP    #15
00001904                           850          
00001904  1239 00002C69            851      MOVE.B  bit1,D1
0000190A  103C 0003                852      MOVE.B  #3,D0
0000190E  4E4F                     853      TRAP    #15   
00001910                           854      
00001910  B83C 0000                855      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001914  6700 0EBC                856      BEQ     ENDNEWLINE
00001918                           857      
00001918                           858      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001918  6000 0EB8                859      BRA     ENDNEWLINE
0000191C                           860      
0000191C                           861      
0000191C                           862  ENDNLINC
0000191C                           863      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000191C  6000 0EB4                864      BRA     ENDNEWLINE    
00001920                           865      
00001920                           866  MULSW
00001920  1407                     867          MOVE.B  D7,D2
00001922  EB0A                     868          LSL.B   #5,D2
00001924  EA0A                     869          LSR.B   #5,D2
00001926  13C2 00002C6C            870          MOVE.B  D2,bit4
0000192C                           871          
0000192C  1407                     872          MOVE.B  D7,D2
0000192E  E50A                     873          LSL.B   #2,D2
00001930  EA0A                     874          LSR.B   #5,D2
00001932  13C2 00002C6B            875          MOVE.B  D2,bit3
00001938                           876          
00001938  3C07                     877          MOVE.W  D7,D6
0000193A  EF4E                     878          LSL.W   #7,D6
0000193C  E04E                     879          LSR.W   #8,D6 
0000193E  EA4E                     880          LSR.W   #5,D6 
00001940  13C6 00002C6A            881          MOVE.B  D6,bit2
00001946                           882          
00001946  E94F                     883          LSL.W   #4,D7
00001948  E04F                     884          LSR.W   #8,D7 
0000194A  EA4F                     885          LSR.W   #5,D7 
0000194C  13C7 00002C69            886          MOVE.B  D7,bit1
00001952                           887          
00001952  43F9 00002A66            888          LEA MMULSW,A1
00001958  323C 000E                889          MOVE    #14,D1
0000195C  4E4F                     890          TRAP    #15
0000195E                           891          
0000195E  1A3C 0005                892          MOVE.B  #$5,D5 
00001962                           893          
00001962  0C39 0000 00002C6B       894          CMP.B   #$0,bit3           
0000196A  6700 FDEC                895          BEQ     MOVBDN1
0000196E  0C39 0001 00002C6B       896          CMP.B   #$1,bit3
00001976  6700 FB98                897          BEQ     MOVEAN1
0000197A  0C39 0002 00002C6B       898          CMP.B   #$2,bit3
00001982  6700 FC00                899          BEQ     MOVEIAN1
00001986  0C39 0003 00002C6B       900          CMP.B   #$3,bit3
0000198E  6700 FC88                901          BEQ     MOVEIANI1
00001992  0C39 0004 00002C6B       902          CMP.B   #$4,bit3
0000199A  6700 FD1C                903          BEQ     MOVEIAND1
0000199E  0C39 0007 00002C6B       904          CMP.B   #$7,bit3
000019A6  6700 FAB6                905          BEQ     ADDIMD
000019AA                           906  
000019AA                           907           
000019AA                           908  DIVSW               
000019AA                           909          *MOVE.B  D6,D2
000019AA  141E                     910          MOVE.B  (A6)+,D2
000019AC  EB0A                     911          LSL.B   #5,D2
000019AE  EA0A                     912          LSR.B   #5,D2
000019B0  13C2 00002C6C            913          MOVE.B  D2,bit4
000019B6                           914          
000019B6  1406                     915          MOVE.B  D6,D2
000019B8  E50A                     916          LSL.B   #2,D2
000019BA  EA0A                     917          LSR.B   #5,D2
000019BC  13C2 00002C6B            918          MOVE.B  D2,bit3
000019C2                           919          
000019C2  3E06                     920          MOVE.W  D6,D7
000019C4  EF4F                     921          LSL.W   #7,D7
000019C6  E04F                     922          LSR.W   #8,D7 
000019C8  EA4F                     923          LSR.W   #5,D7 
000019CA  13C7 00002C6A            924          MOVE.B  D7,bit2
000019D0                           925          
000019D0  E94E                     926          LSL.W   #4,D6
000019D2  E04E                     927          LSR.W   #8,D6 
000019D4  EA4E                     928          LSR.W   #5,D6 
000019D6  13C6 00002C69            929          MOVE.B  D6,bit1
000019DC                           930          
000019DC  43F9 00002A5F            931          LEA MMDIVSW,A1
000019E2  323C 000E                932          MOVE    #14,D1
000019E6  4E4F                     933          TRAP    #15
000019E8                           934          
000019E8  1A3C 0005                935          MOVE.B  #$5,D5 
000019EC  183C 0004                936          MOVE.B  #$4,D4
000019F0                           937          
000019F0  0C39 0000 00002C6B       938          CMP.B   #$0,bit3           
000019F8  6700 FD5E                939          BEQ     MOVBDN1
000019FC  0C39 0001 00002C6B       940          CMP.B   #$1,bit3
00001A04  6700 FB0A                941          BEQ     MOVEAN1
00001A08  0C39 0002 00002C6B       942          CMP.B   #$2,bit3
00001A10  6700 FB72                943          BEQ     MOVEIAN1
00001A14  0C39 0003 00002C6B       944          CMP.B   #$3,bit3
00001A1C  6700 FBFA                945          BEQ     MOVEIANI1
00001A20  0C39 0004 00002C6B       946          CMP.B   #$4,bit3
00001A28  6700 FC8E                947          BEQ     MOVEIAND1
00001A2C  0C39 0007 00002C6B       948          CMP.B   #$7,bit3
00001A34  6700 FA28                949          BEQ     ADDIMD
00001A38                           950  
00001A38                           951  NEGW
00001A38  1406                     952          MOVE.B  D6,D2
00001A3A  EB0A                     953          LSL.B   #5,D2
00001A3C  EA0A                     954          LSR.B   #5,D2
00001A3E  13C2 00002C6C            955          MOVE.B  D2,bit4
00001A44                           956          
00001A44  1406                     957          MOVE.B  D6,D2
00001A46  E50A                     958          LSL.B   #2,D2
00001A48  EA0A                     959          LSR.B   #5,D2
00001A4A  13C2 00002C6B            960          MOVE.B  D2,bit3
00001A50                           961          
00001A50  3E06                     962          MOVE.W  D6,D7
00001A52  E14F                     963          LSL.W   #8,D7
00001A54  E04F                     964          LSR.W   #8,D7 
00001A56  EC4F                     965          LSR.W   #6,D7 
00001A58  13C7 00002C6A            966          MOVE.B  D7,bit2
00001A5E                           967          
00001A5E  43F9 00002A5A            968          LEA MMNEGW,A1
00001A64  323C 000E                969          MOVE    #14,D1
00001A68  4E4F                     970          TRAP    #15
00001A6A                           971          
00001A6A  183C 0003                972          MOVE.B  #$3,D4
00001A6E                           973          
00001A6E  0C39 0000 00002C6A       974          CMP.B   #$0,bit2
00001A76  6700 001A                975          BEQ     PRINTBYTE
00001A7A  0C39 0001 00002C6A       976          CMP.B   #$1,bit2
00001A82  6700 0062                977          BEQ     PRINTWORD
00001A86  0C39 0002 00002C6A       978          CMP.B   #$2,bit2
00001A8E  6700 00AA                979          BEQ     PRINTLONG
00001A92                           980          
00001A92                           981  PRINTBYTE
00001A92  43F9 00002A45            982      LEA MBYTE,A1
00001A98  323C 000E                983      MOVE    #14,D1
00001A9C  4E4F                     984      TRAP    #15
00001A9E                           985  
00001A9E  0C39 0000 00002C6B       986      CMP.B   #$0,bit3           
00001AA6  6700 FCB0                987          BEQ     MOVBDN1
00001AAA  0C39 0001 00002C6B       988          CMP.B   #$1,bit3
00001AB2  6700 FA5C                989          BEQ     MOVEAN1
00001AB6  0C39 0002 00002C6B       990          CMP.B   #$2,bit3
00001ABE  6700 FAC4                991          BEQ     MOVEIAN1
00001AC2  0C39 0003 00002C6B       992          CMP.B   #$3,bit3
00001ACA  6700 FB4C                993          BEQ     MOVEIANI1
00001ACE  0C39 0004 00002C6B       994          CMP.B   #$4,bit3
00001AD6  6700 FBE0                995          BEQ     MOVEIAND1
00001ADA  0C39 0007 00002C6B       996          CMP.B   #$7,bit3
00001AE2  6700 F97A                997          BEQ     ADDIMD
00001AE6                           998      
00001AE6                           999  PRINTWORD
00001AE6  43F9 00002A48           1000      LEA MWORD,A1
00001AEC  323C 000E               1001      MOVE    #14,D1
00001AF0  4E4F                    1002      TRAP    #15
00001AF2                          1003  
00001AF2  0C39 0000 00002C6B      1004      CMP.B   #$0,bit3           
00001AFA  6700 FC5C               1005          BEQ     MOVBDN1
00001AFE  0C39 0001 00002C6B      1006          CMP.B   #$1,bit3
00001B06  6700 FA08               1007          BEQ     MOVEAN1
00001B0A  0C39 0002 00002C6B      1008          CMP.B   #$2,bit3
00001B12  6700 FA70               1009          BEQ     MOVEIAN1
00001B16  0C39 0003 00002C6B      1010          CMP.B   #$3,bit3
00001B1E  6700 FAF8               1011          BEQ     MOVEIANI1
00001B22  0C39 0004 00002C6B      1012          CMP.B   #$4,bit3
00001B2A  6700 FB8C               1013          BEQ     MOVEIAND1
00001B2E  0C39 0007 00002C6B      1014          CMP.B   #$7,bit3
00001B36  6700 F926               1015          BEQ     ADDIMD
00001B3A                          1016      
00001B3A                          1017  PRINTLONG
00001B3A  43F9 00002A4B           1018      LEA MLONG,A1
00001B40  323C 000E               1019      MOVE    #14,D1
00001B44  4E4F                    1020      TRAP    #15
00001B46                          1021   
00001B46  0C39 0000 00002C6B      1022      CMP.B   #$0,bit3           
00001B4E  6700 FC08               1023          BEQ     MOVBDN1
00001B52  0C39 0001 00002C6B      1024          CMP.B   #$1,bit3
00001B5A  6700 F9B4               1025          BEQ     MOVEAN1
00001B5E  0C39 0002 00002C6B      1026          CMP.B   #$2,bit3
00001B66  6700 FA1C               1027          BEQ     MOVEIAN1
00001B6A  0C39 0003 00002C6B      1028          CMP.B   #$3,bit3
00001B72  6700 FAA4               1029          BEQ     MOVEIANI1
00001B76  0C39 0004 00002C6B      1030          CMP.B   #$4,bit3
00001B7E  6700 FB38               1031          BEQ     MOVEIAND1
00001B82  0C39 0007 00002C6B      1032          CMP.B   #$7,bit3
00001B8A  6700 F8D2               1033          BEQ     ADDIMD
00001B8E                          1034          
00001B8E                          1035  LSLR
00001B8E                          1036          *MOVE.B  D6,D2
00001B8E  141E                    1037          MOVE.B  (A6)+,D2
00001B90  EB0A                    1038          LSL.B   #5,D2
00001B92  EA0A                    1039          LSR.B   #5,D2
00001B94  13C2 00002C6C           1040          MOVE.B  D2,bit4
00001B9A                          1041          
00001B9A  1406                    1042          MOVE.B  D6,D2
00001B9C  E50A                    1043          LSL.B   #2,D2
00001B9E  EE0A                    1044          LSR.B   #7,D2
00001BA0  13C2 00002C6B           1045          MOVE.B  D2,bit3
00001BA6                          1046          
00001BA6  3E06                    1047          MOVE.W  D6,D7
00001BA8  E14F                    1048          LSL.W   #8,D7
00001BAA  E04F                    1049          LSR.W   #8,D7 
00001BAC  EC4F                    1050          LSR.W   #6,D7 
00001BAE  13C7 00002C6A           1051          MOVE.B  D7,bit2
00001BB4                          1052          
00001BB4  3E06                    1053          MOVE.W  D6,D7
00001BB6  EF4F                    1054          LSL.W   #7,D7
00001BB8  E04F                    1055          LSR.W   #8,D7 
00001BBA  EE4F                    1056          LSR.W   #7,D7
00001BBC  13C7 00002C69           1057          MOVE.B  D7,bit1   
00001BC2                          1058      
00001BC2  1806                    1059          MOVE.B  D6,D4
00001BC4                          1060          
00001BC4  E94E                    1061          LSL.W   #4,D6
00001BC6  E04E                    1062          LSR.W   #8,D6 
00001BC8  EA4E                    1063          LSR.W   #5,D6
00001BCA  13C6 00002C68           1064          MOVE.B  D6,bit0 
00001BD0                          1065          
00001BD0  0C39 0001 00002C69      1066          CMP.B   #$1,bit1
00001BD8  6700 000E               1067          BEQ     PRINTLSL
00001BDC  0C39 0000 00002C69      1068          CMP.B   #$0,bit1
00001BE4  6700 0144               1069          BEQ     PRINTLSR
00001BE8                          1070          
00001BE8                          1071  PRINTLSL
00001BE8  43F9 00002A52           1072          LEA MLSL,A1
00001BEE  303C 000E               1073          MOVE    #14,D0
00001BF2  4E4F                    1074          TRAP    #15
00001BF4                          1075          
00001BF4  0C39 0000 00002C6A      1076          CMP.B   #$0,bit2
00001BFC  6700 005C               1077          BEQ     PRINTB
00001C00  0C39 0001 00002C6A      1078          CMP.B   #$1,bit2
00001C08  6700 0084               1079          BEQ     PRINTW
00001C0C  0C39 0002 00002C6A      1080          CMP.B   #$2,bit2
00001C14  6700 00AC               1081          BEQ     PRINTL
00001C18  6000 0002               1082          BRA     LSLRMEM
00001C1C                          1083          
00001C1C                          1084  LSLRMEM
00001C1C                          1085          
00001C1C  E50C                    1086          LSL.B   #2,D4
00001C1E  EA0C                    1087          LSR.B   #5,D4
00001C20  13C4 00002C6B           1088          MOVE.B  D4,bit3
00001C26                          1089          
00001C26  183C 0003               1090          MOVE.B  #$3,D4
00001C2A                          1091          
00001C2A  0C39 0002 00002C6B      1092          CMP.B   #$2,bit3
00001C32  6700 F950               1093          BEQ     MOVEIAN1
00001C36  0C39 0003 00002C6B      1094          CMP.B   #$3,bit3
00001C3E  6700 F9D8               1095          BEQ     MOVEIANI1
00001C42  0C39 0004 00002C6B      1096          CMP.B   #$4,bit3
00001C4A  6700 FA6C               1097          BEQ     MOVEIAND1
00001C4E  0C39 0007 00002C6B      1098          CMP.B   #$7,bit3
00001C56  6700 F806               1099          BEQ     ADDIMD
00001C5A                          1100  PRINTB
00001C5A  43F9 00002A41           1101          LEA MDOT,A1
00001C60  303C 000E               1102          MOVE    #14,D0
00001C64  4E4F                    1103          TRAP    #15
00001C66                          1104  
00001C66  43F9 00002A45           1105          LEA MBYTE,A1
00001C6C  303C 000E               1106          MOVE    #14,D0
00001C70  4E4F                    1107          TRAP    #15
00001C72                          1108          
00001C72  3A3C 0006               1109          MOVE #$6,D5
00001C76                          1110          
00001C76  0C39 0000 00002C6B      1111          CMP.B   #0,bit3
00001C7E  6700 0076               1112          BEQ     PRINTLSLRCOUNT
00001C82  0C39 0001 00002C6B      1113          CMP.B   #1,bit3
00001C8A  6700 FACC               1114          BEQ     MOVBDN1
00001C8E                          1115  
00001C8E                          1116  PRINTW 
00001C8E  43F9 00002A41           1117          LEA MDOT,A1
00001C94  303C 000E               1118          MOVE    #14,D0
00001C98  4E4F                    1119          TRAP    #15
00001C9A                          1120  
00001C9A  43F9 00002A48           1121          LEA MWORD,A1
00001CA0  303C 000E               1122          MOVE    #14,D0
00001CA4  4E4F                    1123          TRAP    #15
00001CA6                          1124          
00001CA6  3A3C 0006               1125          MOVE #$6,D5
00001CAA                          1126          
00001CAA  0C39 0000 00002C6B      1127          CMP.B   #0,bit3
00001CB2  6700 0042               1128          BEQ     PRINTLSLRCOUNT
00001CB6  0C39 0001 00002C6B      1129          CMP.B   #1,bit3
00001CBE  6700 FA98               1130          BEQ     MOVBDN1
00001CC2                          1131  
00001CC2                          1132  PRINTL
00001CC2  43F9 00002A41           1133          LEA MDOT,A1
00001CC8  303C 000E               1134          MOVE    #14,D0
00001CCC  4E4F                    1135          TRAP    #15
00001CCE                          1136  
00001CCE  43F9 00002A4B           1137          LEA MLONG,A1
00001CD4  303C 000E               1138          MOVE    #14,D0
00001CD8  4E4F                    1139          TRAP    #15
00001CDA                          1140  
00001CDA  3A3C 0006               1141          MOVE #$6,D5
00001CDE                          1142          
00001CDE  0C39 0000 00002C6B      1143          CMP.B   #0,bit3
00001CE6  6700 000E               1144          BEQ     PRINTLSLRCOUNT
00001CEA  0C39 0001 00002C6B      1145          CMP.B   #1,bit3
00001CF2  6700 FA64               1146          BEQ     MOVBDN1    
00001CF6                          1147  
00001CF6                          1148  PRINTLSLRCOUNT
00001CF6  43F9 00002A25           1149          LEA TAB,A1
00001CFC  303C 000E               1150          MOVE    #14,D0
00001D00  4E4F                    1151          TRAP    #15
00001D02                          1152          
00001D02  43F9 00002A33           1153          LEA HASH,A1
00001D08  303C 000E               1154          MOVE    #14,D0
00001D0C  4E4F                    1155          TRAP    #15
00001D0E                          1156          
00001D0E  1239 00002C68           1157          MOVE.B  bit0,D1
00001D14  303C 0003               1158          MOVE    #3,D0
00001D18  4E4F                    1159          TRAP    #15
00001D1A                          1160          
00001D1A  43F9 00002A29           1161          LEA COMMA,A1
00001D20  303C 000E               1162          MOVE    #14,D0
00001D24  4E4F                    1163          TRAP    #15
00001D26                          1164          
00001D26  6000 FAE4               1165          BRA LSLRDESD
00001D2A                          1166    
00001D2A                          1167  PRINTLSR
00001D2A  43F9 00002A56           1168          LEA MLSR,A1
00001D30  323C 000E               1169          MOVE    #14,D1
00001D34  4E4F                    1170          TRAP    #15
00001D36                          1171          
00001D36  0C39 0000 00002C6A      1172          CMP.B   #$0,bit2
00001D3E  6700 FF1A               1173          BEQ     PRINTB
00001D42  0C39 0001 00002C6A      1174          CMP.B   #$1,bit2
00001D4A  6700 FF42               1175          BEQ     PRINTW
00001D4E  0C39 0002 00002C6A      1176          CMP.B   #$2,bit2
00001D56  6700 FF6A               1177          BEQ     PRINTL
00001D5A  6000 FEC0               1178          BRA     LSLRMEM
00001D5E                          1179  
00001D5E                          1180  ******************************************************************************************************
00001D5E                          1181  *   Branch, branch to subroutine, and branch conditionally
00001D5E                          1182  *   BRA, BSR, Bcc
00001D5E                          1183  
00001D5E                          1184  BCC
00001D5E  13C5 00002C69           1185          MOVE.B  D5,bit1             Moves condition code to bit1
00001D64  1A1E                    1186          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001D66  13C5 00002C6A           1187          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001D6C  280E                    1188          MOVE.L  A6,D4               Moves current address to D4 register
00001D6E                          1189  
00001D6E  BA3C 0000               1190          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001D72  6700 0010               1191          BEQ     BCCWORD
00001D76  BA3C 00FF               1192          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001D7A  6700 0010               1193          BEQ     BCCLONG             Else, displacement is 8-bits
00001D7E                          1194  
00001D7E                          1195          * Calculates 8-bit displacement
00001D7E                          1196          * 8-bit displacement is already in D5
00001D7E                          1197          * Adds displacement to current address
00001D7E  D805                    1198          ADD.B   D5,D4               Adds the displacement to current address
00001D80  6000 0012               1199          BRA     BCCNEXT
00001D84                          1200  
00001D84                          1201  * Calculates 16-bit displacement
00001D84                          1202  BCCWORD
00001D84  3A1E                    1203          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001D86  D845                    1204          ADD.W   D5,D4               Adds the displacement to current address
00001D88  6000 000A               1205          BRA     BCCNEXT
00001D8C                          1206  
00001D8C                          1207  * Calculates 32-bit displacement
00001D8C                          1208  BCCLONG
00001D8C  2A1E                    1209          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001D8E  D885                    1210          ADD.L   D5,D4               Adds the displacement to current address
00001D90  6000 0002               1211          BRA     BCCNEXT
00001D94                          1212  
00001D94                          1213  * Does the actual calculation
00001D94                          1214  * Adds the displacement to the current address
00001D94                          1215  BCCNEXT
00001D94  6100 000E               1216          BSR     BCCDISP             Displays branch op-code
00001D98  45F9 000027D2           1217          LEA     ENDNEWLINE,A2
00001D9E  2E04                    1218          MOVE.L  D4,D7
00001DA0  6000 F352               1219          BRA     DISPADDRSTART
00001DA4                          1220  
00001DA4                          1221  BCCDISP
00001DA4  B43C 0000               1222          CMP.B   #$0,D2
00001DA8  6700 0026               1223          BEQ     BCCBRA
00001DAC  B43C 0007               1224          CMP.B   #$7,D2
00001DB0  6700 0028               1225          BEQ     BCCBEQ
00001DB4  B43C 0006               1226          CMP.B   #$6,D2
00001DB8  6700 002A               1227          BEQ     BCCBNE
00001DBC  B43C 000D               1228          CMP.B   #$D,D2
00001DC0  6700 002C               1229          BEQ     BCCBLT
00001DC4  B43C 0002               1230          CMP.B   #$2,D2
00001DC8  6700 002E               1231          BEQ     BCCBHI
00001DCC                          1232  
00001DCC  6000 0992               1233          BRA     INVOP
00001DD0                          1234  
00001DD0                          1235  BCCBRA
00001DD0  43F9 00002AF8           1236          LEA     MBRA,A1
00001DD6  6000 002A               1237          BRA     BCCPRINT
00001DDA                          1238  BCCBEQ
00001DDA  43F9 00002AE8           1239          LEA     MBEQ,A1
00001DE0  6000 0020               1240          BRA     BCCPRINT
00001DE4                          1241  BCCBNE
00001DE4  43F9 00002AEC           1242          LEA     MBNE,A1
00001DEA  6000 0016               1243          BRA     BCCPRINT
00001DEE                          1244  BCCBLT
00001DEE  43F9 00002AF0           1245          LEA     MBLT,A1
00001DF4  6000 000C               1246          BRA     BCCPRINT
00001DF8                          1247  BCCBHI
00001DF8  43F9 00002AF4           1248          LEA     MBHI,A1
00001DFE  6000 0002               1249          BRA     BCCPRINT
00001E02                          1250  BCCPRINT
00001E02  103C 000E               1251          MOVE.B  #14,D0
00001E06  4E4F                    1252          TRAP    #15
00001E08  43F9 00002A25           1253          LEA     TAB,A1
00001E0E  4E4F                    1254          TRAP    #15
00001E10  4E75                    1255          RTS
00001E12                          1256  
00001E12                          1257  ******************************************************************************************************
00001E12                          1258  *   Immediate data arithmetic operations
00001E12                          1259  *   SUBI
00001E12                          1260  
00001E12  13C5 00002C69           1261  IMD     MOVE.B  D5,bit1
00001E18  141E                    1262          MOVE.B  (A6)+,D2
00001E1A                          1263  
00001E1A  DE02                    1264          ADD.B   D2,D7
00001E1C                          1265  
00001E1C  1602                    1266          MOVE.B  D2,D3               Copies data at D2 to D3
00001E1E                          1267          *   this gets digit in 10's place
00001E1E  E80B                    1268          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001E20                          1269          *   this gets digit in 1's place
00001E20  E90A                    1270          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001E22  E80A                    1271          LSR.B   #4,D2               Shifts back right into 1's place
00001E24                          1272  
00001E24                          1273          *   D3 holds digit in 10's place
00001E24                          1274          *   D2 holds digit in 1's place
00001E24                          1275  
00001E24  E20B                    1276          LSR.B   #1,D3
00001E26  6400 0004               1277          BCC     IMD2
00001E2A  5404                    1278          ADD.B   #$2,D4
00001E2C  E20B                    1279  IMD2    LSR.B   #1,D3
00001E2E  6400 0004               1280          BCC     IMD3
00001E32  5804                    1281          ADD.B   #$4,D4
00001E34  B43C 0007               1282  IMD3    CMP.B   #$7,D2
00001E38  6D00 0006               1283          BLT     IMD4
00001E3C  5204                    1284          ADD.B   #$1,D4
00001E3E  5102                    1285          SUB.B   #$8,D2
00001E40                          1286  
00001E40                          1287          *   Stores them into addr
00001E40  13C3 00002C6A           1288  IMD4    MOVE.B  D3,bit2
00001E46  13C4 00002C6B           1289          MOVE.B  D4,bit3
00001E4C  13C2 00002C6C           1290          MOVE.B  D2,bit4
00001E52                          1291  
00001E52                          1292  **************************
00001E52                          1293  * This finds the size of the operation
00001E52                          1294  
00001E52  0C39 0000 00002C6A      1295          CMP.B   #$0,bit2
00001E5A  6700 007E               1296          BEQ     IMDBYTE
00001E5E  0C39 0001 00002C6A      1297          CMP.B   #$1,bit2
00001E66  6700 0082               1298          BEQ     IMDWORD
00001E6A  0C39 0002 00002C6A      1299          CMP.B   #$2,bit2
00001E72  6700 0084               1300          BEQ     IMDLONG
00001E76  6000 08E8               1301          BRA     INVOP
00001E7A                          1302  
00001E7A                          1303  *************************************************************
00001E7A                          1304  * Display IMD op-code
00001E7A                          1305  IMDPRINT
00001E7A  0C39 0000 00002C69      1306          CMP.B   #$0,bit1
00001E82  6700 0026               1307          BEQ     IMDPRINTORI
00001E86  0C39 0004 00002C69      1308          CMP.B   #$4,bit1
00001E8E  6700 0024               1309          BEQ     IMDPRINTSUBI
00001E92  0C39 000A 00002C69      1310          CMP.B   #$A,bit1
00001E9A  6700 0022               1311          BEQ     IMDPRINTEORI
00001E9E  0C39 000C 00002C69      1312          CMP.B   #$C,bit1
00001EA6  6700 0020               1313          BEQ     IMDPRINTCMPI
00001EAA                          1314  
00001EAA                          1315  IMDPRINTORI
00001EAA  43F9 00002AB2           1316          LEA     MORI,A1
00001EB0  6000 0020               1317          BRA     IMDPRINTEND
00001EB4                          1318  
00001EB4                          1319  IMDPRINTSUBI
00001EB4  43F9 00002AAC           1320          LEA     MSUBI,A1
00001EBA  6000 0016               1321          BRA     IMDPRINTEND
00001EBE                          1322  
00001EBE                          1323  IMDPRINTEORI
00001EBE  43F9 00002ADC           1324          LEA     MEORI,A1
00001EC4  6000 000C               1325          BRA     IMDPRINTEND
00001EC8                          1326  
00001EC8                          1327  IMDPRINTCMPI
00001EC8  43F9 00002ACB           1328          LEA     MCMPI,A1
00001ECE  6000 0002               1329          BRA     IMDPRINTEND
00001ED2                          1330  
00001ED2                          1331  IMDPRINTEND
00001ED2  103C 000E               1332          MOVE.B  #14,D0
00001ED6  4E4F                    1333          TRAP    #15
00001ED8  4E75                    1334          RTS
00001EDA                          1335  
00001EDA                          1336  *************************************************************
00001EDA                          1337  * Immediate data operation size BYTE
00001EDA                          1338  IMDBYTE
00001EDA  619E                    1339          BSR     IMDPRINT
00001EDC  43F9 00002A45           1340          LEA     MBYTE,A1
00001EE2                          1341  
00001EE2                          1342          * Moves size to D4, needed to use DISPEA
00001EE2  183C 0001               1343          MOVE.B  #$1,D4
00001EE6  6000 001A               1344          BRA     IMDEA
00001EEA                          1345  
00001EEA                          1346  *************************************************************
00001EEA                          1347  * Immediate data operation size WORD
00001EEA                          1348  IMDWORD
00001EEA  618E                    1349          BSR     IMDPRINT
00001EEC  43F9 00002A48           1350          LEA     MWORD,A1
00001EF2                          1351  
00001EF2  1803                    1352          MOVE.B  D3,D4
00001EF4  6000 000C               1353          BRA     IMDEA
00001EF8                          1354  
00001EF8                          1355  
00001EF8                          1356  *************************************************************
00001EF8                          1357  * Immediate data operation size LONG
00001EF8                          1358  IMDLONG
00001EF8  6180                    1359          BSR     IMDPRINT
00001EFA  43F9 00002A4B           1360          LEA     MLONG,A1
00001F00                          1361          
00001F00                          1362  
00001F00                          1363          * Moves size to D4, needed to use DISPEA
00001F00  1803                    1364          MOVE.B  D3,D4
00001F02                          1365  
00001F02                          1366  IMDEA
00001F02                          1367          * This prints out the size and creates tab
00001F02  103C 000E               1368          MOVE.B  #14,D0
00001F06  4E4F                    1369          TRAP    #15
00001F08  43F9 00002A25           1370          LEA     TAB,A1
00001F0E  103C 000E               1371          MOVE.B  #14,D0
00001F12  4E4F                    1372          TRAP    #15
00001F14                          1373          * Loads return address into A2
00001F14  45F9 00001F1E           1374          LEA     IMDEA2,A2
00001F1A  6000 07CA               1375          BRA     DISPEA
00001F1E                          1376  IMDEA2
00001F1E  43F9 00002A29           1377          LEA     COMMA,A1
00001F24  103C 000E               1378          MOVE.B  #14,D0
00001F28  4E4F                    1379          TRAP    #15
00001F2A                          1380  
00001F2A  45F9 00001F34           1381          LEA     IMDEA3,A2
00001F30  6000 0664               1382          BRA     SUBEA
00001F34                          1383  IMDEA3
00001F34  6000 089C               1384          BRA     ENDNEWLINE
00001F38                          1385  
00001F38                          1386  ******************************************************************************************************
00001F38                          1387  * Miscellaneous section
00001F38                          1388  *   Not goes here
00001F38                          1389  
00001F38                          1390  MISC
00001F38  13C5 00002C69           1391          MOVE.B  D5,bit1
00001F3E  141E                    1392          MOVE.B  (A6)+,D2
00001F40                          1393  
00001F40  DE02                    1394          ADD.B   D2,D7
00001F42                          1395  
00001F42  1602                    1396          MOVE.B  D2,D3               Copies data at D2 to D3
00001F44                          1397          *   this gets digit in 10's place
00001F44  E80B                    1398          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001F46                          1399          *   this gets digit in 1's place
00001F46  E90A                    1400          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001F48  E80A                    1401          LSR.B   #4,D2               Shifts back right into 1's place
00001F4A                          1402  
00001F4A                          1403          *   D5 is bit1
00001F4A                          1404          *   D3 is bit2
00001F4A                          1405          *   D2 is bit3
00001F4A                          1406  
00001F4A                          1407  **************************
00001F4A                          1408  * This finds the size of the operation
00001F4A                          1409          * D5 is bit1
00001F4A  BA3C 0004               1410          CMP.B   #$4,D5
00001F4E  6700 FAE8               1411          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00001F52  BA3C 0006               1412          CMP.B   #$6,D5              Branches to NOT section
00001F56  6700 004E               1413          BEQ     MISCNOT
00001F5A  BA3C 000E               1414          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00001F5E  6700 0006               1415          BEQ     MISCBIT2
00001F62  6000 07FC               1416          BRA     INVOP
00001F66                          1417  
00001F66                          1418  MISCBIT2
00001F66                          1419          * D3 is bit2
00001F66  B63C 0007               1420          CMP.B   #$7,D3              Branches to NOP
00001F6A  6700 0006               1421          BEQ     MISCBIT3
00001F6E  6000 07F0               1422          BRA     INVOP
00001F72                          1423  
00001F72                          1424  MISCBIT3
00001F72                          1425          * D2 is bit3
00001F72  B43C 0001               1426          CMP.B   #$1,D2              Branches to NOP
00001F76  6700 000E               1427          BEQ     MISCNOP
00001F7A  B43C 0005               1428          CMP.B   #$5,D2              Branches to NOP
00001F7E  6700 0016               1429          BEQ     MISCRTS
00001F82  6000 07DC               1430          BRA     INVOP
00001F86                          1431  
00001F86                          1432  ******************************************************
00001F86                          1433  * NOP
00001F86                          1434  * No operation
00001F86                          1435  MISCNOP
00001F86  43F9 00002AFC           1436          LEA     MNOP,A1
00001F8C  103C 000E               1437          MOVE.B  #14,D0
00001F90  4E4F                    1438          TRAP    #15
00001F92                          1439  
00001F92  6000 083E               1440          BRA     ENDNEWLINE          Goes to next opcode
00001F96                          1441  
00001F96                          1442  ******************************************************
00001F96                          1443  * RTS
00001F96                          1444  * Return to sub routine
00001F96                          1445  MISCRTS
00001F96  43F9 00002B00           1446          LEA     MRTS,A1
00001F9C  103C 000E               1447          MOVE.B  #14,D0
00001FA0  4E4F                    1448          TRAP    #15
00001FA2                          1449  
00001FA2  6000 082E               1450          BRA     ENDNEWLINE          Goes to next opcode
00001FA6                          1451  
00001FA6                          1452  ******************************************************
00001FA6                          1453  * NOT
00001FA6                          1454  * Reuses some of IMD section to display because they have similar format
00001FA6                          1455  *  (I was kinda lazy too)
00001FA6                          1456  MISCNOT
00001FA6  E20B                    1457          LSR.B   #1,D3
00001FA8  6400 0004               1458          BCC     MISCNOT2
00001FAC  5404                    1459          ADD.B   #$2,D4
00001FAE                          1460  MISCNOT2   
00001FAE  E20B                    1461          LSR.B   #1,D3
00001FB0  6400 0004               1462          BCC     MISCNOT3
00001FB4  5804                    1463          ADD.B   #$4,D4
00001FB6                          1464  MISCNOT3   
00001FB6  B43C 0007               1465          CMP.B   #$7,D2
00001FBA  6D00 0006               1466          BLT     MISCNOT4
00001FBE  5204                    1467          ADD.B   #$1,D4
00001FC0  5102                    1468          SUB.B   #$8,D2
00001FC2                          1469  
00001FC2                          1470          *   Stores them into addr
00001FC2                          1471  MISCNOT4
00001FC2  13C3 00002C6A           1472          MOVE.B  D3,bit2
00001FC8  13C4 00002C6B           1473          MOVE.B  D4,bit3
00001FCE  13C2 00002C6C           1474          MOVE.B  D2,bit4
00001FD4                          1475  
00001FD4  B63C 0000               1476          CMP.B   #$0,D3
00001FD8  6700 0016               1477          BEQ     MISCBYTE
00001FDC  B63C 0001               1478          CMP.B   #$1,D3
00001FE0  6700 0020               1479          BEQ     MISCWORD
00001FE4  B63C 0002               1480          CMP.B   #$2,D3
00001FE8  6700 0028               1481          BEQ     MISCLONG
00001FEC  6000 0772               1482          BRA     INVOP
00001FF0                          1483  *************************************************************
00001FF0                          1484  * Immediate data operation size BYTE
00001FF0                          1485  MISCBYTE
00001FF0  6100 004C               1486          BSR     MISCPRINT
00001FF4  43F9 00002A45           1487          LEA     MBYTE,A1
00001FFA                          1488  
00001FFA                          1489          * Moves size to D4, needed to use DISPEA
00001FFA  183C 0001               1490          MOVE.B  #$1,D4
00001FFE  6000 001E               1491          BRA     MISCEA
00002002                          1492  
00002002                          1493  *************************************************************
00002002                          1494  * Immediate data operation size WORD
00002002                          1495  MISCWORD
00002002  6100 003A               1496          BSR     MISCPRINT
00002006  43F9 00002A48           1497          LEA     MWORD,A1
0000200C                          1498  
0000200C  1803                    1499          MOVE.B  D3,D4
0000200E  6000 000E               1500          BRA     MISCEA
00002012                          1501  
00002012                          1502  
00002012                          1503  *************************************************************
00002012                          1504  * Immediate data operation size LONG
00002012                          1505  MISCLONG
00002012  6100 002A               1506          BSR     MISCPRINT
00002016  43F9 00002A4B           1507          LEA     MLONG,A1
0000201C                          1508  
0000201C                          1509          * Moves size to D4, needed to use DISPEA
0000201C  1803                    1510          MOVE.B  D3,D4
0000201E                          1511  
0000201E                          1512  MISCEA
0000201E  103C 000E               1513          MOVE.B  #14,D0
00002022  4E4F                    1514          TRAP    #15
00002024  43F9 00002A25           1515          LEA     TAB,A1
0000202A  103C 000E               1516          MOVE.B  #14,D0
0000202E  4E4F                    1517          TRAP    #15
00002030                          1518  
00002030  45F9 0000203A           1519          LEA     MISCEA2,A2
00002036  6000 055E               1520          BRA     SUBEA
0000203A                          1521  MISCEA2
0000203A  6000 0796               1522          BRA     ENDNEWLINE
0000203E                          1523  
0000203E                          1524  *************************************************************
0000203E                          1525  * Display IMD op-code
0000203E                          1526  MISCPRINT
0000203E  0C39 0004 00002C69      1527          CMP.B   #$4,bit1
00002046  6700 0018               1528          BEQ     MISCPRINTNEG
0000204A  0C39 0006 00002C69      1529          CMP.B   #$6,bit1
00002052  6700 0002               1530          BEQ     MISCPRINTNOT
00002056                          1531  
00002056                          1532  MISCPRINTNOT
00002056  43F9 00002AB7           1533          LEA     MNOT,A1
0000205C  6000 000C               1534          BRA     MISCPRINTEND
00002060                          1535  
00002060                          1536  MISCPRINTNEG
00002060  43F9 00002AC2           1537          LEA     MNEG,A1
00002066  6000 0002               1538          BRA     MISCPRINTEND
0000206A                          1539  
0000206A                          1540  MISCPRINTEND
0000206A  103C 000E               1541          MOVE.B  #14,D0
0000206E  4E4F                    1542          TRAP    #15
00002070  4E75                    1543          RTS
00002072                          1544  
00002072                          1545  
00002072                          1546  ******************************************************************************************************
00002072                          1547  * SUB section
00002072                          1548  
00002072                          1549          *   Grabs next two nibbles
00002072  141E                    1550  SUB     MOVE.B  (A6)+,D2
00002074                          1551  
00002074  DE02                    1552          ADD.B   D2,D7
00002076                          1553  
00002076  1602                    1554          MOVE.B  D2,D3               Copies data at D2 to D3
00002078                          1555          *   this gets digit in 10's place
00002078  E80B                    1556          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000207A                          1557          *   this gets digit in 1's place
0000207A  E90A                    1558          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000207C  E80A                    1559          LSR.B   #4,D2               Shifts back right into 1's place
0000207E                          1560  
0000207E                          1561          *   D3 holds digit in 10's place
0000207E                          1562          *   D2 holds digit in 1's place
0000207E                          1563  
0000207E                          1564          
0000207E                          1565          *   Converts nibble into 3-bit parts
0000207E  E20B                    1566          LSR.B   #1,D3
00002080  6400 0004               1567          BCC     SUB2
00002084  5404                    1568          ADD.B   #$2,D4
00002086                          1569          
00002086  E20B                    1570  SUB2    LSR.B   #1,D3
00002088  6400 0004               1571          BCC     SUB3
0000208C  5804                    1572          ADD.B   #$4,D4
0000208E                          1573          
0000208E  1205                    1574  SUB3    MOVE.B  D5,D1
00002090  E209                    1575          LSR.B   #1,D1
00002092  6400 0004               1576          BCC     SUB4
00002096  5803                    1577          ADD.B   #$4,D3
00002098                          1578  
00002098  B43C 0007               1579  SUB4    CMP.B   #$7,D2
0000209C  6D00 0006               1580          BLT     SUB1
000020A0  5204                    1581          ADD.B   #$1,D4
000020A2  5102                    1582          SUB.B   #$8,D2
000020A4                          1583  
000020A4                          1584          *   Stores them into addr
000020A4  13C1 00002C69           1585  SUB1    MOVE.B  D1,bit1
000020AA  13C3 00002C6A           1586          MOVE.B  D3,bit2
000020B0  13C4 00002C6B           1587          MOVE.B  D4,bit3
000020B6  13C2 00002C6C           1588          MOVE.B  D2,bit4
000020BC                          1589  
000020BC                          1590          * do this later
000020BC  4241                    1591          CLR     D1
000020BE  7400                    1592          MOVE.L  #0,D2
000020C0  7600                    1593          MOVE.L  #0,D3
000020C2  7800                    1594          MOVE.L  #0,D4
000020C4  7A00                    1595          MOVE.L  #0,D5
000020C6  7C00                    1596          MOVE.L  #0,D6
000020C8                          1597  
000020C8                          1598          
000020C8                          1599  ******************************************************************************************************
000020C8                          1600  * After spliting the op-code into SUB's defined groupings
000020C8                          1601  *   This figures out which operation it is and goes to that sub-routine
000020C8                          1602  
000020C8                          1603          * This checks if bit0 is C which is either AND or MULS
000020C8  0C39 000C 00002C68      1604          CMP.B   #$C,bit0
000020D0  6600 000E               1605          BNE     SUBACHECK
000020D4  0C39 0007 00002C6A      1606          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
000020DC  6700 F842               1607          BEQ     MULSW                       AND will use SUB's routine
000020E0                          1608  
000020E0                          1609  SUBACHECK
000020E0                          1610          * This will display SUBA instead  -- check this later
000020E0  0C39 0003 00002C6A      1611          CMP.B   #$3,bit2
000020E8  6700 01D6               1612          BEQ     SUBA
000020EC  0C39 0007 00002C6A      1613          CMP.B   #$7,bit2
000020F4  6700 01CA               1614          BEQ     SUBA
000020F8                          1615  
000020F8                          1616          * This will find the size and stuff
000020F8  0C39 0000 00002C6A      1617          CMP.B   #$0,bit2
00002100  6700 003E               1618          BEQ     SUBSIZE1
00002104  0C39 0001 00002C6A      1619          CMP.B   #$1,bit2
0000210C  6700 0072               1620          BEQ     SUBSIZE2
00002110  0C39 0002 00002C6A      1621          CMP.B   #$2,bit2
00002118  6700 00A6               1622          BEQ     SUBSIZE3
0000211C  0C39 0004 00002C6A      1623          CMP.B   #$4,bit2
00002124  6700 00DA               1624          BEQ     SUBSIZE4
00002128  0C39 0005 00002C6A      1625          CMP.B   #$5,bit2
00002130  6700 010E               1626          BEQ     SUBSIZE5
00002134  0C39 0006 00002C6A      1627          CMP.B   #$6,bit2
0000213C  6700 0142               1628          BEQ     SUBSIZE6
00002140                          1629     
00002140                          1630  ******************************************************************************************************
00002140                          1631  *   Displays size, then does operation order
00002140                          1632  
00002140                          1633  *   000 byte    EA,DN
00002140                          1634  SUBSIZE1
00002140  6100 0260               1635          BSR     SUBPRINT
00002144  43F9 00002A45           1636          LEA     MBYTE,A1
0000214A  103C 000E               1637          MOVE.B  #14,D0
0000214E  4E4F                    1638          TRAP    #15
00002150  43F9 00002A25           1639          LEA     TAB,A1
00002156  103C 000E               1640          MOVE.B  #14,D0
0000215A  4E4F                    1641          TRAP    #15
0000215C                          1642  
0000215C  45F9 00002166           1643          LEA     SUBSIZE11,A2
00002162  6000 0432               1644          BRA     SUBEA
00002166                          1645  SUBSIZE11
00002166  45F9 0000217C           1646          LEA     SUBSIZE12,A2
0000216C  43F9 00002A29           1647          LEA     COMMA,A1
00002172  103C 000E               1648          MOVE.B  #14,D0
00002176  4E4F                    1649          TRAP    #15
00002178  6000 02F8               1650          BRA     SUBDN
0000217C                          1651  SUBSIZE12
0000217C  6000 0654               1652          BRA     ENDNEWLINE
00002180                          1653  
00002180                          1654  *************************************************
00002180                          1655  *   001 word    EA,DN
00002180                          1656  SUBSIZE2
00002180  6100 0220               1657          BSR     SUBPRINT
00002184  43F9 00002A48           1658          LEA     MWORD,A1
0000218A  103C 000E               1659          MOVE.B  #14,D0
0000218E  4E4F                    1660          TRAP    #15
00002190  43F9 00002A25           1661          LEA     TAB,A1
00002196  103C 000E               1662          MOVE.B  #14,D0
0000219A  4E4F                    1663          TRAP    #15
0000219C                          1664  
0000219C  45F9 000021A6           1665          LEA     SUBSIZE21,A2
000021A2  6000 03F2               1666          BRA     SUBEA
000021A6                          1667  SUBSIZE21
000021A6  45F9 000021BC           1668          LEA     SUBSIZE22,A2
000021AC  43F9 00002A29           1669          LEA     COMMA,A1
000021B2  103C 000E               1670          MOVE.B  #14,D0
000021B6  4E4F                    1671          TRAP    #15
000021B8  6000 02B8               1672          BRA     SUBDN
000021BC                          1673  SUBSIZE22
000021BC  6000 0614               1674          BRA     ENDNEWLINE
000021C0                          1675  
000021C0                          1676  *************************************************
000021C0                          1677  *   010 long    EA,DN
000021C0                          1678  SUBSIZE3
000021C0  6100 01E0               1679          BSR     SUBPRINT
000021C4  43F9 00002A4B           1680          LEA     MLONG,A1
000021CA  103C 000E               1681          MOVE.B  #14,D0
000021CE  4E4F                    1682          TRAP    #15
000021D0  43F9 00002A25           1683          LEA     TAB,A1
000021D6  103C 000E               1684          MOVE.B  #14,D0
000021DA  4E4F                    1685          TRAP    #15
000021DC                          1686  
000021DC  45F9 000021E6           1687          LEA     SUBSIZE31,A2
000021E2  6000 03B2               1688          BRA     SUBEA
000021E6                          1689  SUBSIZE31
000021E6  45F9 000021FC           1690          LEA     SUBSIZE32,A2
000021EC  43F9 00002A29           1691          LEA     COMMA,A1
000021F2  103C 000E               1692          MOVE.B  #14,D0
000021F6  4E4F                    1693          TRAP    #15
000021F8  6000 0278               1694          BRA     SUBDN
000021FC                          1695  SUBSIZE32
000021FC  6000 05D4               1696          BRA     ENDNEWLINE
00002200                          1697  
00002200                          1698  *************************************************
00002200                          1699  *   100 byte    DN,EA
00002200                          1700  SUBSIZE4
00002200  6100 01A0               1701          BSR     SUBPRINT
00002204  43F9 00002A45           1702          LEA     MBYTE,A1
0000220A  103C 000E               1703          MOVE.B  #14,D0
0000220E  4E4F                    1704          TRAP    #15
00002210  43F9 00002A25           1705          LEA     TAB,A1
00002216  103C 000E               1706          MOVE.B  #14,D0
0000221A  4E4F                    1707          TRAP    #15
0000221C                          1708  
0000221C                          1709          *BSR     SUBERRORTEST1
0000221C                          1710  
0000221C  45F9 00002226           1711          LEA     SUBSIZE41,A2
00002222  6000 024E               1712          BRA     SUBDN
00002226                          1713  SUBSIZE41
00002226  45F9 0000223C           1714          LEA     SUBSIZE42,A2
0000222C  43F9 00002A29           1715          LEA     COMMA,A1
00002232  103C 000E               1716          MOVE.B  #14,D0
00002236  4E4F                    1717          TRAP    #15
00002238  6000 035C               1718          BRA     SUBEA
0000223C                          1719  SUBSIZE42
0000223C  6000 0594               1720          BRA     ENDNEWLINE
00002240                          1721  
00002240                          1722  *************************************************
00002240                          1723  *   101 word    DN,EA
00002240                          1724  SUBSIZE5
00002240                          1725          *BSR     SUBERRORTEST1               * This does error testing
00002240  6100 0160               1726          BSR     SUBPRINT                    * Prints out 'SUB.'
00002244  43F9 00002A48           1727          LEA     MWORD,A1
0000224A  103C 000E               1728          MOVE.B  #14,D0
0000224E  4E4F                    1729          TRAP    #15
00002250  43F9 00002A25           1730          LEA     TAB,A1
00002256  103C 000E               1731          MOVE.B  #14,D0
0000225A  4E4F                    1732          TRAP    #15
0000225C                          1733  
0000225C  45F9 00002266           1734          LEA     SUBSIZE51,A2
00002262  6000 020E               1735          BRA     SUBDN
00002266                          1736  SUBSIZE51
00002266  45F9 0000227C           1737          LEA     SUBSIZE52,A2
0000226C  43F9 00002A29           1738          LEA     COMMA,A1
00002272  103C 000E               1739          MOVE.B  #14,D0
00002276  4E4F                    1740          TRAP    #15
00002278  6000 031C               1741          BRA     SUBEA
0000227C                          1742  SUBSIZE52
0000227C  6000 0554               1743          BRA     ENDNEWLINE
00002280                          1744  
00002280                          1745  *************************************************
00002280                          1746  *   110 long    DN,EA
00002280                          1747  SUBSIZE6
00002280                          1748          *BSR     SUBERRORTEST1               * This does error testing
00002280  6100 0120               1749          BSR     SUBPRINT                    * Prints out 'SUB.'
00002284  43F9 00002A4B           1750          LEA     MLONG,A1
0000228A  103C 000E               1751          MOVE.B  #14,D0
0000228E  4E4F                    1752          TRAP    #15
00002290  43F9 00002A25           1753          LEA     TAB,A1
00002296  103C 000E               1754          MOVE.B  #14,D0
0000229A  4E4F                    1755          TRAP    #15
0000229C                          1756  
0000229C                          1757          *BSR     SUBERRORTEST1
0000229C                          1758  
0000229C  45F9 000022A6           1759          LEA     SUBSIZE61,A2
000022A2  6000 01CE               1760          BRA     SUBDN
000022A6                          1761  SUBSIZE61
000022A6  45F9 000022BC           1762          LEA     SUBSIZE62,A2
000022AC  43F9 00002A29           1763          LEA     COMMA,A1
000022B2  103C 000E               1764          MOVE.B  #14,D0
000022B6  4E4F                    1765          TRAP    #15
000022B8  6000 02DC               1766          BRA     SUBEA
000022BC                          1767  SUBSIZE62
000022BC  6000 0514               1768          BRA     ENDNEWLINE
000022C0                          1769  
000022C0                          1770  ****************************************************************************
000022C0                          1771  *   This section is for SUBA
000022C0                          1772  *   Displays 'SUBA.' then decodes the op-code as SUBA
000022C0                          1773  SUBA
000022C0  0C39 0009 00002C68      1774          CMP.B   #$9,bit0
000022C8  6700 001A               1775          BEQ     SUBPRINTSUBA
000022CC  0C39 000B 00002C68      1776          CMP.B   #$B,bit0
000022D4  6700 001E               1777          BEQ     SUBPRINTCMPA
000022D8  0C39 000D 00002C68      1778          CMP.B   #$D,bit0
000022E0  6700 0022               1779          BEQ     SUBPRINTADDA
000022E4                          1780  
000022E4                          1781  
000022E4                          1782  SUBPRINTSUBA
000022E4  43F9 00002A9C           1783          LEA     MSUBA,A1                    Displays 'SUBA.'
000022EA  103C 000E               1784          MOVE.B  #14,D0
000022EE  4E4F                    1785          TRAP    #15
000022F0  6000 0022               1786          BRA     SUBACONT
000022F4                          1787  
000022F4                          1788  SUBPRINTCMPA
000022F4  43F9 00002AD1           1789          LEA     MCMPA,A1                    Displays 'SUBA.'
000022FA  103C 000E               1790          MOVE.B  #14,D0
000022FE  4E4F                    1791          TRAP    #15
00002300  6000 0012               1792          BRA     SUBACONT
00002304                          1793  
00002304                          1794  SUBPRINTADDA
00002304  43F9 00002AE2           1795          LEA     MADDA,A1                    Displays 'SUBA.'
0000230A  103C 000E               1796          MOVE.B  #14,D0
0000230E  4E4F                    1797          TRAP    #15
00002310  6000 0002               1798          BRA     SUBACONT
00002314                          1799  
00002314                          1800  SUBACONT
00002314                          1801          * Does the rest of SUBA
00002314  0C39 0003 00002C6A      1802          CMP.B   #$3,bit2
0000231C  6700 000E               1803          BEQ     SUBSIZE7
00002320  0C39 0007 00002C6A      1804          CMP.B   #$7,bit2
00002328  6700 003E               1805          BEQ     SUBSIZE8
0000232C                          1806  
0000232C                          1807  *************************************************
0000232C                          1808  *   SUBA Word   ea,An
0000232C                          1809  SUBSIZE7
0000232C  43F9 00002A48           1810          LEA     MWORD,A1
00002332  103C 000E               1811          MOVE.B  #14,D0
00002336  4E4F                    1812          TRAP    #15
00002338  43F9 00002A25           1813          LEA     TAB,A1
0000233E  103C 000E               1814          MOVE.B  #14,D0
00002342  4E4F                    1815          TRAP    #15
00002344                          1816  
00002344  45F9 0000234E           1817          LEA     SUBSIZE71,A2
0000234A  6000 024A               1818          BRA     SUBEA
0000234E                          1819  SUBSIZE71
0000234E  45F9 00002364           1820          LEA     SUBSIZE72,A2
00002354  43F9 00002A29           1821          LEA     COMMA,A1
0000235A  103C 000E               1822          MOVE.B  #14,D0
0000235E  4E4F                    1823          TRAP    #15
00002360  6000 0164               1824          BRA     SUBAN2
00002364                          1825  SUBSIZE72
00002364  6000 046C               1826          BRA     ENDNEWLINE
00002368                          1827  
00002368                          1828  *************************************************
00002368                          1829  *   SUBA longword   ea,An
00002368                          1830  SUBSIZE8
00002368  43F9 00002A4B           1831          LEA     MLONG,A1
0000236E  103C 000E               1832          MOVE.B  #14,D0
00002372  4E4F                    1833          TRAP    #15
00002374  43F9 00002A25           1834          LEA     TAB,A1
0000237A  103C 000E               1835          MOVE.B  #14,D0
0000237E  4E4F                    1836          TRAP    #15
00002380                          1837  
00002380  45F8 234E               1838          LEA     SUBSIZE71,A2
00002384  6000 0210               1839          BRA     SUBEA
00002388                          1840  SUBSIZE81
00002388  45F8 2364               1841          LEA     SUBSIZE72,A2
0000238C  43F9 00002A29           1842          LEA     COMMA,A1
00002392  103C 000E               1843          MOVE.B  #14,D0
00002396  4E4F                    1844          TRAP    #15
00002398  6000 012C               1845          BRA     SUBAN2
0000239C                          1846  SUBSIZE82
0000239C  6000 0434               1847          BRA     ENDNEWLINE
000023A0                          1848  
000023A0                          1849  *************************************************
000023A0                          1850  * Jumps to memory location at A2
000023A0                          1851  SUBJMPA2
000023A0  4ED2                    1852          JMP     (A2)
000023A2                          1853  
000023A2                          1854  *************************************************
000023A2                          1855  * Prints out opcode name
000023A2                          1856  SUBPRINT
000023A2  0C39 0009 00002C68      1857          CMP.B   #$9,bit0                Prints SUB
000023AA  6700 0026               1858          BEQ     SUBPRINTSUB
000023AE  0C39 000B 00002C68      1859          CMP.B   #$B,bit0                Prints CMP or EOR
000023B6  6700 004A               1860          BEQ     SUBPRINTB
000023BA  0C39 000C 00002C68      1861          CMP.B   #$C,bit0                Prints AND
000023C2  6700 001E               1862          BEQ     SUBPRINTAND
000023C6  0C39 000D 00002C68      1863          CMP.B   #$D,bit0                Prints ADD
000023CE  6700 0022               1864          BEQ     SUBPRINTADD
000023D2                          1865  
000023D2                          1866  SUBPRINTSUB   * Displays 'SUB.' 
000023D2  43F9 00002A97           1867          LEA     MSUB,A1
000023D8  103C 000E               1868          MOVE.B  #14,D0
000023DC  4E4F                    1869          TRAP    #15
000023DE  6000 004E               1870          BRA     SUBPRINTEND
000023E2                          1871  
000023E2                          1872  SUBPRINTAND   * Displays 'AND.' 
000023E2  43F9 00002AA2           1873          LEA     MAND,A1
000023E8  103C 000E               1874          MOVE.B  #14,D0
000023EC  4E4F                    1875          TRAP    #15
000023EE  6000 003E               1876          BRA     SUBPRINTEND
000023F2                          1877  
000023F2                          1878  SUBPRINTADD   * Displays 'ADD.' 
000023F2  43F9 00002AA7           1879          LEA     MADD,A1
000023F8  103C 000E               1880          MOVE.B  #14,D0
000023FC  4E4F                    1881          TRAP    #15
000023FE  6000 002E               1882          BRA     SUBPRINTEND
00002402                          1883  
00002402                          1884  SUBPRINTB
00002402  0C39 0004 00002C6A      1885          CMP.B   #$4,bit2
0000240A  6D00 0012               1886          BLT     SUBPRINTEOR
0000240E                          1887  
0000240E                          1888  SUBPRINTCMP   * Displays 'CMP.' 
0000240E  43F9 00002AC6           1889          LEA     MCMP,A1
00002414  103C 000E               1890          MOVE.B  #14,D0
00002418  4E4F                    1891          TRAP    #15
0000241A  6000 0012               1892          BRA     SUBPRINTEND
0000241E                          1893  
0000241E                          1894  SUBPRINTEOR   * Displays 'EOR.' 
0000241E  43F9 00002AD7           1895          LEA     MEOR,A1
00002424  103C 000E               1896          MOVE.B  #14,D0
00002428  4E4F                    1897          TRAP    #15
0000242A  6000 0002               1898          BRA     SUBPRINTEND
0000242E                          1899  
0000242E                          1900  SUBPRINTEND
0000242E  4E75                    1901          RTS
00002430                          1902  
00002430                          1903  
00002430                          1904  *******************************************************************
00002430                          1905  * Error testing for DN->EA operations
00002430                          1906  *  Data register, address register, and immediate data cannot be destinations
00002430                          1907  SUBERRORTEST1
00002430                          1908          * test for DN or AN register, branches to invalid op code if true
00002430  0C39 0000 00002C6B      1909          CMP.B   #0,bit3
00002438  6700 0326               1910          BEQ     INVOP
0000243C  0C39 0001 00002C6B      1911          CMP.B   #1,bit3
00002444  6700 031A               1912          BEQ     INVOP
00002448                          1913          
00002448                          1914          * check if destination is immediate data
00002448  0C39 0007 00002C6B      1915          CMP.B   #7,bit3
00002450  6600 001E               1916          BNE     SUBERRORTEST11
00002454  0C39 0000 00002C6C      1917          CMP.B   #0,bit4
0000245C  6700 0012               1918          BEQ     SUBERRORTEST11
00002460  0C39 0001 00002C6C      1919          CMP.B   #1,bit4
00002468  6700 0006               1920          BEQ     SUBERRORTEST11
0000246C  6000 02F2               1921          BRA     INVOP
00002470                          1922          
00002470                          1923  SUBERRORTEST11
00002470  4E75                    1924          RTS
00002472                          1925  
00002472                          1926  
00002472                          1927  ******************************************************************************************************
00002472                          1928  *   Displays data register
00002472                          1929  SUBDN
00002472  43F9 00002A4E           1930          LEA     MDN,A1
00002478  103C 000E               1931          MOVE.B  #14,D0
0000247C  4E4F                    1932          TRAP    #15
0000247E                          1933  
0000247E  1239 00002C69           1934          MOVE.B  bit1,D1
00002484  103C 0003               1935          MOVE.B  #3,D0
00002488  4E4F                    1936          TRAP    #15
0000248A                          1937          
0000248A  6000 FF14               1938          BRA     SUBJMPA2
0000248E                          1939  
0000248E                          1940  *   Displays data register
0000248E                          1941  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
0000248E                          1942  SUBDN2
0000248E  43F9 00002A4E           1943          LEA     MDN,A1
00002494  103C 000E               1944          MOVE.B  #14,D0
00002498  4E4F                    1945          TRAP    #15
0000249A                          1946  
0000249A  1239 00002C6C           1947          MOVE.B  bit4,D1
000024A0  103C 0003               1948          MOVE.B  #3,D0
000024A4  4E4F                    1949          TRAP    #15
000024A6                          1950          
000024A6  6000 FEF8               1951          BRA     SUBJMPA2
000024AA                          1952  
000024AA                          1953  *   Displays address register
000024AA                          1954  SUBAN
000024AA  43F9 00002A50           1955          LEA     MAN,A1
000024B0  103C 000E               1956          MOVE.B  #14,D0
000024B4  4E4F                    1957          TRAP    #15
000024B6                          1958  
000024B6  1239 00002C6C           1959          MOVE.B  bit4,D1
000024BC  103C 0003               1960          MOVE.B  #3,D0
000024C0  4E4F                    1961          TRAP    #15
000024C2                          1962          
000024C2  6000 FEDC               1963          BRA     SUBJMPA2
000024C6                          1964  
000024C6                          1965  *   Displays address register
000024C6                          1966  *   This is for SUBA, SUBA puts An into bit1
000024C6                          1967  SUBAN2
000024C6  43F9 00002A50           1968          LEA     MAN,A1
000024CC  103C 000E               1969          MOVE.B  #14,D0
000024D0  4E4F                    1970          TRAP    #15
000024D2                          1971  
000024D2  1239 00002C69           1972          MOVE.B  bit1,D1
000024D8  103C 0003               1973          MOVE.B  #3,D0
000024DC  4E4F                    1974          TRAP    #15
000024DE                          1975          
000024DE  6000 FEC0               1976          BRA     SUBJMPA2
000024E2                          1977  
000024E2                          1978  
000024E2                          1979  *   Displays indirect address register
000024E2                          1980  SUBANID
000024E2  43F9 00002A2B           1981          LEA     OPENBRA,A1
000024E8  103C 000E               1982          MOVE.B  #14,D0
000024EC  4E4F                    1983          TRAP    #15
000024EE                          1984  
000024EE  43F9 00002A50           1985          LEA     MAN,A1
000024F4  103C 000E               1986          MOVE.B  #14,D0
000024F8  4E4F                    1987          TRAP    #15
000024FA                          1988  
000024FA  1239 00002C6C           1989          MOVE.B  bit4,D1
00002500  103C 0003               1990          MOVE.B  #3,D0
00002504  4E4F                    1991          TRAP    #15
00002506                          1992  
00002506  43F9 00002A2D           1993          LEA     CLOSEBRA,A1
0000250C  103C 000E               1994          MOVE.B  #14,D0
00002510  4E4F                    1995          TRAP    #15
00002512                          1996  
00002512  6000 FE8C               1997          BRA     SUBJMPA2
00002516                          1998  
00002516                          1999  *   Displays indirect address register with post increment
00002516                          2000  SUBANIDPOS
00002516  43F9 00002A2B           2001          LEA     OPENBRA,A1
0000251C  103C 000E               2002          MOVE.B  #14,D0
00002520  4E4F                    2003          TRAP    #15
00002522                          2004  
00002522  43F9 00002A50           2005          LEA     MAN,A1
00002528  103C 000E               2006          MOVE.B  #14,D0
0000252C  4E4F                    2007          TRAP    #15
0000252E                          2008  
0000252E  1239 00002C6C           2009          MOVE.B  bit4,D1
00002534  103C 0003               2010          MOVE.B  #3,D0
00002538  4E4F                    2011          TRAP    #15
0000253A                          2012  
0000253A  43F9 00002A2D           2013          LEA     CLOSEBRA,A1
00002540  103C 000E               2014          MOVE.B  #14,D0
00002544  4E4F                    2015          TRAP    #15
00002546                          2016  
00002546  43F9 00002A2F           2017          LEA     POS,A1
0000254C  103C 000E               2018          MOVE.B  #14,D0
00002550  4E4F                    2019          TRAP    #15
00002552                          2020  
00002552  6000 FE4C               2021          BRA     SUBJMPA2
00002556                          2022  
00002556                          2023  *   Displays indirect address register with pre decrement
00002556                          2024  SUBANIDNEG
00002556  43F9 00002A31           2025          LEA     NEG,A1
0000255C  103C 000E               2026          MOVE.B  #14,D0
00002560  4E4F                    2027          TRAP    #15
00002562                          2028  
00002562  43F9 00002A2B           2029          LEA     OPENBRA,A1
00002568  103C 000E               2030          MOVE.B  #14,D0
0000256C  4E4F                    2031          TRAP    #15
0000256E                          2032  
0000256E  43F9 00002A50           2033          LEA     MAN,A1
00002574  103C 000E               2034          MOVE.B  #14,D0
00002578  4E4F                    2035          TRAP    #15
0000257A                          2036  
0000257A  1239 00002C6C           2037          MOVE.B  bit4,D1
00002580  103C 0003               2038          MOVE.B  #3,D0
00002584  4E4F                    2039          TRAP    #15
00002586                          2040  
00002586  43F9 00002A2D           2041          LEA     CLOSEBRA,A1
0000258C  103C 000E               2042          MOVE.B  #14,D0
00002590  4E4F                    2043          TRAP    #15
00002592                          2044  
00002592  6000 FE0C               2045          BRA     SUBJMPA2
00002596                          2046  
00002596                          2047  
00002596                          2048  
00002596                          2049  
00002596                          2050  ******************************************************************************************************
00002596                          2051  * Displays the EA as hex numbers
00002596                          2052  * 
00002596                          2053  SUBEA
00002596                          2054          *   This finds which mode to use
00002596  0C39 0000 00002C6B      2055          CMP.B   #$0,bit3
0000259E  6700 FEEE               2056          BEQ     SUBDN2
000025A2  0C39 0001 00002C6B      2057          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
000025AA  6700 FEFE               2058          BEQ     SUBAN
000025AE  0C39 0002 00002C6B      2059          CMP.B   #$2,bit3
000025B6  6700 FF2A               2060          BEQ     SUBANID
000025BA  0C39 0003 00002C6B      2061          CMP.B   #$3,bit3
000025C2  6700 FF52               2062          BEQ     SUBANIDPOS
000025C6  0C39 0004 00002C6B      2063          CMP.B   #$4,bit3
000025CE  6786                    2064          BEQ     SUBANIDNEG
000025D0  0C39 0005 00002C6B      2065          CMP.B   #$5,bit3
000025D8  6700 0424               2066          BEQ     ERROR
000025DC  0C39 0006 00002C6B      2067          CMP.B   #$6,bit3
000025E4  6700 0418               2068          BEQ     ERROR
000025E8  0C39 0007 00002C6B      2069          CMP.B   #$7,bit3
000025F0  6700 0002               2070          BEQ     SUBEAHEX
000025F4                          2071  
000025F4                          2072  SUBEAHEX
000025F4  0C39 0004 00002C6C      2073          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
000025FC  6700 0086               2074          BEQ     SUBEAID
00002600                          2075  SUBEAID2
00002600                          2076          *   Else it will assume it is absolute addressing mode
00002600  43F9 00002A43           2077          LEA     MHEX,A1
00002606  103C 000E               2078          MOVE.B  #14,D0
0000260A  4E4F                    2079          TRAP    #15
0000260C                          2080  
0000260C  0C39 0000 00002C6C      2081          CMP.B   #$0,bit4
00002614  6700 007E               2082          BEQ     SUBEAHEX1
00002618  0C39 0001 00002C6C      2083          CMP.B   #$1,bit4
00002620  6700 007A               2084          BEQ     SUBEAHEX2
00002624                          2085  
00002624  0C39 0000 00002C6A      2086          CMP.B   #$0,bit2            * SUB byte displays as word
0000262C  6700 0066               2087          BEQ     SUBEAHEX1
00002630  0C39 0004 00002C6A      2088          CMP.B   #$4,bit2            * SUB byte displays as word
00002638  6700 005A               2089          BEQ     SUBEAHEX1
0000263C  0C39 0001 00002C6A      2090          CMP.B   #$1,bit2            * SUB word
00002644  6700 004E               2091          BEQ     SUBEAHEX1
00002648  0C39 0005 00002C6A      2092          CMP.B   #$5,bit2            * SUB word
00002650  6700 0042               2093          BEQ     SUBEAHEX1
00002654  0C39 0003 00002C6A      2094          CMP.B   #$3,bit2            * SUBA word
0000265C  6700 0036               2095          BEQ     SUBEAHEX1
00002660  0C39 0002 00002C6A      2096          CMP.B   #$2,bit2            * SUB longword
00002668  6700 0032               2097          BEQ     SUBEAHEX2
0000266C  0C39 0006 00002C6A      2098          CMP.B   #$6,bit2            * SUB longword
00002674  6700 0026               2099          BEQ     SUBEAHEX2
00002678  0C39 0007 00002C6A      2100          CMP.B   #$7,bit2            * SUBA longword
00002680  6700 001A               2101          BEQ     SUBEAHEX2
00002684                          2102  
00002684                          2103  SUBEAID
00002684  43F9 00002A33           2104          LEA     HASH,A1
0000268A  103C 000E               2105          MOVE.B  #14,D0
0000268E  4E4F                    2106          TRAP    #15
00002690  6000 FF6E               2107          BRA     SUBEAID2
00002694                          2108  
00002694                          2109  SUBEAHEX1  
00002694                          2110          *absolute address word
00002694  1E3C 0002               2111          MOVE.B  #2,D7
00002698  6000 000A               2112          BRA     SUBEAHEX3
0000269C                          2113  
0000269C                          2114  SUBEAHEX2  *absolute address long
0000269C  1E3C 0004               2115          MOVE.B  #4,D7
000026A0  6000 0002               2116          BRA     SUBEAHEX3
000026A4                          2117  
000026A4                          2118  SUBEAHEX3
000026A4  BE3C 0000               2119          CMP.B   #0,D7               Compares current addr to ending addr
000026A8  6700 FCF6               2120          BEQ     SUBJMPA2            Branches to done if they are equal
000026AC                          2121  
000026AC                          2122      
000026AC  141E                    2123          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000026AE                          2124          
000026AE  1602                    2125          MOVE.B  D2,D3               Copies data at D2 to D3
000026B0                          2126          *   this gets digit in 10's place
000026B0  E80B                    2127          LSR.B   #4,D3               Shifts right to get rid of 1's place
000026B2                          2128          *   this gets digit in 1's place
000026B2  E90A                    2129          LSL.B   #4,D2               Shifts left to get rid of 10's place
000026B4  E80A                    2130          LSR.B   #4,D2               Shifts back right into 1's place
000026B6                          2131  
000026B6                          2132          
000026B6                          2133          *   D3 holds digit in 10's place
000026B6                          2134          *   D2 holds digit in 1's place
000026B6                          2135          
000026B6  1203                    2136          MOVE.B  D3,D1               Displays digit in 10's place first
000026B8                          2137  
000026B8                          2138          *   converts digits 10+ into letters
000026B8                          2139  
000026B8  47F9 000026CC           2140          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
000026BE  B23C 0009               2141          CMP.B   #9,D1               Compares digit to 9
000026C2  6E00 0164               2142          BGT     CONV                Print out letter representation if greater than 9
000026C6                          2143  
000026C6  103C 0003               2144          MOVE.B  #3,D0               Displays digit if it is less than A
000026CA  4E4F                    2145          TRAP    #15
000026CC                          2146          
000026CC                          2147  SUBEAHEX4    
000026CC  1202                    2148          MOVE.B  D2,D1               Displays digit in 1's place second
000026CE                          2149  
000026CE                          2150          *   converts digits 10+ into letters
000026CE  47F9 000026E2           2151          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
000026D4  B23C 0009               2152          CMP.B   #9,D1               Compares digit to 9
000026D8  6E00 014E               2153          BGT     CONV                Print out letter representation if greater than 9
000026DC                          2154          
000026DC  103C 0003               2155          MOVE.B  #3,D0               Displays digit if it is less than A
000026E0  4E4F                    2156          TRAP    #15
000026E2                          2157          
000026E2                          2158  SUBEAHEX5         
000026E2                          2159  * Display counter -- creates new line every 8 bytes
000026E2                          2160          * D7 is used as counter
000026E2                          2161          
000026E2  5307                    2162          SUB.B   #1,D7                       
000026E4  60BE                    2163          BRA     SUBEAHEX3              Loops back to display next address
000026E6                          2164  
000026E6                          2165  ***   display EA ends here
000026E6                          2166  
000026E6                          2167  ******************************************************************************************************
000026E6                          2168  * Displays the EA as hex numbers
000026E6                          2169  * INPUT: Size of EA in D4; 1 = word, 2 = longword
000026E6                          2170  * OUTPUT: Displays size of EA reading from A6
000026E6                          2171  * Jumps to location stored in A2 when finished
000026E6                          2172  DISPEA
000026E6  43F9 00002A43           2173          LEA     MHEX,A1
000026EC  103C 000E               2174          MOVE.B  #14,D0
000026F0  4E4F                    2175          TRAP    #15
000026F2                          2176  
000026F2  B83C 0002               2177          CMP.B   #$2,D4              Branches to longword display if size is 2
000026F6  6700 000A               2178          BEQ     DISPEALONG          Else it will assume word length
000026FA                          2179  
000026FA                          2180  DISPEAWORD
000026FA                          2181          *absolute address word
000026FA  1E3C 0002               2182          MOVE.B  #2,D7
000026FE  6000 000A               2183          BRA     DISPEA3
00002702                          2184   
00002702                          2185  DISPEALONG
00002702                          2186          *absolute address long
00002702  1E3C 0004               2187          MOVE.B  #4,D7
00002706  6000 0002               2188          BRA     DISPEA3
0000270A                          2189  
0000270A                          2190  DISPEA3
0000270A  BE3C 0000               2191          CMP.B   #0,D7               Compares current addr to ending addr
0000270E  6700 FC90               2192          BEQ     SUBJMPA2            Branches to done if they are equal
00002712                          2193  
00002712                          2194      
00002712  141E                    2195          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002714                          2196          
00002714  1602                    2197          MOVE.B  D2,D3               Copies data at D2 to D3
00002716                          2198          *   this gets digit in 10's place
00002716  E80B                    2199          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002718                          2200          *   this gets digit in 1's place
00002718  E90A                    2201          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000271A  E80A                    2202          LSR.B   #4,D2               Shifts back right into 1's place
0000271C                          2203  
0000271C                          2204          
0000271C                          2205          *   D3 holds digit in 10's place
0000271C                          2206          *   D2 holds digit in 1's place
0000271C                          2207          
0000271C  1203                    2208          MOVE.B  D3,D1               Displays digit in 10's place first
0000271E                          2209  
0000271E                          2210          *   converts digits 10+ into letters
0000271E                          2211  
0000271E  47F9 00002732           2212          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002724  B23C 0009               2213          CMP.B   #9,D1               Compares digit to 9
00002728  6E00 00FE               2214          BGT     CONV                Print out letter representation if greater than 9
0000272C                          2215  
0000272C  103C 0003               2216          MOVE.B  #3,D0               Displays digit if it is less than A
00002730  4E4F                    2217          TRAP    #15
00002732                          2218    
00002732                          2219  DISPEA4
00002732  1202                    2220          MOVE.B  D2,D1               Displays digit in 1's place second
00002734                          2221  
00002734                          2222          *   converts digits 10+ into letters
00002734  47F9 00002748           2223          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
0000273A  B23C 0009               2224          CMP.B   #9,D1               Compares digit to 9
0000273E  6E00 00E8               2225          BGT     CONV                Print out letter representation if greater than 9
00002742                          2226          
00002742  103C 0003               2227          MOVE.B  #3,D0               Displays digit if it is less than A
00002746  4E4F                    2228          TRAP    #15
00002748                          2229        
00002748                          2230  DISPEA5
00002748                          2231  * Display counter -- creates new line every 8 bytes
00002748                          2232          * D7 is used as counter
00002748                          2233          
00002748  5307                    2234          SUB.B   #1,D7                       
0000274A  60BE                    2235          BRA     DISPEA3              Loops back to display next address
0000274C                          2236  
0000274C                          2237  ***   display EA ends here
0000274C                          2238  
0000274C                          2239  *******************************************************************
0000274C                          2240  * Clears all of the data registers
0000274C                          2241  CLRDN
0000274C  4280                    2242          CLR.L   D0
0000274E  4281                    2243          CLR.L   D1
00002750  4282                    2244          CLR.L   D2
00002752  4283                    2245          CLR.L   D3
00002754  4284                    2246          CLR.L   D4
00002756  4285                    2247          CLR.L   D5
00002758  4286                    2248          CLR.L   D6
0000275A  4287                    2249          CLR.L   D7
0000275C  4E75                    2250          RTS
0000275E                          2251  
0000275E                          2252  ********************************************************************
0000275E                          2253  * Invalid op-code handling
0000275E                          2254  * Displays DATA YYYY
0000275E                          2255  *  YYYY represents the op-code that failed
0000275E                          2256  INVOPCODE
0000275E  DE1E                    2257          ADD.B   (A6)+,D7
00002760                          2258  
00002760                          2259  INVOP
00002760  43F9 00002A92           2260          LEA     MDATA,A1
00002766  103C 000E               2261          MOVE.B  #14,D0
0000276A  4E4F                    2262          TRAP    #15
0000276C  43F9 00002A25           2263          LEA     TAB,A1
00002772  103C 000E               2264          MOVE.B  #14,D0
00002776  4E4F                    2265          TRAP    #15
00002778  43F9 00002A43           2266          LEA     MHEX,A1
0000277E  103C 000E               2267          MOVE.B  #14,D0
00002782  4E4F                    2268          TRAP    #15
00002784                          2269          
00002784  1C3C 0002               2270          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002788                          2271          
00002788  3407                    2272          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
0000278A  E04A                    2273          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
0000278C  6000 0004               2274          BRA     INVOP2              Skips the second part to do later
00002790                          2275  
00002790                          2276  INVOP1
00002790  1407                    2277          MOVE.B  D7,D2
00002792                          2278  INVOP2
00002792  1602                    2279          MOVE.B  D2,D3               Copies data at D2 to D3
00002794                          2280          *   this gets digit in 10's place
00002794  E80B                    2281          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002796                          2282          *   this gets digit in 1's place
00002796  E90A                    2283          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002798  E80A                    2284          LSR.B   #4,D2               Shifts back right into 1's place
0000279A                          2285  
0000279A                          2286          
0000279A                          2287          *   D3 holds digit in 10's place
0000279A                          2288          *   D2 holds digit in 1's place
0000279A                          2289          
0000279A  1203                    2290          MOVE.B  D3,D1               Displays digit in 10's place first
0000279C                          2291  
0000279C                          2292          *   converts digits 10+ into letters
0000279C                          2293  
0000279C  47F9 000027B0           2294          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
000027A2  B23C 0009               2295          CMP.B   #9,D1               Compares digit to 9
000027A6  6E00 0080               2296          BGT     CONV                Print out letter representation if greater than 9
000027AA                          2297  
000027AA  103C 0003               2298          MOVE.B  #3,D0               Displays digit if it is less than A
000027AE  4E4F                    2299          TRAP    #15
000027B0                          2300          
000027B0                          2301  INVOP3   
000027B0  1202                    2302          MOVE.B  D2,D1               Displays digit in 1's place second
000027B2                          2303  
000027B2                          2304          *   converts digits 10+ into letters
000027B2  47F9 000027C6           2305          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
000027B8  B23C 0009               2306          CMP.B   #9,D1               Compares digit to 9
000027BC  6E00 006A               2307          BGT     CONV                Print out letter representation if greater than 9
000027C0                          2308          
000027C0  103C 0003               2309          MOVE.B  #3,D0               Displays digit if it is less than A
000027C4  4E4F                    2310          TRAP    #15
000027C6                          2311          
000027C6                          2312  INVOP4
000027C6                          2313  * Display counter -- creates new line every 8 bytes
000027C6                          2314          * D6 is used as counter
000027C6                          2315          
000027C6  5306                    2316          SUB.B   #1,D6
000027C8  BC3C 0000               2317          CMP.B   #0,D6
000027CC  6700 0004               2318          BEQ     ENDNEWLINE
000027D0  60BE                    2319          BRA     INVOP1              Loops back to display next address
000027D2                          2320  
000027D2                          2321  
000027D2                          2322  ******************************************************************************************************
000027D2                          2323  * Creates a new line after an op-code is displayed, loops back to start to display next code
000027D2                          2324  ENDNEWLINE
000027D2  43F9 00002A22           2325          LEA     NEWLINE,A1          Creates a new line in output window
000027D8  103C 000E               2326          MOVE.B  #14,D0
000027DC  4E4F                    2327          TRAP    #15
000027DE                          2328  
000027DE  5339 00002C5F           2329          SUB.B   #1,dispcount
000027E4  0C39 0000 00002C5F      2330          CMP.B   #0,dispcount               Checks if display counter is zero
000027EC  6600 E8F4               2331          BNE     NEWADDR
000027F0                          2332  
000027F0                          2333  * Asks user to press enter to continue
000027F0                          2334  * Resets counter
000027F0  43F9 00002A22           2335          LEA     NEWLINE,A1          Creates a new line in output window
000027F6  103C 000E               2336          MOVE.B  #14,D0
000027FA  4E4F                    2337          TRAP    #15
000027FC                          2338          
000027FC  43F9 00002C43           2339          LEA     MCONT,A1            Asks user to press enter to continue
00002802  103C 000E               2340          MOVE.B  #14,D0
00002806  4E4F                    2341          TRAP    #15
00002808                          2342  
00002808  103C 0004               2343          MOVE.B  #4,D0               Takes in user input
0000280C  4E4F                    2344          TRAP    #15
0000280E  4281                    2345          CLR.L   D1                  Clears D1 incase user decides to input something
00002810                          2346  
00002810  43F9 00002A22           2347          LEA     NEWLINE,A1          Creates a new line in output window
00002816  103C 000E               2348          MOVE.B  #14,D0
0000281A  4E4F                    2349          TRAP    #15
0000281C                          2350  
0000281C  13FC 001E 00002C5F      2351          MOVE.B  #dispnum,dispcount  Resets display counter
00002824  6000 E8BC               2352          BRA     NEWADDR             Loops back to beginning
00002828                          2353  
00002828                          2354  
00002828                          2355  ******************************************************************************************************
00002828                          2356  * Converts decimal number into hex and displays it
00002828                          2357  *   converts number 10-15 to A-F
00002828                          2358  *   INPUT: decimal number in D1
00002828                          2359  *   OUTPUT: HEX number to output
00002828  B23C 000A               2360  CONV    CMP.B   #10,D1              Displays 10 as A
0000282C  6700 002A               2361          BEQ     HEXA
00002830  B23C 000B               2362          CMP.B   #11,D1              Displays 11 as B
00002834  6700 002C               2363          BEQ     HEXB
00002838  B23C 000C               2364          CMP.B   #12,D1              Displays 12 as C
0000283C  6700 002E               2365          BEQ     HEXC
00002840  B23C 000D               2366          CMP.B   #13,D1              Displays 13 as D
00002844  6700 0030               2367          BEQ     HEXD
00002848  B23C 000E               2368          CMP.B   #14,D1              Displays 14 as E
0000284C  6700 0032               2369          BEQ     HEXE
00002850  B23C 000F               2370          CMP.B   #15,D1              Displays 15 as F
00002854  6700 0034               2371          BEQ     HEXF
00002858                          2372  
00002858  43F9 00002A35           2373  HEXA    LEA     DISPA,A1            Loads A character
0000285E  6000 0034               2374          BRA     PRINT
00002862                          2375    
00002862  43F9 00002A37           2376  HEXB    LEA     DISPB,A1            Loads B character
00002868  6000 002A               2377          BRA     PRINT
0000286C                          2378  
0000286C  43F9 00002A39           2379  HEXC    LEA     DISPC,A1            Loads C character
00002872  6000 0020               2380          BRA     PRINT
00002876                          2381  
00002876  43F9 00002A3B           2382  HEXD    LEA     DISPD,A1            Loads D character
0000287C  6000 0016               2383          BRA     PRINT
00002880                          2384  
00002880  43F9 00002A3D           2385  HEXE    LEA     DISPE,A1            Loads E character
00002886  6000 000C               2386          BRA     PRINT
0000288A                          2387  
0000288A  43F9 00002A3F           2388  HEXF    LEA     DISPF,A1            Loads F character
00002890  6000 0002               2389          BRA     PRINT
00002894                          2390  
00002894  103C 000E               2391  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002898  4E4F                    2392          TRAP    #15                 Prints out message in A1
0000289A  4ED3                    2393          JMP     (A3)
0000289C                          2394  
0000289C                          2395  ******************************************************************************
0000289C                          2396  * Converts decimal input to hex
0000289C                          2397  * INPUT: Decimal inside D2
0000289C                          2398  * OUTPUT: HEX into D3
0000289C                          2399  *   Converts number in decimal to hex        
0000289C                          2400  DEC2HEX
0000289C  B43C 0030               2401          CMP.B   #$30,D2             0
000028A0  6700 00B0               2402          BEQ     D2HZERO
000028A4  B43C 0031               2403          CMP.B   #$31,D2             1
000028A8  6700 00AE               2404          BEQ     D2HONE
000028AC  B43C 0032               2405          CMP.B   #$32,D2             2
000028B0  6700 00AC               2406          BEQ     D2HTWO
000028B4  B43C 0033               2407          CMP.B   #$33,D2             3
000028B8  6700 00AA               2408          BEQ     D2HTHREE
000028BC  B43C 0034               2409          CMP.B   #$34,D2             4
000028C0  6700 00A8               2410          BEQ     D2HFOUR
000028C4  B43C 0035               2411          CMP.B   #$35,D2             5
000028C8  6700 00A6               2412          BEQ     D2HFIVE
000028CC  B43C 0036               2413          CMP.B   #$36,D2             6
000028D0  6700 00A4               2414          BEQ     D2HSIX
000028D4  B43C 0037               2415          CMP.B   #$37,D2             7
000028D8  6700 00A2               2416          BEQ     D2HSEVEN
000028DC  B43C 0038               2417          CMP.B   #$38,D2             8
000028E0  6700 00A0               2418          BEQ     D2HEIGHT
000028E4  B43C 0039               2419          CMP.B   #$39,D2             9
000028E8  6700 009E               2420          BEQ     D2HNINE
000028EC  B43C 0041               2421          CMP.B   #$41,D2             A
000028F0  6700 009C               2422          BEQ     D2HHEXA
000028F4  B43C 0042               2423          CMP.B   #$42,D2             B
000028F8  6700 009A               2424          BEQ     D2HHEXB
000028FC  B43C 0043               2425          CMP.B   #$43,D2             C
00002900  6700 0098               2426          BEQ     D2HHEXC
00002904  B43C 0044               2427          CMP.B   #$44,D2             D
00002908  6700 0096               2428          BEQ     D2HHEXD
0000290C  B43C 0045               2429          CMP.B   #$45,D2             E
00002910  6700 0094               2430          BEQ     D2HHEXE
00002914  B43C 0046               2431          CMP.B   #$46,D2             F
00002918  6700 0092               2432          BEQ     D2HHEXF
0000291C  B43C 0061               2433          CMP.B   #$61,D2             A
00002920  6700 006C               2434          BEQ     D2HHEXA
00002924  B43C 0062               2435          CMP.B   #$62,D2             B
00002928  6700 006A               2436          BEQ     D2HHEXB
0000292C  B43C 0063               2437          CMP.B   #$63,D2             C
00002930  6700 0068               2438          BEQ     D2HHEXC
00002934  B43C 0064               2439          CMP.B   #$64,D2             D
00002938  6700 0066               2440          BEQ     D2HHEXD
0000293C  B43C 0065               2441          CMP.B   #$65,D2             E
00002940  6700 0064               2442          BEQ     D2HHEXE
00002944  B43C 0066               2443          CMP.B   #$66,D2             F
00002948  6700 0062               2444          BEQ     D2HHEXF
0000294C                          2445  
0000294C                          2446          * User entered a non-hex character
0000294C                          2447          * Moves F to D1 to indicate error before returning
0000294C  123C 000F               2448          MOVE.B  #$F,D1
00002950  4E75                    2449          RTS
00002952                          2450  
00002952                          2451  *   Moves the appropiate hex number to D3
00002952  163C 0000               2452  D2HZERO MOVE.B  #$0,D3
00002956  4E75                    2453          RTS
00002958                          2454  
00002958                          2455  D2HONE
00002958  163C 0001               2456          MOVE.B  #$1,D3
0000295C  4E75                    2457          RTS
0000295E                          2458  
0000295E                          2459  D2HTWO
0000295E  163C 0002               2460          MOVE.B  #$2,D3
00002962  4E75                    2461          RTS
00002964                          2462  
00002964                          2463  D2HTHREE
00002964  163C 0003               2464          MOVE.B  #$3,D3
00002968  4E75                    2465          RTS
0000296A                          2466  
0000296A                          2467  D2HFOUR
0000296A  163C 0004               2468          MOVE.B  #$4,D3
0000296E  4E75                    2469          RTS
00002970                          2470  
00002970                          2471  D2HFIVE
00002970  163C 0005               2472          MOVE.B  #$5,D3
00002974  4E75                    2473          RTS
00002976                          2474  
00002976                          2475  D2HSIX
00002976  163C 0006               2476          MOVE.B  #$6,D3
0000297A  4E75                    2477          RTS
0000297C                          2478  
0000297C                          2479  D2HSEVEN
0000297C  163C 0007               2480          MOVE.B  #$7,D3
00002980  4E75                    2481          RTS
00002982                          2482  
00002982                          2483  D2HEIGHT
00002982  163C 0008               2484          MOVE.B  #$8,D3
00002986  4E75                    2485          RTS
00002988                          2486  
00002988                          2487  D2HNINE
00002988  163C 0009               2488          MOVE.B  #$9,D3
0000298C  4E75                    2489          RTS
0000298E                          2490  
0000298E                          2491  D2HHEXA
0000298E  163C 000A               2492          MOVE.B  #$A,D3
00002992  4E75                    2493          RTS
00002994                          2494  
00002994                          2495  D2HHEXB
00002994  163C 000B               2496          MOVE.B  #$B,D3
00002998  4E75                    2497          RTS
0000299A                          2498  
0000299A                          2499  D2HHEXC
0000299A  163C 000C               2500          MOVE.B  #$C,D3
0000299E  4E75                    2501          RTS
000029A0                          2502  
000029A0                          2503  D2HHEXD
000029A0  163C 000D               2504          MOVE.B  #$D,D3
000029A4  4E75                    2505          RTS
000029A6                          2506  
000029A6                          2507  D2HHEXE
000029A6  163C 000E               2508          MOVE.B  #$E,D3
000029AA  4E75                    2509          RTS
000029AC                          2510  
000029AC                          2511  D2HHEXF
000029AC  163C 000F               2512          MOVE.B  #$F,D3
000029B0  4E75                    2513          RTS
000029B2                          2514  
000029B2                          2515  *************************************************************************************************
000029B2                          2516  ASK4REPEAT
000029B2  43F9 00002A22           2517          LEA     NEWLINE,A1          Creates a new line in output window
000029B8  103C 000E               2518          MOVE.B  #14,D0
000029BC  4E4F                    2519          TRAP    #15
000029BE                          2520  ASK4REPEAT2
000029BE  43F9 00002B4A           2521          LEA     MREPEAT,A1          Asks user if they want to start over or exit
000029C4  103C 000E               2522          MOVE.B  #14,D0
000029C8  4E4F                    2523          TRAP    #15
000029CA                          2524  
000029CA  43F9 00002C6C           2525          LEA     bit4,A1             User has to enter Y to start over
000029D0  103C 0002               2526          MOVE.B  #2,D0               N to exit
000029D4  4E4F                    2527          TRAP    #15
000029D6                          2528  
000029D6  1239 00002C6C           2529          MOVE.B  bit4,D1             User input was stored in bit4
000029DC  B23C 0059               2530          CMP.B   #$59,D1             Char Y
000029E0  6700 E626               2531          BEQ     IOSTART
000029E4  B23C 0079               2532          CMP.B   #$79,D1             Char y
000029E8  6700 E61E               2533          BEQ     IOSTART
000029EC  B23C 004E               2534          CMP.B   #$4E,D1             Char N
000029F0  6700 001C               2535          BEQ     DONE
000029F4  B23C 006E               2536          CMP.B   #$6E,D1             Char n
000029F8  6700 0014               2537          BEQ     DONE
000029FC  60C0                    2538          BRA     ASK4REPEAT2          Asks again if user enters invalid character
000029FE                          2539  
000029FE                          2540  
000029FE                          2541  **************************************************************************************************
000029FE  43F9 00002C11           2542  ERROR   LEA     MERROR,A1
00002A04  103C 000E               2543          MOVE.B  #14,D0
00002A08  4E4F                    2544          TRAP    #15
00002A0A  6000 000E               2545          BRA     EXIT
00002A0E                          2546  
00002A0E  43F9 00002C28           2547  DONE    LEA     MDONE,A1
00002A14  103C 000E               2548          MOVE.B  #14,D0
00002A18  4E4F                    2549          TRAP    #15
00002A1A                          2550  
00002A1A  103C 0009               2551  EXIT    MOVE.B  #9,D0
00002A1E  4E4F                    2552          TRAP    #15
00002A20                          2553  
00002A20                          2554  ************************************ Output stuff **************************************
00002A20                          2555  * Stuff for output
00002A20                          2556  
00002A20  =0000000D               2557  CR      EQU     $0D
00002A20  =0000000A               2558  LF      EQU     $0A
00002A20                          2559  
00002A20= 20 00                   2560  SPACE       DC.B    ' ',0
00002A22= 0D 0A 00                2561  NEWLINE     DC.B    '',CR,LF,0
00002A25= 20 20 20 00             2562  TAB         DC.B    '   ',0
00002A29= 2C 00                   2563  COMMA       DC.B    ',',0
00002A2B= 28 00                   2564  OPENBRA     DC.B    '(',0
00002A2D= 29 00                   2565  CLOSEBRA    DC.B    ')',0
00002A2F= 2B 00                   2566  POS         DC.B    '+',0
00002A31= 2D 00                   2567  NEG         DC.B    '-',0
00002A33= 23 00                   2568  HASH        DC.B    '#',0
00002A35                          2569  
00002A35                          2570  
00002A35= 41 00                   2571  DISPA       DC.B    'A',0
00002A37= 42 00                   2572  DISPB       DC.B    'B',0
00002A39= 43 00                   2573  DISPC       DC.B    'C',0
00002A3B= 44 00                   2574  DISPD       DC.B    'D',0
00002A3D= 45 00                   2575  DISPE       DC.B    'E',0
00002A3F= 46 00                   2576  DISPF       DC.B    'F',0
00002A41                          2577  
00002A41= 2E 00                   2578  MDOT        DC.B    '.',0
00002A43= 24 00                   2579  MHEX        DC.B    '$',0
00002A45= 42 20 00                2580  MBYTE       DC.B    'B ',0
00002A48= 57 20 00                2581  MWORD       DC.B    'W ',0
00002A4B= 4C 20 00                2582  MLONG       DC.B    'L ',0
00002A4E= 44 00                   2583  MDN         DC.B    'D',0
00002A50= 41 00                   2584  MAN         DC.B    'A',0
00002A52                          2585  
00002A52= 4C 53 4C 00             2586  MLSL        DC.B    'LSL',0
00002A56= 4C 53 52 00             2587  MLSR        DC.B    'LSR',0
00002A5A= 4E 45 47 2E 00          2588  MMNEGW      DC.B    'NEG.',0
00002A5F= 44 49 56 53 2E 57 00    2589  MMDIVSW     DC.B    'DIVS.W',0
00002A66= 4D 55 4C 53 2E 57 00    2590  MMULSW      DC.B    'MULS.W',0
00002A6D= 4D 4F 56 45 2E 42 00    2591  MMOVEB      DC.B    'MOVE.B',0
00002A74= 4D 4F 56 45 2E 57 00    2592  MMOVEW      DC.B    'MOVE.W',0
00002A7B= 4D 4F 56 45 2E 4C 00    2593  MMOVEL      DC.B    'MOVE.L',0
00002A82= 4D 4F 56 45 41 2E ...   2594  MMOVEAW     DC.B    'MOVEA.W',0
00002A8A= 4D 4F 56 45 41 2E ...   2595  MMOVEAL     DC.B    'MOVEA.L',0
00002A92                          2596  
00002A92= 44 41 54 41 00          2597  MDATA       DC.B    'DATA',0
00002A97= 53 55 42 2E 00          2598  MSUB        DC.B    'SUB.',0
00002A9C= 53 55 42 41 2E 00       2599  MSUBA       DC.B    'SUBA.',0
00002AA2= 41 4E 44 2E 00          2600  MAND        DC.B    'AND.',0
00002AA7= 41 44 44 2E 00          2601  MADD        DC.B    'ADD.',0
00002AAC= 53 55 42 49 2E 00       2602  MSUBI       DC.B    'SUBI.',0
00002AB2= 4F 52 49 2E 00          2603  MORI        DC.B    'ORI.',0
00002AB7= 4E 4F 54 2E 00          2604  MNOT        DC.B    'NOT.',0
00002ABC= 4D 55 4C 53 2E 00       2605  MMUL        DC.B    'MULS.',0
00002AC2= 4E 45 47 00             2606  MNEG        DC.B    'NEG',0
00002AC6= 43 4D 50 2E 00          2607  MCMP        DC.B    'CMP.',0
00002ACB= 43 4D 50 49 2E 00       2608  MCMPI       DC.B    'CMPI.',0
00002AD1= 43 4D 50 41 2E 00       2609  MCMPA       DC.B    'CMPA.',0
00002AD7= 45 4F 52 2E 00          2610  MEOR        DC.B    'EOR.',0
00002ADC= 45 4F 52 49 2E 00       2611  MEORI       DC.B    'EORI.',0
00002AE2= 41 44 44 41 2E 00       2612  MADDA       DC.B    'ADDA.',0
00002AE8                          2613  
00002AE8= 42 45 51 00             2614  MBEQ        DC.B    'BEQ',0
00002AEC= 42 4E 45 00             2615  MBNE        DC.B    'BNE',0
00002AF0= 42 4C 54 00             2616  MBLT        DC.B    'BLT',0
00002AF4= 42 48 49 00             2617  MBHI        DC.B    'BHI',0
00002AF8= 42 52 41 00             2618  MBRA        DC.B    'BRA',0
00002AFC= 4E 4F 50 00             2619  MNOP        DC.B    'NOP',0
00002B00= 52 54 53 00             2620  MRTS        DC.B    'RTS',0
00002B04                          2621  
00002B04= 4C 65 6D 6D 65 20 ...   2622  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002B27= 47 69 6D 6D 65 20 ...   2623  MADDR2      DC.B    'Gimme that end address too homie: ',0
00002B4A= 54 72 79 6E 61 20 ...   2624  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00002B6A= 45 6E 64 20 61 64 ...   2625  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00002BA2= 41 64 64 72 65 73 ...   2626  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00002BD5= 52 65 2D 65 6E 74 ...   2627  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
00002BF1= 41 64 64 72 65 73 ...   2628  MIOERR4     DC.B    'Address must be an even number.',0
00002C11= 45 52 52 4F 52 3A ...   2629  MERROR      DC.B    'ERROR: Something broke',0
00002C28= 43 4F 4D 50 4C 45 ...   2630  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00002C43= 2A 2A 50 52 45 53 ...   2631  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00002C5F                          2632  
00002C5F                          2633  
00002C5F                          2634  ********************************** MEMORY STORAGE **********************************************
00002C5F                          2635  * Stores memory locations at the end of the program
00002C5F                          2636  * How DS works: Give it a variable name.
00002C5F                          2637  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00002C5F                          2638  *   Last is the number of storage you want. 
00002C5F                          2639  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00002C5F                          2640  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00002C5F                          2641  *            
00002C5F                          2642  
00002C5F                          2643  dispcount   DS.B    1           Used to count display lines
00002C60                          2644  
00002C60                          2645  startaddr   DS.L    1
00002C64                          2646  endaddr     DS.L    1
00002C68                          2647  
00002C68                          2648  bit0        DS.B    1           SEE NOTE UP TOP
00002C69                          2649  bit1        DS.B    1           SEE NOTE UP TOP
00002C6A                          2650  bit2        DS.B    1           SEE NOTE UP TOP
00002C6B                          2651  bit3        DS.B    1           SEE NOTE UP TOP
00002C6C                          2652  bit4        DS.B    1           SEE NOTE UP TOP
00002C6D                          2653  
00002C6D                          2654  
00002C6D                          2655      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              145E
ADDIMD0             148E
ADDIMD1             149C
ADDIMD4             14AA
ADDR1               7000
ADDR2               726C
ASK4REPEAT          29B2
ASK4REPEAT2         29BE
BCC                 1D5E
BCCBEQ              1DDA
BCCBHI              1DF8
BCCBLT              1DEE
BCCBNE              1DE4
BCCBRA              1DD0
BCCDISP             1DA4
BCCLONG             1D8C
BCCNEXT             1D94
BCCPRINT            1E02
BCCWORD             1D84
BIT0                2C68
BIT1                2C69
BIT2                2C6A
BIT3                2C6B
BIT4                2C6C
CLOSEBRA            2A2D
CLRDN               274C
CODE                11B6
COMMA               2A29
CONV                2828
CR                  D
D2HEIGHT            2982
D2HFIVE             2970
D2HFOUR             296A
D2HHEXA             298E
D2HHEXB             2994
D2HHEXC             299A
D2HHEXD             29A0
D2HHEXE             29A6
D2HHEXF             29AC
D2HNINE             2988
D2HONE              2958
D2HSEVEN            297C
D2HSIX              2976
D2HTHREE            2964
D2HTWO              295E
D2HZERO             2952
DEC2HEX             289C
DISPA               2A35
DISPADDR            10B8
DISPADDR1           1100
DISPADDR2           1102
DISPADDR3           1136
DISPADDR4           114C
DISPADDR5           1162
DISPADDR6           1178
DISPADDREND         1182
DISPADDRSTART       10F4
DISPB               2A37
DISPC               2A39
DISPCOUNT           2C5F
DISPD               2A3B
DISPE               2A3D
DISPEA              26E6
DISPEA3             270A
DISPEA4             2732
DISPEA5             2748
DISPEALONG          2702
DISPEAWORD          26FA
DISPF               2A3F
DISPNUM             1E
DIVSW               19AA
DONE                2A0E
ENDADDR             2C64
ENDNEWLINE          27D2
ENDNLINC            191C
ERROR               29FE
EXIT                2A1A
HANDLEDES           14C0
HASH                2A33
HEXA                2858
HEXB                2862
HEXC                286C
HEXD                2876
HEXE                2880
HEXF                288A
IMD                 1E12
IMD2                1E2C
IMD3                1E34
IMD4                1E40
IMDBYTE             1EDA
IMDEA               1F02
IMDEA2              1F1E
IMDEA3              1F34
IMDLONG             1EF8
IMDPRINT            1E7A
IMDPRINTCMPI        1EC8
IMDPRINTEND         1ED2
IMDPRINTEORI        1EBE
IMDPRINTORI         1EAA
IMDPRINTSUBI        1EB4
IMDWORD             1EEA
INVOP               2760
INVOP1              2790
INVOP2              2792
INVOP3              27B0
INVOP4              27C6
INVOPCODE           275E
IOERROR1            107A
IOERROR2            1088
IOERROR3            1098
IOERROR4            10A8
IOGETADDR           1030
IOLOOP              1056
IOSTART             1008
IOSTARTLOOP         1050
LF                  A
LSLR                1B8E
LSLRDESD            180C
LSLRMEM             1C1C
LSLRSRCD            17E4
MADD                2AA7
MADDA               2AE2
MADDR1              2B04
MADDR2              2B27
MAN                 2A50
MAND                2AA2
MBEQ                2AE8
MBHI                2AF4
MBLT                2AF0
MBNE                2AEC
MBRA                2AF8
MBYTE               2A45
MCMP                2AC6
MCMPA               2AD1
MCMPI               2ACB
MCONT               2C43
MDATA               2A92
MDN                 2A4E
MDONE               2C28
MDOT                2A41
MEOR                2AD7
MEORI               2ADC
MERROR              2C11
MHEX                2A43
MIOERR1             2B6A
MIOERR2             2BA2
MIOERR3             2BD5
MIOERR4             2BF1
MISC                1F38
MISCBIT2            1F66
MISCBIT3            1F72
MISCBYTE            1FF0
MISCEA              201E
MISCEA2             203A
MISCLONG            2012
MISCNOP             1F86
MISCNOT             1FA6
MISCNOT2            1FAE
MISCNOT3            1FB6
MISCNOT4            1FC2
MISCPRINT           203E
MISCPRINTEND        206A
MISCPRINTNEG        2060
MISCPRINTNOT        2056
MISCRTS             1F96
MISCWORD            2002
MLONG               2A4B
MLSL                2A52
MLSR                2A56
MMDIVSW             2A5F
MMNEGW              2A5A
MMOVEAL             2A8A
MMOVEAW             2A82
MMOVEB              2A6D
MMOVEL              2A7B
MMOVEW              2A74
MMUL                2ABC
MMULSW              2A66
MNEG                2AC2
MNOP                2AFC
MNOT                2AB7
MORI                2AB2
MOVB                13DA
MOVBDN1             1758
MOVBDN2             18F8
MOVEAL              1386
MOVEAN1             1510
MOVEAN2             1828
MOVEAW              12A6
MOVEIAN1            1584
MOVEIAND1           16B8
MOVEIANI1           1618
MOVIAN2             1844
MOVIAND2            18B8
MOVIANI2            1878
MOVL                12FA
MOVW                121A
MREPEAT             2B4A
MRTS                2B00
MSUB                2A97
MSUBA               2A9C
MSUBI               2AAC
MULSW               1920
MWORD               2A48
NEG                 2A31
NEGW                1A38
NEWADDR             10E2
NEWLINE             2A22
OPENBRA             2A2B
POS                 2A2F
PRINT               2894
PRINTB              1C5A
PRINTBYTE           1A92
PRINTL              1CC2
PRINTLONG           1B3A
PRINTLSL            1BE8
PRINTLSLRCOUNT      1CF6
PRINTLSR            1D2A
PRINTW              1C8E
PRINTWORD           1AE6
SPACE               2A20
START               1000
STARTADDR           2C60
SUB                 2072
SUB1                20A4
SUB2                2086
SUB3                208E
SUB4                2098
SUBA                22C0
SUBACHECK           20E0
SUBACONT            2314
SUBAN               24AA
SUBAN2              24C6
SUBANID             24E2
SUBANIDNEG          2556
SUBANIDPOS          2516
SUBDN               2472
SUBDN2              248E
SUBEA               2596
SUBEAHEX            25F4
SUBEAHEX1           2694
SUBEAHEX2           269C
SUBEAHEX3           26A4
SUBEAHEX4           26CC
SUBEAHEX5           26E2
SUBEAID             2684
SUBEAID2            2600
SUBERRORTEST1       2430
SUBERRORTEST11      2470
SUBJMPA2            23A0
SUBPRINT            23A2
SUBPRINTADD         23F2
SUBPRINTADDA        2304
SUBPRINTAND         23E2
SUBPRINTB           2402
SUBPRINTCMP         240E
SUBPRINTCMPA        22F4
SUBPRINTEND         242E
SUBPRINTEOR         241E
SUBPRINTSUB         23D2
SUBPRINTSUBA        22E4
SUBSIZE1            2140
SUBSIZE11           2166
SUBSIZE12           217C
SUBSIZE2            2180
SUBSIZE21           21A6
SUBSIZE22           21BC
SUBSIZE3            21C0
SUBSIZE31           21E6
SUBSIZE32           21FC
SUBSIZE4            2200
SUBSIZE41           2226
SUBSIZE42           223C
SUBSIZE5            2240
SUBSIZE51           2266
SUBSIZE52           227C
SUBSIZE6            2280
SUBSIZE61           22A6
SUBSIZE62           22BC
SUBSIZE7            232C
SUBSIZE71           234E
SUBSIZE72           2364
SUBSIZE8            2368
SUBSIZE81           2388
SUBSIZE82           239C
TAB                 2A25
