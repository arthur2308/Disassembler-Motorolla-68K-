00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/5/2015 7:27:01 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000                            64  
00000000  =0000001E                 65  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            66  
00000000                            67  
00000000                            68  
00001000                            69      ORG    $1000
00001000                            70  START:                  ; first instruction of program
00001000                            71  
00001000                            72          
00001000                            73          
00001000                            74  
00001000                            75          *   this stores some test EA into memory m,
00001000                            76          *LEA     addr1,A1
00001000                            77          *MOVE.W  #$0440,(A1)+        *917C
00001000                            78          *MOVE.W  #$917C,(A1)+       
00001000                            79          *MOVE.L  #$5555A7FF,(A1)+
00001000                            80          *MOVE.W  #$9078,(A1)+
00001000                            81          *MOVE.W  #$5555,(A1)+
00001000                            82          
00001000                            83          
00001000                            84          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            85          
00001000                            86          *MOVE.L  #$6700F0D8,$7000
00001000                            87          *MOVE.W  #$4E71,$7000         NOP
00001000                            88  
00001000                            89          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            90          *MOVE.L  #$48E3FAF5,$7000
00001000                            91          *MOVE.L  #$4CF8CDD9,$7004
00001000                            92          *MOVE.W  #$4000,$7008
00001000                            93          * start address: 7000
00001000                            94          * end address:   766C
00001000                            95  
00001000                            96          *MOVE.W  #$E762,$7000
00001000                            97          *MOVE.L  #$4CF8CDD9,$7004
00001000                            98          *MOVE.W  #$4000,$7008
00001000                            99  
00001000                           100  *********************************************************************************************************************
00001000                           101  * Takes in user start and end address
00001000                           102  
00001000                           103  IOSTART
00001000                           104  *   Displays message asking for address
00001000  43F9 00002FC0            105          LEA     MADDR1,A1           Loads message to retrieve first number
00001006  6100 0020                106          BSR     IOGETADDR
0000100A                           107  
0000100A  0804 0000                108          BTST    #0,D4               Checks of the starting address is an odd number
0000100E  6600 0090                109          BNE     IOERROR4            Throws an error if it is because it will crash
00001012                           110  
00001012  2E04                     111          MOVE.L  D4,D7               Moves starting address to D7 for now
00001014  43F9 00002FE3            112          LEA     MADDR2,A1           Then grabs the ending address
0000101A  6100 000C                113          BSR     IOGETADDR
0000101E  B887                     114          CMP.L   D7,D4               Compares the start address to end address
00001020  6E00 008E                115          BGT     DISPADDR            Continues if start < end
00001024  6000 004C                116          BRA     IOERROR1            Error if not
00001028                           117  
00001028                           118  IOGETADDR
00001028  2649                     119          MOVEA.L A1,A3               Saves the message incase of an error
0000102A  103C 000E                120          MOVE.B  #14,D0              Prepares to display message
0000102E  4E4F                     121          TRAP    #15                 Displays message
00001030                           122  
00001030  4244                     123          CLR     D4                  Clears D4 register to prevent errors
00001032                           124  
00001032  43F9 0000311C            125          LEA     startaddr,A1        Uses this memory location to store the data
00001038  103C 0002                126          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
0000103C  4E4F                     127          TRAP    #15
0000103E                           128  
0000103E  B23C 0008                129          CMP.B   #8,D1               Throws an error if the input is longer than a longword
00001042  6E00 003C                130          BGT     IOERROR2
00001046  1A01                     131          MOVE.B  D1,D5               Moves the length of the input to D5
00001048                           132  
00001048                           133  IOSTARTLOOP
00001048  45F9 0000311C            134          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
0000104E                           135  
0000104E                           136  IOLOOP
0000104E  141A                     137          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001050  5305                     138          SUB.B   #1,D5               Subtract 1 from counter
00001052  6100 1CE2                139          BSR     DEC2HEX             Converts decimal to hex number
00001056  B23C 000F                140          CMP.B   #$F,D1
0000105A  6700 0034                141          BEQ     IOERROR3
0000105E                           142  
0000105E  1C05                     143          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001060  CDFC 0004                144          MULS    #4,D6               Multiply by 4 to find number of shifts left
00001064                           145          
00001064  EDAB                     146          LSL.L   D6,D3               Shifts hex left
00001066  D883                     147          ADD.L   D3,D4               Adds number to new total
00001068                           148          
00001068  7600                     149          MOVE.L  #0,D3               Clears D3 to prevent errors
0000106A                           150          
0000106A  BA3C 0000                151          CMP.B   #0,D5               Compares counter to 0    
0000106E  66DE                     152          BNE     IOLOOP              Otherwise will loop
00001070  4E75                     153          RTS
00001072                           154  
00001072                           155  * Error message for start address greater than end address
00001072                           156  IOERROR1
00001072  43F9 00003026            157          LEA     MIOERR1,A1
00001078  103C 000D                158          MOVE.B  #13,D0
0000107C  4E4F                     159          TRAP    #15
0000107E  6080                     160          BRA     IOSTART
00001080                           161  
00001080                           162  * Error message if user input address is longer than longword
00001080                           163  IOERROR2
00001080  43F9 0000305E            164          LEA     MIOERR2,A1
00001086  103C 000D                165          MOVE.B  #13,D0
0000108A  4E4F                     166          TRAP    #15
0000108C  224B                     167          MOVEA.L A3,A1
0000108E  6098                     168          BRA     IOGETADDR
00001090                           169  
00001090                           170  * Error message if user enters non-valid hex numbers
00001090                           171  IOERROR3
00001090  43F9 00003091            172          LEA     MIOERR3,A1
00001096  103C 000D                173          MOVE.B  #13,D0
0000109A  4E4F                     174          TRAP    #15
0000109C  224B                     175          MOVEA.L A3,A1
0000109E  6088                     176          BRA     IOGETADDR
000010A0                           177  
000010A0                           178  * Error message for odd numbered addresses
000010A0                           179  IOERROR4
000010A0  43F9 000030AD            180          LEA     MIOERR4,A1
000010A6  103C 000D                181          MOVE.B  #13,D0
000010AA  4E4F                     182          TRAP    #15
000010AC  6000 FF52                183          BRA     IOSTART
000010B0                           184  
000010B0                           185  ******************************************** displays address location***********************************************
000010B0                           186  * This displays the address location of the op-code being worked on
000010B0                           187  * A6 is used as current address
000010B0                           188  DISPADDR
000010B0  23C7 0000311C            189          MOVE.L  D7,startaddr
000010B6  23C4 00003120            190          MOVE.L  D4,endaddr
000010BC  6100 1B28                191          BSR     CLRDN
000010C0  2C79 0000311C            192          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010C6  13FC 001E 0000311B       193          MOVE.B  #dispnum,dispcount  Sets display line counter
000010CE                           194  
000010CE  43F9 00002EBC            195          LEA     NEWLINE,A1          Creates a new line in output window
000010D4  103C 000E                196          MOVE.B  #14,D0
000010D8  4E4F                     197          TRAP    #15
000010DA                           198  
000010DA                           199  NEWADDR
000010DA  2E0E                     200          MOVE.L  A6,D7               Loads the current address into D7
000010DC  BEB9 00003120            201          CMP.L   endaddr,D7          Compares current address to end address
000010E2  6E00 1D68                202          BGT     ASK4REPEAT          Branches to done if current address > end address
000010E6  45F9 0000117A            203          LEA     DISPADDREND,A2
000010EC                           204  
000010EC                           205  ************************************************
000010EC                           206  * Displays address as HEX
000010EC                           207  * INPUT: address stored into D7
000010EC                           208  * OUTPUT: prints hex address to output window
000010EC                           209  DISPADDRSTART
000010EC  1C3C 0002                210          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F0  2407                     211          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010F2  4842                     212          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010F4  6000 0004                213          BRA     DISPADDR2           Skips the second part to do later
000010F8                           214  
000010F8                           215  DISPADDR1
000010F8  3407                     216          MOVE.W  D7,D2
000010FA                           217  DISPADDR2
000010FA  3202                     218          MOVE.W  D2,D1               D1 will be the first byte of the word
000010FC  3602                     219          MOVE.W  D2,D3               D3 will be the second byte of the word
000010FE  3802                     220          MOVE.W  D2,D4               D4 will be the third byte of the word
00001100  3A02                     221          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001102                           222  
00001102  E049                     223          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
00001104  E849                     224          LSR.W   #4,D1
00001106  E94B                     225          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001108  E04B                     226          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
0000110A  E84B                     227          LSR.W   #4,D3
0000110C  E14C                     228          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
0000110E  E04C                     229          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001110  E84C                     230          LSR.W   #4,D4
00001112  E14D                     231          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
00001114  E94D                     232          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001116  E04D                     233          LSR.W   #8,D5
00001118  E84D                     234          LSR.W   #4,D5
0000111A                           235          
0000111A                           236          
0000111A  47F9 0000112E            237          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001120  B23C 0009                238          CMP.B   #9,D1               Compares digit to 9
00001124  6E00 1B9C                239          BGT     CONV                Print out letter representation if greater than 9
00001128                           240  
00001128  103C 0003                241          MOVE.B  #3,D0               Displays digit if it is less than A
0000112C  4E4F                     242          TRAP    #15
0000112E                           243          
0000112E                           244  DISPADDR3   
0000112E  1203                     245          MOVE.B  D3,D1               Displays digit in 1's place second
00001130                           246  
00001130                           247          *   converts digits 10+ into letters
00001130  47F9 00001144            248          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001136  B23C 0009                249          CMP.B   #9,D1               Compares digit to 9
0000113A  6E00 1B86                250          BGT     CONV                Print out letter representation if greater than 9
0000113E                           251          
0000113E  103C 0003                252          MOVE.B  #3,D0               Displays digit if it is less than A
00001142  4E4F                     253          TRAP    #15
00001144                           254  
00001144                           255  DISPADDR4
00001144  1204                     256          MOVE.B  D4,D1               Displays digit in 1's place second
00001146                           257  
00001146                           258          *   converts digits 10+ into letters
00001146  47F9 0000115A            259          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
0000114C  B23C 0009                260          CMP.B   #9,D1               Compares digit to 9
00001150  6E00 1B70                261          BGT     CONV                Print out letter representation if greater than 9
00001154                           262          
00001154  103C 0003                263          MOVE.B  #3,D0               Displays digit if it is less than A
00001158  4E4F                     264          TRAP    #15
0000115A                           265  
0000115A                           266  DISPADDR5
0000115A  1205                     267          MOVE.B  D5,D1               Displays digit in 1's place second
0000115C                           268  
0000115C                           269          *   converts digits 10+ into letters
0000115C  47F9 00001170            270          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
00001162  B23C 0009                271          CMP.B   #9,D1               Compares digit to 9
00001166  6E00 1B5A                272          BGT     CONV                Print out letter representation if greater than 9
0000116A                           273          
0000116A  103C 0003                274          MOVE.B  #3,D0               Displays digit if it is less than A
0000116E  4E4F                     275          TRAP    #15
00001170                           276          
00001170                           277  DISPADDR6
00001170                           278  * Display counter -- creates new line every 8 bytes
00001170                           279          * D6 is used as counter
00001170                           280          
00001170  5306                     281          SUB.B   #1,D6
00001172  BC3C 0000                282          CMP.B   #0,D6
00001176  6680                     283          BNE     DISPADDR1
00001178                           284  
00001178  4ED2                     285          JMP     (A2)                Jumps to address stored in A2 when complete
0000117A                           286  
0000117A                           287  DISPADDREND
0000117A  43F9 00002EBF            288          LEA     TAB,A1
00001180  103C 000E                289          MOVE.B  #14,D0
00001184  4E4F                     290          TRAP    #15
00001186                           291          
00001186                           292  *********************************************************************************************************************
00001186                           293  * Splits the first byte of the op code into nibbles
00001186                           294  * then sends it to the branch-table to jump to the appropiate section to be decoded
00001186                           295  
00001186  4281                     296          CLR.L   D1                  Clears the data registers
00001188  4282                     297          CLR.L   D2
0000118A  4283                     298          CLR.L   D3
0000118C  4284                     299          CLR.L   D4
0000118E  4285                     300          CLR.L   D5
00001190  4286                     301          CLR.L   D6
00001192  3C16                     302          MOVE.W  (A6),D6
00001194  141E                     303          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00001196                           304    
00001196  1E02                     305          MOVE.B  D2,D7
00001198  E14F                     306          LSL.W   #8,D7
0000119A                           307          
0000119A  1602                     308          MOVE.B  D2,D3               Copies data at D2 to D3
0000119C                           309          *   this gets digit in 10's place
0000119C  E80B                     310          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000119E                           311          *   this gets digit in 1's place
0000119E  E90A                     312          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A0  E80A                     313          LSR.B   #4,D2               Shifts back right into 1's place
000011A2                           314          
000011A2                           315          *   D3 holds digit in 10's place
000011A2                           316          *   D2 holds digit in 1's place
000011A2                           317  
000011A2                           318          *   Moves second nibble to D5 to be used later
000011A2  1A02                     319          MOVE.B  D2,D5
000011A4  13C3 00003124            320          MOVE.B  D3,bit0
000011AA                           321          *   Goes to a branch-table to figure out which op code it is
000011AA  6000 0002                322          BRA     CODE
000011AE                           323  
000011AE                           324  ******************************************************************************************************
000011AE                           325  *   This is where the table goes to detirmine which op-code to use
000011AE                           326  CODE    
000011AE  B63C 0000                327          CMP.B   #$0,D3              Goes to immediate operation section
000011B2  6700 0EBE                328          BEQ     IMD
000011B6  B63C 0004                329          CMP.B   #$4,D3              Goes to miscellaneous section
000011BA  6700 0FEA                330          BEQ     MISC
000011BE  B63C 0006                331          CMP.B   #$6,D3
000011C2  6700 0DFA                332          BEQ     BCC
000011C6  B63C 0009                333          CMP.B   #$9,D3              Goes to sub section
000011CA  6700 1340                334          BEQ     SUB
000011CE  B63C 000C                335          CMP.B   #$C,D3              Goes to sub but displays as AND
000011D2  6700 1338                336          BEQ     SUB
000011D6  B63C 000D                337          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011DA  6700 1330                338          BEQ     SUB
000011DE  B63C 000B                339          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011E2  6700 1328                340          BEQ     SUB
000011E6  B63C 0001                341          CMP.B   #$1,D3
000011EA  6700 0290                342          BEQ     MOVB                Goes to movb
000011EE  B63C 0003                343          CMP.B   #$3,D3
000011F2  6700 00C8                344          BEQ     MOVW                Goes to movb
000011F6  B63C 0002                345          CMP.B   #$2,D3
000011FA  6700 01A0                346          BEQ     MOVL                Goes to movb
000011FE  B63C 0008                347          CMP.B   #$8,D3
00001202  6700 08B0                348          BEQ     DIVSW               Goes to divsw
00001206  B63C 000E                349          CMP.B   #$E,D3
0000120A  6700 0A8C                350          BEQ     LSLR                Goes to divsw
0000120E                           351  
0000120E  6000 19E8                352          BRA     INVOPCODE
00001212                           353          
00001212                           354  JSR
00001212  43F9 00002EEE            355          LEA MJSR,A1
00001218  103C 000E                356          MOVE.B  #14,D0
0000121C  4E4F                     357          TRAP    #15 
0000121E                           358          
0000121E  1406                     359          MOVE.B  D6,D2
00001220  EB0A                     360          LSL.B   #5,D2
00001222  EA0A                     361          LSR.B   #5,D2
00001224  13C2 00003128            362          MOVE.B  D2,bit4
0000122A                           363          
0000122A  1406                     364          MOVE.B  D6,D2
0000122C  E50A                     365          LSL.B   #2,D2
0000122E  EA0A                     366          LSR.B   #5,D2
00001230  13C2 00003127            367          MOVE.B  D2,bit3
00001236                           368  
00001236  183C 0003                369          MOVE.B  #$3,D4
0000123A                           370  
0000123A  0C39 0002 00003127       371          CMP.B   #$2,bit3
00001242  6700 0442                372          BEQ     MOVEIAN1
00001246                           373          
00001246  43F9 00002EBF            374          LEA     TAB,A1
0000124C  323C 0003                375          MOVE    #3,D1
00001250  4E4F                     376          TRAP    #15
00001252                           377          
00001252  0C39 0007 00003127       378          CMP.B   #$7,bit3
0000125A  6700 0360                379          BEQ     ADDIMDDES
0000125E                           380          
0000125E                           381  BTST 
0000125E  43F9 00002EF2            382          LEA MBTST,A1
00001264  103C 000E                383          MOVE.B  #14,D0
00001268  4E4F                     384          TRAP    #15 
0000126A                           385          
0000126A  1406                     386          MOVE.B  D6,D2
0000126C  EB0A                     387          LSL.B   #5,D2
0000126E  EA0A                     388          LSR.B   #5,D2
00001270  13C2 00003125            389          MOVE.B  D2,bit1
00001276                           390          
00001276  1406                     391          MOVE.B  D6,D2
00001278  E50A                     392          LSL.B   #2,D2
0000127A  EA0A                     393          LSR.B   #5,D2
0000127C  13C2 00003126            394          MOVE.B  D2,bit2
00001282                           395          
00001282  3406                     396          MOVE.W  D6,D2
00001284  E94A                     397          LSL.W   #4,D2
00001286  E04A                     398          LSR.W   #8,D2
00001288  EA4A                     399          LSR.W   #5,D2
0000128A  13C2 00003127            400          MOVE.B  D2,bit3
00001290                           401          
00001290  43F9 00002EBF            402          LEA TAB,A1
00001296  103C 000E                403          MOVE.B  #14,D0
0000129A  4E4F                     404          TRAP    #15
0000129C                           405  
0000129C  43F9 00002ED7            406          LEA DISPD,A1
000012A2  103C 000E                407          MOVE.B  #14,D0
000012A6  4E4F                     408          TRAP    #15
000012A8                           409          
000012A8  1A3C 0004                410          MOVE.B   #$4,D5
000012AC                           411          
000012AC  1239 00003127            412          MOVE.B  bit3,D1
000012B2  103C 0003                413          MOVE.B  #3,D0
000012B6  4E4F                     414          TRAP    #15
000012B8                           415          
000012B8  6000 02AA                416          BRA HANDLEDES
000012BC                           417          
000012BC                           418  MOVW
000012BC  E20A                     419          LSR.B   #1,D2
000012BE  13C2 00003125            420          MOVE.B  D2,bit1
000012C4                           421          
000012C4  1416                     422          MOVE.B  (A6),D2
000012C6  EB0A                     423          LSL.B   #5,D2
000012C8  EA0A                     424          LSR.B   #5,D2
000012CA  13C2 00003128            425          MOVE.B  D2,bit4
000012D0                           426          
000012D0  141E                     427          MOVE.B  (A6)+,D2
000012D2  E50A                     428          LSL.B   #2,D2
000012D4  EA0A                     429          LSR.B   #5,D2
000012D6  13C2 00003127            430          MOVE.B  D2,bit3
000012DC                           431          
000012DC  EF4E                     432          LSL.W   #7,D6
000012DE  E04E                     433          LSR.W   #8,D6 
000012E0  EA4E                     434          LSR.W   #5,D6 
000012E2  13C6 00003126            435          MOVE.B  D6,bit2
000012E8                           436  
000012E8  0C39 0001 00003126       437          CMP.B   #$1,bit2
000012F0  6700 0056                438          BEQ     MOVEAW
000012F4                           439  
000012F4  43F9 00002F21            440          LEA MMOVEW,A1
000012FA  103C 000E                441          MOVE.B  #14,D0
000012FE  4E4F                     442          TRAP    #15 
00001300                           443  
00001300  0C39 0000 00003127       444          CMP.B   #$0,bit3           
00001308  6700 0558                445          BEQ     MOVBDN1
0000130C  0C39 0001 00003127       446          CMP.B   #$1,bit3
00001314  6700 02FC                447          BEQ     MOVEAN1
00001318  0C39 0002 00003127       448          CMP.B   #$2,bit3
00001320  6700 0364                449          BEQ     MOVEIAN1
00001324  0C39 0003 00003127       450          CMP.B   #$3,bit3
0000132C  6700 03EC                451          BEQ     MOVEIANI1
00001330  0C39 0004 00003127       452          CMP.B   #$4,bit3
00001338  6700 0488                453          BEQ     MOVEIAND1
0000133C  0C39 0007 00003127       454          CMP.B   #$7,bit3
00001344  6700 01BC                455          BEQ     ADDIMD
00001348                           456  
00001348                           457  MOVEAW
00001348  43F9 00002F2F            458          LEA MMOVEAW,A1
0000134E  103C 000E                459          MOVE.B  #14,D0
00001352  4E4F                     460          TRAP    #15 
00001354                           461          
00001354  0C39 0000 00003127       462          CMP.B   #$0,bit3           
0000135C  6700 0504                463          BEQ     MOVBDN1
00001360  0C39 0001 00003127       464          CMP.B   #$1,bit3
00001368  6700 02A8                465          BEQ     MOVEAN1
0000136C  0C39 0002 00003127       466          CMP.B   #$2,bit3
00001374  6700 0310                467          BEQ     MOVEIAN1
00001378  0C39 0003 00003127       468          CMP.B   #$3,bit3
00001380  6700 0398                469          BEQ     MOVEIANI1
00001384  0C39 0004 00003127       470          CMP.B   #$4,bit3
0000138C  6700 0434                471          BEQ     MOVEIAND1
00001390  0C39 0007 00003127       472          CMP.B   #$7,bit3
00001398  6700 0168                473          BEQ     ADDIMD
0000139C                           474  
0000139C                           475  MOVL
0000139C  E20A                     476          LSR.B   #1,D2
0000139E  13C2 00003125            477          MOVE.B  D2,bit1
000013A4                           478          
000013A4  1416                     479          MOVE.B  (A6),D2
000013A6  EB0A                     480          LSL.B   #5,D2
000013A8  EA0A                     481          LSR.B   #5,D2
000013AA  13C2 00003128            482          MOVE.B  D2,bit4
000013B0                           483          
000013B0  141E                     484          MOVE.B  (A6)+,D2
000013B2  E50A                     485          LSL.B   #2,D2
000013B4  EA0A                     486          LSR.B   #5,D2
000013B6  13C2 00003127            487          MOVE.B  D2,bit3
000013BC                           488          
000013BC  EF4E                     489          LSL.W   #7,D6
000013BE  E04E                     490          LSR.W   #8,D6 
000013C0  EA4E                     491          LSR.W   #5,D6 
000013C2  13C6 00003126            492          MOVE.B  D6,bit2
000013C8                           493          
000013C8  0C39 0001 00003126       494          CMP.B   #$1,bit2
000013D0  6700 0056                495          BEQ     MOVEAL
000013D4                           496  
000013D4  43F9 00002F28            497          LEA MMOVEL,A1
000013DA  103C 000E                498          MOVE.B  #14,D0
000013DE  4E4F                     499          TRAP    #15 
000013E0                           500          
000013E0  0C39 0000 00003127       501          CMP.B   #$0,bit3           
000013E8  6700 0478                502          BEQ     MOVBDN1
000013EC  0C39 0001 00003127       503          CMP.B   #$1,bit3
000013F4  6700 021C                504          BEQ     MOVEAN1
000013F8  0C39 0002 00003127       505          CMP.B   #$2,bit3
00001400  6700 0284                506          BEQ     MOVEIAN1
00001404  0C39 0003 00003127       507          CMP.B   #$3,bit3
0000140C  6700 030C                508          BEQ     MOVEIANI1
00001410  0C39 0004 00003127       509          CMP.B   #$4,bit3
00001418  6700 03A8                510          BEQ     MOVEIAND1
0000141C  0C39 0007 00003127       511          CMP.B   #$7,bit3
00001424  6700 00DC                512          BEQ     ADDIMD
00001428                           513  
00001428                           514  MOVEAL
00001428  43F9 00002F37            515          LEA MMOVEAL,A1
0000142E  103C 000E                516          MOVE.B  #14,D0
00001432  4E4F                     517          TRAP    #15 
00001434                           518          
00001434  0C39 0000 00003127       519          CMP.B   #$0,bit3           
0000143C  6700 0424                520          BEQ     MOVBDN1
00001440  0C39 0001 00003127       521          CMP.B   #$1,bit3
00001448  6700 01C8                522          BEQ     MOVEAN1
0000144C  0C39 0002 00003127       523          CMP.B   #$2,bit3
00001454  6700 0230                524          BEQ     MOVEIAN1
00001458  0C39 0003 00003127       525          CMP.B   #$3,bit3
00001460  6700 02B8                526          BEQ     MOVEIANI1
00001464  0C39 0004 00003127       527          CMP.B   #$4,bit3
0000146C  6700 0354                528          BEQ     MOVEIAND1
00001470  0C39 0007 00003127       529          CMP.B   #$7,bit3
00001478  6700 0088                530          BEQ     ADDIMD        
0000147C                           531  
0000147C                           532  MOVB
0000147C  43F9 00002F1A            533          LEA MMOVEB,A1
00001482  103C 000E                534          MOVE.B  #14,D0
00001486  4E4F                     535          TRAP    #15 
00001488                           536          
00001488  E20A                     537          LSR.B   #1,D2
0000148A  13C2 00003125            538          MOVE.B  D2,bit1
00001490                           539          
00001490  1416                     540          MOVE.B  (A6),D2
00001492  EB0A                     541          LSL.B   #5,D2
00001494  EA0A                     542          LSR.B   #5,D2
00001496  13C2 00003128            543          MOVE.B  D2,bit4
0000149C                           544          
0000149C  141E                     545          MOVE.B  (A6)+,D2
0000149E  E50A                     546          LSL.B   #2,D2
000014A0  EA0A                     547          LSR.B   #5,D2
000014A2  13C2 00003127            548          MOVE.B  D2,bit3
000014A8                           549          
000014A8  EF4E                     550          LSL.W   #7,D6
000014AA  E04E                     551          LSR.W   #8,D6 
000014AC  EA4E                     552          LSR.W   #5,D6 
000014AE  13C6 00003126            553          MOVE.B  D6,bit2
000014B4                           554          
000014B4                           555      
000014B4  4285                     556          CLR.L   D5
000014B6                           557          
000014B6  0C39 0000 00003127       558          CMP.B   #$0,bit3           
000014BE  6700 03A2                559          BEQ     MOVBDN1
000014C2  0C39 0001 00003127       560          CMP.B   #$1,bit3
000014CA  6700 0146                561          BEQ     MOVEAN1
000014CE  0C39 0002 00003127       562          CMP.B   #$2,bit3
000014D6  6700 01AE                563          BEQ     MOVEIAN1
000014DA  0C39 0003 00003127       564          CMP.B   #$3,bit3
000014E2  6700 0236                565          BEQ     MOVEIANI1
000014E6  0C39 0004 00003127       566          CMP.B   #$4,bit3
000014EE  6700 02D2                567          BEQ     MOVEIAND1
000014F2  0C39 0007 00003127       568          CMP.B   #$7,bit3
000014FA  6700 0006                569          BEQ     ADDIMD
000014FE                           570          
000014FE  6000 16FA                571          BRA     INVOP
00001502                           572  
00001502                           573  ADDIMD
00001502  43F9 00002EBF            574      LEA     TAB,A1
00001508  103C 000E                575      MOVE.B  #14,D0
0000150C  4E4F                     576      TRAP    #15
0000150E                           577      
0000150E  0C39 0000 00003128       578      CMP.B   #$0,bit4
00001516  6700 001A                579      BEQ     ADDIMD0
0000151A  0C39 0001 00003128       580      CMP.B   #$1,bit4
00001522  6700 001C                581      BEQ     ADDIMD1
00001526  0C39 0004 00003128       582      CMP.B   #$4,bit4
0000152E  6700 001E                583      BEQ     ADDIMD4
00001532                           584  
00001532                           585  ADDIMD0
00001532  183C 0001                586      MOVE.B  #$1,D4
00001536  45F9 00001564            587      LEA     HANDLEDES,A2
0000153C  6000 1642                588      BRA     DISPEA
00001540                           589  ADDIMD1 
00001540  183C 0002                590      MOVE.B  #$2,D4
00001544  45F9 00001564            591      LEA     HANDLEDES,A2
0000154A  6000 1634                592      BRA     DISPEA
0000154E                           593  ADDIMD4
0000154E  43F9 00002ECD            594      LEA     HASH,A1
00001554  103C 000E                595      MOVE.B  #14,D0
00001558  4E4F                     596      TRAP    #15
0000155A                           597      
0000155A  45F9 00001564            598      LEA     HANDLEDES,A2
00001560  6000 161E                599      BRA     DISPEA 
00001564                           600      
00001564                           601  HANDLEDES
00001564  43F9 00002EC3            602      LEA     COMMA,A1
0000156A  103C 000E                603      MOVE.B  #14,D0
0000156E  4E4F                     604      TRAP    #15
00001570                           605      
00001570  0C39 0000 00003126       606      CMP.B   #$0,bit2
00001578  6700 0488                607      BEQ     MOVBDN2
0000157C  0C39 0001 00003126       608      CMP.B   #$1,bit2
00001584  6700 03AC                609      BEQ     MOVEAN2
00001588  0C39 0002 00003126       610      CMP.B   #$2,bit2 
00001590  6700 03BC                611      BEQ     MOVIAN2
00001594  0C39 0003 00003126       612      CMP.B   #$3,bit2 
0000159C  6700 03E4                613      BEQ     MOVIANI2
000015A0  0C39 0004 00003126       614      CMP.B   #$4,bit2 
000015A8  6700 0418                615      BEQ     MOVIAND2
000015AC  BA3C 0005                616      CMP.B   #$5,D5
000015B0  6700 0450                617      BEQ     MOVBDN2
000015B4  BA3C 0007                618      CMP.B   #$7,D5
000015B8  6700 0002                619      BEQ     ADDIMDDES
000015BC                           620  
000015BC                           621  ADDIMDDES
000015BC  0C39 0000 00003128       622      CMP.B   #$0,bit4
000015C4  6700 001A                623      BEQ     ADDIMDDES0
000015C8  0C39 0001 00003128       624      CMP.B   #$1,bit4
000015D0  6700 001C                625      BEQ     ADDIMDDES1
000015D4  0C39 0004 00003128       626      CMP.B   #$4,bit4
000015DC  6700 001E                627      BEQ     ADDIMDDES4
000015E0                           628      
000015E0                           629  ADDIMDDES0
000015E0  183C 0001                630      MOVE.B  #$1,D4
000015E4  45F9 00002C6C            631      LEA     ENDNEWLINE,A2
000015EA  6000 1594                632      BRA     DISPEA
000015EE                           633      
000015EE                           634  ADDIMDDES1
000015EE  183C 0002                635      MOVE.B  #$2,D4
000015F2  45F9 00002C6C            636      LEA     ENDNEWLINE,A2
000015F8  6000 1586                637      BRA     DISPEA
000015FC                           638      
000015FC                           639  ADDIMDDES4    
000015FC  43F9 00002ECD            640      LEA     HASH,A1
00001602  103C 000E                641      MOVE.B  #14,D0
00001606  4E4F                     642      TRAP    #15
00001608                           643      
00001608  45F9 00002C6C            644      LEA     ENDNEWLINE,A2
0000160E  6000 1570                645      BRA     DISPEA 
00001612                           646          
00001612                           647  MOVEAN1
00001612  43F9 00002EBF            648      LEA TAB,A1
00001618  103C 000E                649      MOVE.B  #14,D0
0000161C  4E4F                     650      TRAP    #15
0000161E                           651  
0000161E  43F9 00002ED1            652      LEA DISPA,A1
00001624  103C 000E                653      MOVE.B  #14,D0
00001628  4E4F                     654      TRAP    #15
0000162A                           655      
0000162A  1239 00003128            656      MOVE.B  bit4,D1
00001630  103C 0003                657      MOVE.B  #3,D0
00001634  4E4F                     658      TRAP    #15
00001636                           659      
00001636  43F9 00002EC3            660      LEA COMMA,A1
0000163C  103C 000E                661      MOVE.B  #14,D0
00001640  4E4F                     662      TRAP    #15
00001642                           663      
00001642  0C39 0000 00003126       664      CMP.B   #$0,bit2
0000164A  6700 03B6                665      BEQ     MOVBDN2
0000164E  0C39 0001 00003126       666      CMP.B   #$1,bit2
00001656  6700 02DA                667      BEQ     MOVEAN2
0000165A  0C39 0002 00003126       668      CMP.B   #$2,bit2 
00001662  6700 02EA                669      BEQ     MOVIAN2
00001666  0C39 0003 00003126       670      CMP.B   #$3,bit2 
0000166E  6700 0312                671      BEQ     MOVIANI2
00001672  0C39 0004 00003126       672      CMP.B   #$4,bit2 
0000167A  6700 0346                673      BEQ     MOVIAND2
0000167E  BA3C 0005                674      CMP.B   #$5,D5
00001682  6700 037E                675      BEQ     MOVBDN2
00001686                           676      
00001686                           677  MOVEIAN1
00001686  43F9 00002EBF            678      LEA TAB,A1
0000168C  103C 000E                679      MOVE.B  #14,D0
00001690  4E4F                     680      TRAP    #15
00001692                           681      
00001692  43F9 00002EC5            682      LEA OPENBRA,A1
00001698  103C 000E                683      MOVE.B  #14,D0
0000169C  4E4F                     684      TRAP    #15
0000169E                           685  
0000169E  43F9 00002ED1            686      LEA DISPA,A1
000016A4  103C 000E                687      MOVE.B  #14,D0
000016A8  4E4F                     688      TRAP    #15
000016AA                           689      
000016AA  1239 00003128            690      MOVE.B  bit4,D1
000016B0  103C 0003                691      MOVE.B  #3,D0
000016B4  4E4F                     692      TRAP    #15
000016B6                           693      
000016B6  43F9 00002EC7            694      LEA CLOSEBRA,A1
000016BC  103C 000E                695      MOVE.B  #14,D0
000016C0  4E4F                     696      TRAP    #15
000016C2                           697      
000016C2  B83C 0003                698      CMP.B   #$3,D4
000016C6  6700 15A4                699      BEQ     ENDNEWLINE
000016CA                           700      
000016CA  43F9 00002EC3            701      LEA COMMA,A1
000016D0  103C 000E                702      MOVE.B  #14,D0
000016D4  4E4F                     703      TRAP    #15
000016D6                           704      
000016D6  0C39 0000 00003126       705      CMP.B   #$0,bit2
000016DE  6700 0322                706      BEQ     MOVBDN2
000016E2  0C39 0001 00003126       707      CMP.B   #$1,bit2
000016EA  6700 0246                708      BEQ     MOVEAN2
000016EE  0C39 0002 00003126       709      CMP.B   #$2,bit2 
000016F6  6700 0256                710      BEQ     MOVIAN2
000016FA  0C39 0003 00003126       711      CMP.B   #$3,bit2 
00001702  6700 027E                712      BEQ     MOVIANI2
00001706  0C39 0004 00003126       713      CMP.B   #$4,bit2 
0000170E  6700 02B2                714      BEQ     MOVIAND2
00001712  BA3C 0005                715      CMP.B   #$5,D5
00001716  6700 02EA                716      BEQ     MOVBDN2
0000171A                           717  
0000171A                           718  MOVEIANI1
0000171A  43F9 00002EBF            719      LEA TAB,A1
00001720  103C 000E                720      MOVE.B  #14,D0
00001724  4E4F                     721      TRAP    #15
00001726                           722      
00001726  43F9 00002EC5            723      LEA OPENBRA,A1
0000172C  103C 000E                724      MOVE.B  #14,D0
00001730  4E4F                     725      TRAP    #15
00001732                           726  
00001732  43F9 00002ED1            727      LEA DISPA,A1
00001738  103C 000E                728      MOVE.B  #14,D0
0000173C  4E4F                     729      TRAP    #15
0000173E                           730      
0000173E  1239 00003128            731      MOVE.B  bit4,D1
00001744  103C 0003                732      MOVE.B  #3,D0
00001748  4E4F                     733      TRAP    #15
0000174A                           734      
0000174A  43F9 00002EC7            735      LEA CLOSEBRA,A1
00001750  103C 000E                736      MOVE.B  #14,D0
00001754  4E4F                     737      TRAP    #15
00001756                           738      
00001756  43F9 00002EC9            739      LEA POS,A1
0000175C  103C 000E                740      MOVE.B  #14,D0
00001760  4E4F                     741      TRAP    #15
00001762                           742      
00001762  BA3C 0003                743      CMP.B   #$3,D5
00001766  6700 1504                744      BEQ     ENDNEWLINE
0000176A                           745             
0000176A  BA3C 0004                746      CMP.B   #$4,D5
0000176E  6700 14FC                747      BEQ     ENDNEWLINE
00001772                           748          
00001772                           749          
00001772  43F9 00002EC3            750      LEA COMMA,A1
00001778  103C 000E                751      MOVE.B  #14,D0
0000177C  4E4F                     752      TRAP    #15
0000177E                           753      
0000177E  0C39 0000 00003126       754      CMP.B   #$0,bit2
00001786  6700 027A                755      BEQ     MOVBDN2
0000178A  0C39 0001 00003126       756      CMP.B   #$1,bit2
00001792  6700 019E                757      BEQ     MOVEAN2
00001796  0C39 0002 00003126       758      CMP.B   #$2,bit2 
0000179E  6700 01AE                759      BEQ     MOVIAN2
000017A2  0C39 0003 00003126       760      CMP.B   #$3,bit2 
000017AA  6700 01D6                761      BEQ     MOVIANI2
000017AE  0C39 0004 00003126       762      CMP.B   #$4,bit2 
000017B6  6700 020A                763      BEQ     MOVIAND2
000017BA  BA3C 0005                764      CMP.B   #$5,D5
000017BE  6700 0242                765      BEQ     MOVBDN2
000017C2                           766  
000017C2                           767  MOVEIAND1
000017C2  43F9 00002EBF            768      LEA TAB,A1
000017C8  103C 000E                769      MOVE.B  #14,D0
000017CC  4E4F                     770      TRAP    #15
000017CE                           771      
000017CE  43F9 00002ECB            772      LEA NEG,A1
000017D4  103C 000E                773      MOVE.B  #14,D0
000017D8  4E4F                     774      TRAP    #15
000017DA                           775      
000017DA  43F9 00002EC5            776      LEA OPENBRA,A1
000017E0  103C 000E                777      MOVE.B  #14,D0
000017E4  4E4F                     778      TRAP    #15
000017E6                           779  
000017E6  43F9 00002ED1            780      LEA DISPA,A1
000017EC  103C 000E                781      MOVE.B  #14,D0
000017F0  4E4F                     782      TRAP    #15
000017F2                           783      
000017F2  1239 00003128            784      MOVE.B  bit4,D1
000017F8  103C 0003                785      MOVE.B  #3,D0
000017FC  4E4F                     786      TRAP    #15
000017FE                           787      
000017FE  43F9 00002EC7            788      LEA CLOSEBRA,A1
00001804  103C 000E                789      MOVE.B  #14,D0
00001808  4E4F                     790      TRAP    #15
0000180A                           791      
0000180A  BA3C 0004                792      CMP.B   #$4,D5
0000180E  6700 145C                793      BEQ     ENDNEWLINE
00001812                           794      
00001812  43F9 00002EC3            795      LEA COMMA,A1
00001818  103C 000E                796      MOVE.B  #14,D0
0000181C  4E4F                     797      TRAP    #15
0000181E                           798      
0000181E  0C39 0000 00003126       799      CMP.B   #$0,bit2
00001826  6700 01DA                800      BEQ     MOVBDN2
0000182A  0C39 0001 00003126       801      CMP.B   #$1,bit2
00001832  6700 00FE                802      BEQ     MOVEAN2
00001836  0C39 0002 00003126       803      CMP.B   #$2,bit2 
0000183E  6700 010E                804      BEQ     MOVIAN2
00001842  0C39 0003 00003126       805      CMP.B   #$3,bit2 
0000184A  6700 0136                806      BEQ     MOVIANI2
0000184E  0C39 0004 00003126       807      CMP.B   #$4,bit2 
00001856  6700 016A                808      BEQ     MOVIAND2
0000185A  BA3C 0005                809      CMP.B   #$5,D5
0000185E  6700 01A2                810      BEQ     MOVBDN2
00001862                           811  
00001862                           812  MOVBDN1
00001862  43F9 00002EBF            813      LEA TAB,A1
00001868  103C 000E                814      MOVE.B  #14,D0
0000186C  4E4F                     815      TRAP    #15
0000186E                           816  
0000186E  BA3C 0006                817      CMP.B   #$6,D5             * Data Reg for LSLR
00001872  6700 007A                818      BEQ     LSLRSRCD
00001876                           819  
00001876  43F9 00002ED7            820      LEA DISPD,A1
0000187C  103C 000E                821      MOVE.B  #14,D0
00001880  4E4F                     822      TRAP    #15
00001882                           823      
00001882  1239 00003128            824      MOVE.B  bit4,D1
00001888  103C 0003                825      MOVE.B  #3,D0
0000188C  4E4F                     826      TRAP    #15
0000188E                           827  
0000188E  BA3C 0004                828      CMP.B   #$4,D5
00001892  6700 0192                829      BEQ     ENDNLINC
00001896                           830  
00001896  43F9 00002EC3            831      LEA COMMA,A1
0000189C  103C 000E                832      MOVE.B  #14,D0
000018A0  4E4F                     833      TRAP    #15
000018A2                           834  
000018A2  BA3C 0006                835      CMP.B   #$6,D5             * Data Reg for LSLR
000018A6  6700 006E                836      BEQ     LSLRDESD
000018AA  0C39 0000 00003126       837      CMP.B   #$0,bit2
000018B2  6700 014E                838      BEQ     MOVBDN2
000018B6  0C39 0001 00003126       839      CMP.B   #$1,bit2
000018BE  6700 0072                840      BEQ     MOVEAN2
000018C2  0C39 0002 00003126       841      CMP.B   #$2,bit2 
000018CA  6700 0082                842      BEQ     MOVIAN2
000018CE  0C39 0003 00003126       843      CMP.B   #$3,bit2 
000018D6  6700 00AA                844      BEQ     MOVIANI2
000018DA  0C39 0004 00003126       845      CMP.B   #$4,bit2 
000018E2  6700 00DE                846      BEQ     MOVIAND2
000018E6  BA3C 0005                847      CMP.B   #$5,D5
000018EA  6700 0116                848      BEQ     MOVBDN2
000018EE                           849      
000018EE                           850  LSLRSRCD
000018EE  43F9 00002ED7            851      LEA DISPD,A1
000018F4  103C 000E                852      MOVE.B  #14,D0
000018F8  4E4F                     853      TRAP    #15
000018FA                           854          
000018FA  1239 00003124            855      MOVE.B  bit0,D1
00001900  103C 0003                856      MOVE.B  #3,D0
00001904  4E4F                     857      TRAP    #15    
00001906                           858  
00001906  43F9 00002EC3            859      LEA COMMA,A1
0000190C  103C 000E                860      MOVE.B  #14,D0
00001910  4E4F                     861      TRAP    #15  
00001912                           862      
00001912  6000 0002                863      BRA     LSLRDESD
00001916                           864      
00001916                           865  LSLRDESD
00001916  43F9 00002ED7            866      LEA DISPD,A1
0000191C  103C 000E                867      MOVE.B  #14,D0
00001920  4E4F                     868      TRAP    #15
00001922                           869          
00001922  1239 00003128            870      MOVE.B  bit4,D1
00001928  103C 0003                871      MOVE.B  #3,D0
0000192C  4E4F                     872      TRAP    #15      
0000192E                           873      
0000192E                           874      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000192E  6000 133C                875      BRA     ENDNEWLINE       
00001932                           876  
00001932                           877  MOVEAN2
00001932  43F9 00002ED1            878      LEA DISPA,A1
00001938  103C 000E                879      MOVE.B  #14,D0
0000193C  4E4F                     880      TRAP    #15
0000193E                           881      
0000193E  1239 00003125            882      MOVE.B  bit1,D1
00001944  103C 0003                883      MOVE.B  #3,D0
00001948  4E4F                     884      TRAP    #15
0000194A                           885  
0000194A                           886      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000194A  6000 1320                887      BRA     ENDNEWLINE    
0000194E                           888  
0000194E                           889  MOVIAN2
0000194E  43F9 00002EC5            890      LEA OPENBRA,A1
00001954  103C 000E                891      MOVE.B  #14,D0
00001958  4E4F                     892      TRAP    #15
0000195A                           893  
0000195A  43F9 00002ED1            894      LEA DISPA,A1
00001960  103C 000E                895      MOVE.B  #14,D0
00001964  4E4F                     896      TRAP    #15
00001966                           897      
00001966  1239 00003125            898      MOVE.B  bit1,D1
0000196C  103C 0003                899      MOVE.B  #3,D0
00001970  4E4F                     900      TRAP    #15
00001972                           901      
00001972  43F9 00002EC7            902      LEA CLOSEBRA,A1
00001978  103C 000E                903      MOVE.B  #14,D0
0000197C  4E4F                     904      TRAP    #15
0000197E                           905      
0000197E                           906      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000197E  6000 12EC                907      BRA     ENDNEWLINE
00001982                           908  
00001982                           909  MOVIANI2
00001982  43F9 00002EC5            910      LEA OPENBRA,A1
00001988  103C 000E                911      MOVE.B  #14,D0
0000198C  4E4F                     912      TRAP    #15
0000198E                           913  
0000198E  43F9 00002ED1            914      LEA DISPA,A1
00001994  103C 000E                915      MOVE.B  #14,D0
00001998  4E4F                     916      TRAP    #15
0000199A                           917      
0000199A  1239 00003125            918      MOVE.B  bit1,D1
000019A0  103C 0003                919      MOVE.B  #3,D0
000019A4  4E4F                     920      TRAP    #15
000019A6                           921      
000019A6  43F9 00002EC7            922      LEA CLOSEBRA,A1
000019AC  103C 000E                923      MOVE.B  #14,D0
000019B0  4E4F                     924      TRAP    #15
000019B2                           925      
000019B2  43F9 00002EC9            926      LEA POS,A1
000019B8  103C 000E                927      MOVE.B  #14,D0
000019BC  4E4F                     928      TRAP    #15
000019BE                           929      
000019BE                           930      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019BE  6000 12AC                931      BRA     ENDNEWLINE
000019C2                           932  
000019C2                           933  MOVIAND2
000019C2  43F9 00002ECB            934      LEA NEG,A1
000019C8  103C 000E                935      MOVE.B  #14,D0
000019CC  4E4F                     936      TRAP    #15
000019CE                           937      
000019CE  43F9 00002EC5            938      LEA OPENBRA,A1
000019D4  103C 000E                939      MOVE.B  #14,D0
000019D8  4E4F                     940      TRAP    #15
000019DA                           941  
000019DA  43F9 00002ED1            942      LEA DISPA,A1
000019E0  103C 000E                943      MOVE.B  #14,D0
000019E4  4E4F                     944      TRAP    #15
000019E6                           945      
000019E6  1239 00003125            946      MOVE.B  bit1,D1
000019EC  103C 0003                947      MOVE.B  #3,D0
000019F0  4E4F                     948      TRAP    #15
000019F2                           949      
000019F2  43F9 00002EC7            950      LEA CLOSEBRA,A1
000019F8  103C 000E                951      MOVE.B  #14,D0
000019FC  4E4F                     952      TRAP    #15
000019FE                           953  
000019FE                           954      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019FE  6000 126C                955      BRA     ENDNEWLINE
00001A02                           956  
00001A02                           957  MOVBDN2
00001A02  43F9 00002ED7            958      LEA DISPD,A1
00001A08  103C 000E                959      MOVE.B  #14,D0
00001A0C  4E4F                     960      TRAP    #15
00001A0E                           961          
00001A0E  1239 00003125            962      MOVE.B  bit1,D1
00001A14  103C 0003                963      MOVE.B  #3,D0
00001A18  4E4F                     964      TRAP    #15   
00001A1A                           965      
00001A1A  B83C 0000                966      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A1E  6700 124C                967      BEQ     ENDNEWLINE
00001A22                           968      
00001A22                           969      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A22  6000 1248                970      BRA     ENDNEWLINE
00001A26                           971      
00001A26                           972      
00001A26                           973  ENDNLINC
00001A26                           974      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A26  6000 1244                975      BRA     ENDNEWLINE    
00001A2A                           976      
00001A2A                           977  MULSW
00001A2A  1407                     978          MOVE.B  D7,D2
00001A2C  EB0A                     979          LSL.B   #5,D2
00001A2E  EA0A                     980          LSR.B   #5,D2
00001A30  13C2 00003128            981          MOVE.B  D2,bit4
00001A36                           982          
00001A36  1407                     983          MOVE.B  D7,D2
00001A38  E50A                     984          LSL.B   #2,D2
00001A3A  EA0A                     985          LSR.B   #5,D2
00001A3C  13C2 00003127            986          MOVE.B  D2,bit3
00001A42                           987          
00001A42  3C07                     988          MOVE.W  D7,D6
00001A44  EF4E                     989          LSL.W   #7,D6
00001A46  E04E                     990          LSR.W   #8,D6 
00001A48  EA4E                     991          LSR.W   #5,D6 
00001A4A  13C6 00003126            992          MOVE.B  D6,bit2
00001A50                           993          
00001A50  E94F                     994          LSL.W   #4,D7
00001A52  E04F                     995          LSR.W   #8,D7 
00001A54  EA4F                     996          LSR.W   #5,D7 
00001A56  13C7 00003125            997          MOVE.B  D7,bit1
00001A5C                           998          
00001A5C  43F9 00002F13            999          LEA MMULSW,A1
00001A62  323C 000E               1000          MOVE    #14,D1
00001A66  4E4F                    1001          TRAP    #15
00001A68                          1002          
00001A68  1A3C 0005               1003          MOVE.B  #$5,D5 
00001A6C                          1004          
00001A6C  0C39 0000 00003127      1005          CMP.B   #$0,bit3           
00001A74  6700 FDEC               1006          BEQ     MOVBDN1
00001A78  0C39 0001 00003127      1007          CMP.B   #$1,bit3
00001A80  6700 FB90               1008          BEQ     MOVEAN1
00001A84  0C39 0002 00003127      1009          CMP.B   #$2,bit3
00001A8C  6700 FBF8               1010          BEQ     MOVEIAN1
00001A90  0C39 0003 00003127      1011          CMP.B   #$3,bit3
00001A98  6700 FC80               1012          BEQ     MOVEIANI1
00001A9C  0C39 0004 00003127      1013          CMP.B   #$4,bit3
00001AA4  6700 FD1C               1014          BEQ     MOVEIAND1
00001AA8  0C39 0007 00003127      1015          CMP.B   #$7,bit3
00001AB0  6700 FA50               1016          BEQ     ADDIMD
00001AB4                          1017  
00001AB4                          1018           
00001AB4                          1019  DIVSW               
00001AB4                          1020          *MOVE.B  D6,D2
00001AB4  141E                    1021          MOVE.B  (A6)+,D2
00001AB6  EB0A                    1022          LSL.B   #5,D2
00001AB8  EA0A                    1023          LSR.B   #5,D2
00001ABA  13C2 00003128           1024          MOVE.B  D2,bit4
00001AC0                          1025          
00001AC0  1406                    1026          MOVE.B  D6,D2
00001AC2  E50A                    1027          LSL.B   #2,D2
00001AC4  EA0A                    1028          LSR.B   #5,D2
00001AC6  13C2 00003127           1029          MOVE.B  D2,bit3
00001ACC                          1030          
00001ACC  3E06                    1031          MOVE.W  D6,D7
00001ACE  EF4F                    1032          LSL.W   #7,D7
00001AD0  E04F                    1033          LSR.W   #8,D7 
00001AD2  EA4F                    1034          LSR.W   #5,D7 
00001AD4  13C7 00003126           1035          MOVE.B  D7,bit2
00001ADA                          1036          
00001ADA  E94E                    1037          LSL.W   #4,D6
00001ADC  E04E                    1038          LSR.W   #8,D6 
00001ADE  EA4E                    1039          LSR.W   #5,D6 
00001AE0  13C6 00003125           1040          MOVE.B  D6,bit1
00001AE6                          1041          
00001AE6  43F9 00002F0C           1042          LEA MMDIVSW,A1
00001AEC  323C 000E               1043          MOVE    #14,D1
00001AF0  4E4F                    1044          TRAP    #15
00001AF2                          1045          
00001AF2  1A3C 0005               1046          MOVE.B  #$5,D5 
00001AF6  183C 0004               1047          MOVE.B  #$4,D4
00001AFA                          1048          
00001AFA  0C39 0000 00003127      1049          CMP.B   #$0,bit3           
00001B02  6700 FD5E               1050          BEQ     MOVBDN1
00001B06  0C39 0001 00003127      1051          CMP.B   #$1,bit3
00001B0E  6700 FB02               1052          BEQ     MOVEAN1
00001B12  0C39 0002 00003127      1053          CMP.B   #$2,bit3
00001B1A  6700 FB6A               1054          BEQ     MOVEIAN1
00001B1E  0C39 0003 00003127      1055          CMP.B   #$3,bit3
00001B26  6700 FBF2               1056          BEQ     MOVEIANI1
00001B2A  0C39 0004 00003127      1057          CMP.B   #$4,bit3
00001B32  6700 FC8E               1058          BEQ     MOVEIAND1
00001B36  0C39 0007 00003127      1059          CMP.B   #$7,bit3
00001B3E  6700 F9C2               1060          BEQ     ADDIMD
00001B42                          1061  
00001B42                          1062  NEGW
00001B42  1406                    1063          MOVE.B  D6,D2
00001B44  EB0A                    1064          LSL.B   #5,D2
00001B46  EA0A                    1065          LSR.B   #5,D2
00001B48  13C2 00003128           1066          MOVE.B  D2,bit4
00001B4E                          1067          
00001B4E  1406                    1068          MOVE.B  D6,D2
00001B50  E50A                    1069          LSL.B   #2,D2
00001B52  EA0A                    1070          LSR.B   #5,D2
00001B54  13C2 00003127           1071          MOVE.B  D2,bit3
00001B5A                          1072          
00001B5A  3E06                    1073          MOVE.W  D6,D7
00001B5C  E14F                    1074          LSL.W   #8,D7
00001B5E  E04F                    1075          LSR.W   #8,D7 
00001B60  EC4F                    1076          LSR.W   #6,D7 
00001B62  13C7 00003126           1077          MOVE.B  D7,bit2
00001B68                          1078          
00001B68  43F9 00002F07           1079          LEA MMNEGW,A1
00001B6E  323C 000E               1080          MOVE    #14,D1
00001B72  4E4F                    1081          TRAP    #15
00001B74                          1082          
00001B74  183C 0003               1083          MOVE.B  #$3,D4
00001B78                          1084          
00001B78  0C39 0000 00003126      1085          CMP.B   #$0,bit2
00001B80  6700 001A               1086          BEQ     PRINTBYTE
00001B84  0C39 0001 00003126      1087          CMP.B   #$1,bit2
00001B8C  6700 0062               1088          BEQ     PRINTWORD
00001B90  0C39 0002 00003126      1089          CMP.B   #$2,bit2
00001B98  6700 00AA               1090          BEQ     PRINTLONG
00001B9C                          1091          
00001B9C                          1092  PRINTBYTE
00001B9C  43F9 00002EE1           1093      LEA MBYTE,A1
00001BA2  323C 000E               1094      MOVE    #14,D1
00001BA6  4E4F                    1095      TRAP    #15
00001BA8                          1096  
00001BA8  0C39 0000 00003127      1097      CMP.B   #$0,bit3           
00001BB0  6700 FCB0               1098          BEQ     MOVBDN1
00001BB4  0C39 0001 00003127      1099          CMP.B   #$1,bit3
00001BBC  6700 FA54               1100          BEQ     MOVEAN1
00001BC0  0C39 0002 00003127      1101          CMP.B   #$2,bit3
00001BC8  6700 FABC               1102          BEQ     MOVEIAN1
00001BCC  0C39 0003 00003127      1103          CMP.B   #$3,bit3
00001BD4  6700 FB44               1104          BEQ     MOVEIANI1
00001BD8  0C39 0004 00003127      1105          CMP.B   #$4,bit3
00001BE0  6700 FBE0               1106          BEQ     MOVEIAND1
00001BE4  0C39 0007 00003127      1107          CMP.B   #$7,bit3
00001BEC  6700 F9CE               1108          BEQ     ADDIMDDES
00001BF0                          1109      
00001BF0                          1110  PRINTWORD
00001BF0  43F9 00002EE4           1111      LEA MWORD,A1
00001BF6  323C 000E               1112      MOVE    #14,D1
00001BFA  4E4F                    1113      TRAP    #15
00001BFC                          1114  
00001BFC  0C39 0000 00003127      1115      CMP.B   #$0,bit3           
00001C04  6700 FC5C               1116          BEQ     MOVBDN1
00001C08  0C39 0001 00003127      1117          CMP.B   #$1,bit3
00001C10  6700 FA00               1118          BEQ     MOVEAN1
00001C14  0C39 0002 00003127      1119          CMP.B   #$2,bit3
00001C1C  6700 FA68               1120          BEQ     MOVEIAN1
00001C20  0C39 0003 00003127      1121          CMP.B   #$3,bit3
00001C28  6700 FAF0               1122          BEQ     MOVEIANI1
00001C2C  0C39 0004 00003127      1123          CMP.B   #$4,bit3
00001C34  6700 FB8C               1124          BEQ     MOVEIAND1
00001C38  0C39 0007 00003127      1125          CMP.B   #$7,bit3
00001C40  6700 F97A               1126          BEQ     ADDIMDDES
00001C44                          1127      
00001C44                          1128  PRINTLONG
00001C44  43F9 00002EE7           1129      LEA MLONG,A1
00001C4A  323C 000E               1130      MOVE    #14,D1
00001C4E  4E4F                    1131      TRAP    #15
00001C50                          1132   
00001C50  0C39 0000 00003127      1133      CMP.B   #$0,bit3           
00001C58  6700 FC08               1134          BEQ     MOVBDN1
00001C5C  0C39 0001 00003127      1135          CMP.B   #$1,bit3
00001C64  6700 F9AC               1136          BEQ     MOVEAN1
00001C68  0C39 0002 00003127      1137          CMP.B   #$2,bit3
00001C70  6700 FA14               1138          BEQ     MOVEIAN1
00001C74  0C39 0003 00003127      1139          CMP.B   #$3,bit3
00001C7C  6700 FA9C               1140          BEQ     MOVEIANI1
00001C80  0C39 0004 00003127      1141          CMP.B   #$4,bit3
00001C88  6700 FB38               1142          BEQ     MOVEIAND1
00001C8C  0C39 0007 00003127      1143          CMP.B   #$7,bit3
00001C94  6700 F926               1144          BEQ     ADDIMDDES
00001C98                          1145          
00001C98                          1146  LSLR
00001C98                          1147          *MOVE.B  D6,D2
00001C98  141E                    1148          MOVE.B  (A6)+,D2
00001C9A  EB0A                    1149          LSL.B   #5,D2
00001C9C  EA0A                    1150          LSR.B   #5,D2
00001C9E  13C2 00003128           1151          MOVE.B  D2,bit4
00001CA4                          1152          
00001CA4  1406                    1153          MOVE.B  D6,D2
00001CA6  E50A                    1154          LSL.B   #2,D2
00001CA8  EE0A                    1155          LSR.B   #7,D2
00001CAA  13C2 00003127           1156          MOVE.B  D2,bit3
00001CB0                          1157          
00001CB0  3E06                    1158          MOVE.W  D6,D7
00001CB2  E14F                    1159          LSL.W   #8,D7
00001CB4  E04F                    1160          LSR.W   #8,D7 
00001CB6  EC4F                    1161          LSR.W   #6,D7 
00001CB8  13C7 00003126           1162          MOVE.B  D7,bit2
00001CBE                          1163          
00001CBE  3E06                    1164          MOVE.W  D6,D7
00001CC0  EF4F                    1165          LSL.W   #7,D7
00001CC2  E04F                    1166          LSR.W   #8,D7 
00001CC4  EE4F                    1167          LSR.W   #7,D7
00001CC6  13C7 00003125           1168          MOVE.B  D7,bit1   
00001CCC                          1169      
00001CCC  1806                    1170          MOVE.B  D6,D4
00001CCE                          1171          
00001CCE  3E06                    1172          MOVE.W  D6,D7
00001CD0  E94F                    1173          LSL.W   #4,D7
00001CD2  E04F                    1174          LSR.W   #8,D7 
00001CD4  EA4F                    1175          LSR.W   #5,D7
00001CD6  13C7 00003124           1176          MOVE.B  D7,bit0 
00001CDC                          1177          
00001CDC  1E06                    1178          MOVE.B  D6,D7
00001CDE  E90F                    1179          LSL.B   #4,D7
00001CE0  EE0F                    1180          LSR.B   #7,D7
00001CE2                          1181          
00001CE2  0C39 0003 00003126      1182          CMP.B   #3,bit2
00001CEA  6700 00B4               1183          BEQ     LSLRMEMH
00001CEE                          1184          
00001CEE  BE3C 0000               1185          CMP.B   #0,D7
00001CF2  6700 0028               1186          BEQ     ASLRMEMH
00001CF6                          1187          
00001CF6  1606                    1188          MOVE.B  D6,D3
00001CF8  E70B                    1189          LSL.B   #3,D3
00001CFA  EC0B                    1190          LSR.B   #6,D3
00001CFC  B63C 0003               1191          CMP.B   #3,D3
00001D00  6700 00BA               1192          BEQ     RORL
00001D04                          1193          
00001D04  0C39 0001 00003125      1194          CMP.B   #$1,bit1
00001D0C  6700 012E               1195          BEQ     PRINTLSL
00001D10  0C39 0000 00003125      1196          CMP.B   #$0,bit1
00001D18  6700 0270               1197          BEQ     PRINTLSR
00001D1C                          1198          
00001D1C                          1199  ASLRMEMH
00001D1C  1A3C 0004               1200          MOVE.B  #4,D5
00001D20  0C39 0001 00003125      1201          CMP.B   #$1,bit1
00001D28  6700 000E               1202          BEQ     PRINTASL
00001D2C  0C39 0000 00003125      1203          CMP.B   #$0,bit1
00001D34  6700 0036               1204          BEQ     PRINTASR
00001D38                          1205          
00001D38                          1206  PRINTASL
00001D38  43F9 00002F46           1207          LEA MASL,A1
00001D3E  303C 000E               1208          MOVE    #14,D0
00001D42  4E4F                    1209          TRAP    #15
00001D44                          1210          
00001D44  0C39 0000 00003126      1211          CMP.B   #$0,bit2
00001D4C  6700 016C               1212          BEQ     PRINTB
00001D50  0C39 0001 00003126      1213          CMP.B   #$1,bit2
00001D58  6700 0194               1214          BEQ     PRINTW
00001D5C  0C39 0002 00003126      1215          CMP.B   #$2,bit2
00001D64  6700 01BC               1216          BEQ     PRINTL
00001D68  6000 0106               1217          BRA     LSLRMEM
00001D6C                          1218          
00001D6C                          1219  PRINTASR        
00001D6C  43F9 00002F4A           1220          LEA MASR,A1
00001D72  303C 000E               1221          MOVE    #14,D0
00001D76  4E4F                    1222          TRAP    #15
00001D78                          1223          
00001D78  0C39 0000 00003126      1224          CMP.B   #$0,bit2
00001D80  6700 0138               1225          BEQ     PRINTB
00001D84  0C39 0001 00003126      1226          CMP.B   #$1,bit2
00001D8C  6700 0160               1227          BEQ     PRINTW
00001D90  0C39 0002 00003126      1228          CMP.B   #$2,bit2
00001D98  6700 0188               1229          BEQ     PRINTL
00001D9C  6000 00D2               1230          BRA     LSLRMEM
00001DA0                          1231          
00001DA0                          1232  LSLRMEMH
00001DA0  1A3C 0004               1233          MOVE.B  #4,D5
00001DA4  0C39 0001 00003125      1234          CMP.B   #$1,bit1
00001DAC  6700 008E               1235          BEQ     PRINTLSL
00001DB0  0C39 0000 00003125      1236          CMP.B   #$0,bit1
00001DB8  6700 01D0               1237          BEQ     PRINTLSR
00001DBC                          1238  RORL
00001DBC  0C39 0001 00003125      1239          CMP.B   #$1,bit1
00001DC4  6700 000E               1240          BEQ     PRINTROL
00001DC8  0C39 0000 00003125      1241          CMP.B   #$0,bit1
00001DD0  6700 0036               1242          BEQ     PRINTROR
00001DD4                          1243  PRINTROL
00001DD4  43F9 00002EF7           1244          LEA MROL,A1
00001DDA  303C 000E               1245          MOVE    #14,D0
00001DDE  4E4F                    1246          TRAP    #15
00001DE0                          1247          
00001DE0  0C39 0000 00003126      1248          CMP.B   #$0,bit2
00001DE8  6700 00D0               1249          BEQ     PRINTB
00001DEC  0C39 0001 00003126      1250          CMP.B   #$1,bit2
00001DF4  6700 00F8               1251          BEQ     PRINTW
00001DF8  0C39 0002 00003126      1252          CMP.B   #$2,bit2
00001E00  6700 0120               1253          BEQ     PRINTL
00001E04  6000 006A               1254          BRA     LSLRMEM
00001E08                          1255  PRINTROR
00001E08  43F9 00002EFB           1256          LEA MROR,A1
00001E0E  323C 000E               1257          MOVE    #14,D1
00001E12  4E4F                    1258          TRAP    #15
00001E14                          1259          
00001E14  0C39 0000 00003126      1260          CMP.B   #$0,bit2
00001E1C  6700 009C               1261          BEQ     PRINTB
00001E20  0C39 0001 00003126      1262          CMP.B   #$1,bit2
00001E28  6700 00C4               1263          BEQ     PRINTW
00001E2C  0C39 0002 00003126      1264          CMP.B   #$2,bit2
00001E34  6700 00EC               1265          BEQ     PRINTL
00001E38  6000 0036               1266          BRA     LSLRMEM
00001E3C                          1267  PRINTLSL
00001E3C  43F9 00002EFF           1268          LEA MLSL,A1
00001E42  303C 000E               1269          MOVE    #14,D0
00001E46  4E4F                    1270          TRAP    #15
00001E48                          1271          
00001E48  0C39 0000 00003126      1272          CMP.B   #$0,bit2
00001E50  6700 0068               1273          BEQ     PRINTB
00001E54  0C39 0001 00003126      1274          CMP.B   #$1,bit2
00001E5C  6700 0090               1275          BEQ     PRINTW
00001E60  0C39 0002 00003126      1276          CMP.B   #$2,bit2
00001E68  6700 00B8               1277          BEQ     PRINTL
00001E6C  6000 0002               1278          BRA     LSLRMEM
00001E70                          1279          
00001E70                          1280  LSLRMEM
00001E70                          1281          
00001E70  E50C                    1282          LSL.B   #2,D4
00001E72  EA0C                    1283          LSR.B   #5,D4
00001E74  13C4 00003127           1284          MOVE.B  D4,bit3
00001E7A                          1285          
00001E7A  183C 0003               1286          MOVE.B  #$3,D4
00001E7E                          1287          
00001E7E  0C39 0002 00003127      1288          CMP.B   #$2,bit3
00001E86  6700 F7FE               1289          BEQ     MOVEIAN1
00001E8A  0C39 0003 00003127      1290          CMP.B   #$3,bit3
00001E92  6700 F886               1291          BEQ     MOVEIANI1
00001E96  0C39 0004 00003127      1292          CMP.B   #$4,bit3
00001E9E  6700 F922               1293          BEQ     MOVEIAND1
00001EA2                          1294          
00001EA2  43F9 00002EBF           1295          LEA TAB,A1
00001EA8  123C 0003               1296          MOVE.B  #3,D1
00001EAC  4E4F                    1297          TRAP    #15 
00001EAE                          1298          
00001EAE  0C39 0007 00003127      1299          CMP.B   #$7,bit3
00001EB6  6700 F704               1300          BEQ     ADDIMDDES
00001EBA                          1301  PRINTB
00001EBA  43F9 00002EDD           1302          LEA MDOT,A1
00001EC0  303C 000E               1303          MOVE    #14,D0
00001EC4  4E4F                    1304          TRAP    #15
00001EC6                          1305  
00001EC6  43F9 00002EE1           1306          LEA MBYTE,A1
00001ECC  303C 000E               1307          MOVE    #14,D0
00001ED0  4E4F                    1308          TRAP    #15
00001ED2                          1309          
00001ED2  3A3C 0006               1310          MOVE #$6,D5
00001ED6                          1311          
00001ED6  0C39 0000 00003127      1312          CMP.B   #0,bit3
00001EDE  6700 0076               1313          BEQ     PRINTLSLRCOUNT
00001EE2  0C39 0001 00003127      1314          CMP.B   #1,bit3
00001EEA  6700 F976               1315          BEQ     MOVBDN1
00001EEE                          1316  
00001EEE                          1317  PRINTW 
00001EEE  43F9 00002EDD           1318          LEA MDOT,A1
00001EF4  303C 000E               1319          MOVE    #14,D0
00001EF8  4E4F                    1320          TRAP    #15
00001EFA                          1321  
00001EFA  43F9 00002EE4           1322          LEA MWORD,A1
00001F00  303C 000E               1323          MOVE    #14,D0
00001F04  4E4F                    1324          TRAP    #15
00001F06                          1325          
00001F06  3A3C 0006               1326          MOVE #$6,D5
00001F0A                          1327          
00001F0A  0C39 0000 00003127      1328          CMP.B   #0,bit3
00001F12  6700 0042               1329          BEQ     PRINTLSLRCOUNT
00001F16  0C39 0001 00003127      1330          CMP.B   #1,bit3
00001F1E  6700 F942               1331          BEQ     MOVBDN1
00001F22                          1332  
00001F22                          1333  PRINTL
00001F22  43F9 00002EDD           1334          LEA MDOT,A1
00001F28  303C 000E               1335          MOVE    #14,D0
00001F2C  4E4F                    1336          TRAP    #15
00001F2E                          1337  
00001F2E  43F9 00002EE7           1338          LEA MLONG,A1
00001F34  303C 000E               1339          MOVE    #14,D0
00001F38  4E4F                    1340          TRAP    #15
00001F3A                          1341  
00001F3A  3A3C 0006               1342          MOVE #$6,D5
00001F3E                          1343          
00001F3E  0C39 0000 00003127      1344          CMP.B   #0,bit3
00001F46  6700 000E               1345          BEQ     PRINTLSLRCOUNT
00001F4A  0C39 0001 00003127      1346          CMP.B   #1,bit3
00001F52  6700 F90E               1347          BEQ     MOVBDN1    
00001F56                          1348  
00001F56                          1349  PRINTLSLRCOUNT
00001F56  43F9 00002EBF           1350          LEA TAB,A1
00001F5C  303C 000E               1351          MOVE    #14,D0
00001F60  4E4F                    1352          TRAP    #15
00001F62                          1353          
00001F62  43F9 00002ECD           1354          LEA HASH,A1
00001F68  303C 000E               1355          MOVE    #14,D0
00001F6C  4E4F                    1356          TRAP    #15
00001F6E                          1357          
00001F6E  1239 00003124           1358          MOVE.B  bit0,D1
00001F74  303C 0003               1359          MOVE    #3,D0
00001F78  4E4F                    1360          TRAP    #15
00001F7A                          1361          
00001F7A  43F9 00002EC3           1362          LEA COMMA,A1
00001F80  303C 000E               1363          MOVE    #14,D0
00001F84  4E4F                    1364          TRAP    #15
00001F86                          1365          
00001F86  6000 F98E               1366          BRA LSLRDESD
00001F8A                          1367    
00001F8A                          1368  PRINTLSR
00001F8A  43F9 00002F03           1369          LEA MLSR,A1
00001F90  323C 000E               1370          MOVE    #14,D1
00001F94  4E4F                    1371          TRAP    #15
00001F96                          1372          
00001F96  0C39 0000 00003126      1373          CMP.B   #$0,bit2
00001F9E  6700 FF1A               1374          BEQ     PRINTB
00001FA2  0C39 0001 00003126      1375          CMP.B   #$1,bit2
00001FAA  6700 FF42               1376          BEQ     PRINTW
00001FAE  0C39 0002 00003126      1377          CMP.B   #$2,bit2
00001FB6  6700 FF6A               1378          BEQ     PRINTL
00001FBA  6000 FEB4               1379          BRA     LSLRMEM
00001FBE                          1380  
00001FBE                          1381  ******************************************************************************************************
00001FBE                          1382  *   Branch, branch to subroutine, and branch conditionally
00001FBE                          1383  *   BRA, BSR, Bcc
00001FBE                          1384  
00001FBE                          1385  BCC
00001FBE  13C5 00003125           1386          MOVE.B  D5,bit1             Moves condition code to bit1
00001FC4  1A1E                    1387          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001FC6  13C5 00003126           1388          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001FCC  280E                    1389          MOVE.L  A6,D4               Moves current address to D4 register
00001FCE                          1390  
00001FCE  BA3C 0000               1391          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001FD2  6700 0010               1392          BEQ     BCCWORD
00001FD6  BA3C 00FF               1393          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001FDA  6700 0010               1394          BEQ     BCCLONG             Else, displacement is 8-bits
00001FDE                          1395  
00001FDE                          1396          * Calculates 8-bit displacement
00001FDE                          1397          * 8-bit displacement is already in D5
00001FDE                          1398          * Adds displacement to current address
00001FDE  D805                    1399          ADD.B   D5,D4               Adds the displacement to current address
00001FE0  6000 0012               1400          BRA     BCCNEXT
00001FE4                          1401  
00001FE4                          1402  * Calculates 16-bit displacement
00001FE4                          1403  BCCWORD
00001FE4  3A1E                    1404          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001FE6  D845                    1405          ADD.W   D5,D4               Adds the displacement to current address
00001FE8  6000 000A               1406          BRA     BCCNEXT
00001FEC                          1407  
00001FEC                          1408  * Calculates 32-bit displacement
00001FEC                          1409  BCCLONG
00001FEC  2A1E                    1410          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001FEE  D885                    1411          ADD.L   D5,D4               Adds the displacement to current address
00001FF0  6000 0002               1412          BRA     BCCNEXT
00001FF4                          1413  
00001FF4                          1414  * Does the actual calculation
00001FF4                          1415  * Adds the displacement to the current address
00001FF4                          1416  BCCNEXT
00001FF4  6100 000E               1417          BSR     BCCDISP             Displays branch op-code
00001FF8  45F9 00002C6C           1418          LEA     ENDNEWLINE,A2
00001FFE  2E04                    1419          MOVE.L  D4,D7
00002000  6000 F0EA               1420          BRA     DISPADDRSTART
00002004                          1421  
00002004                          1422  BCCDISP
00002004  B43C 0000               1423          CMP.B   #$0,D2
00002008  6700 0026               1424          BEQ     BCCBRA
0000200C  B43C 0007               1425          CMP.B   #$7,D2
00002010  6700 0028               1426          BEQ     BCCBEQ
00002014  B43C 0006               1427          CMP.B   #$6,D2
00002018  6700 002A               1428          BEQ     BCCBNE
0000201C  B43C 000D               1429          CMP.B   #$D,D2
00002020  6700 002C               1430          BEQ     BCCBLT
00002024  B43C 0002               1431          CMP.B   #$2,D2
00002028  6700 002E               1432          BEQ     BCCBHI
0000202C                          1433  
0000202C  6000 0BCC               1434          BRA     INVOP
00002030                          1435  
00002030                          1436  BCCBRA
00002030  43F9 00002FB4           1437          LEA     MBRA,A1
00002036  6000 002A               1438          BRA     BCCPRINT
0000203A                          1439  BCCBEQ
0000203A  43F9 00002FA4           1440          LEA     MBEQ,A1
00002040  6000 0020               1441          BRA     BCCPRINT
00002044                          1442  BCCBNE
00002044  43F9 00002FA8           1443          LEA     MBNE,A1
0000204A  6000 0016               1444          BRA     BCCPRINT
0000204E                          1445  BCCBLT
0000204E  43F9 00002FAC           1446          LEA     MBLT,A1
00002054  6000 000C               1447          BRA     BCCPRINT
00002058                          1448  BCCBHI
00002058  43F9 00002FB0           1449          LEA     MBHI,A1
0000205E  6000 0002               1450          BRA     BCCPRINT
00002062                          1451  BCCPRINT
00002062  103C 000E               1452          MOVE.B  #14,D0
00002066  4E4F                    1453          TRAP    #15
00002068  43F9 00002EBF           1454          LEA     TAB,A1
0000206E  4E4F                    1455          TRAP    #15
00002070  4E75                    1456          RTS
00002072                          1457  
00002072                          1458  ******************************************************************************************************
00002072                          1459  *   Immediate data arithmetic operations
00002072                          1460  *   SUBI
00002072                          1461  
00002072  13C5 00003125           1462  IMD     MOVE.B  D5,bit1
00002078  141E                    1463          MOVE.B  (A6)+,D2
0000207A                          1464          
0000207A  3805                    1465          MOVE    D5,D4
0000207C  C83C 0001               1466          AND.B   #$0001,D4
00002080  B83C 0001               1467          CMP.B   #$1,D4
00002084  6700 F1D8               1468          BEQ     BTST
00002088                          1469  
00002088  DE02                    1470          ADD.B   D2,D7
0000208A                          1471  
0000208A  1602                    1472          MOVE.B  D2,D3               Copies data at D2 to D3
0000208C                          1473          *   this gets digit in 10's place
0000208C  E80B                    1474          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000208E                          1475          *   this gets digit in 1's place
0000208E  E90A                    1476          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002090  E80A                    1477          LSR.B   #4,D2               Shifts back right into 1's place
00002092                          1478  
00002092                          1479          *   D3 holds digit in 10's place
00002092                          1480          *   D2 holds digit in 1's place
00002092                          1481  
00002092  E20B                    1482          LSR.B   #1,D3
00002094  6400 0004               1483          BCC     IMD2
00002098  5404                    1484          ADD.B   #$2,D4
0000209A  E20B                    1485  IMD2    LSR.B   #1,D3
0000209C  6400 0004               1486          BCC     IMD3
000020A0  5804                    1487          ADD.B   #$4,D4
000020A2  B43C 0007               1488  IMD3    CMP.B   #$7,D2
000020A6  6D00 0006               1489          BLT     IMD4
000020AA  5204                    1490          ADD.B   #$1,D4
000020AC  5102                    1491          SUB.B   #$8,D2
000020AE                          1492  
000020AE                          1493          *   Stores them into addr
000020AE  13C3 00003126           1494  IMD4    MOVE.B  D3,bit2
000020B4  13C4 00003127           1495          MOVE.B  D4,bit3
000020BA  13C2 00003128           1496          MOVE.B  D2,bit4
000020C0                          1497  
000020C0                          1498  **************************
000020C0                          1499  * This finds the size of the operation
000020C0                          1500  
000020C0  0C39 0000 00003126      1501          CMP.B   #$0,bit2
000020C8  6700 007E               1502          BEQ     IMDBYTE
000020CC  0C39 0001 00003126      1503          CMP.B   #$1,bit2
000020D4  6700 0082               1504          BEQ     IMDWORD
000020D8  0C39 0002 00003126      1505          CMP.B   #$2,bit2
000020E0  6700 0084               1506          BEQ     IMDLONG
000020E4  6000 0B14               1507          BRA     INVOP
000020E8                          1508  
000020E8                          1509  *************************************************************
000020E8                          1510  * Display IMD op-code
000020E8                          1511  IMDPRINT
000020E8  0C39 0000 00003125      1512          CMP.B   #$0,bit1
000020F0  6700 0026               1513          BEQ     IMDPRINTORI
000020F4  0C39 0004 00003125      1514          CMP.B   #$4,bit1
000020FC  6700 0024               1515          BEQ     IMDPRINTSUBI
00002100  0C39 000A 00003125      1516          CMP.B   #$A,bit1
00002108  6700 0022               1517          BEQ     IMDPRINTEORI
0000210C  0C39 000C 00003125      1518          CMP.B   #$C,bit1
00002114  6700 0020               1519          BEQ     IMDPRINTCMPI
00002118                          1520  
00002118                          1521  IMDPRINTORI
00002118  43F9 00002F6E           1522          LEA     MORI,A1
0000211E  6000 0020               1523          BRA     IMDPRINTEND
00002122                          1524  
00002122                          1525  IMDPRINTSUBI
00002122  43F9 00002F68           1526          LEA     MSUBI,A1
00002128  6000 0016               1527          BRA     IMDPRINTEND
0000212C                          1528  
0000212C                          1529  IMDPRINTEORI
0000212C  43F9 00002F98           1530          LEA     MEORI,A1
00002132  6000 000C               1531          BRA     IMDPRINTEND
00002136                          1532  
00002136                          1533  IMDPRINTCMPI
00002136  43F9 00002F87           1534          LEA     MCMPI,A1
0000213C  6000 0002               1535          BRA     IMDPRINTEND
00002140                          1536  
00002140                          1537  IMDPRINTEND
00002140  103C 000E               1538          MOVE.B  #14,D0
00002144  4E4F                    1539          TRAP    #15
00002146  4E75                    1540          RTS
00002148                          1541  
00002148                          1542  *************************************************************
00002148                          1543  * Immediate data operation size BYTE
00002148                          1544  IMDBYTE
00002148  619E                    1545          BSR     IMDPRINT
0000214A  43F9 00002EE1           1546          LEA     MBYTE,A1
00002150                          1547  
00002150                          1548          * Moves size to D4, needed to use DISPEA
00002150  183C 0001               1549          MOVE.B  #$1,D4
00002154  6000 001A               1550          BRA     IMDEA
00002158                          1551  
00002158                          1552  *************************************************************
00002158                          1553  * Immediate data operation size WORD
00002158                          1554  IMDWORD
00002158  618E                    1555          BSR     IMDPRINT
0000215A  43F9 00002EE4           1556          LEA     MWORD,A1
00002160                          1557  
00002160  1803                    1558          MOVE.B  D3,D4
00002162  6000 000C               1559          BRA     IMDEA
00002166                          1560  
00002166                          1561  
00002166                          1562  *************************************************************
00002166                          1563  * Immediate data operation size LONG
00002166                          1564  IMDLONG
00002166  6180                    1565          BSR     IMDPRINT
00002168  43F9 00002EE7           1566          LEA     MLONG,A1
0000216E                          1567          
0000216E                          1568  
0000216E                          1569          * Moves size to D4, needed to use DISPEA
0000216E  1803                    1570          MOVE.B  D3,D4
00002170                          1571  
00002170                          1572  IMDEA
00002170                          1573          * This prints out the size and creates tab
00002170  103C 000E               1574          MOVE.B  #14,D0
00002174  4E4F                    1575          TRAP    #15
00002176  43F9 00002EBF           1576          LEA     TAB,A1
0000217C  103C 000E               1577          MOVE.B  #14,D0
00002180  4E4F                    1578          TRAP    #15
00002182                          1579          * Loads return address into A2
00002182  45F9 0000218C           1580          LEA     IMDEA2,A2
00002188  6000 09F6               1581          BRA     DISPEA
0000218C                          1582  IMDEA2
0000218C  43F9 00002EC3           1583          LEA     COMMA,A1
00002192  103C 000E               1584          MOVE.B  #14,D0
00002196  4E4F                    1585          TRAP    #15
00002198                          1586  
00002198  45F9 000021A2           1587          LEA     IMDEA3,A2
0000219E  6000 0890               1588          BRA     SUBEA
000021A2                          1589  IMDEA3
000021A2  6000 0AC8               1590          BRA     ENDNEWLINE
000021A6                          1591  
000021A6                          1592  ******************************************************************************************************
000021A6                          1593  * Miscellaneous section
000021A6                          1594  *   Not goes here
000021A6                          1595  
000021A6                          1596  MISC
000021A6  13C5 00003125           1597          MOVE.B  D5,bit1
000021AC  141E                    1598          MOVE.B  (A6)+,D2
000021AE                          1599  
000021AE  DE02                    1600          ADD.B   D2,D7
000021B0                          1601  
000021B0  1602                    1602          MOVE.B  D2,D3               Copies data at D2 to D3
000021B2                          1603          *   this gets digit in 10's place
000021B2  E80B                    1604          LSR.B   #4,D3               Shifts right to get rid of 1's place
000021B4                          1605          *   this gets digit in 1's place
000021B4  E90A                    1606          LSL.B   #4,D2               Shifts left to get rid of 10's place
000021B6  E80A                    1607          LSR.B   #4,D2               Shifts back right into 1's place
000021B8                          1608  
000021B8                          1609  
000021B8  3806                    1610          MOVE.W  D6,D4
000021BA  E94C                    1611          LSL.W   #$4,D4
000021BC  E04C                    1612          LSR.W   #$8,D4
000021BE  E44C                    1613          LSR.W   #$2,D4
000021C0  13C4 00003126           1614          MOVE.B  D4,bit2
000021C6  0C39 003A 00003126      1615          CMP.B   #$3A,bit2
000021CE  6700 F042               1616          BEQ     JSR
000021D2                          1617          *   D5 is bit1
000021D2                          1618          *   D3 is bit2
000021D2                          1619          *   D2 is bit3
000021D2                          1620  
000021D2                          1621  **************************
000021D2                          1622  * This finds the size of the operation
000021D2                          1623          * D5 is bit1
000021D2  BA3C 0004               1624          CMP.B   #$4,D5
000021D6  6700 F96A               1625          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
000021DA  BA3C 0006               1626          CMP.B   #$6,D5              Branches to NOT section
000021DE  6700 006E               1627          BEQ     MISCNOT
000021E2  BA3C 000E               1628          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
000021E6  6700 0006               1629          BEQ     MISCBIT2
000021EA  6000 0022               1630          BRA     MISCCHECKM
000021EE                          1631  
000021EE                          1632  MISCBIT2
000021EE                          1633          * D3 is bit2
000021EE  B63C 0007               1634          CMP.B   #$7,D3              Branches to NOP
000021F2  6700 0006               1635          BEQ     MISCBIT3
000021F6  6000 0A02               1636          BRA     INVOP
000021FA                          1637  
000021FA                          1638  MISCBIT3
000021FA                          1639          * D2 is bit3
000021FA  B43C 0001               1640          CMP.B   #$1,D2              Branches to NOP
000021FE  6700 002E               1641          BEQ     MISCNOP
00002202  B43C 0005               1642          CMP.B   #$5,D2              Branches to NOP
00002206  6700 0036               1643          BEQ     MISCRTS
0000220A  6000 09EE               1644          BRA     INVOP
0000220E                          1645  
0000220E                          1646  
0000220E                          1647  MISCCHECKM
0000220E  1805                    1648          MOVE.B  D5,D4
00002210  C83C 0008               1649          AND.B   #$8,D4
00002214  B83C 0008               1650          CMP.B   #$8,D4
00002218  6600 09E0               1651          BNE     INVOP
0000221C  1803                    1652          MOVE.B  D3,D4
0000221E  C83C 0008               1653          AND.B   #$8,D4
00002222  B83C 0008               1654          CMP.B   #$8,D4
00002226  6600 09D2               1655          BNE     INVOP
0000222A  6000 00EE               1656          BRA     MISCMOVEM
0000222E                          1657  
0000222E                          1658  ******************************************************
0000222E                          1659  * NOP
0000222E                          1660  * No operation
0000222E                          1661  MISCNOP
0000222E  43F9 00002FB8           1662          LEA     MNOP,A1
00002234  103C 000E               1663          MOVE.B  #14,D0
00002238  4E4F                    1664          TRAP    #15
0000223A                          1665  
0000223A  6000 0A30               1666          BRA     ENDNEWLINE          Goes to next opcode
0000223E                          1667  
0000223E                          1668  ******************************************************
0000223E                          1669  * RTS
0000223E                          1670  * Return to sub routine
0000223E                          1671  MISCRTS
0000223E  43F9 00002FBC           1672          LEA     MRTS,A1
00002244  103C 000E               1673          MOVE.B  #14,D0
00002248  4E4F                    1674          TRAP    #15
0000224A                          1675  
0000224A  6000 0A20               1676          BRA     ENDNEWLINE          Goes to next opcode
0000224E                          1677  
0000224E                          1678  ******************************************************
0000224E                          1679  * NOT
0000224E                          1680  * Reuses some of IMD section to display because they have similar format
0000224E                          1681  *  (I was kinda lazy too)
0000224E                          1682  MISCNOT
0000224E  E20B                    1683          LSR.B   #1,D3
00002250  6400 0004               1684          BCC     MISCNOT2
00002254  5404                    1685          ADD.B   #$2,D4
00002256                          1686  MISCNOT2   
00002256  E20B                    1687          LSR.B   #1,D3
00002258  6400 0004               1688          BCC     MISCNOT3
0000225C  5804                    1689          ADD.B   #$4,D4
0000225E                          1690  MISCNOT3   
0000225E  B43C 0007               1691          CMP.B   #$7,D2
00002262  6D00 0006               1692          BLT     MISCNOT4
00002266  5204                    1693          ADD.B   #$1,D4
00002268  5102                    1694          SUB.B   #$8,D2
0000226A                          1695  
0000226A                          1696          *   Stores them into addr
0000226A                          1697  MISCNOT4
0000226A  13C3 00003126           1698          MOVE.B  D3,bit2
00002270  13C4 00003127           1699          MOVE.B  D4,bit3
00002276  13C2 00003128           1700          MOVE.B  D2,bit4
0000227C                          1701  
0000227C  B63C 0000               1702          CMP.B   #$0,D3
00002280  6700 0016               1703          BEQ     MISCBYTE
00002284  B63C 0001               1704          CMP.B   #$1,D3
00002288  6700 0020               1705          BEQ     MISCWORD
0000228C  B63C 0002               1706          CMP.B   #$2,D3
00002290  6700 0028               1707          BEQ     MISCLONG
00002294  6000 0964               1708          BRA     INVOP
00002298                          1709  *************************************************************
00002298                          1710  * Immediate data operation size BYTE
00002298                          1711  MISCBYTE
00002298  6100 004C               1712          BSR     MISCPRINT
0000229C  43F9 00002EE1           1713          LEA     MBYTE,A1
000022A2                          1714  
000022A2                          1715          * Moves size to D4, needed to use DISPEA
000022A2  183C 0001               1716          MOVE.B  #$1,D4
000022A6  6000 001E               1717          BRA     MISCEA
000022AA                          1718  
000022AA                          1719  *************************************************************
000022AA                          1720  * Immediate data operation size WORD
000022AA                          1721  MISCWORD
000022AA  6100 003A               1722          BSR     MISCPRINT
000022AE  43F9 00002EE4           1723          LEA     MWORD,A1
000022B4                          1724  
000022B4  1803                    1725          MOVE.B  D3,D4
000022B6  6000 000E               1726          BRA     MISCEA
000022BA                          1727  
000022BA                          1728  
000022BA                          1729  *************************************************************
000022BA                          1730  * Immediate data operation size LONG
000022BA                          1731  MISCLONG
000022BA  6100 002A               1732          BSR     MISCPRINT
000022BE  43F9 00002EE7           1733          LEA     MLONG,A1
000022C4                          1734  
000022C4                          1735          * Moves size to D4, needed to use DISPEA
000022C4  1803                    1736          MOVE.B  D3,D4
000022C6                          1737  
000022C6                          1738  MISCEA
000022C6  103C 000E               1739          MOVE.B  #14,D0
000022CA  4E4F                    1740          TRAP    #15
000022CC  43F9 00002EBF           1741          LEA     TAB,A1
000022D2  103C 000E               1742          MOVE.B  #14,D0
000022D6  4E4F                    1743          TRAP    #15
000022D8                          1744  
000022D8  45F9 000022E2           1745          LEA     MISCEA2,A2
000022DE  6000 0750               1746          BRA     SUBEA
000022E2                          1747  MISCEA2
000022E2  6000 0988               1748          BRA     ENDNEWLINE
000022E6                          1749  
000022E6                          1750  *************************************************************
000022E6                          1751  * Display IMD op-code
000022E6                          1752  MISCPRINT
000022E6  0C39 0004 00003125      1753          CMP.B   #$4,bit1
000022EE  6700 0018               1754          BEQ     MISCPRINTNEG
000022F2  0C39 0006 00003125      1755          CMP.B   #$6,bit1
000022FA  6700 0002               1756          BEQ     MISCPRINTNOT
000022FE                          1757  
000022FE                          1758  MISCPRINTNOT
000022FE  43F9 00002F73           1759          LEA     MNOT,A1
00002304  6000 000C               1760          BRA     MISCPRINTEND
00002308                          1761  
00002308                          1762  MISCPRINTNEG
00002308  43F9 00002F7E           1763          LEA     MNEG,A1
0000230E  6000 0002               1764          BRA     MISCPRINTEND
00002312                          1765  
00002312                          1766  MISCPRINTEND
00002312  103C 000E               1767          MOVE.B  #14,D0
00002316  4E4F                    1768          TRAP    #15
00002318  4E75                    1769          RTS
0000231A                          1770  
0000231A                          1771  
0000231A                          1772  *************************************************************************
0000231A                          1773  * MOVEM stuff
0000231A                          1774          *   D5 is bit1
0000231A                          1775          *   D3 is bit2
0000231A                          1776          *   D2 is bit3
0000231A                          1777  MISCMOVEM
0000231A  1805                    1778          MOVE.B  D5,D4               Gets the dr field and stores it into D5
0000231C  4245                    1779          CLR     D5                  Moves 0 to D5
0000231E  0804 0002               1780          BTST    #2,D4               Checks the bit at spot 2
00002322  6700 0006               1781          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
00002326  1A3C 0001               1782          MOVE.B  #1,D5               Else, it will skip it
0000232A                          1783  
0000232A                          1784  MISCMOVEM2
0000232A  4246                    1785          CLR     D6                  Clears D6, setting it to 0
0000232C  1803                    1786          MOVE.B  D3,D4               Gets the size field and stores it into D6
0000232E  0804 0002               1787          BTST    #2,D4               Checks the bit at spot 2
00002332  6700 0006               1788          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
00002336  1C3C 0001               1789          MOVE.B  #1,D6               Else, it will skip it. 
0000233A                          1790  
0000233A                          1791  MISCMOVEM3
0000233A  C63C 0003               1792          AND.B   #$3,D3              Gets ride of the first 2 bits
0000233E  E30B                    1793          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
00002340  0882 0003               1794          BCLR    #3,D2               Checks furthest left bit and set it to 0
00002344  6700 0006               1795          BEQ     MISCMOVEM4
00002348  08C3 0000               1796          BSET    #0,D3               If bit was 1, adds 1 to mode
0000234C                          1797  
0000234C                          1798      * bit1 is in D5 dr field
0000234C                          1799      * bit2 is in D6 size
0000234C                          1800      * bit3 is in D3 mode
0000234C                          1801      * bit4 is in D2 reg
0000234C                          1802  MISCMOVEM4
0000234C  13C5 00003125           1803          MOVE.B  D5,bit1
00002352  13C6 00003126           1804          MOVE.B  D6,bit2
00002358  13C3 00003127           1805          MOVE.B  D3,bit3
0000235E  13C2 00003128           1806          MOVE.B  D2,bit4
00002364                          1807  
00002364                          1808      * Prints out MOVEM and size + tab
00002364  43F9 00002F3F           1809          LEA     MMOVEM,A1
0000236A  103C 000E               1810          MOVE.B  #14,D0
0000236E  4E4F                    1811          TRAP    #15
00002370                          1812  
00002370  BC3C 0001               1813          CMP.B   #1,D6
00002374  6700 000C               1814          BEQ     MISCMMSIZEL
00002378  43F9 00002EE4           1815          LEA     MWORD,A1
0000237E  6000 0008               1816          BRA     MISCMMPRINTSIZE
00002382                          1817  
00002382                          1818  MISCMMSIZEL
00002382  43F9 00002EE7           1819          LEA     MLONG,A1
00002388                          1820  
00002388                          1821  MISCMMPRINTSIZE
00002388  4E4F                    1822          TRAP    #15
0000238A  43F9 00002EBF           1823          LEA     TAB,A1
00002390  4E4F                    1824          TRAP    #15
00002392                          1825  
00002392  3C1E                    1826          MOVE.W  (A6)+,D6
00002394  BA3C 0000               1827          CMP.B   #0,D5
00002398  6700 0006               1828          BEQ     MISCMMPREDECCHECK
0000239C  6000 007C               1829          BRA     MISCMMPOSTINC
000023A0                          1830  
000023A0                          1831  MISCMMPREDECCHECK
000023A0  B63C 0004               1832          CMP.B   #$4,D3
000023A4  6700 0006               1833          BEQ     MISCMMPREDEC
000023A8  6000 00DE               1834          BRA     MISCMMREGMEM
000023AC                          1835  
000023AC                          1836  ******************************************************************
000023AC                          1837  * MOVEM Post-decrement
000023AC                          1838  * Prints out registers from post-decrement
000023AC                          1839  * D6 holds the reg list
000023AC                          1840  MISCMMPREDEC
000023AC  1806                    1841          MOVE.B  D6,D4
000023AE  3E3C 0008               1842          MOVE.W  #8,D7               Counter
000023B2  123C 000F               1843          MOVE.B  #$F,D1
000023B6                          1844  
000023B6  49F9 00002ED1           1845          LEA     DISPA,A4
000023BC  6100 0032               1846          BSR     MISCMMPREDECPRINT
000023C0                          1847  
000023C0  3806                    1848          MOVE.W  D6,D4
000023C2  E04C                    1849          LSR.W   #8,D4
000023C4  3E3C 0008               1850          MOVE.W  #8,D7               Counter
000023C8  49F9 00002ED7           1851          LEA     DISPD,A4
000023CE  6100 0020               1852          BSR     MISCMMPREDECPRINT
000023D2  6000 0002               1853          BRA     MISCMMPREDEC2
000023D6                          1854  
000023D6                          1855  MISCMMPREDEC2
000023D6  43F9 00002EC3           1856          LEA     COMMA,A1
000023DC  103C 000E               1857          MOVE.B  #14,D0
000023E0  4E4F                    1858          TRAP    #15
000023E2                          1859  
000023E2  45F9 000023EC           1860          LEA     MISCMMPREDEC3,A2
000023E8  6000 0646               1861          BRA     SUBEA
000023EC                          1862  
000023EC                          1863  MISCMMPREDEC3
000023EC  6000 087E               1864          BRA     ENDNEWLINE
000023F0                          1865  
000023F0                          1866  * Prints out reg list
000023F0                          1867  MISCMMPREDECPRINT
000023F0  E30C                    1868          LSL.B   #1,D4
000023F2  6400 001C               1869          BCC     MISCMMPREDECPRINT3
000023F6                          1870  
000023F6  B23C 000F               1871          CMP.B   #$F,D1
000023FA  6700 0008               1872          BEQ     MISCMMPREDECPRINT2
000023FE  4EB9 000024FE           1873          JSR     MISCMMSLASH
00002404                          1874  
00002404                          1875  MISCMMPREDECPRINT2
00002404  224C                    1876          MOVEA.L A4,A1
00002406  103C 000E               1877          MOVE.B  #14,D0
0000240A  4E4F                    1878          TRAP    #15
0000240C  6100 00E2               1879          BSR     MISCMMPRINTNUM
00002410                          1880  
00002410                          1881  MISCMMPREDECPRINT3
00002410  5307                    1882          SUB.B   #1,D7
00002412  BE3C 0000               1883          CMP.B   #0,D7
00002416  66D8                    1884          BNE     MISCMMPREDECPRINT
00002418  4E75                    1885          RTS
0000241A                          1886  
0000241A                          1887  ******************************************************************
0000241A                          1888  * MOVEM Post-increment
0000241A                          1889  * Prints out registers from post-increment
0000241A                          1890  * D6 holds the reg list
0000241A                          1891  MISCMMPOSTINC
0000241A  45F9 00002424           1892          LEA     MISCMMPOSTINC2,A2
00002420  6000 060E               1893          BRA     SUBEA
00002424                          1894  
00002424                          1895  MISCMMPOSTINC2
00002424  43F9 00002EC3           1896          LEA     COMMA,A1
0000242A  103C 000E               1897          MOVE.B  #14,D0
0000242E  4E4F                    1898          TRAP    #15
00002430                          1899  
00002430  3806                    1900          MOVE.W  D6,D4
00002432  E04C                    1901          LSR.W   #8,D4
00002434  3E3C 0008               1902          MOVE.W  #8,D7               Counter
00002438  123C 000F               1903          MOVE.B  #$F,D1
0000243C                          1904  
0000243C  49F9 00002ED1           1905          LEA     DISPA,A4
00002442  6100 001A               1906          BSR     MISCMMPOSTINCPRINT
00002446                          1907  
00002446  1806                    1908          MOVE.B  D6,D4
00002448  3E3C 0008               1909          MOVE.W  #8,D7               Counter
0000244C  49F9 00002ED7           1910          LEA     DISPD,A4
00002452  6100 000A               1911          BSR     MISCMMPOSTINCPRINT
00002456  6000 0002               1912          BRA     MISCMMPOSTINC3
0000245A                          1913  
0000245A                          1914  MISCMMPOSTINC3
0000245A  6000 0810               1915          BRA     ENDNEWLINE
0000245E                          1916  
0000245E                          1917  * Prints out reg list
0000245E                          1918  MISCMMPOSTINCPRINT
0000245E  E20C                    1919          LSR.B   #1,D4
00002460  6400 001C               1920          BCC     MISCMMPOSTINCPRINT3
00002464                          1921  
00002464  B23C 000F               1922          CMP.B   #$F,D1
00002468  6700 0008               1923          BEQ     MISCMMPOSTINCPRINT2
0000246C  4EB9 000024FE           1924          JSR     MISCMMSLASH
00002472                          1925  
00002472                          1926  MISCMMPOSTINCPRINT2
00002472  224C                    1927          MOVEA.L A4,A1
00002474  103C 000E               1928          MOVE.B  #14,D0
00002478  4E4F                    1929          TRAP    #15
0000247A  6100 0074               1930          BSR     MISCMMPRINTNUM
0000247E                          1931  
0000247E                          1932  MISCMMPOSTINCPRINT3
0000247E  5307                    1933          SUB.B   #1,D7
00002480  BE3C 0000               1934          CMP.B   #0,D7
00002484  66D8                    1935          BNE     MISCMMPOSTINCPRINT
00002486  4E75                    1936          RTS
00002488                          1937  
00002488                          1938  ******************************************************************
00002488                          1939  * MOVEM Post-increment
00002488                          1940  * Prints out registers from post-increment
00002488                          1941  * D6 holds the reg list
00002488                          1942  MISCMMREGMEM
00002488  1806                    1943          MOVE.B  D6,D4
0000248A  3E3C 0008               1944          MOVE.W  #8,D7               Counter
0000248E  123C 000F               1945          MOVE.B  #$F,D1
00002492                          1946  
00002492  49F9 00002ED7           1947          LEA     DISPD,A4
00002498  61C4                    1948          BSR     MISCMMPOSTINCPRINT
0000249A                          1949  
0000249A  3806                    1950          MOVE.W  D6,D4
0000249C  E04C                    1951          LSR.W   #8,D4
0000249E  3E3C 0008               1952          MOVE.W  #8,D7               Counter
000024A2  49F9 00002ED1           1953          LEA     DISPA,A4
000024A8  61B4                    1954          BSR     MISCMMPOSTINCPRINT
000024AA  6000 0002               1955          BRA     MISCMMREGMEM2
000024AE                          1956  
000024AE                          1957  MISCMMREGMEM2
000024AE  43F9 00002EC3           1958          LEA     COMMA,A1
000024B4  103C 000E               1959          MOVE.B  #14,D0
000024B8  4E4F                    1960          TRAP    #15
000024BA                          1961  
000024BA  45F9 000024C4           1962          LEA     MISCMMREGMEM3,A2
000024C0  6000 056E               1963          BRA     SUBEA
000024C4                          1964  
000024C4                          1965  MISCMMREGMEM3
000024C4  6000 07A6               1966          BRA     ENDNEWLINE
000024C8                          1967  
000024C8                          1968  * Prints out reg list
000024C8                          1969  MISCMMREGMEMPRINT
000024C8  E20C                    1970          LSR.B   #1,D4
000024CA  64B2                    1971          BCC     MISCMMPOSTINCPRINT3
000024CC                          1972  
000024CC  B23C 000F               1973          CMP.B   #$F,D1
000024D0  67A0                    1974          BEQ     MISCMMPOSTINCPRINT2
000024D2  4EB9 000024FE           1975          JSR     MISCMMSLASH
000024D8                          1976  
000024D8                          1977  MISCMMREGMEMPRINT2
000024D8  224C                    1978          MOVEA.L A4,A1
000024DA  103C 000E               1979          MOVE.B  #14,D0
000024DE  4E4F                    1980          TRAP    #15
000024E0  6100 000E               1981          BSR     MISCMMPRINTNUM
000024E4                          1982  
000024E4                          1983  MISCMMREGMEMPRINT3
000024E4  5307                    1984          SUB.B   #1,D7
000024E6  BE3C 0000               1985          CMP.B   #0,D7
000024EA  6600 FF72               1986          BNE     MISCMMPOSTINCPRINT
000024EE  4E75                    1987          RTS
000024F0                          1988  
000024F0                          1989  
000024F0                          1990  
000024F0                          1991  ***********************************************
000024F0                          1992  * Stuff for printing reg list
000024F0                          1993  MISCMMPRINTNUM
000024F0  123C 0008               1994          MOVE.B  #8,D1
000024F4  9207                    1995          SUB.B   D7,D1
000024F6  103C 0003               1996          MOVE.B  #3,D0
000024FA  4E4F                    1997          TRAP    #15
000024FC  4E75                    1998          RTS
000024FE                          1999  
000024FE                          2000  MISCMMSLASH
000024FE  43F9 00002ECF           2001          LEA     SLASH,A1
00002504  103C 000E               2002          MOVE.B  #14,D0
00002508  4E4F                    2003          TRAP    #15
0000250A  4E75                    2004          RTS
0000250C                          2005  
0000250C                          2006  ******************************************************************************************************
0000250C                          2007  * SUB section
0000250C                          2008  
0000250C                          2009          *   Grabs next two nibbles
0000250C  141E                    2010  SUB     MOVE.B  (A6)+,D2
0000250E                          2011  
0000250E  DE02                    2012          ADD.B   D2,D7
00002510                          2013  
00002510  1602                    2014          MOVE.B  D2,D3               Copies data at D2 to D3
00002512                          2015          *   this gets digit in 10's place
00002512  E80B                    2016          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002514                          2017          *   this gets digit in 1's place
00002514  E90A                    2018          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002516  E80A                    2019          LSR.B   #4,D2               Shifts back right into 1's place
00002518                          2020  
00002518                          2021          *   D3 holds digit in 10's place
00002518                          2022          *   D2 holds digit in 1's place
00002518                          2023  
00002518                          2024          
00002518                          2025          *   Converts nibble into 3-bit parts
00002518  E20B                    2026          LSR.B   #1,D3
0000251A  6400 0004               2027          BCC     SUB2
0000251E  5404                    2028          ADD.B   #$2,D4
00002520                          2029          
00002520  E20B                    2030  SUB2    LSR.B   #1,D3
00002522  6400 0004               2031          BCC     SUB3
00002526  5804                    2032          ADD.B   #$4,D4
00002528                          2033          
00002528  1205                    2034  SUB3    MOVE.B  D5,D1
0000252A  E209                    2035          LSR.B   #1,D1
0000252C  6400 0004               2036          BCC     SUB4
00002530  5803                    2037          ADD.B   #$4,D3
00002532                          2038  
00002532  B43C 0007               2039  SUB4    CMP.B   #$7,D2
00002536  6D00 0006               2040          BLT     SUB1
0000253A  5204                    2041          ADD.B   #$1,D4
0000253C  5102                    2042          SUB.B   #$8,D2
0000253E                          2043  
0000253E                          2044          *   Stores them into addr
0000253E  13C1 00003125           2045  SUB1    MOVE.B  D1,bit1
00002544  13C3 00003126           2046          MOVE.B  D3,bit2
0000254A  13C4 00003127           2047          MOVE.B  D4,bit3
00002550  13C2 00003128           2048          MOVE.B  D2,bit4
00002556                          2049  
00002556                          2050          * do this later
00002556  4241                    2051          CLR     D1
00002558  7400                    2052          MOVE.L  #0,D2
0000255A  7600                    2053          MOVE.L  #0,D3
0000255C  7800                    2054          MOVE.L  #0,D4
0000255E  7A00                    2055          MOVE.L  #0,D5
00002560  7C00                    2056          MOVE.L  #0,D6
00002562                          2057  
00002562                          2058          
00002562                          2059  ******************************************************************************************************
00002562                          2060  * After spliting the op-code into SUB's defined groupings
00002562                          2061  *   This figures out which operation it is and goes to that sub-routine
00002562                          2062  
00002562                          2063          * This checks if bit0 is C which is either AND or MULS
00002562  0C39 000C 00003124      2064          CMP.B   #$C,bit0
0000256A  6600 000E               2065          BNE     SUBACHECK
0000256E  0C39 0007 00003126      2066          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
00002576  6700 F4B2               2067          BEQ     MULSW                       AND will use SUB's routine
0000257A                          2068  
0000257A                          2069  SUBACHECK
0000257A                          2070          * This will display SUBA instead  -- check this later
0000257A  0C39 0003 00003126      2071          CMP.B   #$3,bit2
00002582  6700 01D6               2072          BEQ     SUBA
00002586  0C39 0007 00003126      2073          CMP.B   #$7,bit2
0000258E  6700 01CA               2074          BEQ     SUBA
00002592                          2075  
00002592                          2076          * This will find the size and stuff
00002592  0C39 0000 00003126      2077          CMP.B   #$0,bit2
0000259A  6700 003E               2078          BEQ     SUBSIZE1
0000259E  0C39 0001 00003126      2079          CMP.B   #$1,bit2
000025A6  6700 0072               2080          BEQ     SUBSIZE2
000025AA  0C39 0002 00003126      2081          CMP.B   #$2,bit2
000025B2  6700 00A6               2082          BEQ     SUBSIZE3
000025B6  0C39 0004 00003126      2083          CMP.B   #$4,bit2
000025BE  6700 00DA               2084          BEQ     SUBSIZE4
000025C2  0C39 0005 00003126      2085          CMP.B   #$5,bit2
000025CA  6700 010E               2086          BEQ     SUBSIZE5
000025CE  0C39 0006 00003126      2087          CMP.B   #$6,bit2
000025D6  6700 0142               2088          BEQ     SUBSIZE6
000025DA                          2089     
000025DA                          2090  ******************************************************************************************************
000025DA                          2091  *   Displays size, then does operation order
000025DA                          2092  
000025DA                          2093  *   000 byte    EA,DN
000025DA                          2094  SUBSIZE1
000025DA  6100 0260               2095          BSR     SUBPRINT
000025DE  43F9 00002EE1           2096          LEA     MBYTE,A1
000025E4  103C 000E               2097          MOVE.B  #14,D0
000025E8  4E4F                    2098          TRAP    #15
000025EA  43F9 00002EBF           2099          LEA     TAB,A1
000025F0  103C 000E               2100          MOVE.B  #14,D0
000025F4  4E4F                    2101          TRAP    #15
000025F6                          2102  
000025F6  45F9 00002600           2103          LEA     SUBSIZE11,A2
000025FC  6000 0432               2104          BRA     SUBEA
00002600                          2105  SUBSIZE11
00002600  45F9 00002616           2106          LEA     SUBSIZE12,A2
00002606  43F9 00002EC3           2107          LEA     COMMA,A1
0000260C  103C 000E               2108          MOVE.B  #14,D0
00002610  4E4F                    2109          TRAP    #15
00002612  6000 02F8               2110          BRA     SUBDN
00002616                          2111  SUBSIZE12
00002616  6000 0654               2112          BRA     ENDNEWLINE
0000261A                          2113  
0000261A                          2114  *************************************************
0000261A                          2115  *   001 word    EA,DN
0000261A                          2116  SUBSIZE2
0000261A  6100 0220               2117          BSR     SUBPRINT
0000261E  43F9 00002EE4           2118          LEA     MWORD,A1
00002624  103C 000E               2119          MOVE.B  #14,D0
00002628  4E4F                    2120          TRAP    #15
0000262A  43F9 00002EBF           2121          LEA     TAB,A1
00002630  103C 000E               2122          MOVE.B  #14,D0
00002634  4E4F                    2123          TRAP    #15
00002636                          2124  
00002636  45F9 00002640           2125          LEA     SUBSIZE21,A2
0000263C  6000 03F2               2126          BRA     SUBEA
00002640                          2127  SUBSIZE21
00002640  45F9 00002656           2128          LEA     SUBSIZE22,A2
00002646  43F9 00002EC3           2129          LEA     COMMA,A1
0000264C  103C 000E               2130          MOVE.B  #14,D0
00002650  4E4F                    2131          TRAP    #15
00002652  6000 02B8               2132          BRA     SUBDN
00002656                          2133  SUBSIZE22
00002656  6000 0614               2134          BRA     ENDNEWLINE
0000265A                          2135  
0000265A                          2136  *************************************************
0000265A                          2137  *   010 long    EA,DN
0000265A                          2138  SUBSIZE3
0000265A  6100 01E0               2139          BSR     SUBPRINT
0000265E  43F9 00002EE7           2140          LEA     MLONG,A1
00002664  103C 000E               2141          MOVE.B  #14,D0
00002668  4E4F                    2142          TRAP    #15
0000266A  43F9 00002EBF           2143          LEA     TAB,A1
00002670  103C 000E               2144          MOVE.B  #14,D0
00002674  4E4F                    2145          TRAP    #15
00002676                          2146  
00002676  45F9 00002680           2147          LEA     SUBSIZE31,A2
0000267C  6000 03B2               2148          BRA     SUBEA
00002680                          2149  SUBSIZE31
00002680  45F9 00002696           2150          LEA     SUBSIZE32,A2
00002686  43F9 00002EC3           2151          LEA     COMMA,A1
0000268C  103C 000E               2152          MOVE.B  #14,D0
00002690  4E4F                    2153          TRAP    #15
00002692  6000 0278               2154          BRA     SUBDN
00002696                          2155  SUBSIZE32
00002696  6000 05D4               2156          BRA     ENDNEWLINE
0000269A                          2157  
0000269A                          2158  *************************************************
0000269A                          2159  *   100 byte    DN,EA
0000269A                          2160  SUBSIZE4
0000269A  6100 01A0               2161          BSR     SUBPRINT
0000269E  43F9 00002EE1           2162          LEA     MBYTE,A1
000026A4  103C 000E               2163          MOVE.B  #14,D0
000026A8  4E4F                    2164          TRAP    #15
000026AA  43F9 00002EBF           2165          LEA     TAB,A1
000026B0  103C 000E               2166          MOVE.B  #14,D0
000026B4  4E4F                    2167          TRAP    #15
000026B6                          2168  
000026B6                          2169          *BSR     SUBERRORTEST1
000026B6                          2170  
000026B6  45F9 000026C0           2171          LEA     SUBSIZE41,A2
000026BC  6000 024E               2172          BRA     SUBDN
000026C0                          2173  SUBSIZE41
000026C0  45F9 000026D6           2174          LEA     SUBSIZE42,A2
000026C6  43F9 00002EC3           2175          LEA     COMMA,A1
000026CC  103C 000E               2176          MOVE.B  #14,D0
000026D0  4E4F                    2177          TRAP    #15
000026D2  6000 035C               2178          BRA     SUBEA
000026D6                          2179  SUBSIZE42
000026D6  6000 0594               2180          BRA     ENDNEWLINE
000026DA                          2181  
000026DA                          2182  *************************************************
000026DA                          2183  *   101 word    DN,EA
000026DA                          2184  SUBSIZE5
000026DA                          2185          *BSR     SUBERRORTEST1               * This does error testing
000026DA  6100 0160               2186          BSR     SUBPRINT                    * Prints out 'SUB.'
000026DE  43F9 00002EE4           2187          LEA     MWORD,A1
000026E4  103C 000E               2188          MOVE.B  #14,D0
000026E8  4E4F                    2189          TRAP    #15
000026EA  43F9 00002EBF           2190          LEA     TAB,A1
000026F0  103C 000E               2191          MOVE.B  #14,D0
000026F4  4E4F                    2192          TRAP    #15
000026F6                          2193  
000026F6  45F9 00002700           2194          LEA     SUBSIZE51,A2
000026FC  6000 020E               2195          BRA     SUBDN
00002700                          2196  SUBSIZE51
00002700  45F9 00002716           2197          LEA     SUBSIZE52,A2
00002706  43F9 00002EC3           2198          LEA     COMMA,A1
0000270C  103C 000E               2199          MOVE.B  #14,D0
00002710  4E4F                    2200          TRAP    #15
00002712  6000 031C               2201          BRA     SUBEA
00002716                          2202  SUBSIZE52
00002716  6000 0554               2203          BRA     ENDNEWLINE
0000271A                          2204  
0000271A                          2205  *************************************************
0000271A                          2206  *   110 long    DN,EA
0000271A                          2207  SUBSIZE6
0000271A                          2208          *BSR     SUBERRORTEST1               * This does error testing
0000271A  6100 0120               2209          BSR     SUBPRINT                    * Prints out 'SUB.'
0000271E  43F9 00002EE7           2210          LEA     MLONG,A1
00002724  103C 000E               2211          MOVE.B  #14,D0
00002728  4E4F                    2212          TRAP    #15
0000272A  43F9 00002EBF           2213          LEA     TAB,A1
00002730  103C 000E               2214          MOVE.B  #14,D0
00002734  4E4F                    2215          TRAP    #15
00002736                          2216  
00002736                          2217          *BSR     SUBERRORTEST1
00002736                          2218  
00002736  45F9 00002740           2219          LEA     SUBSIZE61,A2
0000273C  6000 01CE               2220          BRA     SUBDN
00002740                          2221  SUBSIZE61
00002740  45F9 00002756           2222          LEA     SUBSIZE62,A2
00002746  43F9 00002EC3           2223          LEA     COMMA,A1
0000274C  103C 000E               2224          MOVE.B  #14,D0
00002750  4E4F                    2225          TRAP    #15
00002752  6000 02DC               2226          BRA     SUBEA
00002756                          2227  SUBSIZE62
00002756  6000 0514               2228          BRA     ENDNEWLINE
0000275A                          2229  
0000275A                          2230  ****************************************************************************
0000275A                          2231  *   This section is for SUBA
0000275A                          2232  *   Displays 'SUBA.' then decodes the op-code as SUBA
0000275A                          2233  SUBA
0000275A  0C39 0009 00003124      2234          CMP.B   #$9,bit0
00002762  6700 001A               2235          BEQ     SUBPRINTSUBA
00002766  0C39 000B 00003124      2236          CMP.B   #$B,bit0
0000276E  6700 001E               2237          BEQ     SUBPRINTCMPA
00002772  0C39 000D 00003124      2238          CMP.B   #$D,bit0
0000277A  6700 0022               2239          BEQ     SUBPRINTADDA
0000277E                          2240  
0000277E                          2241  
0000277E                          2242  SUBPRINTSUBA
0000277E  43F9 00002F58           2243          LEA     MSUBA,A1                    Displays 'SUBA.'
00002784  103C 000E               2244          MOVE.B  #14,D0
00002788  4E4F                    2245          TRAP    #15
0000278A  6000 0022               2246          BRA     SUBACONT
0000278E                          2247  
0000278E                          2248  SUBPRINTCMPA
0000278E  43F9 00002F8D           2249          LEA     MCMPA,A1                    Displays 'SUBA.'
00002794  103C 000E               2250          MOVE.B  #14,D0
00002798  4E4F                    2251          TRAP    #15
0000279A  6000 0012               2252          BRA     SUBACONT
0000279E                          2253  
0000279E                          2254  SUBPRINTADDA
0000279E  43F9 00002F9E           2255          LEA     MADDA,A1                    Displays 'SUBA.'
000027A4  103C 000E               2256          MOVE.B  #14,D0
000027A8  4E4F                    2257          TRAP    #15
000027AA  6000 0002               2258          BRA     SUBACONT
000027AE                          2259  
000027AE                          2260  SUBACONT
000027AE                          2261          * Does the rest of SUBA
000027AE  0C39 0003 00003126      2262          CMP.B   #$3,bit2
000027B6  6700 000E               2263          BEQ     SUBSIZE7
000027BA  0C39 0007 00003126      2264          CMP.B   #$7,bit2
000027C2  6700 003E               2265          BEQ     SUBSIZE8
000027C6                          2266  
000027C6                          2267  *************************************************
000027C6                          2268  *   SUBA Word   ea,An
000027C6                          2269  SUBSIZE7
000027C6  43F9 00002EE4           2270          LEA     MWORD,A1
000027CC  103C 000E               2271          MOVE.B  #14,D0
000027D0  4E4F                    2272          TRAP    #15
000027D2  43F9 00002EBF           2273          LEA     TAB,A1
000027D8  103C 000E               2274          MOVE.B  #14,D0
000027DC  4E4F                    2275          TRAP    #15
000027DE                          2276  
000027DE  45F9 000027E8           2277          LEA     SUBSIZE71,A2
000027E4  6000 024A               2278          BRA     SUBEA
000027E8                          2279  SUBSIZE71
000027E8  45F9 000027FE           2280          LEA     SUBSIZE72,A2
000027EE  43F9 00002EC3           2281          LEA     COMMA,A1
000027F4  103C 000E               2282          MOVE.B  #14,D0
000027F8  4E4F                    2283          TRAP    #15
000027FA  6000 0164               2284          BRA     SUBAN2
000027FE                          2285  SUBSIZE72
000027FE  6000 046C               2286          BRA     ENDNEWLINE
00002802                          2287  
00002802                          2288  *************************************************
00002802                          2289  *   SUBA longword   ea,An
00002802                          2290  SUBSIZE8
00002802  43F9 00002EE7           2291          LEA     MLONG,A1
00002808  103C 000E               2292          MOVE.B  #14,D0
0000280C  4E4F                    2293          TRAP    #15
0000280E  43F9 00002EBF           2294          LEA     TAB,A1
00002814  103C 000E               2295          MOVE.B  #14,D0
00002818  4E4F                    2296          TRAP    #15
0000281A                          2297  
0000281A  45F8 27E8               2298          LEA     SUBSIZE71,A2
0000281E  6000 0210               2299          BRA     SUBEA
00002822                          2300  SUBSIZE81
00002822  45F8 27FE               2301          LEA     SUBSIZE72,A2
00002826  43F9 00002EC3           2302          LEA     COMMA,A1
0000282C  103C 000E               2303          MOVE.B  #14,D0
00002830  4E4F                    2304          TRAP    #15
00002832  6000 012C               2305          BRA     SUBAN2
00002836                          2306  SUBSIZE82
00002836  6000 0434               2307          BRA     ENDNEWLINE
0000283A                          2308  
0000283A                          2309  *************************************************
0000283A                          2310  * Jumps to memory location at A2
0000283A                          2311  SUBJMPA2
0000283A  4ED2                    2312          JMP     (A2)
0000283C                          2313  
0000283C                          2314  *************************************************
0000283C                          2315  * Prints out opcode name
0000283C                          2316  SUBPRINT
0000283C  0C39 0009 00003124      2317          CMP.B   #$9,bit0                Prints SUB
00002844  6700 0026               2318          BEQ     SUBPRINTSUB
00002848  0C39 000B 00003124      2319          CMP.B   #$B,bit0                Prints CMP or EOR
00002850  6700 004A               2320          BEQ     SUBPRINTB
00002854  0C39 000C 00003124      2321          CMP.B   #$C,bit0                Prints AND
0000285C  6700 001E               2322          BEQ     SUBPRINTAND
00002860  0C39 000D 00003124      2323          CMP.B   #$D,bit0                Prints ADD
00002868  6700 0022               2324          BEQ     SUBPRINTADD
0000286C                          2325  
0000286C                          2326  SUBPRINTSUB   * Displays 'SUB.' 
0000286C  43F9 00002F53           2327          LEA     MSUB,A1
00002872  103C 000E               2328          MOVE.B  #14,D0
00002876  4E4F                    2329          TRAP    #15
00002878  6000 004E               2330          BRA     SUBPRINTEND
0000287C                          2331  
0000287C                          2332  SUBPRINTAND   * Displays 'AND.' 
0000287C  43F9 00002F5E           2333          LEA     MAND,A1
00002882  103C 000E               2334          MOVE.B  #14,D0
00002886  4E4F                    2335          TRAP    #15
00002888  6000 003E               2336          BRA     SUBPRINTEND
0000288C                          2337  
0000288C                          2338  SUBPRINTADD   * Displays 'ADD.' 
0000288C  43F9 00002F63           2339          LEA     MADD,A1
00002892  103C 000E               2340          MOVE.B  #14,D0
00002896  4E4F                    2341          TRAP    #15
00002898  6000 002E               2342          BRA     SUBPRINTEND
0000289C                          2343  
0000289C                          2344  SUBPRINTB
0000289C  0C39 0004 00003126      2345          CMP.B   #$4,bit2
000028A4  6D00 0012               2346          BLT     SUBPRINTEOR
000028A8                          2347  
000028A8                          2348  SUBPRINTCMP   * Displays 'CMP.' 
000028A8  43F9 00002F82           2349          LEA     MCMP,A1
000028AE  103C 000E               2350          MOVE.B  #14,D0
000028B2  4E4F                    2351          TRAP    #15
000028B4  6000 0012               2352          BRA     SUBPRINTEND
000028B8                          2353  
000028B8                          2354  SUBPRINTEOR   * Displays 'EOR.' 
000028B8  43F9 00002F93           2355          LEA     MEOR,A1
000028BE  103C 000E               2356          MOVE.B  #14,D0
000028C2  4E4F                    2357          TRAP    #15
000028C4  6000 0002               2358          BRA     SUBPRINTEND
000028C8                          2359  
000028C8                          2360  SUBPRINTEND
000028C8  4E75                    2361          RTS
000028CA                          2362  
000028CA                          2363  
000028CA                          2364  *******************************************************************
000028CA                          2365  * Error testing for DN->EA operations
000028CA                          2366  *  Data register, address register, and immediate data cannot be destinations
000028CA                          2367  SUBERRORTEST1
000028CA                          2368          * test for DN or AN register, branches to invalid op code if true
000028CA  0C39 0000 00003127      2369          CMP.B   #0,bit3
000028D2  6700 0326               2370          BEQ     INVOP
000028D6  0C39 0001 00003127      2371          CMP.B   #1,bit3
000028DE  6700 031A               2372          BEQ     INVOP
000028E2                          2373          
000028E2                          2374          * check if destination is immediate data
000028E2  0C39 0007 00003127      2375          CMP.B   #7,bit3
000028EA  6600 001E               2376          BNE     SUBERRORTEST11
000028EE  0C39 0000 00003128      2377          CMP.B   #0,bit4
000028F6  6700 0012               2378          BEQ     SUBERRORTEST11
000028FA  0C39 0001 00003128      2379          CMP.B   #1,bit4
00002902  6700 0006               2380          BEQ     SUBERRORTEST11
00002906  6000 02F2               2381          BRA     INVOP
0000290A                          2382          
0000290A                          2383  SUBERRORTEST11
0000290A  4E75                    2384          RTS
0000290C                          2385  
0000290C                          2386  
0000290C                          2387  ******************************************************************************************************
0000290C                          2388  *   Displays data register
0000290C                          2389  SUBDN
0000290C  43F9 00002EEA           2390          LEA     MDN,A1
00002912  103C 000E               2391          MOVE.B  #14,D0
00002916  4E4F                    2392          TRAP    #15
00002918                          2393  
00002918  1239 00003125           2394          MOVE.B  bit1,D1
0000291E  103C 0003               2395          MOVE.B  #3,D0
00002922  4E4F                    2396          TRAP    #15
00002924                          2397          
00002924  6000 FF14               2398          BRA     SUBJMPA2
00002928                          2399  
00002928                          2400  *   Displays data register
00002928                          2401  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
00002928                          2402  SUBDN2
00002928  43F9 00002EEA           2403          LEA     MDN,A1
0000292E  103C 000E               2404          MOVE.B  #14,D0
00002932  4E4F                    2405          TRAP    #15
00002934                          2406  
00002934  1239 00003128           2407          MOVE.B  bit4,D1
0000293A  103C 0003               2408          MOVE.B  #3,D0
0000293E  4E4F                    2409          TRAP    #15
00002940                          2410          
00002940  6000 FEF8               2411          BRA     SUBJMPA2
00002944                          2412  
00002944                          2413  *   Displays address register
00002944                          2414  SUBAN
00002944  43F9 00002EEC           2415          LEA     MAN,A1
0000294A  103C 000E               2416          MOVE.B  #14,D0
0000294E  4E4F                    2417          TRAP    #15
00002950                          2418  
00002950  1239 00003128           2419          MOVE.B  bit4,D1
00002956  103C 0003               2420          MOVE.B  #3,D0
0000295A  4E4F                    2421          TRAP    #15
0000295C                          2422          
0000295C  6000 FEDC               2423          BRA     SUBJMPA2
00002960                          2424  
00002960                          2425  *   Displays address register
00002960                          2426  *   This is for SUBA, SUBA puts An into bit1
00002960                          2427  SUBAN2
00002960  43F9 00002EEC           2428          LEA     MAN,A1
00002966  103C 000E               2429          MOVE.B  #14,D0
0000296A  4E4F                    2430          TRAP    #15
0000296C                          2431  
0000296C  1239 00003125           2432          MOVE.B  bit1,D1
00002972  103C 0003               2433          MOVE.B  #3,D0
00002976  4E4F                    2434          TRAP    #15
00002978                          2435          
00002978  6000 FEC0               2436          BRA     SUBJMPA2
0000297C                          2437  
0000297C                          2438  
0000297C                          2439  *   Displays indirect address register
0000297C                          2440  SUBANID
0000297C  43F9 00002EC5           2441          LEA     OPENBRA,A1
00002982  103C 000E               2442          MOVE.B  #14,D0
00002986  4E4F                    2443          TRAP    #15
00002988                          2444  
00002988  43F9 00002EEC           2445          LEA     MAN,A1
0000298E  103C 000E               2446          MOVE.B  #14,D0
00002992  4E4F                    2447          TRAP    #15
00002994                          2448  
00002994  1239 00003128           2449          MOVE.B  bit4,D1
0000299A  103C 0003               2450          MOVE.B  #3,D0
0000299E  4E4F                    2451          TRAP    #15
000029A0                          2452  
000029A0  43F9 00002EC7           2453          LEA     CLOSEBRA,A1
000029A6  103C 000E               2454          MOVE.B  #14,D0
000029AA  4E4F                    2455          TRAP    #15
000029AC                          2456  
000029AC  6000 FE8C               2457          BRA     SUBJMPA2
000029B0                          2458  
000029B0                          2459  *   Displays indirect address register with post increment
000029B0                          2460  SUBANIDPOS
000029B0  43F9 00002EC5           2461          LEA     OPENBRA,A1
000029B6  103C 000E               2462          MOVE.B  #14,D0
000029BA  4E4F                    2463          TRAP    #15
000029BC                          2464  
000029BC  43F9 00002EEC           2465          LEA     MAN,A1
000029C2  103C 000E               2466          MOVE.B  #14,D0
000029C6  4E4F                    2467          TRAP    #15
000029C8                          2468  
000029C8  1239 00003128           2469          MOVE.B  bit4,D1
000029CE  103C 0003               2470          MOVE.B  #3,D0
000029D2  4E4F                    2471          TRAP    #15
000029D4                          2472  
000029D4  43F9 00002EC7           2473          LEA     CLOSEBRA,A1
000029DA  103C 000E               2474          MOVE.B  #14,D0
000029DE  4E4F                    2475          TRAP    #15
000029E0                          2476  
000029E0  43F9 00002EC9           2477          LEA     POS,A1
000029E6  103C 000E               2478          MOVE.B  #14,D0
000029EA  4E4F                    2479          TRAP    #15
000029EC                          2480  
000029EC  6000 FE4C               2481          BRA     SUBJMPA2
000029F0                          2482  
000029F0                          2483  *   Displays indirect address register with pre decrement
000029F0                          2484  SUBANIDNEG
000029F0  43F9 00002ECB           2485          LEA     NEG,A1
000029F6  103C 000E               2486          MOVE.B  #14,D0
000029FA  4E4F                    2487          TRAP    #15
000029FC                          2488  
000029FC  43F9 00002EC5           2489          LEA     OPENBRA,A1
00002A02  103C 000E               2490          MOVE.B  #14,D0
00002A06  4E4F                    2491          TRAP    #15
00002A08                          2492  
00002A08  43F9 00002EEC           2493          LEA     MAN,A1
00002A0E  103C 000E               2494          MOVE.B  #14,D0
00002A12  4E4F                    2495          TRAP    #15
00002A14                          2496  
00002A14  1239 00003128           2497          MOVE.B  bit4,D1
00002A1A  103C 0003               2498          MOVE.B  #3,D0
00002A1E  4E4F                    2499          TRAP    #15
00002A20                          2500  
00002A20  43F9 00002EC7           2501          LEA     CLOSEBRA,A1
00002A26  103C 000E               2502          MOVE.B  #14,D0
00002A2A  4E4F                    2503          TRAP    #15
00002A2C                          2504  
00002A2C  6000 FE0C               2505          BRA     SUBJMPA2
00002A30                          2506  
00002A30                          2507  
00002A30                          2508  
00002A30                          2509  
00002A30                          2510  ******************************************************************************************************
00002A30                          2511  * Displays the EA as hex numbers
00002A30                          2512  * 
00002A30                          2513  SUBEA
00002A30                          2514          *   This finds which mode to use
00002A30  0C39 0000 00003127      2515          CMP.B   #$0,bit3
00002A38  6700 FEEE               2516          BEQ     SUBDN2
00002A3C  0C39 0001 00003127      2517          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002A44  6700 FEFE               2518          BEQ     SUBAN
00002A48  0C39 0002 00003127      2519          CMP.B   #$2,bit3
00002A50  6700 FF2A               2520          BEQ     SUBANID
00002A54  0C39 0003 00003127      2521          CMP.B   #$3,bit3
00002A5C  6700 FF52               2522          BEQ     SUBANIDPOS
00002A60  0C39 0004 00003127      2523          CMP.B   #$4,bit3
00002A68  6786                    2524          BEQ     SUBANIDNEG
00002A6A  0C39 0005 00003127      2525          CMP.B   #$5,bit3
00002A72  6700 0424               2526          BEQ     ERROR
00002A76  0C39 0006 00003127      2527          CMP.B   #$6,bit3
00002A7E  6700 0418               2528          BEQ     ERROR
00002A82  0C39 0007 00003127      2529          CMP.B   #$7,bit3
00002A8A  6700 0002               2530          BEQ     SUBEAHEX
00002A8E                          2531  
00002A8E                          2532  SUBEAHEX
00002A8E  0C39 0004 00003128      2533          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002A96  6700 0086               2534          BEQ     SUBEAID
00002A9A                          2535  SUBEAID2
00002A9A                          2536          *   Else it will assume it is absolute addressing mode
00002A9A  43F9 00002EDF           2537          LEA     MHEX,A1
00002AA0  103C 000E               2538          MOVE.B  #14,D0
00002AA4  4E4F                    2539          TRAP    #15
00002AA6                          2540  
00002AA6  0C39 0000 00003128      2541          CMP.B   #$0,bit4
00002AAE  6700 007E               2542          BEQ     SUBEAHEX1
00002AB2  0C39 0001 00003128      2543          CMP.B   #$1,bit4
00002ABA  6700 007A               2544          BEQ     SUBEAHEX2
00002ABE                          2545  
00002ABE  0C39 0000 00003126      2546          CMP.B   #$0,bit2            * SUB byte displays as word
00002AC6  6700 0066               2547          BEQ     SUBEAHEX1
00002ACA  0C39 0004 00003126      2548          CMP.B   #$4,bit2            * SUB byte displays as word
00002AD2  6700 005A               2549          BEQ     SUBEAHEX1
00002AD6  0C39 0001 00003126      2550          CMP.B   #$1,bit2            * SUB word
00002ADE  6700 004E               2551          BEQ     SUBEAHEX1
00002AE2  0C39 0005 00003126      2552          CMP.B   #$5,bit2            * SUB word
00002AEA  6700 0042               2553          BEQ     SUBEAHEX1
00002AEE  0C39 0003 00003126      2554          CMP.B   #$3,bit2            * SUBA word
00002AF6  6700 0036               2555          BEQ     SUBEAHEX1
00002AFA  0C39 0002 00003126      2556          CMP.B   #$2,bit2            * SUB longword
00002B02  6700 0032               2557          BEQ     SUBEAHEX2
00002B06  0C39 0006 00003126      2558          CMP.B   #$6,bit2            * SUB longword
00002B0E  6700 0026               2559          BEQ     SUBEAHEX2
00002B12  0C39 0007 00003126      2560          CMP.B   #$7,bit2            * SUBA longword
00002B1A  6700 001A               2561          BEQ     SUBEAHEX2
00002B1E                          2562  
00002B1E                          2563  SUBEAID
00002B1E  43F9 00002ECD           2564          LEA     HASH,A1
00002B24  103C 000E               2565          MOVE.B  #14,D0
00002B28  4E4F                    2566          TRAP    #15
00002B2A  6000 FF6E               2567          BRA     SUBEAID2
00002B2E                          2568  
00002B2E                          2569  SUBEAHEX1  
00002B2E                          2570          *absolute address word
00002B2E  1E3C 0002               2571          MOVE.B  #2,D7
00002B32  6000 000A               2572          BRA     SUBEAHEX3
00002B36                          2573  
00002B36                          2574  SUBEAHEX2  *absolute address long
00002B36  1E3C 0004               2575          MOVE.B  #4,D7
00002B3A  6000 0002               2576          BRA     SUBEAHEX3
00002B3E                          2577  
00002B3E                          2578  SUBEAHEX3
00002B3E  BE3C 0000               2579          CMP.B   #0,D7               Compares current addr to ending addr
00002B42  6700 FCF6               2580          BEQ     SUBJMPA2            Branches to done if they are equal
00002B46                          2581  
00002B46                          2582      
00002B46  141E                    2583          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002B48                          2584          
00002B48  1602                    2585          MOVE.B  D2,D3               Copies data at D2 to D3
00002B4A                          2586          *   this gets digit in 10's place
00002B4A  E80B                    2587          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002B4C                          2588          *   this gets digit in 1's place
00002B4C  E90A                    2589          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002B4E  E80A                    2590          LSR.B   #4,D2               Shifts back right into 1's place
00002B50                          2591  
00002B50                          2592          
00002B50                          2593          *   D3 holds digit in 10's place
00002B50                          2594          *   D2 holds digit in 1's place
00002B50                          2595          
00002B50  1203                    2596          MOVE.B  D3,D1               Displays digit in 10's place first
00002B52                          2597  
00002B52                          2598          *   converts digits 10+ into letters
00002B52                          2599  
00002B52  47F9 00002B66           2600          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002B58  B23C 0009               2601          CMP.B   #9,D1               Compares digit to 9
00002B5C  6E00 0164               2602          BGT     CONV                Print out letter representation if greater than 9
00002B60                          2603  
00002B60  103C 0003               2604          MOVE.B  #3,D0               Displays digit if it is less than A
00002B64  4E4F                    2605          TRAP    #15
00002B66                          2606          
00002B66                          2607  SUBEAHEX4    
00002B66  1202                    2608          MOVE.B  D2,D1               Displays digit in 1's place second
00002B68                          2609  
00002B68                          2610          *   converts digits 10+ into letters
00002B68  47F9 00002B7C           2611          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002B6E  B23C 0009               2612          CMP.B   #9,D1               Compares digit to 9
00002B72  6E00 014E               2613          BGT     CONV                Print out letter representation if greater than 9
00002B76                          2614          
00002B76  103C 0003               2615          MOVE.B  #3,D0               Displays digit if it is less than A
00002B7A  4E4F                    2616          TRAP    #15
00002B7C                          2617          
00002B7C                          2618  SUBEAHEX5         
00002B7C                          2619  * Display counter -- creates new line every 8 bytes
00002B7C                          2620          * D7 is used as counter
00002B7C                          2621          
00002B7C  5307                    2622          SUB.B   #1,D7                       
00002B7E  60BE                    2623          BRA     SUBEAHEX3              Loops back to display next address
00002B80                          2624  
00002B80                          2625  ***   display EA ends here
00002B80                          2626  
00002B80                          2627  ******************************************************************************************************
00002B80                          2628  * Displays the EA as hex numbers
00002B80                          2629  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002B80                          2630  * OUTPUT: Displays size of EA reading from A6
00002B80                          2631  * Jumps to location stored in A2 when finished
00002B80                          2632  DISPEA
00002B80  43F9 00002EDF           2633          LEA     MHEX,A1
00002B86  103C 000E               2634          MOVE.B  #14,D0
00002B8A  4E4F                    2635          TRAP    #15
00002B8C                          2636  
00002B8C  B83C 0002               2637          CMP.B   #$2,D4              Branches to longword display if size is 2
00002B90  6700 000A               2638          BEQ     DISPEALONG          Else it will assume word length
00002B94                          2639  
00002B94                          2640  DISPEAWORD
00002B94                          2641          *absolute address word
00002B94  1E3C 0002               2642          MOVE.B  #2,D7
00002B98  6000 000A               2643          BRA     DISPEA3
00002B9C                          2644   
00002B9C                          2645  DISPEALONG
00002B9C                          2646          *absolute address long
00002B9C  1E3C 0004               2647          MOVE.B  #4,D7
00002BA0  6000 0002               2648          BRA     DISPEA3
00002BA4                          2649  
00002BA4                          2650  DISPEA3
00002BA4  BE3C 0000               2651          CMP.B   #0,D7               Compares current addr to ending addr
00002BA8  6700 FC90               2652          BEQ     SUBJMPA2            Branches to done if they are equal
00002BAC                          2653  
00002BAC                          2654      
00002BAC  141E                    2655          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002BAE                          2656          
00002BAE  1602                    2657          MOVE.B  D2,D3               Copies data at D2 to D3
00002BB0                          2658          *   this gets digit in 10's place
00002BB0  E80B                    2659          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002BB2                          2660          *   this gets digit in 1's place
00002BB2  E90A                    2661          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002BB4  E80A                    2662          LSR.B   #4,D2               Shifts back right into 1's place
00002BB6                          2663  
00002BB6                          2664          
00002BB6                          2665          *   D3 holds digit in 10's place
00002BB6                          2666          *   D2 holds digit in 1's place
00002BB6                          2667          
00002BB6  1203                    2668          MOVE.B  D3,D1               Displays digit in 10's place first
00002BB8                          2669  
00002BB8                          2670          *   converts digits 10+ into letters
00002BB8                          2671  
00002BB8  47F9 00002BCC           2672          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002BBE  B23C 0009               2673          CMP.B   #9,D1               Compares digit to 9
00002BC2  6E00 00FE               2674          BGT     CONV                Print out letter representation if greater than 9
00002BC6                          2675  
00002BC6  103C 0003               2676          MOVE.B  #3,D0               Displays digit if it is less than A
00002BCA  4E4F                    2677          TRAP    #15
00002BCC                          2678    
00002BCC                          2679  DISPEA4
00002BCC  1202                    2680          MOVE.B  D2,D1               Displays digit in 1's place second
00002BCE                          2681  
00002BCE                          2682          *   converts digits 10+ into letters
00002BCE  47F9 00002BE2           2683          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002BD4  B23C 0009               2684          CMP.B   #9,D1               Compares digit to 9
00002BD8  6E00 00E8               2685          BGT     CONV                Print out letter representation if greater than 9
00002BDC                          2686          
00002BDC  103C 0003               2687          MOVE.B  #3,D0               Displays digit if it is less than A
00002BE0  4E4F                    2688          TRAP    #15
00002BE2                          2689        
00002BE2                          2690  DISPEA5
00002BE2                          2691  * Display counter -- creates new line every 8 bytes
00002BE2                          2692          * D7 is used as counter
00002BE2                          2693          
00002BE2  5307                    2694          SUB.B   #1,D7                       
00002BE4  60BE                    2695          BRA     DISPEA3              Loops back to display next address
00002BE6                          2696  
00002BE6                          2697  ***   display EA ends here
00002BE6                          2698  
00002BE6                          2699  *******************************************************************
00002BE6                          2700  * Clears all of the data registers
00002BE6                          2701  CLRDN
00002BE6  4280                    2702          CLR.L   D0
00002BE8  4281                    2703          CLR.L   D1
00002BEA  4282                    2704          CLR.L   D2
00002BEC  4283                    2705          CLR.L   D3
00002BEE  4284                    2706          CLR.L   D4
00002BF0  4285                    2707          CLR.L   D5
00002BF2  4286                    2708          CLR.L   D6
00002BF4  4287                    2709          CLR.L   D7
00002BF6  4E75                    2710          RTS
00002BF8                          2711  
00002BF8                          2712  ********************************************************************
00002BF8                          2713  * Invalid op-code handling
00002BF8                          2714  * Displays DATA YYYY
00002BF8                          2715  *  YYYY represents the op-code that failed
00002BF8                          2716  INVOPCODE
00002BF8  DE1E                    2717          ADD.B   (A6)+,D7
00002BFA                          2718  
00002BFA                          2719  INVOP
00002BFA  43F9 00002F4E           2720          LEA     MDATA,A1
00002C00  103C 000E               2721          MOVE.B  #14,D0
00002C04  4E4F                    2722          TRAP    #15
00002C06  43F9 00002EBF           2723          LEA     TAB,A1
00002C0C  103C 000E               2724          MOVE.B  #14,D0
00002C10  4E4F                    2725          TRAP    #15
00002C12  43F9 00002EDF           2726          LEA     MHEX,A1
00002C18  103C 000E               2727          MOVE.B  #14,D0
00002C1C  4E4F                    2728          TRAP    #15
00002C1E                          2729          
00002C1E  1C3C 0002               2730          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002C22                          2731          
00002C22  3407                    2732          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002C24  E04A                    2733          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002C26  6000 0004               2734          BRA     INVOP2              Skips the second part to do later
00002C2A                          2735  
00002C2A                          2736  INVOP1
00002C2A  1407                    2737          MOVE.B  D7,D2
00002C2C                          2738  INVOP2
00002C2C  1602                    2739          MOVE.B  D2,D3               Copies data at D2 to D3
00002C2E                          2740          *   this gets digit in 10's place
00002C2E  E80B                    2741          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002C30                          2742          *   this gets digit in 1's place
00002C30  E90A                    2743          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002C32  E80A                    2744          LSR.B   #4,D2               Shifts back right into 1's place
00002C34                          2745  
00002C34                          2746          
00002C34                          2747          *   D3 holds digit in 10's place
00002C34                          2748          *   D2 holds digit in 1's place
00002C34                          2749          
00002C34  1203                    2750          MOVE.B  D3,D1               Displays digit in 10's place first
00002C36                          2751  
00002C36                          2752          *   converts digits 10+ into letters
00002C36                          2753  
00002C36  47F9 00002C4A           2754          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002C3C  B23C 0009               2755          CMP.B   #9,D1               Compares digit to 9
00002C40  6E00 0080               2756          BGT     CONV                Print out letter representation if greater than 9
00002C44                          2757  
00002C44  103C 0003               2758          MOVE.B  #3,D0               Displays digit if it is less than A
00002C48  4E4F                    2759          TRAP    #15
00002C4A                          2760          
00002C4A                          2761  INVOP3   
00002C4A  1202                    2762          MOVE.B  D2,D1               Displays digit in 1's place second
00002C4C                          2763  
00002C4C                          2764          *   converts digits 10+ into letters
00002C4C  47F9 00002C60           2765          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002C52  B23C 0009               2766          CMP.B   #9,D1               Compares digit to 9
00002C56  6E00 006A               2767          BGT     CONV                Print out letter representation if greater than 9
00002C5A                          2768          
00002C5A  103C 0003               2769          MOVE.B  #3,D0               Displays digit if it is less than A
00002C5E  4E4F                    2770          TRAP    #15
00002C60                          2771          
00002C60                          2772  INVOP4
00002C60                          2773  * Display counter -- creates new line every 8 bytes
00002C60                          2774          * D6 is used as counter
00002C60                          2775          
00002C60  5306                    2776          SUB.B   #1,D6
00002C62  BC3C 0000               2777          CMP.B   #0,D6
00002C66  6700 0004               2778          BEQ     ENDNEWLINE
00002C6A  60BE                    2779          BRA     INVOP1              Loops back to display next address
00002C6C                          2780  
00002C6C                          2781  
00002C6C                          2782  ******************************************************************************************************
00002C6C                          2783  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002C6C                          2784  ENDNEWLINE
00002C6C  43F9 00002EBC           2785          LEA     NEWLINE,A1          Creates a new line in output window
00002C72  103C 000E               2786          MOVE.B  #14,D0
00002C76  4E4F                    2787          TRAP    #15
00002C78                          2788  
00002C78  5339 0000311B           2789          SUB.B   #1,dispcount
00002C7E  0C39 0000 0000311B      2790          CMP.B   #0,dispcount               Checks if display counter is zero
00002C86  6600 E452               2791          BNE     NEWADDR
00002C8A                          2792  
00002C8A                          2793  * Asks user to press enter to continue
00002C8A                          2794  * Resets counter
00002C8A  43F9 00002EBC           2795          LEA     NEWLINE,A1          Creates a new line in output window
00002C90  103C 000E               2796          MOVE.B  #14,D0
00002C94  4E4F                    2797          TRAP    #15
00002C96                          2798          
00002C96  43F9 000030FF           2799          LEA     MCONT,A1            Asks user to press enter to continue
00002C9C  103C 000E               2800          MOVE.B  #14,D0
00002CA0  4E4F                    2801          TRAP    #15
00002CA2                          2802  
00002CA2  103C 0004               2803          MOVE.B  #4,D0               Takes in user input
00002CA6  4E4F                    2804          TRAP    #15
00002CA8  4281                    2805          CLR.L   D1                  Clears D1 incase user decides to input something
00002CAA                          2806  
00002CAA  43F9 00002EBC           2807          LEA     NEWLINE,A1          Creates a new line in output window
00002CB0  103C 000E               2808          MOVE.B  #14,D0
00002CB4  4E4F                    2809          TRAP    #15
00002CB6                          2810  
00002CB6  13FC 001E 0000311B      2811          MOVE.B  #dispnum,dispcount  Resets display counter
00002CBE  6000 E41A               2812          BRA     NEWADDR             Loops back to beginning
00002CC2                          2813  
00002CC2                          2814  
00002CC2                          2815  ******************************************************************************************************
00002CC2                          2816  * Converts decimal number into hex and displays it
00002CC2                          2817  *   converts number 10-15 to A-F
00002CC2                          2818  *   INPUT: decimal number in D1
00002CC2                          2819  *   OUTPUT: HEX number to output
00002CC2  B23C 000A               2820  CONV    CMP.B   #10,D1              Displays 10 as A
00002CC6  6700 002A               2821          BEQ     HEXA
00002CCA  B23C 000B               2822          CMP.B   #11,D1              Displays 11 as B
00002CCE  6700 002C               2823          BEQ     HEXB
00002CD2  B23C 000C               2824          CMP.B   #12,D1              Displays 12 as C
00002CD6  6700 002E               2825          BEQ     HEXC
00002CDA  B23C 000D               2826          CMP.B   #13,D1              Displays 13 as D
00002CDE  6700 0030               2827          BEQ     HEXD
00002CE2  B23C 000E               2828          CMP.B   #14,D1              Displays 14 as E
00002CE6  6700 0032               2829          BEQ     HEXE
00002CEA  B23C 000F               2830          CMP.B   #15,D1              Displays 15 as F
00002CEE  6700 0034               2831          BEQ     HEXF
00002CF2                          2832  
00002CF2  43F9 00002ED1           2833  HEXA    LEA     DISPA,A1            Loads A character
00002CF8  6000 0034               2834          BRA     PRINT
00002CFC                          2835    
00002CFC  43F9 00002ED3           2836  HEXB    LEA     DISPB,A1            Loads B character
00002D02  6000 002A               2837          BRA     PRINT
00002D06                          2838  
00002D06  43F9 00002ED5           2839  HEXC    LEA     DISPC,A1            Loads C character
00002D0C  6000 0020               2840          BRA     PRINT
00002D10                          2841  
00002D10  43F9 00002ED7           2842  HEXD    LEA     DISPD,A1            Loads D character
00002D16  6000 0016               2843          BRA     PRINT
00002D1A                          2844  
00002D1A  43F9 00002ED9           2845  HEXE    LEA     DISPE,A1            Loads E character
00002D20  6000 000C               2846          BRA     PRINT
00002D24                          2847  
00002D24  43F9 00002EDB           2848  HEXF    LEA     DISPF,A1            Loads F character
00002D2A  6000 0002               2849          BRA     PRINT
00002D2E                          2850  
00002D2E  103C 000E               2851  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002D32  4E4F                    2852          TRAP    #15                 Prints out message in A1
00002D34  4ED3                    2853          JMP     (A3)
00002D36                          2854  
00002D36                          2855  ******************************************************************************
00002D36                          2856  * Converts decimal input to hex
00002D36                          2857  * INPUT: Decimal inside D2
00002D36                          2858  * OUTPUT: HEX into D3
00002D36                          2859  *   Converts number in decimal to hex        
00002D36                          2860  DEC2HEX
00002D36  B43C 0030               2861          CMP.B   #$30,D2             0
00002D3A  6700 00B0               2862          BEQ     D2HZERO
00002D3E  B43C 0031               2863          CMP.B   #$31,D2             1
00002D42  6700 00AE               2864          BEQ     D2HONE
00002D46  B43C 0032               2865          CMP.B   #$32,D2             2
00002D4A  6700 00AC               2866          BEQ     D2HTWO
00002D4E  B43C 0033               2867          CMP.B   #$33,D2             3
00002D52  6700 00AA               2868          BEQ     D2HTHREE
00002D56  B43C 0034               2869          CMP.B   #$34,D2             4
00002D5A  6700 00A8               2870          BEQ     D2HFOUR
00002D5E  B43C 0035               2871          CMP.B   #$35,D2             5
00002D62  6700 00A6               2872          BEQ     D2HFIVE
00002D66  B43C 0036               2873          CMP.B   #$36,D2             6
00002D6A  6700 00A4               2874          BEQ     D2HSIX
00002D6E  B43C 0037               2875          CMP.B   #$37,D2             7
00002D72  6700 00A2               2876          BEQ     D2HSEVEN
00002D76  B43C 0038               2877          CMP.B   #$38,D2             8
00002D7A  6700 00A0               2878          BEQ     D2HEIGHT
00002D7E  B43C 0039               2879          CMP.B   #$39,D2             9
00002D82  6700 009E               2880          BEQ     D2HNINE
00002D86  B43C 0041               2881          CMP.B   #$41,D2             A
00002D8A  6700 009C               2882          BEQ     D2HHEXA
00002D8E  B43C 0042               2883          CMP.B   #$42,D2             B
00002D92  6700 009A               2884          BEQ     D2HHEXB
00002D96  B43C 0043               2885          CMP.B   #$43,D2             C
00002D9A  6700 0098               2886          BEQ     D2HHEXC
00002D9E  B43C 0044               2887          CMP.B   #$44,D2             D
00002DA2  6700 0096               2888          BEQ     D2HHEXD
00002DA6  B43C 0045               2889          CMP.B   #$45,D2             E
00002DAA  6700 0094               2890          BEQ     D2HHEXE
00002DAE  B43C 0046               2891          CMP.B   #$46,D2             F
00002DB2  6700 0092               2892          BEQ     D2HHEXF
00002DB6  B43C 0061               2893          CMP.B   #$61,D2             A
00002DBA  6700 006C               2894          BEQ     D2HHEXA
00002DBE  B43C 0062               2895          CMP.B   #$62,D2             B
00002DC2  6700 006A               2896          BEQ     D2HHEXB
00002DC6  B43C 0063               2897          CMP.B   #$63,D2             C
00002DCA  6700 0068               2898          BEQ     D2HHEXC
00002DCE  B43C 0064               2899          CMP.B   #$64,D2             D
00002DD2  6700 0066               2900          BEQ     D2HHEXD
00002DD6  B43C 0065               2901          CMP.B   #$65,D2             E
00002DDA  6700 0064               2902          BEQ     D2HHEXE
00002DDE  B43C 0066               2903          CMP.B   #$66,D2             F
00002DE2  6700 0062               2904          BEQ     D2HHEXF
00002DE6                          2905  
00002DE6                          2906          * User entered a non-hex character
00002DE6                          2907          * Moves F to D1 to indicate error before returning
00002DE6  123C 000F               2908          MOVE.B  #$F,D1
00002DEA  4E75                    2909          RTS
00002DEC                          2910  
00002DEC                          2911  *   Moves the appropiate hex number to D3
00002DEC  163C 0000               2912  D2HZERO MOVE.B  #$0,D3
00002DF0  4E75                    2913          RTS
00002DF2                          2914  
00002DF2                          2915  D2HONE
00002DF2  163C 0001               2916          MOVE.B  #$1,D3
00002DF6  4E75                    2917          RTS
00002DF8                          2918  
00002DF8                          2919  D2HTWO
00002DF8  163C 0002               2920          MOVE.B  #$2,D3
00002DFC  4E75                    2921          RTS
00002DFE                          2922  
00002DFE                          2923  D2HTHREE
00002DFE  163C 0003               2924          MOVE.B  #$3,D3
00002E02  4E75                    2925          RTS
00002E04                          2926  
00002E04                          2927  D2HFOUR
00002E04  163C 0004               2928          MOVE.B  #$4,D3
00002E08  4E75                    2929          RTS
00002E0A                          2930  
00002E0A                          2931  D2HFIVE
00002E0A  163C 0005               2932          MOVE.B  #$5,D3
00002E0E  4E75                    2933          RTS
00002E10                          2934  
00002E10                          2935  D2HSIX
00002E10  163C 0006               2936          MOVE.B  #$6,D3
00002E14  4E75                    2937          RTS
00002E16                          2938  
00002E16                          2939  D2HSEVEN
00002E16  163C 0007               2940          MOVE.B  #$7,D3
00002E1A  4E75                    2941          RTS
00002E1C                          2942  
00002E1C                          2943  D2HEIGHT
00002E1C  163C 0008               2944          MOVE.B  #$8,D3
00002E20  4E75                    2945          RTS
00002E22                          2946  
00002E22                          2947  D2HNINE
00002E22  163C 0009               2948          MOVE.B  #$9,D3
00002E26  4E75                    2949          RTS
00002E28                          2950  
00002E28                          2951  D2HHEXA
00002E28  163C 000A               2952          MOVE.B  #$A,D3
00002E2C  4E75                    2953          RTS
00002E2E                          2954  
00002E2E                          2955  D2HHEXB
00002E2E  163C 000B               2956          MOVE.B  #$B,D3
00002E32  4E75                    2957          RTS
00002E34                          2958  
00002E34                          2959  D2HHEXC
00002E34  163C 000C               2960          MOVE.B  #$C,D3
00002E38  4E75                    2961          RTS
00002E3A                          2962  
00002E3A                          2963  D2HHEXD
00002E3A  163C 000D               2964          MOVE.B  #$D,D3
00002E3E  4E75                    2965          RTS
00002E40                          2966  
00002E40                          2967  D2HHEXE
00002E40  163C 000E               2968          MOVE.B  #$E,D3
00002E44  4E75                    2969          RTS
00002E46                          2970  
00002E46                          2971  D2HHEXF
00002E46  163C 000F               2972          MOVE.B  #$F,D3
00002E4A  4E75                    2973          RTS
00002E4C                          2974  
00002E4C                          2975  *************************************************************************************************
00002E4C                          2976  ASK4REPEAT
00002E4C  43F9 00002EBC           2977          LEA     NEWLINE,A1          Creates a new line in output window
00002E52  103C 000E               2978          MOVE.B  #14,D0
00002E56  4E4F                    2979          TRAP    #15
00002E58                          2980  ASK4REPEAT2
00002E58  43F9 00003006           2981          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00002E5E  103C 000E               2982          MOVE.B  #14,D0
00002E62  4E4F                    2983          TRAP    #15
00002E64                          2984  
00002E64  43F9 00003128           2985          LEA     bit4,A1             User has to enter Y to start over
00002E6A  103C 0002               2986          MOVE.B  #2,D0               N to exit
00002E6E  4E4F                    2987          TRAP    #15
00002E70                          2988  
00002E70  1239 00003128           2989          MOVE.B  bit4,D1             User input was stored in bit4
00002E76  B23C 0059               2990          CMP.B   #$59,D1             Char Y
00002E7A  6700 E184               2991          BEQ     IOSTART
00002E7E  B23C 0079               2992          CMP.B   #$79,D1             Char y
00002E82  6700 E17C               2993          BEQ     IOSTART
00002E86  B23C 004E               2994          CMP.B   #$4E,D1             Char N
00002E8A  6700 001C               2995          BEQ     DONE
00002E8E  B23C 006E               2996          CMP.B   #$6E,D1             Char n
00002E92  6700 0014               2997          BEQ     DONE
00002E96  60C0                    2998          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00002E98                          2999  
00002E98                          3000  
00002E98                          3001  **************************************************************************************************
00002E98  43F9 000030CD           3002  ERROR   LEA     MERROR,A1
00002E9E  103C 000E               3003          MOVE.B  #14,D0
00002EA2  4E4F                    3004          TRAP    #15
00002EA4  6000 000E               3005          BRA     EXIT
00002EA8                          3006  
00002EA8  43F9 000030E4           3007  DONE    LEA     MDONE,A1
00002EAE  103C 000E               3008          MOVE.B  #14,D0
00002EB2  4E4F                    3009          TRAP    #15
00002EB4                          3010  
00002EB4  103C 0009               3011  EXIT    MOVE.B  #9,D0
00002EB8  4E4F                    3012          TRAP    #15
00002EBA                          3013  
00002EBA                          3014  ************************************ Output stuff **************************************
00002EBA                          3015  * Stuff for output
00002EBA                          3016  
00002EBA  =0000000D               3017  CR      EQU     $0D
00002EBA  =0000000A               3018  LF      EQU     $0A
00002EBA                          3019  
00002EBA= 20 00                   3020  SPACE       DC.B    ' ',0
00002EBC= 0D 0A 00                3021  NEWLINE     DC.B    '',CR,LF,0
00002EBF= 20 20 20 00             3022  TAB         DC.B    '   ',0
00002EC3= 2C 00                   3023  COMMA       DC.B    ',',0
00002EC5= 28 00                   3024  OPENBRA     DC.B    '(',0
00002EC7= 29 00                   3025  CLOSEBRA    DC.B    ')',0
00002EC9= 2B 00                   3026  POS         DC.B    '+',0
00002ECB= 2D 00                   3027  NEG         DC.B    '-',0
00002ECD= 23 00                   3028  HASH        DC.B    '#',0
00002ECF= 2F 00                   3029  SLASH       DC.B    '/',0
00002ED1                          3030  
00002ED1                          3031  
00002ED1= 41 00                   3032  DISPA       DC.B    'A',0
00002ED3= 42 00                   3033  DISPB       DC.B    'B',0
00002ED5= 43 00                   3034  DISPC       DC.B    'C',0
00002ED7= 44 00                   3035  DISPD       DC.B    'D',0
00002ED9= 45 00                   3036  DISPE       DC.B    'E',0
00002EDB= 46 00                   3037  DISPF       DC.B    'F',0
00002EDD                          3038  
00002EDD= 2E 00                   3039  MDOT        DC.B    '.',0
00002EDF= 24 00                   3040  MHEX        DC.B    '$',0
00002EE1= 42 20 00                3041  MBYTE       DC.B    'B ',0
00002EE4= 57 20 00                3042  MWORD       DC.B    'W ',0
00002EE7= 4C 20 00                3043  MLONG       DC.B    'L ',0
00002EEA= 44 00                   3044  MDN         DC.B    'D',0
00002EEC= 41 00                   3045  MAN         DC.B    'A',0
00002EEE                          3046  
00002EEE= 4A 53 52 00             3047  MJSR        DC.B    'JSR',0
00002EF2= 42 54 53 54 00          3048  MBTST       DC.B    'BTST',0
00002EF7= 52 4F 4C 00             3049  MROL        DC.B    'ROL',0
00002EFB= 52 4F 52 00             3050  MROR        DC.B    'ROR',0
00002EFF= 4C 53 4C 00             3051  MLSL        DC.B    'LSL',0
00002F03= 4C 53 52 00             3052  MLSR        DC.B    'LSR',0
00002F07= 4E 45 47 2E 00          3053  MMNEGW      DC.B    'NEG.',0
00002F0C= 44 49 56 53 2E 57 00    3054  MMDIVSW     DC.B    'DIVS.W',0
00002F13= 4D 55 4C 53 2E 57 00    3055  MMULSW      DC.B    'MULS.W',0
00002F1A= 4D 4F 56 45 2E 42 00    3056  MMOVEB      DC.B    'MOVE.B',0
00002F21= 4D 4F 56 45 2E 57 00    3057  MMOVEW      DC.B    'MOVE.W',0
00002F28= 4D 4F 56 45 2E 4C 00    3058  MMOVEL      DC.B    'MOVE.L',0
00002F2F= 4D 4F 56 45 41 2E ...   3059  MMOVEAW     DC.B    'MOVEA.W',0
00002F37= 4D 4F 56 45 41 2E ...   3060  MMOVEAL     DC.B    'MOVEA.L',0
00002F3F= 4D 4F 56 45 4D 2E 00    3061  MMOVEM      DC.B    'MOVEM.',0
00002F46                          3062  
00002F46= 41 53 4C 00             3063  MASL        DC.B    'ASL',0
00002F4A= 41 53 52 00             3064  MASR        DC.B    'ASR',0
00002F4E= 44 41 54 41 00          3065  MDATA       DC.B    'DATA',0
00002F53= 53 55 42 2E 00          3066  MSUB        DC.B    'SUB.',0
00002F58= 53 55 42 41 2E 00       3067  MSUBA       DC.B    'SUBA.',0
00002F5E= 41 4E 44 2E 00          3068  MAND        DC.B    'AND.',0
00002F63= 41 44 44 2E 00          3069  MADD        DC.B    'ADD.',0
00002F68= 53 55 42 49 2E 00       3070  MSUBI       DC.B    'SUBI.',0
00002F6E= 4F 52 49 2E 00          3071  MORI        DC.B    'ORI.',0
00002F73= 4E 4F 54 2E 00          3072  MNOT        DC.B    'NOT.',0
00002F78= 4D 55 4C 53 2E 00       3073  MMUL        DC.B    'MULS.',0
00002F7E= 4E 45 47 00             3074  MNEG        DC.B    'NEG',0
00002F82= 43 4D 50 2E 00          3075  MCMP        DC.B    'CMP.',0
00002F87= 43 4D 50 49 2E 00       3076  MCMPI       DC.B    'CMPI.',0
00002F8D= 43 4D 50 41 2E 00       3077  MCMPA       DC.B    'CMPA.',0
00002F93= 45 4F 52 2E 00          3078  MEOR        DC.B    'EOR.',0
00002F98= 45 4F 52 49 2E 00       3079  MEORI       DC.B    'EORI.',0
00002F9E= 41 44 44 41 2E 00       3080  MADDA       DC.B    'ADDA.',0
00002FA4                          3081  
00002FA4= 42 45 51 00             3082  MBEQ        DC.B    'BEQ',0
00002FA8= 42 4E 45 00             3083  MBNE        DC.B    'BNE',0
00002FAC= 42 4C 54 00             3084  MBLT        DC.B    'BLT',0
00002FB0= 42 48 49 00             3085  MBHI        DC.B    'BHI',0
00002FB4= 42 52 41 00             3086  MBRA        DC.B    'BRA',0
00002FB8= 4E 4F 50 00             3087  MNOP        DC.B    'NOP',0
00002FBC= 52 54 53 00             3088  MRTS        DC.B    'RTS',0
00002FC0                          3089  
00002FC0= 4C 65 6D 6D 65 20 ...   3090  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002FE3= 47 69 6D 6D 65 20 ...   3091  MADDR2      DC.B    'Gimme that end address too homie: ',0
00003006= 54 72 79 6E 61 20 ...   3092  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00003026= 45 6E 64 20 61 64 ...   3093  MIOERR1     DC.B    'End address must be after the start address, try again.',0
0000305E= 41 64 64 72 65 73 ...   3094  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003091= 52 65 2D 65 6E 74 ...   3095  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
000030AD= 41 64 64 72 65 73 ...   3096  MIOERR4     DC.B    'Address must be an even number.',0
000030CD= 45 52 52 4F 52 3A ...   3097  MERROR      DC.B    'ERROR: Something broke',0
000030E4= 43 4F 4D 50 4C 45 ...   3098  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
000030FF= 2A 2A 50 52 45 53 ...   3099  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
0000311B                          3100  
0000311B                          3101  
0000311B                          3102  ********************************** MEMORY STORAGE **********************************************
0000311B                          3103  * Stores memory locations at the end of the program
0000311B                          3104  * How DS works: Give it a variable name.
0000311B                          3105  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
0000311B                          3106  *   Last is the number of storage you want. 
0000311B                          3107  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
0000311B                          3108  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
0000311B                          3109  *            
0000311B                          3110  
0000311B                          3111  dispcount   DS.B    1           Used to count display lines
0000311C                          3112  
0000311C                          3113  startaddr   DS.L    1
00003120                          3114  endaddr     DS.L    1
00003124                          3115  
00003124                          3116  bit0        DS.B    1           SEE NOTE UP TOP
00003125                          3117  bit1        DS.B    1           SEE NOTE UP TOP
00003126                          3118  bit2        DS.B    1           SEE NOTE UP TOP
00003127                          3119  bit3        DS.B    1           SEE NOTE UP TOP
00003128                          3120  bit4        DS.B    1           SEE NOTE UP TOP
00003129                          3121  
00003129                          3122  
00003129                          3123      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1502
ADDIMD0             1532
ADDIMD1             1540
ADDIMD4             154E
ADDIMDDES           15BC
ADDIMDDES0          15E0
ADDIMDDES1          15EE
ADDIMDDES4          15FC
ASK4REPEAT          2E4C
ASK4REPEAT2         2E58
ASLRMEMH            1D1C
BCC                 1FBE
BCCBEQ              203A
BCCBHI              2058
BCCBLT              204E
BCCBNE              2044
BCCBRA              2030
BCCDISP             2004
BCCLONG             1FEC
BCCNEXT             1FF4
BCCPRINT            2062
BCCWORD             1FE4
BIT0                3124
BIT1                3125
BIT2                3126
BIT3                3127
BIT4                3128
BTST                125E
CLOSEBRA            2EC7
CLRDN               2BE6
CODE                11AE
COMMA               2EC3
CONV                2CC2
CR                  D
D2HEIGHT            2E1C
D2HFIVE             2E0A
D2HFOUR             2E04
D2HHEXA             2E28
D2HHEXB             2E2E
D2HHEXC             2E34
D2HHEXD             2E3A
D2HHEXE             2E40
D2HHEXF             2E46
D2HNINE             2E22
D2HONE              2DF2
D2HSEVEN            2E16
D2HSIX              2E10
D2HTHREE            2DFE
D2HTWO              2DF8
D2HZERO             2DEC
DEC2HEX             2D36
DISPA               2ED1
DISPADDR            10B0
DISPADDR1           10F8
DISPADDR2           10FA
DISPADDR3           112E
DISPADDR4           1144
DISPADDR5           115A
DISPADDR6           1170
DISPADDREND         117A
DISPADDRSTART       10EC
DISPB               2ED3
DISPC               2ED5
DISPCOUNT           311B
DISPD               2ED7
DISPE               2ED9
DISPEA              2B80
DISPEA3             2BA4
DISPEA4             2BCC
DISPEA5             2BE2
DISPEALONG          2B9C
DISPEAWORD          2B94
DISPF               2EDB
DISPNUM             1E
DIVSW               1AB4
DONE                2EA8
ENDADDR             3120
ENDNEWLINE          2C6C
ENDNLINC            1A26
ERROR               2E98
EXIT                2EB4
HANDLEDES           1564
HASH                2ECD
HEXA                2CF2
HEXB                2CFC
HEXC                2D06
HEXD                2D10
HEXE                2D1A
HEXF                2D24
IMD                 2072
IMD2                209A
IMD3                20A2
IMD4                20AE
IMDBYTE             2148
IMDEA               2170
IMDEA2              218C
IMDEA3              21A2
IMDLONG             2166
IMDPRINT            20E8
IMDPRINTCMPI        2136
IMDPRINTEND         2140
IMDPRINTEORI        212C
IMDPRINTORI         2118
IMDPRINTSUBI        2122
IMDWORD             2158
INVOP               2BFA
INVOP1              2C2A
INVOP2              2C2C
INVOP3              2C4A
INVOP4              2C60
INVOPCODE           2BF8
IOERROR1            1072
IOERROR2            1080
IOERROR3            1090
IOERROR4            10A0
IOGETADDR           1028
IOLOOP              104E
IOSTART             1000
IOSTARTLOOP         1048
JSR                 1212
LF                  A
LSLR                1C98
LSLRDESD            1916
LSLRMEM             1E70
LSLRMEMH            1DA0
LSLRSRCD            18EE
MADD                2F63
MADDA               2F9E
MADDR1              2FC0
MADDR2              2FE3
MAN                 2EEC
MAND                2F5E
MASL                2F46
MASR                2F4A
MBEQ                2FA4
MBHI                2FB0
MBLT                2FAC
MBNE                2FA8
MBRA                2FB4
MBTST               2EF2
MBYTE               2EE1
MCMP                2F82
MCMPA               2F8D
MCMPI               2F87
MCONT               30FF
MDATA               2F4E
MDN                 2EEA
MDONE               30E4
MDOT                2EDD
MEOR                2F93
MEORI               2F98
MERROR              30CD
MHEX                2EDF
MIOERR1             3026
MIOERR2             305E
MIOERR3             3091
MIOERR4             30AD
MISC                21A6
MISCBIT2            21EE
MISCBIT3            21FA
MISCBYTE            2298
MISCCHECKM          220E
MISCEA              22C6
MISCEA2             22E2
MISCLONG            22BA
MISCMMPOSTINC       241A
MISCMMPOSTINC2      2424
MISCMMPOSTINC3      245A
MISCMMPOSTINCPRINT  245E
MISCMMPOSTINCPRINT2  2472
MISCMMPOSTINCPRINT3  247E
MISCMMPREDEC        23AC
MISCMMPREDEC2       23D6
MISCMMPREDEC3       23EC
MISCMMPREDECCHECK   23A0
MISCMMPREDECPRINT   23F0
MISCMMPREDECPRINT2  2404
MISCMMPREDECPRINT3  2410
MISCMMPRINTNUM      24F0
MISCMMPRINTSIZE     2388
MISCMMREGMEM        2488
MISCMMREGMEM2       24AE
MISCMMREGMEM3       24C4
MISCMMREGMEMPRINT   24C8
MISCMMREGMEMPRINT2  24D8
MISCMMREGMEMPRINT3  24E4
MISCMMSIZEL         2382
MISCMMSLASH         24FE
MISCMOVEM           231A
MISCMOVEM2          232A
MISCMOVEM3          233A
MISCMOVEM4          234C
MISCNOP             222E
MISCNOT             224E
MISCNOT2            2256
MISCNOT3            225E
MISCNOT4            226A
MISCPRINT           22E6
MISCPRINTEND        2312
MISCPRINTNEG        2308
MISCPRINTNOT        22FE
MISCRTS             223E
MISCWORD            22AA
MJSR                2EEE
MLONG               2EE7
MLSL                2EFF
MLSR                2F03
MMDIVSW             2F0C
MMNEGW              2F07
MMOVEAL             2F37
MMOVEAW             2F2F
MMOVEB              2F1A
MMOVEL              2F28
MMOVEM              2F3F
MMOVEW              2F21
MMUL                2F78
MMULSW              2F13
MNEG                2F7E
MNOP                2FB8
MNOT                2F73
MORI                2F6E
MOVB                147C
MOVBDN1             1862
MOVBDN2             1A02
MOVEAL              1428
MOVEAN1             1612
MOVEAN2             1932
MOVEAW              1348
MOVEIAN1            1686
MOVEIAND1           17C2
MOVEIANI1           171A
MOVIAN2             194E
MOVIAND2            19C2
MOVIANI2            1982
MOVL                139C
MOVW                12BC
MREPEAT             3006
MROL                2EF7
MROR                2EFB
MRTS                2FBC
MSUB                2F53
MSUBA               2F58
MSUBI               2F68
MULSW               1A2A
MWORD               2EE4
NEG                 2ECB
NEGW                1B42
NEWADDR             10DA
NEWLINE             2EBC
OPENBRA             2EC5
POS                 2EC9
PRINT               2D2E
PRINTASL            1D38
PRINTASR            1D6C
PRINTB              1EBA
PRINTBYTE           1B9C
PRINTL              1F22
PRINTLONG           1C44
PRINTLSL            1E3C
PRINTLSLRCOUNT      1F56
PRINTLSR            1F8A
PRINTROL            1DD4
PRINTROR            1E08
PRINTW              1EEE
PRINTWORD           1BF0
RORL                1DBC
SLASH               2ECF
SPACE               2EBA
START               1000
STARTADDR           311C
SUB                 250C
SUB1                253E
SUB2                2520
SUB3                2528
SUB4                2532
SUBA                275A
SUBACHECK           257A
SUBACONT            27AE
SUBAN               2944
SUBAN2              2960
SUBANID             297C
SUBANIDNEG          29F0
SUBANIDPOS          29B0
SUBDN               290C
SUBDN2              2928
SUBEA               2A30
SUBEAHEX            2A8E
SUBEAHEX1           2B2E
SUBEAHEX2           2B36
SUBEAHEX3           2B3E
SUBEAHEX4           2B66
SUBEAHEX5           2B7C
SUBEAID             2B1E
SUBEAID2            2A9A
SUBERRORTEST1       28CA
SUBERRORTEST11      290A
SUBJMPA2            283A
SUBPRINT            283C
SUBPRINTADD         288C
SUBPRINTADDA        279E
SUBPRINTAND         287C
SUBPRINTB           289C
SUBPRINTCMP         28A8
SUBPRINTCMPA        278E
SUBPRINTEND         28C8
SUBPRINTEOR         28B8
SUBPRINTSUB         286C
SUBPRINTSUBA        277E
SUBSIZE1            25DA
SUBSIZE11           2600
SUBSIZE12           2616
SUBSIZE2            261A
SUBSIZE21           2640
SUBSIZE22           2656
SUBSIZE3            265A
SUBSIZE31           2680
SUBSIZE32           2696
SUBSIZE4            269A
SUBSIZE41           26C0
SUBSIZE42           26D6
SUBSIZE5            26DA
SUBSIZE51           2700
SUBSIZE52           2716
SUBSIZE6            271A
SUBSIZE61           2740
SUBSIZE62           2756
SUBSIZE7            27C6
SUBSIZE71           27E8
SUBSIZE72           27FE
SUBSIZE8            2802
SUBSIZE81           2822
SUBSIZE82           2836
TAB                 2EBF
