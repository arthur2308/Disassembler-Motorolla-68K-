00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 12/5/2015 7:14:57 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000  =00007000                 64  addr1       EQU     $7000
00000000                            65  *addr2      EQU     $703C
00000000  =0000726C                 66  addr2       EQU     $726C
00000000  =0000001E                 67  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            68  
00000000                            69  
00000000                            70  
00001000                            71      ORG    $1000
00001000                            72  START:                  ; first instruction of program
00001000                            73  
00001000                            74          
00001000                            75          
00001000                            76  
00001000                            77          *   this stores some test EA into memory m,
00001000                            78          *LEA     addr1,A1
00001000                            79          *MOVE.W  #$0440,(A1)+        *917C
00001000                            80          *MOVE.W  #$917C,(A1)+       
00001000                            81          *MOVE.L  #$5555A7FF,(A1)+
00001000                            82          *MOVE.W  #$9078,(A1)+
00001000                            83          *MOVE.W  #$5555,(A1)+
00001000                            84          
00001000                            85          
00001000                            86          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            87          
00001000                            88          *MOVE.L  #$6700F0D8,$7000
00001000                            89          *MOVE.W  #$4E71,$7000         NOP
00001000                            90  
00001000                            91          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            92  
00001000  31FC E762 7000            93           MOVE.W  #$E762,$7000
00001006                            94          *MOVE.L  #$4CF8CDD9,$7004
00001006                            95          *MOVE.W  #$4000,$7008
00001006                            96             
00001006                            97  *********************************************************************************************************************
00001006                            98  * Takes in user start and end address
00001006                            99  
00001006                           100  IOSTART
00001006                           101  *   Displays message asking for address
00001006  43F9 00002F52            102          LEA     MADDR1,A1           Loads message to retrieve first number
0000100C  6100 0020                103          BSR     IOGETADDR
00001010                           104  
00001010  0804 0000                105          BTST    #0,D4               Checks of the starting address is an odd number
00001014  6600 0090                106          BNE     IOERROR4            Throws an error if it is because it will crash
00001018                           107  
00001018  2E04                     108          MOVE.L  D4,D7               Moves starting address to D7 for now
0000101A  43F9 00002F75            109          LEA     MADDR2,A1           Then grabs the ending address
00001020  6100 000C                110          BSR     IOGETADDR
00001024  B887                     111          CMP.L   D7,D4               Compares the start address to end address
00001026  6E00 008E                112          BGT     DISPADDR            Continues if start < end
0000102A  6000 004C                113          BRA     IOERROR1            Error if not
0000102E                           114  
0000102E                           115  IOGETADDR
0000102E  2649                     116          MOVEA.L A1,A3               Saves the message incase of an error
00001030  103C 000E                117          MOVE.B  #14,D0              Prepares to display message
00001034  4E4F                     118          TRAP    #15                 Displays message
00001036                           119  
00001036  4244                     120          CLR     D4                  Clears D4 register to prevent errors
00001038                           121  
00001038  43F9 000030AE            122          LEA     startaddr,A1        Uses this memory location to store the data
0000103E  103C 0002                123          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001042  4E4F                     124          TRAP    #15
00001044                           125  
00001044  B23C 0008                126          CMP.B   #8,D1               Throws an error if the input is longer than a longword
00001048  6E00 003C                127          BGT     IOERROR2
0000104C  1A01                     128          MOVE.B  D1,D5               Moves the length of the input to D5
0000104E                           129  
0000104E                           130  IOSTARTLOOP
0000104E  45F9 000030AE            131          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
00001054                           132  
00001054                           133  IOLOOP
00001054  141A                     134          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001056  5305                     135          SUB.B   #1,D5               Subtract 1 from counter
00001058  6100 1C6E                136          BSR     DEC2HEX             Converts decimal to hex number
0000105C  B23C 000F                137          CMP.B   #$F,D1
00001060  6700 0034                138          BEQ     IOERROR3
00001064                           139  
00001064  1C05                     140          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001066  CDFC 0004                141          MULS    #4,D6               Multiply by 4 to find number of shifts left
0000106A                           142          
0000106A  EDAB                     143          LSL.L   D6,D3               Shifts hex left
0000106C  D883                     144          ADD.L   D3,D4               Adds number to new total
0000106E                           145          
0000106E  7600                     146          MOVE.L  #0,D3               Clears D3 to prevent errors
00001070                           147          
00001070  BA3C 0000                148          CMP.B   #0,D5               Compares counter to 0    
00001074  66DE                     149          BNE     IOLOOP              Otherwise will loop
00001076  4E75                     150          RTS
00001078                           151  
00001078                           152  * Error message for start address greater than end address
00001078                           153  IOERROR1
00001078  43F9 00002FB8            154          LEA     MIOERR1,A1
0000107E  103C 000D                155          MOVE.B  #13,D0
00001082  4E4F                     156          TRAP    #15
00001084  6080                     157          BRA     IOSTART
00001086                           158  
00001086                           159  * Error message if user input address is longer than longword
00001086                           160  IOERROR2
00001086  43F9 00002FF0            161          LEA     MIOERR2,A1
0000108C  103C 000D                162          MOVE.B  #13,D0
00001090  4E4F                     163          TRAP    #15
00001092  224B                     164          MOVEA.L A3,A1
00001094  6098                     165          BRA     IOGETADDR
00001096                           166  
00001096                           167  * Error message if user enters non-valid hex numbers
00001096                           168  IOERROR3
00001096  43F9 00003023            169          LEA     MIOERR3,A1
0000109C  103C 000D                170          MOVE.B  #13,D0
000010A0  4E4F                     171          TRAP    #15
000010A2  224B                     172          MOVEA.L A3,A1
000010A4  6088                     173          BRA     IOGETADDR
000010A6                           174  
000010A6                           175  * Error message for odd numbered addresses
000010A6                           176  IOERROR4
000010A6  43F9 0000303F            177          LEA     MIOERR4,A1
000010AC  103C 000D                178          MOVE.B  #13,D0
000010B0  4E4F                     179          TRAP    #15
000010B2  6000 FF52                180          BRA     IOSTART
000010B6                           181  
000010B6                           182  ******************************************** displays address location***********************************************
000010B6                           183  * This displays the address location of the op-code being worked on
000010B6                           184  * A6 is used as current address
000010B6                           185  DISPADDR
000010B6  23C7 000030AE            186          MOVE.L  D7,startaddr
000010BC  23C4 000030B2            187          MOVE.L  D4,endaddr
000010C2  6100 1AB4                188          BSR     CLRDN
000010C6  2C79 000030AE            189          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010CC  13FC 001E 000030AD       190          MOVE.B  #dispnum,dispcount  Sets display line counter
000010D4                           191  
000010D4  43F9 00002E4E            192          LEA     NEWLINE,A1          Creates a new line in output window
000010DA  103C 000E                193          MOVE.B  #14,D0
000010DE  4E4F                     194          TRAP    #15
000010E0                           195  
000010E0                           196  NEWADDR
000010E0  2E0E                     197          MOVE.L  A6,D7               Loads the current address into D7
000010E2  BEB9 000030B2            198          CMP.L   endaddr,D7          Compares current address to end address
000010E8  6E00 1CF4                199          BGT     ASK4REPEAT          Branches to done if current address > end address
000010EC  45F9 00001180            200          LEA     DISPADDREND,A2
000010F2                           201  
000010F2                           202  ************************************************
000010F2                           203  * Displays address as HEX
000010F2                           204  * INPUT: address stored into D7
000010F2                           205  * OUTPUT: prints hex address to output window
000010F2                           206  DISPADDRSTART
000010F2  1C3C 0002                207          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F6  2407                     208          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010F8  4842                     209          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010FA  6000 0004                210          BRA     DISPADDR2           Skips the second part to do later
000010FE                           211  
000010FE                           212  DISPADDR1
000010FE  3407                     213          MOVE.W  D7,D2
00001100                           214  DISPADDR2
00001100  3202                     215          MOVE.W  D2,D1               D1 will be the first byte of the word
00001102  3602                     216          MOVE.W  D2,D3               D3 will be the second byte of the word
00001104  3802                     217          MOVE.W  D2,D4               D4 will be the third byte of the word
00001106  3A02                     218          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001108                           219  
00001108  E049                     220          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000110A  E849                     221          LSR.W   #4,D1
0000110C  E94B                     222          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
0000110E  E04B                     223          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001110  E84B                     224          LSR.W   #4,D3
00001112  E14C                     225          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001114  E04C                     226          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001116  E84C                     227          LSR.W   #4,D4
00001118  E14D                     228          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000111A  E94D                     229          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000111C  E04D                     230          LSR.W   #8,D5
0000111E  E84D                     231          LSR.W   #4,D5
00001120                           232          
00001120                           233          
00001120  47F9 00001134            234          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001126  B23C 0009                235          CMP.B   #9,D1               Compares digit to 9
0000112A  6E00 1B28                236          BGT     CONV                Print out letter representation if greater than 9
0000112E                           237  
0000112E  103C 0003                238          MOVE.B  #3,D0               Displays digit if it is less than A
00001132  4E4F                     239          TRAP    #15
00001134                           240          
00001134                           241  DISPADDR3   
00001134  1203                     242          MOVE.B  D3,D1               Displays digit in 1's place second
00001136                           243  
00001136                           244          *   converts digits 10+ into letters
00001136  47F9 0000114A            245          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
0000113C  B23C 0009                246          CMP.B   #9,D1               Compares digit to 9
00001140  6E00 1B12                247          BGT     CONV                Print out letter representation if greater than 9
00001144                           248          
00001144  103C 0003                249          MOVE.B  #3,D0               Displays digit if it is less than A
00001148  4E4F                     250          TRAP    #15
0000114A                           251  
0000114A                           252  DISPADDR4
0000114A  1204                     253          MOVE.B  D4,D1               Displays digit in 1's place second
0000114C                           254  
0000114C                           255          *   converts digits 10+ into letters
0000114C  47F9 00001160            256          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001152  B23C 0009                257          CMP.B   #9,D1               Compares digit to 9
00001156  6E00 1AFC                258          BGT     CONV                Print out letter representation if greater than 9
0000115A                           259          
0000115A  103C 0003                260          MOVE.B  #3,D0               Displays digit if it is less than A
0000115E  4E4F                     261          TRAP    #15
00001160                           262  
00001160                           263  DISPADDR5
00001160  1205                     264          MOVE.B  D5,D1               Displays digit in 1's place second
00001162                           265  
00001162                           266          *   converts digits 10+ into letters
00001162  47F9 00001176            267          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
00001168  B23C 0009                268          CMP.B   #9,D1               Compares digit to 9
0000116C  6E00 1AE6                269          BGT     CONV                Print out letter representation if greater than 9
00001170                           270          
00001170  103C 0003                271          MOVE.B  #3,D0               Displays digit if it is less than A
00001174  4E4F                     272          TRAP    #15
00001176                           273          
00001176                           274  DISPADDR6
00001176                           275  * Display counter -- creates new line every 8 bytes
00001176                           276          * D6 is used as counter
00001176                           277          
00001176  5306                     278          SUB.B   #1,D6
00001178  BC3C 0000                279          CMP.B   #0,D6
0000117C  6680                     280          BNE     DISPADDR1
0000117E                           281  
0000117E  4ED2                     282          JMP     (A2)                Jumps to address stored in A2 when complete
00001180                           283  
00001180                           284  DISPADDREND
00001180  43F9 00002E51            285          LEA     TAB,A1
00001186  103C 000E                286          MOVE.B  #14,D0
0000118A  4E4F                     287          TRAP    #15
0000118C                           288          
0000118C                           289  *********************************************************************************************************************
0000118C                           290  * Splits the first byte of the op code into nibbles
0000118C                           291  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000118C                           292  
0000118C  4281                     293          CLR.L   D1                  Clears the data registers
0000118E  4282                     294          CLR.L   D2
00001190  4283                     295          CLR.L   D3
00001192  4284                     296          CLR.L   D4
00001194  4285                     297          CLR.L   D5
00001196  4286                     298          CLR.L   D6
00001198  3C16                     299          MOVE.W  (A6),D6
0000119A  141E                     300          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000119C                           301    
0000119C  1E02                     302          MOVE.B  D2,D7
0000119E  E14F                     303          LSL.W   #8,D7
000011A0                           304          
000011A0  1602                     305          MOVE.B  D2,D3               Copies data at D2 to D3
000011A2                           306          *   this gets digit in 10's place
000011A2  E80B                     307          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011A4                           308          *   this gets digit in 1's place
000011A4  E90A                     309          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A6  E80A                     310          LSR.B   #4,D2               Shifts back right into 1's place
000011A8                           311          
000011A8                           312          *   D3 holds digit in 10's place
000011A8                           313          *   D2 holds digit in 1's place
000011A8                           314  
000011A8                           315          *   Moves second nibble to D5 to be used later
000011A8  1A02                     316          MOVE.B  D2,D5
000011AA  13C3 000030B6            317          MOVE.B  D3,bit0
000011B0                           318          *   Goes to a branch-table to figure out which op code it is
000011B0  6000 0002                319          BRA     CODE
000011B4                           320  
000011B4                           321  ******************************************************************************************************
000011B4                           322  *   This is where the table goes to detirmine which op-code to use
000011B4                           323  CODE    
000011B4  B63C 0000                324          CMP.B   #$0,D3              Goes to immediate operation section
000011B8  6700 0EBE                325          BEQ     IMD
000011BC  B63C 0004                326          CMP.B   #$4,D3              Goes to miscellaneous section
000011C0  6700 0FEA                327          BEQ     MISC
000011C4  B63C 0006                328          CMP.B   #$6,D3
000011C8  6700 0DFA                329          BEQ     BCC
000011CC  B63C 0009                330          CMP.B   #$9,D3              Goes to sub section
000011D0  6700 12CC                331          BEQ     SUB
000011D4  B63C 000C                332          CMP.B   #$C,D3              Goes to sub but displays as AND
000011D8  6700 12C4                333          BEQ     SUB
000011DC  B63C 000D                334          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011E0  6700 12BC                335          BEQ     SUB
000011E4  B63C 000B                336          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011E8  6700 12B4                337          BEQ     SUB
000011EC  B63C 0001                338          CMP.B   #$1,D3
000011F0  6700 0290                339          BEQ     MOVB                Goes to movb
000011F4  B63C 0003                340          CMP.B   #$3,D3
000011F8  6700 00C8                341          BEQ     MOVW                Goes to movb
000011FC  B63C 0002                342          CMP.B   #$2,D3
00001200  6700 01A0                343          BEQ     MOVL                Goes to movb
00001204  B63C 0008                344          CMP.B   #$8,D3
00001208  6700 08B0                345          BEQ     DIVSW               Goes to divsw
0000120C  B63C 000E                346          CMP.B   #$E,D3
00001210  6700 0A8C                347          BEQ     LSLR                Goes to divsw
00001214                           348  
00001214  6000 1974                349          BRA     INVOPCODE
00001218                           350          
00001218                           351  JSR
00001218  43F9 00002E80            352          LEA MJSR,A1
0000121E  103C 000E                353          MOVE.B  #14,D0
00001222  4E4F                     354          TRAP    #15 
00001224                           355          
00001224  1406                     356          MOVE.B  D6,D2
00001226  EB0A                     357          LSL.B   #5,D2
00001228  EA0A                     358          LSR.B   #5,D2
0000122A  13C2 000030BA            359          MOVE.B  D2,bit4
00001230                           360          
00001230  1406                     361          MOVE.B  D6,D2
00001232  E50A                     362          LSL.B   #2,D2
00001234  EA0A                     363          LSR.B   #5,D2
00001236  13C2 000030B9            364          MOVE.B  D2,bit3
0000123C                           365  
0000123C  183C 0003                366          MOVE.B  #$3,D4
00001240                           367  
00001240  0C39 0002 000030B9       368          CMP.B   #$2,bit3
00001248  6700 0442                369          BEQ     MOVEIAN1
0000124C                           370          
0000124C  43F9 00002E51            371          LEA     TAB,A1
00001252  323C 0003                372          MOVE    #3,D1
00001256  4E4F                     373          TRAP    #15
00001258                           374          
00001258  0C39 0007 000030B9       375          CMP.B   #$7,bit3
00001260  6700 0360                376          BEQ     ADDIMDDES
00001264                           377          
00001264                           378  BTST 
00001264  43F9 00002E84            379          LEA MBTST,A1
0000126A  103C 000E                380          MOVE.B  #14,D0
0000126E  4E4F                     381          TRAP    #15 
00001270                           382          
00001270  1406                     383          MOVE.B  D6,D2
00001272  EB0A                     384          LSL.B   #5,D2
00001274  EA0A                     385          LSR.B   #5,D2
00001276  13C2 000030B7            386          MOVE.B  D2,bit1
0000127C                           387          
0000127C  1406                     388          MOVE.B  D6,D2
0000127E  E50A                     389          LSL.B   #2,D2
00001280  EA0A                     390          LSR.B   #5,D2
00001282  13C2 000030B8            391          MOVE.B  D2,bit2
00001288                           392          
00001288  3406                     393          MOVE.W  D6,D2
0000128A  E94A                     394          LSL.W   #4,D2
0000128C  E04A                     395          LSR.W   #8,D2
0000128E  EA4A                     396          LSR.W   #5,D2
00001290  13C2 000030B9            397          MOVE.B  D2,bit3
00001296                           398          
00001296  43F9 00002E51            399          LEA TAB,A1
0000129C  103C 000E                400          MOVE.B  #14,D0
000012A0  4E4F                     401          TRAP    #15
000012A2                           402  
000012A2  43F9 00002E69            403          LEA DISPD,A1
000012A8  103C 000E                404          MOVE.B  #14,D0
000012AC  4E4F                     405          TRAP    #15
000012AE                           406          
000012AE  1A3C 0004                407          MOVE.B   #$4,D5
000012B2                           408          
000012B2  1239 000030B9            409          MOVE.B  bit3,D1
000012B8  103C 0003                410          MOVE.B  #3,D0
000012BC  4E4F                     411          TRAP    #15
000012BE                           412          
000012BE  6000 02AA                413          BRA HANDLEDES
000012C2                           414          
000012C2                           415  MOVW
000012C2  E20A                     416          LSR.B   #1,D2
000012C4  13C2 000030B7            417          MOVE.B  D2,bit1
000012CA                           418          
000012CA  1416                     419          MOVE.B  (A6),D2
000012CC  EB0A                     420          LSL.B   #5,D2
000012CE  EA0A                     421          LSR.B   #5,D2
000012D0  13C2 000030BA            422          MOVE.B  D2,bit4
000012D6                           423          
000012D6  141E                     424          MOVE.B  (A6)+,D2
000012D8  E50A                     425          LSL.B   #2,D2
000012DA  EA0A                     426          LSR.B   #5,D2
000012DC  13C2 000030B9            427          MOVE.B  D2,bit3
000012E2                           428          
000012E2  EF4E                     429          LSL.W   #7,D6
000012E4  E04E                     430          LSR.W   #8,D6 
000012E6  EA4E                     431          LSR.W   #5,D6 
000012E8  13C6 000030B8            432          MOVE.B  D6,bit2
000012EE                           433  
000012EE  0C39 0001 000030B8       434          CMP.B   #$1,bit2
000012F6  6700 0056                435          BEQ     MOVEAW
000012FA                           436  
000012FA  43F9 00002EB3            437          LEA MMOVEW,A1
00001300  103C 000E                438          MOVE.B  #14,D0
00001304  4E4F                     439          TRAP    #15 
00001306                           440  
00001306  0C39 0000 000030B9       441          CMP.B   #$0,bit3           
0000130E  6700 0558                442          BEQ     MOVBDN1
00001312  0C39 0001 000030B9       443          CMP.B   #$1,bit3
0000131A  6700 02FC                444          BEQ     MOVEAN1
0000131E  0C39 0002 000030B9       445          CMP.B   #$2,bit3
00001326  6700 0364                446          BEQ     MOVEIAN1
0000132A  0C39 0003 000030B9       447          CMP.B   #$3,bit3
00001332  6700 03EC                448          BEQ     MOVEIANI1
00001336  0C39 0004 000030B9       449          CMP.B   #$4,bit3
0000133E  6700 0488                450          BEQ     MOVEIAND1
00001342  0C39 0007 000030B9       451          CMP.B   #$7,bit3
0000134A  6700 01BC                452          BEQ     ADDIMD
0000134E                           453  
0000134E                           454  MOVEAW
0000134E  43F9 00002EC1            455          LEA MMOVEAW,A1
00001354  103C 000E                456          MOVE.B  #14,D0
00001358  4E4F                     457          TRAP    #15 
0000135A                           458          
0000135A  0C39 0000 000030B9       459          CMP.B   #$0,bit3           
00001362  6700 0504                460          BEQ     MOVBDN1
00001366  0C39 0001 000030B9       461          CMP.B   #$1,bit3
0000136E  6700 02A8                462          BEQ     MOVEAN1
00001372  0C39 0002 000030B9       463          CMP.B   #$2,bit3
0000137A  6700 0310                464          BEQ     MOVEIAN1
0000137E  0C39 0003 000030B9       465          CMP.B   #$3,bit3
00001386  6700 0398                466          BEQ     MOVEIANI1
0000138A  0C39 0004 000030B9       467          CMP.B   #$4,bit3
00001392  6700 0434                468          BEQ     MOVEIAND1
00001396  0C39 0007 000030B9       469          CMP.B   #$7,bit3
0000139E  6700 0168                470          BEQ     ADDIMD
000013A2                           471  
000013A2                           472  MOVL
000013A2  E20A                     473          LSR.B   #1,D2
000013A4  13C2 000030B7            474          MOVE.B  D2,bit1
000013AA                           475          
000013AA  1416                     476          MOVE.B  (A6),D2
000013AC  EB0A                     477          LSL.B   #5,D2
000013AE  EA0A                     478          LSR.B   #5,D2
000013B0  13C2 000030BA            479          MOVE.B  D2,bit4
000013B6                           480          
000013B6  141E                     481          MOVE.B  (A6)+,D2
000013B8  E50A                     482          LSL.B   #2,D2
000013BA  EA0A                     483          LSR.B   #5,D2
000013BC  13C2 000030B9            484          MOVE.B  D2,bit3
000013C2                           485          
000013C2  EF4E                     486          LSL.W   #7,D6
000013C4  E04E                     487          LSR.W   #8,D6 
000013C6  EA4E                     488          LSR.W   #5,D6 
000013C8  13C6 000030B8            489          MOVE.B  D6,bit2
000013CE                           490          
000013CE  0C39 0001 000030B8       491          CMP.B   #$1,bit2
000013D6  6700 0056                492          BEQ     MOVEAL
000013DA                           493  
000013DA  43F9 00002EBA            494          LEA MMOVEL,A1
000013E0  103C 000E                495          MOVE.B  #14,D0
000013E4  4E4F                     496          TRAP    #15 
000013E6                           497          
000013E6  0C39 0000 000030B9       498          CMP.B   #$0,bit3           
000013EE  6700 0478                499          BEQ     MOVBDN1
000013F2  0C39 0001 000030B9       500          CMP.B   #$1,bit3
000013FA  6700 021C                501          BEQ     MOVEAN1
000013FE  0C39 0002 000030B9       502          CMP.B   #$2,bit3
00001406  6700 0284                503          BEQ     MOVEIAN1
0000140A  0C39 0003 000030B9       504          CMP.B   #$3,bit3
00001412  6700 030C                505          BEQ     MOVEIANI1
00001416  0C39 0004 000030B9       506          CMP.B   #$4,bit3
0000141E  6700 03A8                507          BEQ     MOVEIAND1
00001422  0C39 0007 000030B9       508          CMP.B   #$7,bit3
0000142A  6700 00DC                509          BEQ     ADDIMD
0000142E                           510  
0000142E                           511  MOVEAL
0000142E  43F9 00002EC9            512          LEA MMOVEAL,A1
00001434  103C 000E                513          MOVE.B  #14,D0
00001438  4E4F                     514          TRAP    #15 
0000143A                           515          
0000143A  0C39 0000 000030B9       516          CMP.B   #$0,bit3           
00001442  6700 0424                517          BEQ     MOVBDN1
00001446  0C39 0001 000030B9       518          CMP.B   #$1,bit3
0000144E  6700 01C8                519          BEQ     MOVEAN1
00001452  0C39 0002 000030B9       520          CMP.B   #$2,bit3
0000145A  6700 0230                521          BEQ     MOVEIAN1
0000145E  0C39 0003 000030B9       522          CMP.B   #$3,bit3
00001466  6700 02B8                523          BEQ     MOVEIANI1
0000146A  0C39 0004 000030B9       524          CMP.B   #$4,bit3
00001472  6700 0354                525          BEQ     MOVEIAND1
00001476  0C39 0007 000030B9       526          CMP.B   #$7,bit3
0000147E  6700 0088                527          BEQ     ADDIMD        
00001482                           528  
00001482                           529  MOVB
00001482  43F9 00002EAC            530          LEA MMOVEB,A1
00001488  103C 000E                531          MOVE.B  #14,D0
0000148C  4E4F                     532          TRAP    #15 
0000148E                           533          
0000148E  E20A                     534          LSR.B   #1,D2
00001490  13C2 000030B7            535          MOVE.B  D2,bit1
00001496                           536          
00001496  1416                     537          MOVE.B  (A6),D2
00001498  EB0A                     538          LSL.B   #5,D2
0000149A  EA0A                     539          LSR.B   #5,D2
0000149C  13C2 000030BA            540          MOVE.B  D2,bit4
000014A2                           541          
000014A2  141E                     542          MOVE.B  (A6)+,D2
000014A4  E50A                     543          LSL.B   #2,D2
000014A6  EA0A                     544          LSR.B   #5,D2
000014A8  13C2 000030B9            545          MOVE.B  D2,bit3
000014AE                           546          
000014AE  EF4E                     547          LSL.W   #7,D6
000014B0  E04E                     548          LSR.W   #8,D6 
000014B2  EA4E                     549          LSR.W   #5,D6 
000014B4  13C6 000030B8            550          MOVE.B  D6,bit2
000014BA                           551          
000014BA                           552      
000014BA  4285                     553          CLR.L   D5
000014BC                           554          
000014BC  0C39 0000 000030B9       555          CMP.B   #$0,bit3           
000014C4  6700 03A2                556          BEQ     MOVBDN1
000014C8  0C39 0001 000030B9       557          CMP.B   #$1,bit3
000014D0  6700 0146                558          BEQ     MOVEAN1
000014D4  0C39 0002 000030B9       559          CMP.B   #$2,bit3
000014DC  6700 01AE                560          BEQ     MOVEIAN1
000014E0  0C39 0003 000030B9       561          CMP.B   #$3,bit3
000014E8  6700 0236                562          BEQ     MOVEIANI1
000014EC  0C39 0004 000030B9       563          CMP.B   #$4,bit3
000014F4  6700 02D2                564          BEQ     MOVEIAND1
000014F8  0C39 0007 000030B9       565          CMP.B   #$7,bit3
00001500  6700 0006                566          BEQ     ADDIMD
00001504                           567          
00001504  6000 1686                568          BRA     INVOP
00001508                           569  
00001508                           570  ADDIMD
00001508  43F9 00002E51            571      LEA     TAB,A1
0000150E  103C 000E                572      MOVE.B  #14,D0
00001512  4E4F                     573      TRAP    #15
00001514                           574      
00001514  0C39 0000 000030BA       575      CMP.B   #$0,bit4
0000151C  6700 001A                576      BEQ     ADDIMD0
00001520  0C39 0001 000030BA       577      CMP.B   #$1,bit4
00001528  6700 001C                578      BEQ     ADDIMD1
0000152C  0C39 0004 000030BA       579      CMP.B   #$4,bit4
00001534  6700 001E                580      BEQ     ADDIMD4
00001538                           581  
00001538                           582  ADDIMD0
00001538  183C 0001                583      MOVE.B  #$1,D4
0000153C  45F9 0000156A            584      LEA     HANDLEDES,A2
00001542  6000 15CE                585      BRA     DISPEA
00001546                           586  ADDIMD1 
00001546  183C 0002                587      MOVE.B  #$2,D4
0000154A  45F9 0000156A            588      LEA     HANDLEDES,A2
00001550  6000 15C0                589      BRA     DISPEA
00001554                           590  ADDIMD4
00001554  43F9 00002E5F            591      LEA     HASH,A1
0000155A  103C 000E                592      MOVE.B  #14,D0
0000155E  4E4F                     593      TRAP    #15
00001560                           594      
00001560  45F9 0000156A            595      LEA     HANDLEDES,A2
00001566  6000 15AA                596      BRA     DISPEA 
0000156A                           597      
0000156A                           598  HANDLEDES
0000156A  43F9 00002E55            599      LEA     COMMA,A1
00001570  103C 000E                600      MOVE.B  #14,D0
00001574  4E4F                     601      TRAP    #15
00001576                           602      
00001576  0C39 0000 000030B8       603      CMP.B   #$0,bit2
0000157E  6700 0488                604      BEQ     MOVBDN2
00001582  0C39 0001 000030B8       605      CMP.B   #$1,bit2
0000158A  6700 03AC                606      BEQ     MOVEAN2
0000158E  0C39 0002 000030B8       607      CMP.B   #$2,bit2 
00001596  6700 03BC                608      BEQ     MOVIAN2
0000159A  0C39 0003 000030B8       609      CMP.B   #$3,bit2 
000015A2  6700 03E4                610      BEQ     MOVIANI2
000015A6  0C39 0004 000030B8       611      CMP.B   #$4,bit2 
000015AE  6700 0418                612      BEQ     MOVIAND2
000015B2  BA3C 0005                613      CMP.B   #$5,D5
000015B6  6700 0450                614      BEQ     MOVBDN2
000015BA  BA3C 0007                615      CMP.B   #$7,D5
000015BE  6700 0002                616      BEQ     ADDIMDDES
000015C2                           617  
000015C2                           618  ADDIMDDES
000015C2  0C39 0000 000030BA       619      CMP.B   #$0,bit4
000015CA  6700 001A                620      BEQ     ADDIMDDES0
000015CE  0C39 0001 000030BA       621      CMP.B   #$1,bit4
000015D6  6700 001C                622      BEQ     ADDIMDDES1
000015DA  0C39 0004 000030BA       623      CMP.B   #$4,bit4
000015E2  6700 001E                624      BEQ     ADDIMDDES4
000015E6                           625      
000015E6                           626  ADDIMDDES0
000015E6  183C 0001                627      MOVE.B  #$1,D4
000015EA  45F9 00002BFE            628      LEA     ENDNEWLINE,A2
000015F0  6000 1520                629      BRA     DISPEA
000015F4                           630      
000015F4                           631  ADDIMDDES1
000015F4  183C 0002                632      MOVE.B  #$2,D4
000015F8  45F9 00002BFE            633      LEA     ENDNEWLINE,A2
000015FE  6000 1512                634      BRA     DISPEA
00001602                           635      
00001602                           636  ADDIMDDES4    
00001602  43F9 00002E5F            637      LEA     HASH,A1
00001608  103C 000E                638      MOVE.B  #14,D0
0000160C  4E4F                     639      TRAP    #15
0000160E                           640      
0000160E  45F9 00002BFE            641      LEA     ENDNEWLINE,A2
00001614  6000 14FC                642      BRA     DISPEA 
00001618                           643          
00001618                           644  MOVEAN1
00001618  43F9 00002E51            645      LEA TAB,A1
0000161E  103C 000E                646      MOVE.B  #14,D0
00001622  4E4F                     647      TRAP    #15
00001624                           648  
00001624  43F9 00002E63            649      LEA DISPA,A1
0000162A  103C 000E                650      MOVE.B  #14,D0
0000162E  4E4F                     651      TRAP    #15
00001630                           652      
00001630  1239 000030BA            653      MOVE.B  bit4,D1
00001636  103C 0003                654      MOVE.B  #3,D0
0000163A  4E4F                     655      TRAP    #15
0000163C                           656      
0000163C  43F9 00002E55            657      LEA COMMA,A1
00001642  103C 000E                658      MOVE.B  #14,D0
00001646  4E4F                     659      TRAP    #15
00001648                           660      
00001648  0C39 0000 000030B8       661      CMP.B   #$0,bit2
00001650  6700 03B6                662      BEQ     MOVBDN2
00001654  0C39 0001 000030B8       663      CMP.B   #$1,bit2
0000165C  6700 02DA                664      BEQ     MOVEAN2
00001660  0C39 0002 000030B8       665      CMP.B   #$2,bit2 
00001668  6700 02EA                666      BEQ     MOVIAN2
0000166C  0C39 0003 000030B8       667      CMP.B   #$3,bit2 
00001674  6700 0312                668      BEQ     MOVIANI2
00001678  0C39 0004 000030B8       669      CMP.B   #$4,bit2 
00001680  6700 0346                670      BEQ     MOVIAND2
00001684  BA3C 0005                671      CMP.B   #$5,D5
00001688  6700 037E                672      BEQ     MOVBDN2
0000168C                           673      
0000168C                           674  MOVEIAN1
0000168C  43F9 00002E51            675      LEA TAB,A1
00001692  103C 000E                676      MOVE.B  #14,D0
00001696  4E4F                     677      TRAP    #15
00001698                           678      
00001698  43F9 00002E57            679      LEA OPENBRA,A1
0000169E  103C 000E                680      MOVE.B  #14,D0
000016A2  4E4F                     681      TRAP    #15
000016A4                           682  
000016A4  43F9 00002E63            683      LEA DISPA,A1
000016AA  103C 000E                684      MOVE.B  #14,D0
000016AE  4E4F                     685      TRAP    #15
000016B0                           686      
000016B0  1239 000030BA            687      MOVE.B  bit4,D1
000016B6  103C 0003                688      MOVE.B  #3,D0
000016BA  4E4F                     689      TRAP    #15
000016BC                           690      
000016BC  43F9 00002E59            691      LEA CLOSEBRA,A1
000016C2  103C 000E                692      MOVE.B  #14,D0
000016C6  4E4F                     693      TRAP    #15
000016C8                           694      
000016C8  B83C 0003                695      CMP.B   #$3,D4
000016CC  6700 1530                696      BEQ     ENDNEWLINE
000016D0                           697      
000016D0  43F9 00002E55            698      LEA COMMA,A1
000016D6  103C 000E                699      MOVE.B  #14,D0
000016DA  4E4F                     700      TRAP    #15
000016DC                           701      
000016DC  0C39 0000 000030B8       702      CMP.B   #$0,bit2
000016E4  6700 0322                703      BEQ     MOVBDN2
000016E8  0C39 0001 000030B8       704      CMP.B   #$1,bit2
000016F0  6700 0246                705      BEQ     MOVEAN2
000016F4  0C39 0002 000030B8       706      CMP.B   #$2,bit2 
000016FC  6700 0256                707      BEQ     MOVIAN2
00001700  0C39 0003 000030B8       708      CMP.B   #$3,bit2 
00001708  6700 027E                709      BEQ     MOVIANI2
0000170C  0C39 0004 000030B8       710      CMP.B   #$4,bit2 
00001714  6700 02B2                711      BEQ     MOVIAND2
00001718  BA3C 0005                712      CMP.B   #$5,D5
0000171C  6700 02EA                713      BEQ     MOVBDN2
00001720                           714  
00001720                           715  MOVEIANI1
00001720  43F9 00002E51            716      LEA TAB,A1
00001726  103C 000E                717      MOVE.B  #14,D0
0000172A  4E4F                     718      TRAP    #15
0000172C                           719      
0000172C  43F9 00002E57            720      LEA OPENBRA,A1
00001732  103C 000E                721      MOVE.B  #14,D0
00001736  4E4F                     722      TRAP    #15
00001738                           723  
00001738  43F9 00002E63            724      LEA DISPA,A1
0000173E  103C 000E                725      MOVE.B  #14,D0
00001742  4E4F                     726      TRAP    #15
00001744                           727      
00001744  1239 000030BA            728      MOVE.B  bit4,D1
0000174A  103C 0003                729      MOVE.B  #3,D0
0000174E  4E4F                     730      TRAP    #15
00001750                           731      
00001750  43F9 00002E59            732      LEA CLOSEBRA,A1
00001756  103C 000E                733      MOVE.B  #14,D0
0000175A  4E4F                     734      TRAP    #15
0000175C                           735      
0000175C  43F9 00002E5B            736      LEA POS,A1
00001762  103C 000E                737      MOVE.B  #14,D0
00001766  4E4F                     738      TRAP    #15
00001768                           739      
00001768  BA3C 0003                740      CMP.B   #$3,D5
0000176C  6700 1490                741      BEQ     ENDNEWLINE
00001770                           742             
00001770  BA3C 0004                743      CMP.B   #$4,D5
00001774  6700 1488                744      BEQ     ENDNEWLINE
00001778                           745          
00001778                           746          
00001778  43F9 00002E55            747      LEA COMMA,A1
0000177E  103C 000E                748      MOVE.B  #14,D0
00001782  4E4F                     749      TRAP    #15
00001784                           750      
00001784  0C39 0000 000030B8       751      CMP.B   #$0,bit2
0000178C  6700 027A                752      BEQ     MOVBDN2
00001790  0C39 0001 000030B8       753      CMP.B   #$1,bit2
00001798  6700 019E                754      BEQ     MOVEAN2
0000179C  0C39 0002 000030B8       755      CMP.B   #$2,bit2 
000017A4  6700 01AE                756      BEQ     MOVIAN2
000017A8  0C39 0003 000030B8       757      CMP.B   #$3,bit2 
000017B0  6700 01D6                758      BEQ     MOVIANI2
000017B4  0C39 0004 000030B8       759      CMP.B   #$4,bit2 
000017BC  6700 020A                760      BEQ     MOVIAND2
000017C0  BA3C 0005                761      CMP.B   #$5,D5
000017C4  6700 0242                762      BEQ     MOVBDN2
000017C8                           763  
000017C8                           764  MOVEIAND1
000017C8  43F9 00002E51            765      LEA TAB,A1
000017CE  103C 000E                766      MOVE.B  #14,D0
000017D2  4E4F                     767      TRAP    #15
000017D4                           768      
000017D4  43F9 00002E5D            769      LEA NEG,A1
000017DA  103C 000E                770      MOVE.B  #14,D0
000017DE  4E4F                     771      TRAP    #15
000017E0                           772      
000017E0  43F9 00002E57            773      LEA OPENBRA,A1
000017E6  103C 000E                774      MOVE.B  #14,D0
000017EA  4E4F                     775      TRAP    #15
000017EC                           776  
000017EC  43F9 00002E63            777      LEA DISPA,A1
000017F2  103C 000E                778      MOVE.B  #14,D0
000017F6  4E4F                     779      TRAP    #15
000017F8                           780      
000017F8  1239 000030BA            781      MOVE.B  bit4,D1
000017FE  103C 0003                782      MOVE.B  #3,D0
00001802  4E4F                     783      TRAP    #15
00001804                           784      
00001804  43F9 00002E59            785      LEA CLOSEBRA,A1
0000180A  103C 000E                786      MOVE.B  #14,D0
0000180E  4E4F                     787      TRAP    #15
00001810                           788      
00001810  BA3C 0004                789      CMP.B   #$4,D5
00001814  6700 13E8                790      BEQ     ENDNEWLINE
00001818                           791      
00001818  43F9 00002E55            792      LEA COMMA,A1
0000181E  103C 000E                793      MOVE.B  #14,D0
00001822  4E4F                     794      TRAP    #15
00001824                           795      
00001824  0C39 0000 000030B8       796      CMP.B   #$0,bit2
0000182C  6700 01DA                797      BEQ     MOVBDN2
00001830  0C39 0001 000030B8       798      CMP.B   #$1,bit2
00001838  6700 00FE                799      BEQ     MOVEAN2
0000183C  0C39 0002 000030B8       800      CMP.B   #$2,bit2 
00001844  6700 010E                801      BEQ     MOVIAN2
00001848  0C39 0003 000030B8       802      CMP.B   #$3,bit2 
00001850  6700 0136                803      BEQ     MOVIANI2
00001854  0C39 0004 000030B8       804      CMP.B   #$4,bit2 
0000185C  6700 016A                805      BEQ     MOVIAND2
00001860  BA3C 0005                806      CMP.B   #$5,D5
00001864  6700 01A2                807      BEQ     MOVBDN2
00001868                           808  
00001868                           809  MOVBDN1
00001868  43F9 00002E51            810      LEA TAB,A1
0000186E  103C 000E                811      MOVE.B  #14,D0
00001872  4E4F                     812      TRAP    #15
00001874                           813  
00001874  BA3C 0006                814      CMP.B   #$6,D5             * Data Reg for LSLR
00001878  6700 007A                815      BEQ     LSLRSRCD
0000187C                           816  
0000187C  43F9 00002E69            817      LEA DISPD,A1
00001882  103C 000E                818      MOVE.B  #14,D0
00001886  4E4F                     819      TRAP    #15
00001888                           820      
00001888  1239 000030BA            821      MOVE.B  bit4,D1
0000188E  103C 0003                822      MOVE.B  #3,D0
00001892  4E4F                     823      TRAP    #15
00001894                           824  
00001894  BA3C 0004                825      CMP.B   #$4,D5
00001898  6700 0192                826      BEQ     ENDNLINC
0000189C                           827  
0000189C  43F9 00002E55            828      LEA COMMA,A1
000018A2  103C 000E                829      MOVE.B  #14,D0
000018A6  4E4F                     830      TRAP    #15
000018A8                           831  
000018A8  BA3C 0006                832      CMP.B   #$6,D5             * Data Reg for LSLR
000018AC  6700 006E                833      BEQ     LSLRDESD
000018B0  0C39 0000 000030B8       834      CMP.B   #$0,bit2
000018B8  6700 014E                835      BEQ     MOVBDN2
000018BC  0C39 0001 000030B8       836      CMP.B   #$1,bit2
000018C4  6700 0072                837      BEQ     MOVEAN2
000018C8  0C39 0002 000030B8       838      CMP.B   #$2,bit2 
000018D0  6700 0082                839      BEQ     MOVIAN2
000018D4  0C39 0003 000030B8       840      CMP.B   #$3,bit2 
000018DC  6700 00AA                841      BEQ     MOVIANI2
000018E0  0C39 0004 000030B8       842      CMP.B   #$4,bit2 
000018E8  6700 00DE                843      BEQ     MOVIAND2
000018EC  BA3C 0005                844      CMP.B   #$5,D5
000018F0  6700 0116                845      BEQ     MOVBDN2
000018F4                           846      
000018F4                           847  LSLRSRCD
000018F4  43F9 00002E69            848      LEA DISPD,A1
000018FA  103C 000E                849      MOVE.B  #14,D0
000018FE  4E4F                     850      TRAP    #15
00001900                           851          
00001900  1239 000030B6            852      MOVE.B  bit0,D1
00001906  103C 0003                853      MOVE.B  #3,D0
0000190A  4E4F                     854      TRAP    #15    
0000190C                           855  
0000190C  43F9 00002E55            856      LEA COMMA,A1
00001912  103C 000E                857      MOVE.B  #14,D0
00001916  4E4F                     858      TRAP    #15  
00001918                           859      
00001918  6000 0002                860      BRA     LSLRDESD
0000191C                           861      
0000191C                           862  LSLRDESD
0000191C  43F9 00002E69            863      LEA DISPD,A1
00001922  103C 000E                864      MOVE.B  #14,D0
00001926  4E4F                     865      TRAP    #15
00001928                           866          
00001928  1239 000030BA            867      MOVE.B  bit4,D1
0000192E  103C 0003                868      MOVE.B  #3,D0
00001932  4E4F                     869      TRAP    #15      
00001934                           870      
00001934                           871      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001934  6000 12C8                872      BRA     ENDNEWLINE       
00001938                           873  
00001938                           874  MOVEAN2
00001938  43F9 00002E63            875      LEA DISPA,A1
0000193E  103C 000E                876      MOVE.B  #14,D0
00001942  4E4F                     877      TRAP    #15
00001944                           878      
00001944  1239 000030B7            879      MOVE.B  bit1,D1
0000194A  103C 0003                880      MOVE.B  #3,D0
0000194E  4E4F                     881      TRAP    #15
00001950                           882  
00001950                           883      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001950  6000 12AC                884      BRA     ENDNEWLINE    
00001954                           885  
00001954                           886  MOVIAN2
00001954  43F9 00002E57            887      LEA OPENBRA,A1
0000195A  103C 000E                888      MOVE.B  #14,D0
0000195E  4E4F                     889      TRAP    #15
00001960                           890  
00001960  43F9 00002E63            891      LEA DISPA,A1
00001966  103C 000E                892      MOVE.B  #14,D0
0000196A  4E4F                     893      TRAP    #15
0000196C                           894      
0000196C  1239 000030B7            895      MOVE.B  bit1,D1
00001972  103C 0003                896      MOVE.B  #3,D0
00001976  4E4F                     897      TRAP    #15
00001978                           898      
00001978  43F9 00002E59            899      LEA CLOSEBRA,A1
0000197E  103C 000E                900      MOVE.B  #14,D0
00001982  4E4F                     901      TRAP    #15
00001984                           902      
00001984                           903      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001984  6000 1278                904      BRA     ENDNEWLINE
00001988                           905  
00001988                           906  MOVIANI2
00001988  43F9 00002E57            907      LEA OPENBRA,A1
0000198E  103C 000E                908      MOVE.B  #14,D0
00001992  4E4F                     909      TRAP    #15
00001994                           910  
00001994  43F9 00002E63            911      LEA DISPA,A1
0000199A  103C 000E                912      MOVE.B  #14,D0
0000199E  4E4F                     913      TRAP    #15
000019A0                           914      
000019A0  1239 000030B7            915      MOVE.B  bit1,D1
000019A6  103C 0003                916      MOVE.B  #3,D0
000019AA  4E4F                     917      TRAP    #15
000019AC                           918      
000019AC  43F9 00002E59            919      LEA CLOSEBRA,A1
000019B2  103C 000E                920      MOVE.B  #14,D0
000019B6  4E4F                     921      TRAP    #15
000019B8                           922      
000019B8  43F9 00002E5B            923      LEA POS,A1
000019BE  103C 000E                924      MOVE.B  #14,D0
000019C2  4E4F                     925      TRAP    #15
000019C4                           926      
000019C4                           927      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019C4  6000 1238                928      BRA     ENDNEWLINE
000019C8                           929  
000019C8                           930  MOVIAND2
000019C8  43F9 00002E5D            931      LEA NEG,A1
000019CE  103C 000E                932      MOVE.B  #14,D0
000019D2  4E4F                     933      TRAP    #15
000019D4                           934      
000019D4  43F9 00002E57            935      LEA OPENBRA,A1
000019DA  103C 000E                936      MOVE.B  #14,D0
000019DE  4E4F                     937      TRAP    #15
000019E0                           938  
000019E0  43F9 00002E63            939      LEA DISPA,A1
000019E6  103C 000E                940      MOVE.B  #14,D0
000019EA  4E4F                     941      TRAP    #15
000019EC                           942      
000019EC  1239 000030B7            943      MOVE.B  bit1,D1
000019F2  103C 0003                944      MOVE.B  #3,D0
000019F6  4E4F                     945      TRAP    #15
000019F8                           946      
000019F8  43F9 00002E59            947      LEA CLOSEBRA,A1
000019FE  103C 000E                948      MOVE.B  #14,D0
00001A02  4E4F                     949      TRAP    #15
00001A04                           950  
00001A04                           951      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A04  6000 11F8                952      BRA     ENDNEWLINE
00001A08                           953  
00001A08                           954  MOVBDN2
00001A08  43F9 00002E69            955      LEA DISPD,A1
00001A0E  103C 000E                956      MOVE.B  #14,D0
00001A12  4E4F                     957      TRAP    #15
00001A14                           958          
00001A14  1239 000030B7            959      MOVE.B  bit1,D1
00001A1A  103C 0003                960      MOVE.B  #3,D0
00001A1E  4E4F                     961      TRAP    #15   
00001A20                           962      
00001A20  B83C 0000                963      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A24  6700 11D8                964      BEQ     ENDNEWLINE
00001A28                           965      
00001A28                           966      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A28  6000 11D4                967      BRA     ENDNEWLINE
00001A2C                           968      
00001A2C                           969      
00001A2C                           970  ENDNLINC
00001A2C                           971      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A2C  6000 11D0                972      BRA     ENDNEWLINE    
00001A30                           973      
00001A30                           974  MULSW
00001A30  1407                     975          MOVE.B  D7,D2
00001A32  EB0A                     976          LSL.B   #5,D2
00001A34  EA0A                     977          LSR.B   #5,D2
00001A36  13C2 000030BA            978          MOVE.B  D2,bit4
00001A3C                           979          
00001A3C  1407                     980          MOVE.B  D7,D2
00001A3E  E50A                     981          LSL.B   #2,D2
00001A40  EA0A                     982          LSR.B   #5,D2
00001A42  13C2 000030B9            983          MOVE.B  D2,bit3
00001A48                           984          
00001A48  3C07                     985          MOVE.W  D7,D6
00001A4A  EF4E                     986          LSL.W   #7,D6
00001A4C  E04E                     987          LSR.W   #8,D6 
00001A4E  EA4E                     988          LSR.W   #5,D6 
00001A50  13C6 000030B8            989          MOVE.B  D6,bit2
00001A56                           990          
00001A56  E94F                     991          LSL.W   #4,D7
00001A58  E04F                     992          LSR.W   #8,D7 
00001A5A  EA4F                     993          LSR.W   #5,D7 
00001A5C  13C7 000030B7            994          MOVE.B  D7,bit1
00001A62                           995          
00001A62  43F9 00002EA5            996          LEA MMULSW,A1
00001A68  323C 000E                997          MOVE    #14,D1
00001A6C  4E4F                     998          TRAP    #15
00001A6E                           999          
00001A6E  1A3C 0005               1000          MOVE.B  #$5,D5 
00001A72                          1001          
00001A72  0C39 0000 000030B9      1002          CMP.B   #$0,bit3           
00001A7A  6700 FDEC               1003          BEQ     MOVBDN1
00001A7E  0C39 0001 000030B9      1004          CMP.B   #$1,bit3
00001A86  6700 FB90               1005          BEQ     MOVEAN1
00001A8A  0C39 0002 000030B9      1006          CMP.B   #$2,bit3
00001A92  6700 FBF8               1007          BEQ     MOVEIAN1
00001A96  0C39 0003 000030B9      1008          CMP.B   #$3,bit3
00001A9E  6700 FC80               1009          BEQ     MOVEIANI1
00001AA2  0C39 0004 000030B9      1010          CMP.B   #$4,bit3
00001AAA  6700 FD1C               1011          BEQ     MOVEIAND1
00001AAE  0C39 0007 000030B9      1012          CMP.B   #$7,bit3
00001AB6  6700 FA50               1013          BEQ     ADDIMD
00001ABA                          1014  
00001ABA                          1015           
00001ABA                          1016  DIVSW               
00001ABA                          1017          *MOVE.B  D6,D2
00001ABA  141E                    1018          MOVE.B  (A6)+,D2
00001ABC  EB0A                    1019          LSL.B   #5,D2
00001ABE  EA0A                    1020          LSR.B   #5,D2
00001AC0  13C2 000030BA           1021          MOVE.B  D2,bit4
00001AC6                          1022          
00001AC6  1406                    1023          MOVE.B  D6,D2
00001AC8  E50A                    1024          LSL.B   #2,D2
00001ACA  EA0A                    1025          LSR.B   #5,D2
00001ACC  13C2 000030B9           1026          MOVE.B  D2,bit3
00001AD2                          1027          
00001AD2  3E06                    1028          MOVE.W  D6,D7
00001AD4  EF4F                    1029          LSL.W   #7,D7
00001AD6  E04F                    1030          LSR.W   #8,D7 
00001AD8  EA4F                    1031          LSR.W   #5,D7 
00001ADA  13C7 000030B8           1032          MOVE.B  D7,bit2
00001AE0                          1033          
00001AE0  E94E                    1034          LSL.W   #4,D6
00001AE2  E04E                    1035          LSR.W   #8,D6 
00001AE4  EA4E                    1036          LSR.W   #5,D6 
00001AE6  13C6 000030B7           1037          MOVE.B  D6,bit1
00001AEC                          1038          
00001AEC  43F9 00002E9E           1039          LEA MMDIVSW,A1
00001AF2  323C 000E               1040          MOVE    #14,D1
00001AF6  4E4F                    1041          TRAP    #15
00001AF8                          1042          
00001AF8  1A3C 0005               1043          MOVE.B  #$5,D5 
00001AFC  183C 0004               1044          MOVE.B  #$4,D4
00001B00                          1045          
00001B00  0C39 0000 000030B9      1046          CMP.B   #$0,bit3           
00001B08  6700 FD5E               1047          BEQ     MOVBDN1
00001B0C  0C39 0001 000030B9      1048          CMP.B   #$1,bit3
00001B14  6700 FB02               1049          BEQ     MOVEAN1
00001B18  0C39 0002 000030B9      1050          CMP.B   #$2,bit3
00001B20  6700 FB6A               1051          BEQ     MOVEIAN1
00001B24  0C39 0003 000030B9      1052          CMP.B   #$3,bit3
00001B2C  6700 FBF2               1053          BEQ     MOVEIANI1
00001B30  0C39 0004 000030B9      1054          CMP.B   #$4,bit3
00001B38  6700 FC8E               1055          BEQ     MOVEIAND1
00001B3C  0C39 0007 000030B9      1056          CMP.B   #$7,bit3
00001B44  6700 F9C2               1057          BEQ     ADDIMD
00001B48                          1058  
00001B48                          1059  NEGW
00001B48  1406                    1060          MOVE.B  D6,D2
00001B4A  EB0A                    1061          LSL.B   #5,D2
00001B4C  EA0A                    1062          LSR.B   #5,D2
00001B4E  13C2 000030BA           1063          MOVE.B  D2,bit4
00001B54                          1064          
00001B54  1406                    1065          MOVE.B  D6,D2
00001B56  E50A                    1066          LSL.B   #2,D2
00001B58  EA0A                    1067          LSR.B   #5,D2
00001B5A  13C2 000030B9           1068          MOVE.B  D2,bit3
00001B60                          1069          
00001B60  3E06                    1070          MOVE.W  D6,D7
00001B62  E14F                    1071          LSL.W   #8,D7
00001B64  E04F                    1072          LSR.W   #8,D7 
00001B66  EC4F                    1073          LSR.W   #6,D7 
00001B68  13C7 000030B8           1074          MOVE.B  D7,bit2
00001B6E                          1075          
00001B6E  43F9 00002E99           1076          LEA MMNEGW,A1
00001B74  323C 000E               1077          MOVE    #14,D1
00001B78  4E4F                    1078          TRAP    #15
00001B7A                          1079          
00001B7A  183C 0003               1080          MOVE.B  #$3,D4
00001B7E                          1081          
00001B7E  0C39 0000 000030B8      1082          CMP.B   #$0,bit2
00001B86  6700 001A               1083          BEQ     PRINTBYTE
00001B8A  0C39 0001 000030B8      1084          CMP.B   #$1,bit2
00001B92  6700 0062               1085          BEQ     PRINTWORD
00001B96  0C39 0002 000030B8      1086          CMP.B   #$2,bit2
00001B9E  6700 00AA               1087          BEQ     PRINTLONG
00001BA2                          1088          
00001BA2                          1089  PRINTBYTE
00001BA2  43F9 00002E73           1090      LEA MBYTE,A1
00001BA8  323C 000E               1091      MOVE    #14,D1
00001BAC  4E4F                    1092      TRAP    #15
00001BAE                          1093  
00001BAE  0C39 0000 000030B9      1094      CMP.B   #$0,bit3           
00001BB6  6700 FCB0               1095          BEQ     MOVBDN1
00001BBA  0C39 0001 000030B9      1096          CMP.B   #$1,bit3
00001BC2  6700 FA54               1097          BEQ     MOVEAN1
00001BC6  0C39 0002 000030B9      1098          CMP.B   #$2,bit3
00001BCE  6700 FABC               1099          BEQ     MOVEIAN1
00001BD2  0C39 0003 000030B9      1100          CMP.B   #$3,bit3
00001BDA  6700 FB44               1101          BEQ     MOVEIANI1
00001BDE  0C39 0004 000030B9      1102          CMP.B   #$4,bit3
00001BE6  6700 FBE0               1103          BEQ     MOVEIAND1
00001BEA  0C39 0007 000030B9      1104          CMP.B   #$7,bit3
00001BF2  6700 F9CE               1105          BEQ     ADDIMDDES
00001BF6                          1106      
00001BF6                          1107  PRINTWORD
00001BF6  43F9 00002E76           1108      LEA MWORD,A1
00001BFC  323C 000E               1109      MOVE    #14,D1
00001C00  4E4F                    1110      TRAP    #15
00001C02                          1111  
00001C02  0C39 0000 000030B9      1112      CMP.B   #$0,bit3           
00001C0A  6700 FC5C               1113          BEQ     MOVBDN1
00001C0E  0C39 0001 000030B9      1114          CMP.B   #$1,bit3
00001C16  6700 FA00               1115          BEQ     MOVEAN1
00001C1A  0C39 0002 000030B9      1116          CMP.B   #$2,bit3
00001C22  6700 FA68               1117          BEQ     MOVEIAN1
00001C26  0C39 0003 000030B9      1118          CMP.B   #$3,bit3
00001C2E  6700 FAF0               1119          BEQ     MOVEIANI1
00001C32  0C39 0004 000030B9      1120          CMP.B   #$4,bit3
00001C3A  6700 FB8C               1121          BEQ     MOVEIAND1
00001C3E  0C39 0007 000030B9      1122          CMP.B   #$7,bit3
00001C46  6700 F97A               1123          BEQ     ADDIMDDES
00001C4A                          1124      
00001C4A                          1125  PRINTLONG
00001C4A  43F9 00002E79           1126      LEA MLONG,A1
00001C50  323C 000E               1127      MOVE    #14,D1
00001C54  4E4F                    1128      TRAP    #15
00001C56                          1129   
00001C56  0C39 0000 000030B9      1130      CMP.B   #$0,bit3           
00001C5E  6700 FC08               1131          BEQ     MOVBDN1
00001C62  0C39 0001 000030B9      1132          CMP.B   #$1,bit3
00001C6A  6700 F9AC               1133          BEQ     MOVEAN1
00001C6E  0C39 0002 000030B9      1134          CMP.B   #$2,bit3
00001C76  6700 FA14               1135          BEQ     MOVEIAN1
00001C7A  0C39 0003 000030B9      1136          CMP.B   #$3,bit3
00001C82  6700 FA9C               1137          BEQ     MOVEIANI1
00001C86  0C39 0004 000030B9      1138          CMP.B   #$4,bit3
00001C8E  6700 FB38               1139          BEQ     MOVEIAND1
00001C92  0C39 0007 000030B9      1140          CMP.B   #$7,bit3
00001C9A  6700 F926               1141          BEQ     ADDIMDDES
00001C9E                          1142          
00001C9E                          1143  LSLR
00001C9E                          1144          *MOVE.B  D6,D2
00001C9E  141E                    1145          MOVE.B  (A6)+,D2
00001CA0  EB0A                    1146          LSL.B   #5,D2
00001CA2  EA0A                    1147          LSR.B   #5,D2
00001CA4  13C2 000030BA           1148          MOVE.B  D2,bit4
00001CAA                          1149          
00001CAA  1406                    1150          MOVE.B  D6,D2
00001CAC  E50A                    1151          LSL.B   #2,D2
00001CAE  EE0A                    1152          LSR.B   #7,D2
00001CB0  13C2 000030B9           1153          MOVE.B  D2,bit3
00001CB6                          1154          
00001CB6  3E06                    1155          MOVE.W  D6,D7
00001CB8  E14F                    1156          LSL.W   #8,D7
00001CBA  E04F                    1157          LSR.W   #8,D7 
00001CBC  EC4F                    1158          LSR.W   #6,D7 
00001CBE  13C7 000030B8           1159          MOVE.B  D7,bit2
00001CC4                          1160          
00001CC4  3E06                    1161          MOVE.W  D6,D7
00001CC6  EF4F                    1162          LSL.W   #7,D7
00001CC8  E04F                    1163          LSR.W   #8,D7 
00001CCA  EE4F                    1164          LSR.W   #7,D7
00001CCC  13C7 000030B7           1165          MOVE.B  D7,bit1   
00001CD2                          1166      
00001CD2  1806                    1167          MOVE.B  D6,D4
00001CD4                          1168          
00001CD4  3E06                    1169          MOVE.W  D6,D7
00001CD6  E94F                    1170          LSL.W   #4,D7
00001CD8  E04F                    1171          LSR.W   #8,D7 
00001CDA  EA4F                    1172          LSR.W   #5,D7
00001CDC  13C7 000030B6           1173          MOVE.B  D7,bit0 
00001CE2                          1174          
00001CE2  1E06                    1175          MOVE.B  D6,D7
00001CE4  E90F                    1176          LSL.B   #4,D7
00001CE6  EE0F                    1177          LSR.B   #7,D7
00001CE8                          1178          
00001CE8  0C39 0003 000030B8      1179          CMP.B   #3,bit2
00001CF0  6700 00B4               1180          BEQ     LSLRMEMH
00001CF4                          1181          
00001CF4  BE3C 0000               1182          CMP.B   #0,D7
00001CF8  6700 0028               1183          BEQ     ASLRMEMH
00001CFC                          1184          
00001CFC  1606                    1185          MOVE.B  D6,D3
00001CFE  E70B                    1186          LSL.B   #3,D3
00001D00  EC0B                    1187          LSR.B   #6,D3
00001D02  B63C 0003               1188          CMP.B   #3,D3
00001D06  6700 00BA               1189          BEQ     RORL
00001D0A                          1190          
00001D0A  0C39 0001 000030B7      1191          CMP.B   #$1,bit1
00001D12  6700 012E               1192          BEQ     PRINTLSL
00001D16  0C39 0000 000030B7      1193          CMP.B   #$0,bit1
00001D1E  6700 0270               1194          BEQ     PRINTLSR
00001D22                          1195          
00001D22                          1196  ASLRMEMH
00001D22  1A3C 0004               1197          MOVE.B  #4,D5
00001D26  0C39 0001 000030B7      1198          CMP.B   #$1,bit1
00001D2E  6700 000E               1199          BEQ     PRINTASL
00001D32  0C39 0000 000030B7      1200          CMP.B   #$0,bit1
00001D3A  6700 0036               1201          BEQ     PRINTASR
00001D3E                          1202          
00001D3E                          1203  PRINTASL
00001D3E  43F9 00002ED8           1204          LEA MASL,A1
00001D44  303C 000E               1205          MOVE    #14,D0
00001D48  4E4F                    1206          TRAP    #15
00001D4A                          1207          
00001D4A  0C39 0000 000030B8      1208          CMP.B   #$0,bit2
00001D52  6700 016C               1209          BEQ     PRINTB
00001D56  0C39 0001 000030B8      1210          CMP.B   #$1,bit2
00001D5E  6700 0194               1211          BEQ     PRINTW
00001D62  0C39 0002 000030B8      1212          CMP.B   #$2,bit2
00001D6A  6700 01BC               1213          BEQ     PRINTL
00001D6E  6000 0106               1214          BRA     LSLRMEM
00001D72                          1215          
00001D72                          1216  PRINTASR        
00001D72  43F9 00002EDC           1217          LEA MASR,A1
00001D78  303C 000E               1218          MOVE    #14,D0
00001D7C  4E4F                    1219          TRAP    #15
00001D7E                          1220          
00001D7E  0C39 0000 000030B8      1221          CMP.B   #$0,bit2
00001D86  6700 0138               1222          BEQ     PRINTB
00001D8A  0C39 0001 000030B8      1223          CMP.B   #$1,bit2
00001D92  6700 0160               1224          BEQ     PRINTW
00001D96  0C39 0002 000030B8      1225          CMP.B   #$2,bit2
00001D9E  6700 0188               1226          BEQ     PRINTL
00001DA2  6000 00D2               1227          BRA     LSLRMEM
00001DA6                          1228          
00001DA6                          1229  LSLRMEMH
00001DA6  1A3C 0004               1230          MOVE.B  #4,D5
00001DAA  0C39 0001 000030B7      1231          CMP.B   #$1,bit1
00001DB2  6700 008E               1232          BEQ     PRINTLSL
00001DB6  0C39 0000 000030B7      1233          CMP.B   #$0,bit1
00001DBE  6700 01D0               1234          BEQ     PRINTLSR
00001DC2                          1235  RORL
00001DC2  0C39 0001 000030B7      1236          CMP.B   #$1,bit1
00001DCA  6700 000E               1237          BEQ     PRINTROL
00001DCE  0C39 0000 000030B7      1238          CMP.B   #$0,bit1
00001DD6  6700 0036               1239          BEQ     PRINTROR
00001DDA                          1240  PRINTROL
00001DDA  43F9 00002E89           1241          LEA MROL,A1
00001DE0  303C 000E               1242          MOVE    #14,D0
00001DE4  4E4F                    1243          TRAP    #15
00001DE6                          1244          
00001DE6  0C39 0000 000030B8      1245          CMP.B   #$0,bit2
00001DEE  6700 00D0               1246          BEQ     PRINTB
00001DF2  0C39 0001 000030B8      1247          CMP.B   #$1,bit2
00001DFA  6700 00F8               1248          BEQ     PRINTW
00001DFE  0C39 0002 000030B8      1249          CMP.B   #$2,bit2
00001E06  6700 0120               1250          BEQ     PRINTL
00001E0A  6000 006A               1251          BRA     LSLRMEM
00001E0E                          1252  PRINTROR
00001E0E  43F9 00002E8D           1253          LEA MROR,A1
00001E14  323C 000E               1254          MOVE    #14,D1
00001E18  4E4F                    1255          TRAP    #15
00001E1A                          1256          
00001E1A  0C39 0000 000030B8      1257          CMP.B   #$0,bit2
00001E22  6700 009C               1258          BEQ     PRINTB
00001E26  0C39 0001 000030B8      1259          CMP.B   #$1,bit2
00001E2E  6700 00C4               1260          BEQ     PRINTW
00001E32  0C39 0002 000030B8      1261          CMP.B   #$2,bit2
00001E3A  6700 00EC               1262          BEQ     PRINTL
00001E3E  6000 0036               1263          BRA     LSLRMEM
00001E42                          1264  PRINTLSL
00001E42  43F9 00002E91           1265          LEA MLSL,A1
00001E48  303C 000E               1266          MOVE    #14,D0
00001E4C  4E4F                    1267          TRAP    #15
00001E4E                          1268          
00001E4E  0C39 0000 000030B8      1269          CMP.B   #$0,bit2
00001E56  6700 0068               1270          BEQ     PRINTB
00001E5A  0C39 0001 000030B8      1271          CMP.B   #$1,bit2
00001E62  6700 0090               1272          BEQ     PRINTW
00001E66  0C39 0002 000030B8      1273          CMP.B   #$2,bit2
00001E6E  6700 00B8               1274          BEQ     PRINTL
00001E72  6000 0002               1275          BRA     LSLRMEM
00001E76                          1276          
00001E76                          1277  LSLRMEM
00001E76                          1278          
00001E76  E50C                    1279          LSL.B   #2,D4
00001E78  EA0C                    1280          LSR.B   #5,D4
00001E7A  13C4 000030B9           1281          MOVE.B  D4,bit3
00001E80                          1282          
00001E80  183C 0003               1283          MOVE.B  #$3,D4
00001E84                          1284          
00001E84  0C39 0002 000030B9      1285          CMP.B   #$2,bit3
00001E8C  6700 F7FE               1286          BEQ     MOVEIAN1
00001E90  0C39 0003 000030B9      1287          CMP.B   #$3,bit3
00001E98  6700 F886               1288          BEQ     MOVEIANI1
00001E9C  0C39 0004 000030B9      1289          CMP.B   #$4,bit3
00001EA4  6700 F922               1290          BEQ     MOVEIAND1
00001EA8                          1291          
00001EA8  43F9 00002E51           1292          LEA TAB,A1
00001EAE  123C 0003               1293          MOVE.B  #3,D1
00001EB2  4E4F                    1294          TRAP    #15 
00001EB4                          1295          
00001EB4  0C39 0007 000030B9      1296          CMP.B   #$7,bit3
00001EBC  6700 F704               1297          BEQ     ADDIMDDES
00001EC0                          1298  PRINTB
00001EC0  43F9 00002E6F           1299          LEA MDOT,A1
00001EC6  303C 000E               1300          MOVE    #14,D0
00001ECA  4E4F                    1301          TRAP    #15
00001ECC                          1302  
00001ECC  43F9 00002E73           1303          LEA MBYTE,A1
00001ED2  303C 000E               1304          MOVE    #14,D0
00001ED6  4E4F                    1305          TRAP    #15
00001ED8                          1306          
00001ED8  3A3C 0006               1307          MOVE #$6,D5
00001EDC                          1308          
00001EDC  0C39 0000 000030B9      1309          CMP.B   #0,bit3
00001EE4  6700 0076               1310          BEQ     PRINTLSLRCOUNT
00001EE8  0C39 0001 000030B9      1311          CMP.B   #1,bit3
00001EF0  6700 F976               1312          BEQ     MOVBDN1
00001EF4                          1313  
00001EF4                          1314  PRINTW 
00001EF4  43F9 00002E6F           1315          LEA MDOT,A1
00001EFA  303C 000E               1316          MOVE    #14,D0
00001EFE  4E4F                    1317          TRAP    #15
00001F00                          1318  
00001F00  43F9 00002E76           1319          LEA MWORD,A1
00001F06  303C 000E               1320          MOVE    #14,D0
00001F0A  4E4F                    1321          TRAP    #15
00001F0C                          1322          
00001F0C  3A3C 0006               1323          MOVE #$6,D5
00001F10                          1324          
00001F10  0C39 0000 000030B9      1325          CMP.B   #0,bit3
00001F18  6700 0042               1326          BEQ     PRINTLSLRCOUNT
00001F1C  0C39 0001 000030B9      1327          CMP.B   #1,bit3
00001F24  6700 F942               1328          BEQ     MOVBDN1
00001F28                          1329  
00001F28                          1330  PRINTL
00001F28  43F9 00002E6F           1331          LEA MDOT,A1
00001F2E  303C 000E               1332          MOVE    #14,D0
00001F32  4E4F                    1333          TRAP    #15
00001F34                          1334  
00001F34  43F9 00002E79           1335          LEA MLONG,A1
00001F3A  303C 000E               1336          MOVE    #14,D0
00001F3E  4E4F                    1337          TRAP    #15
00001F40                          1338  
00001F40  3A3C 0006               1339          MOVE #$6,D5
00001F44                          1340          
00001F44  0C39 0000 000030B9      1341          CMP.B   #0,bit3
00001F4C  6700 000E               1342          BEQ     PRINTLSLRCOUNT
00001F50  0C39 0001 000030B9      1343          CMP.B   #1,bit3
00001F58  6700 F90E               1344          BEQ     MOVBDN1    
00001F5C                          1345  
00001F5C                          1346  PRINTLSLRCOUNT
00001F5C  43F9 00002E51           1347          LEA TAB,A1
00001F62  303C 000E               1348          MOVE    #14,D0
00001F66  4E4F                    1349          TRAP    #15
00001F68                          1350          
00001F68  43F9 00002E5F           1351          LEA HASH,A1
00001F6E  303C 000E               1352          MOVE    #14,D0
00001F72  4E4F                    1353          TRAP    #15
00001F74                          1354          
00001F74  1239 000030B6           1355          MOVE.B  bit0,D1
00001F7A  303C 0003               1356          MOVE    #3,D0
00001F7E  4E4F                    1357          TRAP    #15
00001F80                          1358          
00001F80  43F9 00002E55           1359          LEA COMMA,A1
00001F86  303C 000E               1360          MOVE    #14,D0
00001F8A  4E4F                    1361          TRAP    #15
00001F8C                          1362          
00001F8C  6000 F98E               1363          BRA LSLRDESD
00001F90                          1364    
00001F90                          1365  PRINTLSR
00001F90  43F9 00002E95           1366          LEA MLSR,A1
00001F96  323C 000E               1367          MOVE    #14,D1
00001F9A  4E4F                    1368          TRAP    #15
00001F9C                          1369          
00001F9C  0C39 0000 000030B8      1370          CMP.B   #$0,bit2
00001FA4  6700 FF1A               1371          BEQ     PRINTB
00001FA8  0C39 0001 000030B8      1372          CMP.B   #$1,bit2
00001FB0  6700 FF42               1373          BEQ     PRINTW
00001FB4  0C39 0002 000030B8      1374          CMP.B   #$2,bit2
00001FBC  6700 FF6A               1375          BEQ     PRINTL
00001FC0  6000 FEB4               1376          BRA     LSLRMEM
00001FC4                          1377  
00001FC4                          1378  ******************************************************************************************************
00001FC4                          1379  *   Branch, branch to subroutine, and branch conditionally
00001FC4                          1380  *   BRA, BSR, Bcc
00001FC4                          1381  
00001FC4                          1382  BCC
00001FC4  13C5 000030B7           1383          MOVE.B  D5,bit1             Moves condition code to bit1
00001FCA  1A1E                    1384          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001FCC  13C5 000030B8           1385          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001FD2  280E                    1386          MOVE.L  A6,D4               Moves current address to D4 register
00001FD4                          1387  
00001FD4  BA3C 0000               1388          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001FD8  6700 0010               1389          BEQ     BCCWORD
00001FDC  BA3C 00FF               1390          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001FE0  6700 0010               1391          BEQ     BCCLONG             Else, displacement is 8-bits
00001FE4                          1392  
00001FE4                          1393          * Calculates 8-bit displacement
00001FE4                          1394          * 8-bit displacement is already in D5
00001FE4                          1395          * Adds displacement to current address
00001FE4  D805                    1396          ADD.B   D5,D4               Adds the displacement to current address
00001FE6  6000 0012               1397          BRA     BCCNEXT
00001FEA                          1398  
00001FEA                          1399  * Calculates 16-bit displacement
00001FEA                          1400  BCCWORD
00001FEA  3A1E                    1401          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001FEC  D845                    1402          ADD.W   D5,D4               Adds the displacement to current address
00001FEE  6000 000A               1403          BRA     BCCNEXT
00001FF2                          1404  
00001FF2                          1405  * Calculates 32-bit displacement
00001FF2                          1406  BCCLONG
00001FF2  2A1E                    1407          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001FF4  D885                    1408          ADD.L   D5,D4               Adds the displacement to current address
00001FF6  6000 0002               1409          BRA     BCCNEXT
00001FFA                          1410  
00001FFA                          1411  * Does the actual calculation
00001FFA                          1412  * Adds the displacement to the current address
00001FFA                          1413  BCCNEXT
00001FFA  6100 000E               1414          BSR     BCCDISP             Displays branch op-code
00001FFE  45F9 00002BFE           1415          LEA     ENDNEWLINE,A2
00002004  2E04                    1416          MOVE.L  D4,D7
00002006  6000 F0EA               1417          BRA     DISPADDRSTART
0000200A                          1418  
0000200A                          1419  BCCDISP
0000200A  B43C 0000               1420          CMP.B   #$0,D2
0000200E  6700 0026               1421          BEQ     BCCBRA
00002012  B43C 0007               1422          CMP.B   #$7,D2
00002016  6700 0028               1423          BEQ     BCCBEQ
0000201A  B43C 0006               1424          CMP.B   #$6,D2
0000201E  6700 002A               1425          BEQ     BCCBNE
00002022  B43C 000D               1426          CMP.B   #$D,D2
00002026  6700 002C               1427          BEQ     BCCBLT
0000202A  B43C 0002               1428          CMP.B   #$2,D2
0000202E  6700 002E               1429          BEQ     BCCBHI
00002032                          1430  
00002032  6000 0B58               1431          BRA     INVOP
00002036                          1432  
00002036                          1433  BCCBRA
00002036  43F9 00002F46           1434          LEA     MBRA,A1
0000203C  6000 002A               1435          BRA     BCCPRINT
00002040                          1436  BCCBEQ
00002040  43F9 00002F36           1437          LEA     MBEQ,A1
00002046  6000 0020               1438          BRA     BCCPRINT
0000204A                          1439  BCCBNE
0000204A  43F9 00002F3A           1440          LEA     MBNE,A1
00002050  6000 0016               1441          BRA     BCCPRINT
00002054                          1442  BCCBLT
00002054  43F9 00002F3E           1443          LEA     MBLT,A1
0000205A  6000 000C               1444          BRA     BCCPRINT
0000205E                          1445  BCCBHI
0000205E  43F9 00002F42           1446          LEA     MBHI,A1
00002064  6000 0002               1447          BRA     BCCPRINT
00002068                          1448  BCCPRINT
00002068  103C 000E               1449          MOVE.B  #14,D0
0000206C  4E4F                    1450          TRAP    #15
0000206E  43F9 00002E51           1451          LEA     TAB,A1
00002074  4E4F                    1452          TRAP    #15
00002076  4E75                    1453          RTS
00002078                          1454  
00002078                          1455  ******************************************************************************************************
00002078                          1456  *   Immediate data arithmetic operations
00002078                          1457  *   SUBI
00002078                          1458  
00002078  13C5 000030B7           1459  IMD     MOVE.B  D5,bit1
0000207E  141E                    1460          MOVE.B  (A6)+,D2
00002080                          1461          
00002080  3805                    1462          MOVE    D5,D4
00002082  C83C 0001               1463          AND.B   #$0001,D4
00002086  B83C 0001               1464          CMP.B   #$1,D4
0000208A  6700 F1D8               1465          BEQ     BTST
0000208E                          1466  
0000208E  DE02                    1467          ADD.B   D2,D7
00002090                          1468  
00002090  1602                    1469          MOVE.B  D2,D3               Copies data at D2 to D3
00002092                          1470          *   this gets digit in 10's place
00002092  E80B                    1471          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002094                          1472          *   this gets digit in 1's place
00002094  E90A                    1473          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002096  E80A                    1474          LSR.B   #4,D2               Shifts back right into 1's place
00002098                          1475  
00002098                          1476          *   D3 holds digit in 10's place
00002098                          1477          *   D2 holds digit in 1's place
00002098                          1478  
00002098  E20B                    1479          LSR.B   #1,D3
0000209A  6400 0004               1480          BCC     IMD2
0000209E  5404                    1481          ADD.B   #$2,D4
000020A0  E20B                    1482  IMD2    LSR.B   #1,D3
000020A2  6400 0004               1483          BCC     IMD3
000020A6  5804                    1484          ADD.B   #$4,D4
000020A8  B43C 0007               1485  IMD3    CMP.B   #$7,D2
000020AC  6D00 0006               1486          BLT     IMD4
000020B0  5204                    1487          ADD.B   #$1,D4
000020B2  5102                    1488          SUB.B   #$8,D2
000020B4                          1489  
000020B4                          1490          *   Stores them into addr
000020B4  13C3 000030B8           1491  IMD4    MOVE.B  D3,bit2
000020BA  13C4 000030B9           1492          MOVE.B  D4,bit3
000020C0  13C2 000030BA           1493          MOVE.B  D2,bit4
000020C6                          1494  
000020C6                          1495  **************************
000020C6                          1496  * This finds the size of the operation
000020C6                          1497  
000020C6  0C39 0000 000030B8      1498          CMP.B   #$0,bit2
000020CE  6700 007E               1499          BEQ     IMDBYTE
000020D2  0C39 0001 000030B8      1500          CMP.B   #$1,bit2
000020DA  6700 0082               1501          BEQ     IMDWORD
000020DE  0C39 0002 000030B8      1502          CMP.B   #$2,bit2
000020E6  6700 0084               1503          BEQ     IMDLONG
000020EA  6000 0AA0               1504          BRA     INVOP
000020EE                          1505  
000020EE                          1506  *************************************************************
000020EE                          1507  * Display IMD op-code
000020EE                          1508  IMDPRINT
000020EE  0C39 0000 000030B7      1509          CMP.B   #$0,bit1
000020F6  6700 0026               1510          BEQ     IMDPRINTORI
000020FA  0C39 0004 000030B7      1511          CMP.B   #$4,bit1
00002102  6700 0024               1512          BEQ     IMDPRINTSUBI
00002106  0C39 000A 000030B7      1513          CMP.B   #$A,bit1
0000210E  6700 0022               1514          BEQ     IMDPRINTEORI
00002112  0C39 000C 000030B7      1515          CMP.B   #$C,bit1
0000211A  6700 0020               1516          BEQ     IMDPRINTCMPI
0000211E                          1517  
0000211E                          1518  IMDPRINTORI
0000211E  43F9 00002F00           1519          LEA     MORI,A1
00002124  6000 0020               1520          BRA     IMDPRINTEND
00002128                          1521  
00002128                          1522  IMDPRINTSUBI
00002128  43F9 00002EFA           1523          LEA     MSUBI,A1
0000212E  6000 0016               1524          BRA     IMDPRINTEND
00002132                          1525  
00002132                          1526  IMDPRINTEORI
00002132  43F9 00002F2A           1527          LEA     MEORI,A1
00002138  6000 000C               1528          BRA     IMDPRINTEND
0000213C                          1529  
0000213C                          1530  IMDPRINTCMPI
0000213C  43F9 00002F19           1531          LEA     MCMPI,A1
00002142  6000 0002               1532          BRA     IMDPRINTEND
00002146                          1533  
00002146                          1534  IMDPRINTEND
00002146  103C 000E               1535          MOVE.B  #14,D0
0000214A  4E4F                    1536          TRAP    #15
0000214C  4E75                    1537          RTS
0000214E                          1538  
0000214E                          1539  *************************************************************
0000214E                          1540  * Immediate data operation size BYTE
0000214E                          1541  IMDBYTE
0000214E  619E                    1542          BSR     IMDPRINT
00002150  43F9 00002E73           1543          LEA     MBYTE,A1
00002156                          1544  
00002156                          1545          * Moves size to D4, needed to use DISPEA
00002156  183C 0001               1546          MOVE.B  #$1,D4
0000215A  6000 001A               1547          BRA     IMDEA
0000215E                          1548  
0000215E                          1549  *************************************************************
0000215E                          1550  * Immediate data operation size WORD
0000215E                          1551  IMDWORD
0000215E  618E                    1552          BSR     IMDPRINT
00002160  43F9 00002E76           1553          LEA     MWORD,A1
00002166                          1554  
00002166  1803                    1555          MOVE.B  D3,D4
00002168  6000 000C               1556          BRA     IMDEA
0000216C                          1557  
0000216C                          1558  
0000216C                          1559  *************************************************************
0000216C                          1560  * Immediate data operation size LONG
0000216C                          1561  IMDLONG
0000216C  6180                    1562          BSR     IMDPRINT
0000216E  43F9 00002E79           1563          LEA     MLONG,A1
00002174                          1564          
00002174                          1565  
00002174                          1566          * Moves size to D4, needed to use DISPEA
00002174  1803                    1567          MOVE.B  D3,D4
00002176                          1568  
00002176                          1569  IMDEA
00002176                          1570          * This prints out the size and creates tab
00002176  103C 000E               1571          MOVE.B  #14,D0
0000217A  4E4F                    1572          TRAP    #15
0000217C  43F9 00002E51           1573          LEA     TAB,A1
00002182  103C 000E               1574          MOVE.B  #14,D0
00002186  4E4F                    1575          TRAP    #15
00002188                          1576          * Loads return address into A2
00002188  45F9 00002192           1577          LEA     IMDEA2,A2
0000218E  6000 0982               1578          BRA     DISPEA
00002192                          1579  IMDEA2
00002192  43F9 00002E55           1580          LEA     COMMA,A1
00002198  103C 000E               1581          MOVE.B  #14,D0
0000219C  4E4F                    1582          TRAP    #15
0000219E                          1583  
0000219E  45F9 000021A8           1584          LEA     IMDEA3,A2
000021A4  6000 081C               1585          BRA     SUBEA
000021A8                          1586  IMDEA3
000021A8  6000 0A54               1587          BRA     ENDNEWLINE
000021AC                          1588  
000021AC                          1589  ******************************************************************************************************
000021AC                          1590  * Miscellaneous section
000021AC                          1591  *   Not goes here
000021AC                          1592  
000021AC                          1593  MISC
000021AC  13C5 000030B7           1594          MOVE.B  D5,bit1
000021B2  141E                    1595          MOVE.B  (A6)+,D2
000021B4                          1596  
000021B4  DE02                    1597          ADD.B   D2,D7
000021B6                          1598  
000021B6  1602                    1599          MOVE.B  D2,D3               Copies data at D2 to D3
000021B8                          1600          *   this gets digit in 10's place
000021B8  E80B                    1601          LSR.B   #4,D3               Shifts right to get rid of 1's place
000021BA                          1602          *   this gets digit in 1's place
000021BA  E90A                    1603          LSL.B   #4,D2               Shifts left to get rid of 10's place
000021BC  E80A                    1604          LSR.B   #4,D2               Shifts back right into 1's place
000021BE                          1605  
000021BE                          1606  
000021BE  3806                    1607          MOVE.W  D6,D4
000021C0  E94C                    1608          LSL.W   #$4,D4
000021C2  E04C                    1609          LSR.W   #$8,D4
000021C4  E44C                    1610          LSR.W   #$2,D4
000021C6  13C4 000030B8           1611          MOVE.B  D4,bit2
000021CC  0C39 003A 000030B8      1612          CMP.B   #$3A,bit2
000021D4  6700 F042               1613          BEQ     JSR
000021D8                          1614          *   D5 is bit1
000021D8                          1615          *   D3 is bit2
000021D8                          1616          *   D2 is bit3
000021D8                          1617  
000021D8                          1618  **************************
000021D8                          1619  * This finds the size of the operation
000021D8                          1620          * D5 is bit1
000021D8  BA3C 0004               1621          CMP.B   #$4,D5
000021DC  6700 F96A               1622          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
000021E0  BA3C 0006               1623          CMP.B   #$6,D5              Branches to NOT section
000021E4  6700 006E               1624          BEQ     MISCNOT
000021E8  BA3C 000E               1625          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
000021EC  6700 0006               1626          BEQ     MISCBIT2
000021F0  6000 0022               1627          BRA     MISCCHECKM
000021F4                          1628  
000021F4                          1629  MISCBIT2
000021F4                          1630          * D3 is bit2
000021F4  B63C 0007               1631          CMP.B   #$7,D3              Branches to NOP
000021F8  6700 0006               1632          BEQ     MISCBIT3
000021FC  6000 098E               1633          BRA     INVOP
00002200                          1634  
00002200                          1635  MISCBIT3
00002200                          1636          * D2 is bit3
00002200  B43C 0001               1637          CMP.B   #$1,D2              Branches to NOP
00002204  6700 002E               1638          BEQ     MISCNOP
00002208  B43C 0005               1639          CMP.B   #$5,D2              Branches to NOP
0000220C  6700 0036               1640          BEQ     MISCRTS
00002210  6000 097A               1641          BRA     INVOP
00002214                          1642  
00002214                          1643  
00002214                          1644  MISCCHECKM
00002214  1805                    1645          MOVE.B  D5,D4
00002216  C83C 0008               1646          AND.B   #$8,D4
0000221A  B83C 0008               1647          CMP.B   #$8,D4
0000221E  6600 096C               1648          BNE     INVOP
00002222  1803                    1649          MOVE.B  D3,D4
00002224  C83C 0008               1650          AND.B   #$8,D4
00002228  B83C 0008               1651          CMP.B   #$8,D4
0000222C  6600 095E               1652          BNE     INVOP
00002230  6000 00EE               1653          BRA     MISCMOVEM
00002234                          1654  
00002234                          1655  ******************************************************
00002234                          1656  * NOP
00002234                          1657  * No operation
00002234                          1658  MISCNOP
00002234  43F9 00002F4A           1659          LEA     MNOP,A1
0000223A  103C 000E               1660          MOVE.B  #14,D0
0000223E  4E4F                    1661          TRAP    #15
00002240                          1662  
00002240  6000 09BC               1663          BRA     ENDNEWLINE          Goes to next opcode
00002244                          1664  
00002244                          1665  ******************************************************
00002244                          1666  * RTS
00002244                          1667  * Return to sub routine
00002244                          1668  MISCRTS
00002244  43F9 00002F4E           1669          LEA     MRTS,A1
0000224A  103C 000E               1670          MOVE.B  #14,D0
0000224E  4E4F                    1671          TRAP    #15
00002250                          1672  
00002250  6000 09AC               1673          BRA     ENDNEWLINE          Goes to next opcode
00002254                          1674  
00002254                          1675  ******************************************************
00002254                          1676  * NOT
00002254                          1677  * Reuses some of IMD section to display because they have similar format
00002254                          1678  *  (I was kinda lazy too)
00002254                          1679  MISCNOT
00002254  E20B                    1680          LSR.B   #1,D3
00002256  6400 0004               1681          BCC     MISCNOT2
0000225A  5404                    1682          ADD.B   #$2,D4
0000225C                          1683  MISCNOT2   
0000225C  E20B                    1684          LSR.B   #1,D3
0000225E  6400 0004               1685          BCC     MISCNOT3
00002262  5804                    1686          ADD.B   #$4,D4
00002264                          1687  MISCNOT3   
00002264  B43C 0007               1688          CMP.B   #$7,D2
00002268  6D00 0006               1689          BLT     MISCNOT4
0000226C  5204                    1690          ADD.B   #$1,D4
0000226E  5102                    1691          SUB.B   #$8,D2
00002270                          1692  
00002270                          1693          *   Stores them into addr
00002270                          1694  MISCNOT4
00002270  13C3 000030B8           1695          MOVE.B  D3,bit2
00002276  13C4 000030B9           1696          MOVE.B  D4,bit3
0000227C  13C2 000030BA           1697          MOVE.B  D2,bit4
00002282                          1698  
00002282  B63C 0000               1699          CMP.B   #$0,D3
00002286  6700 0016               1700          BEQ     MISCBYTE
0000228A  B63C 0001               1701          CMP.B   #$1,D3
0000228E  6700 0020               1702          BEQ     MISCWORD
00002292  B63C 0002               1703          CMP.B   #$2,D3
00002296  6700 0028               1704          BEQ     MISCLONG
0000229A  6000 08F0               1705          BRA     INVOP
0000229E                          1706  *************************************************************
0000229E                          1707  * Immediate data operation size BYTE
0000229E                          1708  MISCBYTE
0000229E  6100 004C               1709          BSR     MISCPRINT
000022A2  43F9 00002E73           1710          LEA     MBYTE,A1
000022A8                          1711  
000022A8                          1712          * Moves size to D4, needed to use DISPEA
000022A8  183C 0001               1713          MOVE.B  #$1,D4
000022AC  6000 001E               1714          BRA     MISCEA
000022B0                          1715  
000022B0                          1716  *************************************************************
000022B0                          1717  * Immediate data operation size WORD
000022B0                          1718  MISCWORD
000022B0  6100 003A               1719          BSR     MISCPRINT
000022B4  43F9 00002E76           1720          LEA     MWORD,A1
000022BA                          1721  
000022BA  1803                    1722          MOVE.B  D3,D4
000022BC  6000 000E               1723          BRA     MISCEA
000022C0                          1724  
000022C0                          1725  
000022C0                          1726  *************************************************************
000022C0                          1727  * Immediate data operation size LONG
000022C0                          1728  MISCLONG
000022C0  6100 002A               1729          BSR     MISCPRINT
000022C4  43F9 00002E79           1730          LEA     MLONG,A1
000022CA                          1731  
000022CA                          1732          * Moves size to D4, needed to use DISPEA
000022CA  1803                    1733          MOVE.B  D3,D4
000022CC                          1734  
000022CC                          1735  MISCEA
000022CC  103C 000E               1736          MOVE.B  #14,D0
000022D0  4E4F                    1737          TRAP    #15
000022D2  43F9 00002E51           1738          LEA     TAB,A1
000022D8  103C 000E               1739          MOVE.B  #14,D0
000022DC  4E4F                    1740          TRAP    #15
000022DE                          1741  
000022DE  45F9 000022E8           1742          LEA     MISCEA2,A2
000022E4  6000 06DC               1743          BRA     SUBEA
000022E8                          1744  MISCEA2
000022E8  6000 0914               1745          BRA     ENDNEWLINE
000022EC                          1746  
000022EC                          1747  *************************************************************
000022EC                          1748  * Display IMD op-code
000022EC                          1749  MISCPRINT
000022EC  0C39 0004 000030B7      1750          CMP.B   #$4,bit1
000022F4  6700 0018               1751          BEQ     MISCPRINTNEG
000022F8  0C39 0006 000030B7      1752          CMP.B   #$6,bit1
00002300  6700 0002               1753          BEQ     MISCPRINTNOT
00002304                          1754  
00002304                          1755  MISCPRINTNOT
00002304  43F9 00002F05           1756          LEA     MNOT,A1
0000230A  6000 000C               1757          BRA     MISCPRINTEND
0000230E                          1758  
0000230E                          1759  MISCPRINTNEG
0000230E  43F9 00002F10           1760          LEA     MNEG,A1
00002314  6000 0002               1761          BRA     MISCPRINTEND
00002318                          1762  
00002318                          1763  MISCPRINTEND
00002318  103C 000E               1764          MOVE.B  #14,D0
0000231C  4E4F                    1765          TRAP    #15
0000231E  4E75                    1766          RTS
00002320                          1767  
00002320                          1768  
00002320                          1769  *************************************************************************
00002320                          1770  * MOVEM stuff
00002320                          1771          *   D5 is bit1
00002320                          1772          *   D3 is bit2
00002320                          1773          *   D2 is bit3
00002320                          1774  MISCMOVEM
00002320  1805                    1775          MOVE.B  D5,D4               Gets the dr field and stores it into D5
00002322  4245                    1776          CLR     D5                  Moves 0 to D5
00002324  0804 0002               1777          BTST    #2,D4               Checks the bit at spot 2
00002328  6700 0006               1778          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
0000232C  1A3C 0001               1779          MOVE.B  #1,D5               Else, it will skip it
00002330                          1780  
00002330                          1781  MISCMOVEM2
00002330  4246                    1782          CLR     D6                  Clears D6, setting it to 0
00002332  1803                    1783          MOVE.B  D3,D4               Gets the size field and stores it into D6
00002334  0804 0002               1784          BTST    #2,D4               Checks the bit at spot 2
00002338  6700 0006               1785          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
0000233C  1C3C 0001               1786          MOVE.B  #1,D6               Else, it will skip it. 
00002340                          1787  
00002340                          1788  MISCMOVEM3
00002340  C63C 0003               1789          AND.B   #$3,D3              Gets ride of the first 2 bits
00002344  E30B                    1790          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
00002346  0882 0003               1791          BCLR    #3,D2               Checks furthest left bit and set it to 0
0000234A  6700 0006               1792          BEQ     MISCMOVEM4
0000234E  08C3 0000               1793          BSET    #0,D3               If bit was 1, adds 1 to mode
00002352                          1794  
00002352                          1795      * bit1 is in D5 dr field
00002352                          1796      * bit2 is in D6 size
00002352                          1797      * bit3 is in D3 mode
00002352                          1798      * bit4 is in D2 reg
00002352                          1799  MISCMOVEM4
00002352  13C5 000030B7           1800          MOVE.B  D5,bit1
00002358  13C6 000030B8           1801          MOVE.B  D6,bit2
0000235E  13C3 000030B9           1802          MOVE.B  D3,bit3
00002364  13C2 000030BA           1803          MOVE.B  D2,bit4
0000236A                          1804  
0000236A                          1805      * Prints out MOVEM and size + tab
0000236A  43F9 00002ED1           1806          LEA     MMOVEM,A1
00002370  103C 000E               1807          MOVE.B  #14,D0
00002374  4E4F                    1808          TRAP    #15
00002376                          1809  
00002376  BC3C 0001               1810          CMP.B   #1,D6
0000237A  6700 000C               1811          BEQ     MISCMMSIZEL
0000237E  43F9 00002E76           1812          LEA     MWORD,A1
00002384  6000 0008               1813          BRA     MISCMMPRINTSIZE
00002388                          1814  
00002388                          1815  MISCMMSIZEL
00002388  43F9 00002E79           1816          LEA     MLONG,A1
0000238E                          1817  
0000238E                          1818  MISCMMPRINTSIZE
0000238E  4E4F                    1819          TRAP    #15
00002390  43F9 00002E51           1820          LEA     TAB,A1
00002396  4E4F                    1821          TRAP    #15
00002398                          1822  
00002398  3C1E                    1823          MOVE.W  (A6)+,D6
0000239A  BA3C 0000               1824          CMP.B   #0,D5
0000239E  6700 0006               1825          BEQ     MISCMMPREDEC
000023A2  6000 0070               1826          BRA     MISCMMPOSTINC
000023A6                          1827  
000023A6                          1828  ******************************************************************
000023A6                          1829  * MOVEM Post-decrement
000023A6                          1830  * Prints out registers from post-decrement
000023A6                          1831  * D6 holds the reg list
000023A6                          1832  MISCMMPREDEC
000023A6  1806                    1833          MOVE.B  D6,D4
000023A8  3E3C 0008               1834          MOVE.W  #8,D7               Counter
000023AC  123C 000F               1835          MOVE.B  #$F,D1
000023B0                          1836  
000023B0  49F9 00002E63           1837          LEA     DISPA,A4
000023B6  6100 0032               1838          BSR     MISCMMPREDECPRINT
000023BA                          1839  
000023BA  3806                    1840          MOVE.W  D6,D4
000023BC  E04C                    1841          LSR.W   #8,D4
000023BE  3E3C 0008               1842          MOVE.W  #8,D7               Counter
000023C2  49F9 00002E69           1843          LEA     DISPD,A4
000023C8  6100 0020               1844          BSR     MISCMMPREDECPRINT
000023CC  6000 0002               1845          BRA     MISCMMPREDEC2
000023D0                          1846  
000023D0                          1847  MISCMMPREDEC2
000023D0  43F9 00002E55           1848          LEA     COMMA,A1
000023D6  103C 000E               1849          MOVE.B  #14,D0
000023DA  4E4F                    1850          TRAP    #15
000023DC                          1851  
000023DC  45F9 000023E6           1852          LEA     MISCMMPREDEC3,A2
000023E2  6000 05DE               1853          BRA     SUBEA
000023E6                          1854  
000023E6                          1855  MISCMMPREDEC3
000023E6  6000 0816               1856          BRA     ENDNEWLINE
000023EA                          1857  
000023EA                          1858  * Prints out reg list
000023EA                          1859  MISCMMPREDECPRINT
000023EA  E30C                    1860          LSL.B   #1,D4
000023EC  6400 001C               1861          BCC     MISCMMPREDECPRINT3
000023F0                          1862  
000023F0  B23C 000F               1863          CMP.B   #$F,D1
000023F4  6700 0008               1864          BEQ     MISCMMPREDECPRINT2
000023F8  4EB9 00002490           1865          JSR     MISCMMSLASH
000023FE                          1866  
000023FE                          1867  MISCMMPREDECPRINT2
000023FE  224C                    1868          MOVEA.L A4,A1
00002400  103C 000E               1869          MOVE.B  #14,D0
00002404  4E4F                    1870          TRAP    #15
00002406  6100 007A               1871          BSR     MISCMMPRINTNUM
0000240A                          1872  
0000240A                          1873  MISCMMPREDECPRINT3
0000240A  5307                    1874          SUB.B   #1,D7
0000240C  BE3C 0000               1875          CMP.B   #0,D7
00002410  66D8                    1876          BNE     MISCMMPREDECPRINT
00002412  4E75                    1877          RTS
00002414                          1878  
00002414                          1879  ******************************************************************
00002414                          1880  * MOVEM Post-increment
00002414                          1881  * Prints out registers from post-increment
00002414                          1882  * D6 holds the reg list
00002414                          1883  MISCMMPOSTINC
00002414  45F9 0000241E           1884          LEA     MISCMMPOSTINC2,A2
0000241A  6000 05A6               1885          BRA     SUBEA
0000241E                          1886  
0000241E                          1887  MISCMMPOSTINC2
0000241E  43F9 00002E55           1888          LEA     COMMA,A1
00002424  103C 000E               1889          MOVE.B  #14,D0
00002428  4E4F                    1890          TRAP    #15
0000242A                          1891  
0000242A  3806                    1892          MOVE.W  D6,D4
0000242C  E04C                    1893          LSR.W   #8,D4
0000242E  3E3C 0008               1894          MOVE.W  #8,D7               Counter
00002432  123C 000F               1895          MOVE.B  #$F,D1
00002436                          1896  
00002436  49F9 00002E63           1897          LEA     DISPA,A4
0000243C  6100 001A               1898          BSR     MISCMMPOSTINCPRINT
00002440                          1899  
00002440  1806                    1900          MOVE.B  D6,D4
00002442  3E3C 0008               1901          MOVE.W  #8,D7               Counter
00002446  49F9 00002E69           1902          LEA     DISPD,A4
0000244C  6100 000A               1903          BSR     MISCMMPOSTINCPRINT
00002450  6000 0002               1904          BRA     MISCMMPOSTINC3
00002454                          1905  
00002454                          1906  MISCMMPOSTINC3
00002454  6000 07A8               1907          BRA     ENDNEWLINE
00002458                          1908  
00002458                          1909  * Prints out reg list
00002458                          1910  MISCMMPOSTINCPRINT
00002458  E20C                    1911          LSR.B   #1,D4
0000245A  6400 001C               1912          BCC     MISCMMPOSTINCPRINT3
0000245E                          1913  
0000245E  B23C 000F               1914          CMP.B   #$F,D1
00002462  6700 0008               1915          BEQ     MISCMMPOSTINCPRINT2
00002466  4EB9 00002490           1916          JSR     MISCMMSLASH
0000246C                          1917  
0000246C                          1918  MISCMMPOSTINCPRINT2
0000246C  224C                    1919          MOVEA.L A4,A1
0000246E  103C 000E               1920          MOVE.B  #14,D0
00002472  4E4F                    1921          TRAP    #15
00002474  6100 000C               1922          BSR     MISCMMPRINTNUM
00002478                          1923  
00002478                          1924  MISCMMPOSTINCPRINT3
00002478  5307                    1925          SUB.B   #1,D7
0000247A  BE3C 0000               1926          CMP.B   #0,D7
0000247E  66D8                    1927          BNE     MISCMMPOSTINCPRINT
00002480  4E75                    1928          RTS
00002482                          1929  
00002482                          1930  ***********************************************
00002482                          1931  * Stuff for printing reg list
00002482                          1932  MISCMMPRINTNUM
00002482  123C 0008               1933          MOVE.B  #8,D1
00002486  9207                    1934          SUB.B   D7,D1
00002488  103C 0003               1935          MOVE.B  #3,D0
0000248C  4E4F                    1936          TRAP    #15
0000248E  4E75                    1937          RTS
00002490                          1938  
00002490                          1939  MISCMMSLASH
00002490  43F9 00002E61           1940          LEA     SLASH,A1
00002496  103C 000E               1941          MOVE.B  #14,D0
0000249A  4E4F                    1942          TRAP    #15
0000249C  4E75                    1943          RTS
0000249E                          1944  
0000249E                          1945  ******************************************************************************************************
0000249E                          1946  * SUB section
0000249E                          1947  
0000249E                          1948          *   Grabs next two nibbles
0000249E  141E                    1949  SUB     MOVE.B  (A6)+,D2
000024A0                          1950  
000024A0  DE02                    1951          ADD.B   D2,D7
000024A2                          1952  
000024A2  1602                    1953          MOVE.B  D2,D3               Copies data at D2 to D3
000024A4                          1954          *   this gets digit in 10's place
000024A4  E80B                    1955          LSR.B   #4,D3               Shifts right to get rid of 1's place
000024A6                          1956          *   this gets digit in 1's place
000024A6  E90A                    1957          LSL.B   #4,D2               Shifts left to get rid of 10's place
000024A8  E80A                    1958          LSR.B   #4,D2               Shifts back right into 1's place
000024AA                          1959  
000024AA                          1960          *   D3 holds digit in 10's place
000024AA                          1961          *   D2 holds digit in 1's place
000024AA                          1962  
000024AA                          1963          
000024AA                          1964          *   Converts nibble into 3-bit parts
000024AA  E20B                    1965          LSR.B   #1,D3
000024AC  6400 0004               1966          BCC     SUB2
000024B0  5404                    1967          ADD.B   #$2,D4
000024B2                          1968          
000024B2  E20B                    1969  SUB2    LSR.B   #1,D3
000024B4  6400 0004               1970          BCC     SUB3
000024B8  5804                    1971          ADD.B   #$4,D4
000024BA                          1972          
000024BA  1205                    1973  SUB3    MOVE.B  D5,D1
000024BC  E209                    1974          LSR.B   #1,D1
000024BE  6400 0004               1975          BCC     SUB4
000024C2  5803                    1976          ADD.B   #$4,D3
000024C4                          1977  
000024C4  B43C 0007               1978  SUB4    CMP.B   #$7,D2
000024C8  6D00 0006               1979          BLT     SUB1
000024CC  5204                    1980          ADD.B   #$1,D4
000024CE  5102                    1981          SUB.B   #$8,D2
000024D0                          1982  
000024D0                          1983          *   Stores them into addr
000024D0  13C1 000030B7           1984  SUB1    MOVE.B  D1,bit1
000024D6  13C3 000030B8           1985          MOVE.B  D3,bit2
000024DC  13C4 000030B9           1986          MOVE.B  D4,bit3
000024E2  13C2 000030BA           1987          MOVE.B  D2,bit4
000024E8                          1988  
000024E8                          1989          * do this later
000024E8  4241                    1990          CLR     D1
000024EA  7400                    1991          MOVE.L  #0,D2
000024EC  7600                    1992          MOVE.L  #0,D3
000024EE  7800                    1993          MOVE.L  #0,D4
000024F0  7A00                    1994          MOVE.L  #0,D5
000024F2  7C00                    1995          MOVE.L  #0,D6
000024F4                          1996  
000024F4                          1997          
000024F4                          1998  ******************************************************************************************************
000024F4                          1999  * After spliting the op-code into SUB's defined groupings
000024F4                          2000  *   This figures out which operation it is and goes to that sub-routine
000024F4                          2001  
000024F4                          2002          * This checks if bit0 is C which is either AND or MULS
000024F4  0C39 000C 000030B6      2003          CMP.B   #$C,bit0
000024FC  6600 000E               2004          BNE     SUBACHECK
00002500  0C39 0007 000030B8      2005          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
00002508  6700 F526               2006          BEQ     MULSW                       AND will use SUB's routine
0000250C                          2007  
0000250C                          2008  SUBACHECK
0000250C                          2009          * This will display SUBA instead  -- check this later
0000250C  0C39 0003 000030B8      2010          CMP.B   #$3,bit2
00002514  6700 01D6               2011          BEQ     SUBA
00002518  0C39 0007 000030B8      2012          CMP.B   #$7,bit2
00002520  6700 01CA               2013          BEQ     SUBA
00002524                          2014  
00002524                          2015          * This will find the size and stuff
00002524  0C39 0000 000030B8      2016          CMP.B   #$0,bit2
0000252C  6700 003E               2017          BEQ     SUBSIZE1
00002530  0C39 0001 000030B8      2018          CMP.B   #$1,bit2
00002538  6700 0072               2019          BEQ     SUBSIZE2
0000253C  0C39 0002 000030B8      2020          CMP.B   #$2,bit2
00002544  6700 00A6               2021          BEQ     SUBSIZE3
00002548  0C39 0004 000030B8      2022          CMP.B   #$4,bit2
00002550  6700 00DA               2023          BEQ     SUBSIZE4
00002554  0C39 0005 000030B8      2024          CMP.B   #$5,bit2
0000255C  6700 010E               2025          BEQ     SUBSIZE5
00002560  0C39 0006 000030B8      2026          CMP.B   #$6,bit2
00002568  6700 0142               2027          BEQ     SUBSIZE6
0000256C                          2028     
0000256C                          2029  ******************************************************************************************************
0000256C                          2030  *   Displays size, then does operation order
0000256C                          2031  
0000256C                          2032  *   000 byte    EA,DN
0000256C                          2033  SUBSIZE1
0000256C  6100 0260               2034          BSR     SUBPRINT
00002570  43F9 00002E73           2035          LEA     MBYTE,A1
00002576  103C 000E               2036          MOVE.B  #14,D0
0000257A  4E4F                    2037          TRAP    #15
0000257C  43F9 00002E51           2038          LEA     TAB,A1
00002582  103C 000E               2039          MOVE.B  #14,D0
00002586  4E4F                    2040          TRAP    #15
00002588                          2041  
00002588  45F9 00002592           2042          LEA     SUBSIZE11,A2
0000258E  6000 0432               2043          BRA     SUBEA
00002592                          2044  SUBSIZE11
00002592  45F9 000025A8           2045          LEA     SUBSIZE12,A2
00002598  43F9 00002E55           2046          LEA     COMMA,A1
0000259E  103C 000E               2047          MOVE.B  #14,D0
000025A2  4E4F                    2048          TRAP    #15
000025A4  6000 02F8               2049          BRA     SUBDN
000025A8                          2050  SUBSIZE12
000025A8  6000 0654               2051          BRA     ENDNEWLINE
000025AC                          2052  
000025AC                          2053  *************************************************
000025AC                          2054  *   001 word    EA,DN
000025AC                          2055  SUBSIZE2
000025AC  6100 0220               2056          BSR     SUBPRINT
000025B0  43F9 00002E76           2057          LEA     MWORD,A1
000025B6  103C 000E               2058          MOVE.B  #14,D0
000025BA  4E4F                    2059          TRAP    #15
000025BC  43F9 00002E51           2060          LEA     TAB,A1
000025C2  103C 000E               2061          MOVE.B  #14,D0
000025C6  4E4F                    2062          TRAP    #15
000025C8                          2063  
000025C8  45F9 000025D2           2064          LEA     SUBSIZE21,A2
000025CE  6000 03F2               2065          BRA     SUBEA
000025D2                          2066  SUBSIZE21
000025D2  45F9 000025E8           2067          LEA     SUBSIZE22,A2
000025D8  43F9 00002E55           2068          LEA     COMMA,A1
000025DE  103C 000E               2069          MOVE.B  #14,D0
000025E2  4E4F                    2070          TRAP    #15
000025E4  6000 02B8               2071          BRA     SUBDN
000025E8                          2072  SUBSIZE22
000025E8  6000 0614               2073          BRA     ENDNEWLINE
000025EC                          2074  
000025EC                          2075  *************************************************
000025EC                          2076  *   010 long    EA,DN
000025EC                          2077  SUBSIZE3
000025EC  6100 01E0               2078          BSR     SUBPRINT
000025F0  43F9 00002E79           2079          LEA     MLONG,A1
000025F6  103C 000E               2080          MOVE.B  #14,D0
000025FA  4E4F                    2081          TRAP    #15
000025FC  43F9 00002E51           2082          LEA     TAB,A1
00002602  103C 000E               2083          MOVE.B  #14,D0
00002606  4E4F                    2084          TRAP    #15
00002608                          2085  
00002608  45F9 00002612           2086          LEA     SUBSIZE31,A2
0000260E  6000 03B2               2087          BRA     SUBEA
00002612                          2088  SUBSIZE31
00002612  45F9 00002628           2089          LEA     SUBSIZE32,A2
00002618  43F9 00002E55           2090          LEA     COMMA,A1
0000261E  103C 000E               2091          MOVE.B  #14,D0
00002622  4E4F                    2092          TRAP    #15
00002624  6000 0278               2093          BRA     SUBDN
00002628                          2094  SUBSIZE32
00002628  6000 05D4               2095          BRA     ENDNEWLINE
0000262C                          2096  
0000262C                          2097  *************************************************
0000262C                          2098  *   100 byte    DN,EA
0000262C                          2099  SUBSIZE4
0000262C  6100 01A0               2100          BSR     SUBPRINT
00002630  43F9 00002E73           2101          LEA     MBYTE,A1
00002636  103C 000E               2102          MOVE.B  #14,D0
0000263A  4E4F                    2103          TRAP    #15
0000263C  43F9 00002E51           2104          LEA     TAB,A1
00002642  103C 000E               2105          MOVE.B  #14,D0
00002646  4E4F                    2106          TRAP    #15
00002648                          2107  
00002648                          2108          *BSR     SUBERRORTEST1
00002648                          2109  
00002648  45F9 00002652           2110          LEA     SUBSIZE41,A2
0000264E  6000 024E               2111          BRA     SUBDN
00002652                          2112  SUBSIZE41
00002652  45F9 00002668           2113          LEA     SUBSIZE42,A2
00002658  43F9 00002E55           2114          LEA     COMMA,A1
0000265E  103C 000E               2115          MOVE.B  #14,D0
00002662  4E4F                    2116          TRAP    #15
00002664  6000 035C               2117          BRA     SUBEA
00002668                          2118  SUBSIZE42
00002668  6000 0594               2119          BRA     ENDNEWLINE
0000266C                          2120  
0000266C                          2121  *************************************************
0000266C                          2122  *   101 word    DN,EA
0000266C                          2123  SUBSIZE5
0000266C                          2124          *BSR     SUBERRORTEST1               * This does error testing
0000266C  6100 0160               2125          BSR     SUBPRINT                    * Prints out 'SUB.'
00002670  43F9 00002E76           2126          LEA     MWORD,A1
00002676  103C 000E               2127          MOVE.B  #14,D0
0000267A  4E4F                    2128          TRAP    #15
0000267C  43F9 00002E51           2129          LEA     TAB,A1
00002682  103C 000E               2130          MOVE.B  #14,D0
00002686  4E4F                    2131          TRAP    #15
00002688                          2132  
00002688  45F9 00002692           2133          LEA     SUBSIZE51,A2
0000268E  6000 020E               2134          BRA     SUBDN
00002692                          2135  SUBSIZE51
00002692  45F9 000026A8           2136          LEA     SUBSIZE52,A2
00002698  43F9 00002E55           2137          LEA     COMMA,A1
0000269E  103C 000E               2138          MOVE.B  #14,D0
000026A2  4E4F                    2139          TRAP    #15
000026A4  6000 031C               2140          BRA     SUBEA
000026A8                          2141  SUBSIZE52
000026A8  6000 0554               2142          BRA     ENDNEWLINE
000026AC                          2143  
000026AC                          2144  *************************************************
000026AC                          2145  *   110 long    DN,EA
000026AC                          2146  SUBSIZE6
000026AC                          2147          *BSR     SUBERRORTEST1               * This does error testing
000026AC  6100 0120               2148          BSR     SUBPRINT                    * Prints out 'SUB.'
000026B0  43F9 00002E79           2149          LEA     MLONG,A1
000026B6  103C 000E               2150          MOVE.B  #14,D0
000026BA  4E4F                    2151          TRAP    #15
000026BC  43F9 00002E51           2152          LEA     TAB,A1
000026C2  103C 000E               2153          MOVE.B  #14,D0
000026C6  4E4F                    2154          TRAP    #15
000026C8                          2155  
000026C8                          2156          *BSR     SUBERRORTEST1
000026C8                          2157  
000026C8  45F9 000026D2           2158          LEA     SUBSIZE61,A2
000026CE  6000 01CE               2159          BRA     SUBDN
000026D2                          2160  SUBSIZE61
000026D2  45F9 000026E8           2161          LEA     SUBSIZE62,A2
000026D8  43F9 00002E55           2162          LEA     COMMA,A1
000026DE  103C 000E               2163          MOVE.B  #14,D0
000026E2  4E4F                    2164          TRAP    #15
000026E4  6000 02DC               2165          BRA     SUBEA
000026E8                          2166  SUBSIZE62
000026E8  6000 0514               2167          BRA     ENDNEWLINE
000026EC                          2168  
000026EC                          2169  ****************************************************************************
000026EC                          2170  *   This section is for SUBA
000026EC                          2171  *   Displays 'SUBA.' then decodes the op-code as SUBA
000026EC                          2172  SUBA
000026EC  0C39 0009 000030B6      2173          CMP.B   #$9,bit0
000026F4  6700 001A               2174          BEQ     SUBPRINTSUBA
000026F8  0C39 000B 000030B6      2175          CMP.B   #$B,bit0
00002700  6700 001E               2176          BEQ     SUBPRINTCMPA
00002704  0C39 000D 000030B6      2177          CMP.B   #$D,bit0
0000270C  6700 0022               2178          BEQ     SUBPRINTADDA
00002710                          2179  
00002710                          2180  
00002710                          2181  SUBPRINTSUBA
00002710  43F9 00002EEA           2182          LEA     MSUBA,A1                    Displays 'SUBA.'
00002716  103C 000E               2183          MOVE.B  #14,D0
0000271A  4E4F                    2184          TRAP    #15
0000271C  6000 0022               2185          BRA     SUBACONT
00002720                          2186  
00002720                          2187  SUBPRINTCMPA
00002720  43F9 00002F1F           2188          LEA     MCMPA,A1                    Displays 'SUBA.'
00002726  103C 000E               2189          MOVE.B  #14,D0
0000272A  4E4F                    2190          TRAP    #15
0000272C  6000 0012               2191          BRA     SUBACONT
00002730                          2192  
00002730                          2193  SUBPRINTADDA
00002730  43F9 00002F30           2194          LEA     MADDA,A1                    Displays 'SUBA.'
00002736  103C 000E               2195          MOVE.B  #14,D0
0000273A  4E4F                    2196          TRAP    #15
0000273C  6000 0002               2197          BRA     SUBACONT
00002740                          2198  
00002740                          2199  SUBACONT
00002740                          2200          * Does the rest of SUBA
00002740  0C39 0003 000030B8      2201          CMP.B   #$3,bit2
00002748  6700 000E               2202          BEQ     SUBSIZE7
0000274C  0C39 0007 000030B8      2203          CMP.B   #$7,bit2
00002754  6700 003E               2204          BEQ     SUBSIZE8
00002758                          2205  
00002758                          2206  *************************************************
00002758                          2207  *   SUBA Word   ea,An
00002758                          2208  SUBSIZE7
00002758  43F9 00002E76           2209          LEA     MWORD,A1
0000275E  103C 000E               2210          MOVE.B  #14,D0
00002762  4E4F                    2211          TRAP    #15
00002764  43F9 00002E51           2212          LEA     TAB,A1
0000276A  103C 000E               2213          MOVE.B  #14,D0
0000276E  4E4F                    2214          TRAP    #15
00002770                          2215  
00002770  45F9 0000277A           2216          LEA     SUBSIZE71,A2
00002776  6000 024A               2217          BRA     SUBEA
0000277A                          2218  SUBSIZE71
0000277A  45F9 00002790           2219          LEA     SUBSIZE72,A2
00002780  43F9 00002E55           2220          LEA     COMMA,A1
00002786  103C 000E               2221          MOVE.B  #14,D0
0000278A  4E4F                    2222          TRAP    #15
0000278C  6000 0164               2223          BRA     SUBAN2
00002790                          2224  SUBSIZE72
00002790  6000 046C               2225          BRA     ENDNEWLINE
00002794                          2226  
00002794                          2227  *************************************************
00002794                          2228  *   SUBA longword   ea,An
00002794                          2229  SUBSIZE8
00002794  43F9 00002E79           2230          LEA     MLONG,A1
0000279A  103C 000E               2231          MOVE.B  #14,D0
0000279E  4E4F                    2232          TRAP    #15
000027A0  43F9 00002E51           2233          LEA     TAB,A1
000027A6  103C 000E               2234          MOVE.B  #14,D0
000027AA  4E4F                    2235          TRAP    #15
000027AC                          2236  
000027AC  45F8 277A               2237          LEA     SUBSIZE71,A2
000027B0  6000 0210               2238          BRA     SUBEA
000027B4                          2239  SUBSIZE81
000027B4  45F8 2790               2240          LEA     SUBSIZE72,A2
000027B8  43F9 00002E55           2241          LEA     COMMA,A1
000027BE  103C 000E               2242          MOVE.B  #14,D0
000027C2  4E4F                    2243          TRAP    #15
000027C4  6000 012C               2244          BRA     SUBAN2
000027C8                          2245  SUBSIZE82
000027C8  6000 0434               2246          BRA     ENDNEWLINE
000027CC                          2247  
000027CC                          2248  *************************************************
000027CC                          2249  * Jumps to memory location at A2
000027CC                          2250  SUBJMPA2
000027CC  4ED2                    2251          JMP     (A2)
000027CE                          2252  
000027CE                          2253  *************************************************
000027CE                          2254  * Prints out opcode name
000027CE                          2255  SUBPRINT
000027CE  0C39 0009 000030B6      2256          CMP.B   #$9,bit0                Prints SUB
000027D6  6700 0026               2257          BEQ     SUBPRINTSUB
000027DA  0C39 000B 000030B6      2258          CMP.B   #$B,bit0                Prints CMP or EOR
000027E2  6700 004A               2259          BEQ     SUBPRINTB
000027E6  0C39 000C 000030B6      2260          CMP.B   #$C,bit0                Prints AND
000027EE  6700 001E               2261          BEQ     SUBPRINTAND
000027F2  0C39 000D 000030B6      2262          CMP.B   #$D,bit0                Prints ADD
000027FA  6700 0022               2263          BEQ     SUBPRINTADD
000027FE                          2264  
000027FE                          2265  SUBPRINTSUB   * Displays 'SUB.' 
000027FE  43F9 00002EE5           2266          LEA     MSUB,A1
00002804  103C 000E               2267          MOVE.B  #14,D0
00002808  4E4F                    2268          TRAP    #15
0000280A  6000 004E               2269          BRA     SUBPRINTEND
0000280E                          2270  
0000280E                          2271  SUBPRINTAND   * Displays 'AND.' 
0000280E  43F9 00002EF0           2272          LEA     MAND,A1
00002814  103C 000E               2273          MOVE.B  #14,D0
00002818  4E4F                    2274          TRAP    #15
0000281A  6000 003E               2275          BRA     SUBPRINTEND
0000281E                          2276  
0000281E                          2277  SUBPRINTADD   * Displays 'ADD.' 
0000281E  43F9 00002EF5           2278          LEA     MADD,A1
00002824  103C 000E               2279          MOVE.B  #14,D0
00002828  4E4F                    2280          TRAP    #15
0000282A  6000 002E               2281          BRA     SUBPRINTEND
0000282E                          2282  
0000282E                          2283  SUBPRINTB
0000282E  0C39 0004 000030B8      2284          CMP.B   #$4,bit2
00002836  6D00 0012               2285          BLT     SUBPRINTEOR
0000283A                          2286  
0000283A                          2287  SUBPRINTCMP   * Displays 'CMP.' 
0000283A  43F9 00002F14           2288          LEA     MCMP,A1
00002840  103C 000E               2289          MOVE.B  #14,D0
00002844  4E4F                    2290          TRAP    #15
00002846  6000 0012               2291          BRA     SUBPRINTEND
0000284A                          2292  
0000284A                          2293  SUBPRINTEOR   * Displays 'EOR.' 
0000284A  43F9 00002F25           2294          LEA     MEOR,A1
00002850  103C 000E               2295          MOVE.B  #14,D0
00002854  4E4F                    2296          TRAP    #15
00002856  6000 0002               2297          BRA     SUBPRINTEND
0000285A                          2298  
0000285A                          2299  SUBPRINTEND
0000285A  4E75                    2300          RTS
0000285C                          2301  
0000285C                          2302  
0000285C                          2303  *******************************************************************
0000285C                          2304  * Error testing for DN->EA operations
0000285C                          2305  *  Data register, address register, and immediate data cannot be destinations
0000285C                          2306  SUBERRORTEST1
0000285C                          2307          * test for DN or AN register, branches to invalid op code if true
0000285C  0C39 0000 000030B9      2308          CMP.B   #0,bit3
00002864  6700 0326               2309          BEQ     INVOP
00002868  0C39 0001 000030B9      2310          CMP.B   #1,bit3
00002870  6700 031A               2311          BEQ     INVOP
00002874                          2312          
00002874                          2313          * check if destination is immediate data
00002874  0C39 0007 000030B9      2314          CMP.B   #7,bit3
0000287C  6600 001E               2315          BNE     SUBERRORTEST11
00002880  0C39 0000 000030BA      2316          CMP.B   #0,bit4
00002888  6700 0012               2317          BEQ     SUBERRORTEST11
0000288C  0C39 0001 000030BA      2318          CMP.B   #1,bit4
00002894  6700 0006               2319          BEQ     SUBERRORTEST11
00002898  6000 02F2               2320          BRA     INVOP
0000289C                          2321          
0000289C                          2322  SUBERRORTEST11
0000289C  4E75                    2323          RTS
0000289E                          2324  
0000289E                          2325  
0000289E                          2326  ******************************************************************************************************
0000289E                          2327  *   Displays data register
0000289E                          2328  SUBDN
0000289E  43F9 00002E7C           2329          LEA     MDN,A1
000028A4  103C 000E               2330          MOVE.B  #14,D0
000028A8  4E4F                    2331          TRAP    #15
000028AA                          2332  
000028AA  1239 000030B7           2333          MOVE.B  bit1,D1
000028B0  103C 0003               2334          MOVE.B  #3,D0
000028B4  4E4F                    2335          TRAP    #15
000028B6                          2336          
000028B6  6000 FF14               2337          BRA     SUBJMPA2
000028BA                          2338  
000028BA                          2339  *   Displays data register
000028BA                          2340  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
000028BA                          2341  SUBDN2
000028BA  43F9 00002E7C           2342          LEA     MDN,A1
000028C0  103C 000E               2343          MOVE.B  #14,D0
000028C4  4E4F                    2344          TRAP    #15
000028C6                          2345  
000028C6  1239 000030BA           2346          MOVE.B  bit4,D1
000028CC  103C 0003               2347          MOVE.B  #3,D0
000028D0  4E4F                    2348          TRAP    #15
000028D2                          2349          
000028D2  6000 FEF8               2350          BRA     SUBJMPA2
000028D6                          2351  
000028D6                          2352  *   Displays address register
000028D6                          2353  SUBAN
000028D6  43F9 00002E7E           2354          LEA     MAN,A1
000028DC  103C 000E               2355          MOVE.B  #14,D0
000028E0  4E4F                    2356          TRAP    #15
000028E2                          2357  
000028E2  1239 000030BA           2358          MOVE.B  bit4,D1
000028E8  103C 0003               2359          MOVE.B  #3,D0
000028EC  4E4F                    2360          TRAP    #15
000028EE                          2361          
000028EE  6000 FEDC               2362          BRA     SUBJMPA2
000028F2                          2363  
000028F2                          2364  *   Displays address register
000028F2                          2365  *   This is for SUBA, SUBA puts An into bit1
000028F2                          2366  SUBAN2
000028F2  43F9 00002E7E           2367          LEA     MAN,A1
000028F8  103C 000E               2368          MOVE.B  #14,D0
000028FC  4E4F                    2369          TRAP    #15
000028FE                          2370  
000028FE  1239 000030B7           2371          MOVE.B  bit1,D1
00002904  103C 0003               2372          MOVE.B  #3,D0
00002908  4E4F                    2373          TRAP    #15
0000290A                          2374          
0000290A  6000 FEC0               2375          BRA     SUBJMPA2
0000290E                          2376  
0000290E                          2377  
0000290E                          2378  *   Displays indirect address register
0000290E                          2379  SUBANID
0000290E  43F9 00002E57           2380          LEA     OPENBRA,A1
00002914  103C 000E               2381          MOVE.B  #14,D0
00002918  4E4F                    2382          TRAP    #15
0000291A                          2383  
0000291A  43F9 00002E7E           2384          LEA     MAN,A1
00002920  103C 000E               2385          MOVE.B  #14,D0
00002924  4E4F                    2386          TRAP    #15
00002926                          2387  
00002926  1239 000030BA           2388          MOVE.B  bit4,D1
0000292C  103C 0003               2389          MOVE.B  #3,D0
00002930  4E4F                    2390          TRAP    #15
00002932                          2391  
00002932  43F9 00002E59           2392          LEA     CLOSEBRA,A1
00002938  103C 000E               2393          MOVE.B  #14,D0
0000293C  4E4F                    2394          TRAP    #15
0000293E                          2395  
0000293E  6000 FE8C               2396          BRA     SUBJMPA2
00002942                          2397  
00002942                          2398  *   Displays indirect address register with post increment
00002942                          2399  SUBANIDPOS
00002942  43F9 00002E57           2400          LEA     OPENBRA,A1
00002948  103C 000E               2401          MOVE.B  #14,D0
0000294C  4E4F                    2402          TRAP    #15
0000294E                          2403  
0000294E  43F9 00002E7E           2404          LEA     MAN,A1
00002954  103C 000E               2405          MOVE.B  #14,D0
00002958  4E4F                    2406          TRAP    #15
0000295A                          2407  
0000295A  1239 000030BA           2408          MOVE.B  bit4,D1
00002960  103C 0003               2409          MOVE.B  #3,D0
00002964  4E4F                    2410          TRAP    #15
00002966                          2411  
00002966  43F9 00002E59           2412          LEA     CLOSEBRA,A1
0000296C  103C 000E               2413          MOVE.B  #14,D0
00002970  4E4F                    2414          TRAP    #15
00002972                          2415  
00002972  43F9 00002E5B           2416          LEA     POS,A1
00002978  103C 000E               2417          MOVE.B  #14,D0
0000297C  4E4F                    2418          TRAP    #15
0000297E                          2419  
0000297E  6000 FE4C               2420          BRA     SUBJMPA2
00002982                          2421  
00002982                          2422  *   Displays indirect address register with pre decrement
00002982                          2423  SUBANIDNEG
00002982  43F9 00002E5D           2424          LEA     NEG,A1
00002988  103C 000E               2425          MOVE.B  #14,D0
0000298C  4E4F                    2426          TRAP    #15
0000298E                          2427  
0000298E  43F9 00002E57           2428          LEA     OPENBRA,A1
00002994  103C 000E               2429          MOVE.B  #14,D0
00002998  4E4F                    2430          TRAP    #15
0000299A                          2431  
0000299A  43F9 00002E7E           2432          LEA     MAN,A1
000029A0  103C 000E               2433          MOVE.B  #14,D0
000029A4  4E4F                    2434          TRAP    #15
000029A6                          2435  
000029A6  1239 000030BA           2436          MOVE.B  bit4,D1
000029AC  103C 0003               2437          MOVE.B  #3,D0
000029B0  4E4F                    2438          TRAP    #15
000029B2                          2439  
000029B2  43F9 00002E59           2440          LEA     CLOSEBRA,A1
000029B8  103C 000E               2441          MOVE.B  #14,D0
000029BC  4E4F                    2442          TRAP    #15
000029BE                          2443  
000029BE  6000 FE0C               2444          BRA     SUBJMPA2
000029C2                          2445  
000029C2                          2446  
000029C2                          2447  
000029C2                          2448  
000029C2                          2449  ******************************************************************************************************
000029C2                          2450  * Displays the EA as hex numbers
000029C2                          2451  * 
000029C2                          2452  SUBEA
000029C2                          2453          *   This finds which mode to use
000029C2  0C39 0000 000030B9      2454          CMP.B   #$0,bit3
000029CA  6700 FEEE               2455          BEQ     SUBDN2
000029CE  0C39 0001 000030B9      2456          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
000029D6  6700 FEFE               2457          BEQ     SUBAN
000029DA  0C39 0002 000030B9      2458          CMP.B   #$2,bit3
000029E2  6700 FF2A               2459          BEQ     SUBANID
000029E6  0C39 0003 000030B9      2460          CMP.B   #$3,bit3
000029EE  6700 FF52               2461          BEQ     SUBANIDPOS
000029F2  0C39 0004 000030B9      2462          CMP.B   #$4,bit3
000029FA  6786                    2463          BEQ     SUBANIDNEG
000029FC  0C39 0005 000030B9      2464          CMP.B   #$5,bit3
00002A04  6700 0424               2465          BEQ     ERROR
00002A08  0C39 0006 000030B9      2466          CMP.B   #$6,bit3
00002A10  6700 0418               2467          BEQ     ERROR
00002A14  0C39 0007 000030B9      2468          CMP.B   #$7,bit3
00002A1C  6700 0002               2469          BEQ     SUBEAHEX
00002A20                          2470  
00002A20                          2471  SUBEAHEX
00002A20  0C39 0004 000030BA      2472          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002A28  6700 0086               2473          BEQ     SUBEAID
00002A2C                          2474  SUBEAID2
00002A2C                          2475          *   Else it will assume it is absolute addressing mode
00002A2C  43F9 00002E71           2476          LEA     MHEX,A1
00002A32  103C 000E               2477          MOVE.B  #14,D0
00002A36  4E4F                    2478          TRAP    #15
00002A38                          2479  
00002A38  0C39 0000 000030BA      2480          CMP.B   #$0,bit4
00002A40  6700 007E               2481          BEQ     SUBEAHEX1
00002A44  0C39 0001 000030BA      2482          CMP.B   #$1,bit4
00002A4C  6700 007A               2483          BEQ     SUBEAHEX2
00002A50                          2484  
00002A50  0C39 0000 000030B8      2485          CMP.B   #$0,bit2            * SUB byte displays as word
00002A58  6700 0066               2486          BEQ     SUBEAHEX1
00002A5C  0C39 0004 000030B8      2487          CMP.B   #$4,bit2            * SUB byte displays as word
00002A64  6700 005A               2488          BEQ     SUBEAHEX1
00002A68  0C39 0001 000030B8      2489          CMP.B   #$1,bit2            * SUB word
00002A70  6700 004E               2490          BEQ     SUBEAHEX1
00002A74  0C39 0005 000030B8      2491          CMP.B   #$5,bit2            * SUB word
00002A7C  6700 0042               2492          BEQ     SUBEAHEX1
00002A80  0C39 0003 000030B8      2493          CMP.B   #$3,bit2            * SUBA word
00002A88  6700 0036               2494          BEQ     SUBEAHEX1
00002A8C  0C39 0002 000030B8      2495          CMP.B   #$2,bit2            * SUB longword
00002A94  6700 0032               2496          BEQ     SUBEAHEX2
00002A98  0C39 0006 000030B8      2497          CMP.B   #$6,bit2            * SUB longword
00002AA0  6700 0026               2498          BEQ     SUBEAHEX2
00002AA4  0C39 0007 000030B8      2499          CMP.B   #$7,bit2            * SUBA longword
00002AAC  6700 001A               2500          BEQ     SUBEAHEX2
00002AB0                          2501  
00002AB0                          2502  SUBEAID
00002AB0  43F9 00002E5F           2503          LEA     HASH,A1
00002AB6  103C 000E               2504          MOVE.B  #14,D0
00002ABA  4E4F                    2505          TRAP    #15
00002ABC  6000 FF6E               2506          BRA     SUBEAID2
00002AC0                          2507  
00002AC0                          2508  SUBEAHEX1  
00002AC0                          2509          *absolute address word
00002AC0  1E3C 0002               2510          MOVE.B  #2,D7
00002AC4  6000 000A               2511          BRA     SUBEAHEX3
00002AC8                          2512  
00002AC8                          2513  SUBEAHEX2  *absolute address long
00002AC8  1E3C 0004               2514          MOVE.B  #4,D7
00002ACC  6000 0002               2515          BRA     SUBEAHEX3
00002AD0                          2516  
00002AD0                          2517  SUBEAHEX3
00002AD0  BE3C 0000               2518          CMP.B   #0,D7               Compares current addr to ending addr
00002AD4  6700 FCF6               2519          BEQ     SUBJMPA2            Branches to done if they are equal
00002AD8                          2520  
00002AD8                          2521      
00002AD8  141E                    2522          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002ADA                          2523          
00002ADA  1602                    2524          MOVE.B  D2,D3               Copies data at D2 to D3
00002ADC                          2525          *   this gets digit in 10's place
00002ADC  E80B                    2526          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002ADE                          2527          *   this gets digit in 1's place
00002ADE  E90A                    2528          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002AE0  E80A                    2529          LSR.B   #4,D2               Shifts back right into 1's place
00002AE2                          2530  
00002AE2                          2531          
00002AE2                          2532          *   D3 holds digit in 10's place
00002AE2                          2533          *   D2 holds digit in 1's place
00002AE2                          2534          
00002AE2  1203                    2535          MOVE.B  D3,D1               Displays digit in 10's place first
00002AE4                          2536  
00002AE4                          2537          *   converts digits 10+ into letters
00002AE4                          2538  
00002AE4  47F9 00002AF8           2539          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002AEA  B23C 0009               2540          CMP.B   #9,D1               Compares digit to 9
00002AEE  6E00 0164               2541          BGT     CONV                Print out letter representation if greater than 9
00002AF2                          2542  
00002AF2  103C 0003               2543          MOVE.B  #3,D0               Displays digit if it is less than A
00002AF6  4E4F                    2544          TRAP    #15
00002AF8                          2545          
00002AF8                          2546  SUBEAHEX4    
00002AF8  1202                    2547          MOVE.B  D2,D1               Displays digit in 1's place second
00002AFA                          2548  
00002AFA                          2549          *   converts digits 10+ into letters
00002AFA  47F9 00002B0E           2550          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002B00  B23C 0009               2551          CMP.B   #9,D1               Compares digit to 9
00002B04  6E00 014E               2552          BGT     CONV                Print out letter representation if greater than 9
00002B08                          2553          
00002B08  103C 0003               2554          MOVE.B  #3,D0               Displays digit if it is less than A
00002B0C  4E4F                    2555          TRAP    #15
00002B0E                          2556          
00002B0E                          2557  SUBEAHEX5         
00002B0E                          2558  * Display counter -- creates new line every 8 bytes
00002B0E                          2559          * D7 is used as counter
00002B0E                          2560          
00002B0E  5307                    2561          SUB.B   #1,D7                       
00002B10  60BE                    2562          BRA     SUBEAHEX3              Loops back to display next address
00002B12                          2563  
00002B12                          2564  ***   display EA ends here
00002B12                          2565  
00002B12                          2566  ******************************************************************************************************
00002B12                          2567  * Displays the EA as hex numbers
00002B12                          2568  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002B12                          2569  * OUTPUT: Displays size of EA reading from A6
00002B12                          2570  * Jumps to location stored in A2 when finished
00002B12                          2571  DISPEA
00002B12  43F9 00002E71           2572          LEA     MHEX,A1
00002B18  103C 000E               2573          MOVE.B  #14,D0
00002B1C  4E4F                    2574          TRAP    #15
00002B1E                          2575  
00002B1E  B83C 0002               2576          CMP.B   #$2,D4              Branches to longword display if size is 2
00002B22  6700 000A               2577          BEQ     DISPEALONG          Else it will assume word length
00002B26                          2578  
00002B26                          2579  DISPEAWORD
00002B26                          2580          *absolute address word
00002B26  1E3C 0002               2581          MOVE.B  #2,D7
00002B2A  6000 000A               2582          BRA     DISPEA3
00002B2E                          2583   
00002B2E                          2584  DISPEALONG
00002B2E                          2585          *absolute address long
00002B2E  1E3C 0004               2586          MOVE.B  #4,D7
00002B32  6000 0002               2587          BRA     DISPEA3
00002B36                          2588  
00002B36                          2589  DISPEA3
00002B36  BE3C 0000               2590          CMP.B   #0,D7               Compares current addr to ending addr
00002B3A  6700 FC90               2591          BEQ     SUBJMPA2            Branches to done if they are equal
00002B3E                          2592  
00002B3E                          2593      
00002B3E  141E                    2594          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002B40                          2595          
00002B40  1602                    2596          MOVE.B  D2,D3               Copies data at D2 to D3
00002B42                          2597          *   this gets digit in 10's place
00002B42  E80B                    2598          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002B44                          2599          *   this gets digit in 1's place
00002B44  E90A                    2600          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002B46  E80A                    2601          LSR.B   #4,D2               Shifts back right into 1's place
00002B48                          2602  
00002B48                          2603          
00002B48                          2604          *   D3 holds digit in 10's place
00002B48                          2605          *   D2 holds digit in 1's place
00002B48                          2606          
00002B48  1203                    2607          MOVE.B  D3,D1               Displays digit in 10's place first
00002B4A                          2608  
00002B4A                          2609          *   converts digits 10+ into letters
00002B4A                          2610  
00002B4A  47F9 00002B5E           2611          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002B50  B23C 0009               2612          CMP.B   #9,D1               Compares digit to 9
00002B54  6E00 00FE               2613          BGT     CONV                Print out letter representation if greater than 9
00002B58                          2614  
00002B58  103C 0003               2615          MOVE.B  #3,D0               Displays digit if it is less than A
00002B5C  4E4F                    2616          TRAP    #15
00002B5E                          2617    
00002B5E                          2618  DISPEA4
00002B5E  1202                    2619          MOVE.B  D2,D1               Displays digit in 1's place second
00002B60                          2620  
00002B60                          2621          *   converts digits 10+ into letters
00002B60  47F9 00002B74           2622          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002B66  B23C 0009               2623          CMP.B   #9,D1               Compares digit to 9
00002B6A  6E00 00E8               2624          BGT     CONV                Print out letter representation if greater than 9
00002B6E                          2625          
00002B6E  103C 0003               2626          MOVE.B  #3,D0               Displays digit if it is less than A
00002B72  4E4F                    2627          TRAP    #15
00002B74                          2628        
00002B74                          2629  DISPEA5
00002B74                          2630  * Display counter -- creates new line every 8 bytes
00002B74                          2631          * D7 is used as counter
00002B74                          2632          
00002B74  5307                    2633          SUB.B   #1,D7                       
00002B76  60BE                    2634          BRA     DISPEA3              Loops back to display next address
00002B78                          2635  
00002B78                          2636  ***   display EA ends here
00002B78                          2637  
00002B78                          2638  *******************************************************************
00002B78                          2639  * Clears all of the data registers
00002B78                          2640  CLRDN
00002B78  4280                    2641          CLR.L   D0
00002B7A  4281                    2642          CLR.L   D1
00002B7C  4282                    2643          CLR.L   D2
00002B7E  4283                    2644          CLR.L   D3
00002B80  4284                    2645          CLR.L   D4
00002B82  4285                    2646          CLR.L   D5
00002B84  4286                    2647          CLR.L   D6
00002B86  4287                    2648          CLR.L   D7
00002B88  4E75                    2649          RTS
00002B8A                          2650  
00002B8A                          2651  ********************************************************************
00002B8A                          2652  * Invalid op-code handling
00002B8A                          2653  * Displays DATA YYYY
00002B8A                          2654  *  YYYY represents the op-code that failed
00002B8A                          2655  INVOPCODE
00002B8A  DE1E                    2656          ADD.B   (A6)+,D7
00002B8C                          2657  
00002B8C                          2658  INVOP
00002B8C  43F9 00002EE0           2659          LEA     MDATA,A1
00002B92  103C 000E               2660          MOVE.B  #14,D0
00002B96  4E4F                    2661          TRAP    #15
00002B98  43F9 00002E51           2662          LEA     TAB,A1
00002B9E  103C 000E               2663          MOVE.B  #14,D0
00002BA2  4E4F                    2664          TRAP    #15
00002BA4  43F9 00002E71           2665          LEA     MHEX,A1
00002BAA  103C 000E               2666          MOVE.B  #14,D0
00002BAE  4E4F                    2667          TRAP    #15
00002BB0                          2668          
00002BB0  1C3C 0002               2669          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002BB4                          2670          
00002BB4  3407                    2671          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002BB6  E04A                    2672          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002BB8  6000 0004               2673          BRA     INVOP2              Skips the second part to do later
00002BBC                          2674  
00002BBC                          2675  INVOP1
00002BBC  1407                    2676          MOVE.B  D7,D2
00002BBE                          2677  INVOP2
00002BBE  1602                    2678          MOVE.B  D2,D3               Copies data at D2 to D3
00002BC0                          2679          *   this gets digit in 10's place
00002BC0  E80B                    2680          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002BC2                          2681          *   this gets digit in 1's place
00002BC2  E90A                    2682          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002BC4  E80A                    2683          LSR.B   #4,D2               Shifts back right into 1's place
00002BC6                          2684  
00002BC6                          2685          
00002BC6                          2686          *   D3 holds digit in 10's place
00002BC6                          2687          *   D2 holds digit in 1's place
00002BC6                          2688          
00002BC6  1203                    2689          MOVE.B  D3,D1               Displays digit in 10's place first
00002BC8                          2690  
00002BC8                          2691          *   converts digits 10+ into letters
00002BC8                          2692  
00002BC8  47F9 00002BDC           2693          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002BCE  B23C 0009               2694          CMP.B   #9,D1               Compares digit to 9
00002BD2  6E00 0080               2695          BGT     CONV                Print out letter representation if greater than 9
00002BD6                          2696  
00002BD6  103C 0003               2697          MOVE.B  #3,D0               Displays digit if it is less than A
00002BDA  4E4F                    2698          TRAP    #15
00002BDC                          2699          
00002BDC                          2700  INVOP3   
00002BDC  1202                    2701          MOVE.B  D2,D1               Displays digit in 1's place second
00002BDE                          2702  
00002BDE                          2703          *   converts digits 10+ into letters
00002BDE  47F9 00002BF2           2704          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002BE4  B23C 0009               2705          CMP.B   #9,D1               Compares digit to 9
00002BE8  6E00 006A               2706          BGT     CONV                Print out letter representation if greater than 9
00002BEC                          2707          
00002BEC  103C 0003               2708          MOVE.B  #3,D0               Displays digit if it is less than A
00002BF0  4E4F                    2709          TRAP    #15
00002BF2                          2710          
00002BF2                          2711  INVOP4
00002BF2                          2712  * Display counter -- creates new line every 8 bytes
00002BF2                          2713          * D6 is used as counter
00002BF2                          2714          
00002BF2  5306                    2715          SUB.B   #1,D6
00002BF4  BC3C 0000               2716          CMP.B   #0,D6
00002BF8  6700 0004               2717          BEQ     ENDNEWLINE
00002BFC  60BE                    2718          BRA     INVOP1              Loops back to display next address
00002BFE                          2719  
00002BFE                          2720  
00002BFE                          2721  ******************************************************************************************************
00002BFE                          2722  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002BFE                          2723  ENDNEWLINE
00002BFE  43F9 00002E4E           2724          LEA     NEWLINE,A1          Creates a new line in output window
00002C04  103C 000E               2725          MOVE.B  #14,D0
00002C08  4E4F                    2726          TRAP    #15
00002C0A                          2727  
00002C0A  5339 000030AD           2728          SUB.B   #1,dispcount
00002C10  0C39 0000 000030AD      2729          CMP.B   #0,dispcount               Checks if display counter is zero
00002C18  6600 E4C6               2730          BNE     NEWADDR
00002C1C                          2731  
00002C1C                          2732  * Asks user to press enter to continue
00002C1C                          2733  * Resets counter
00002C1C  43F9 00002E4E           2734          LEA     NEWLINE,A1          Creates a new line in output window
00002C22  103C 000E               2735          MOVE.B  #14,D0
00002C26  4E4F                    2736          TRAP    #15
00002C28                          2737          
00002C28  43F9 00003091           2738          LEA     MCONT,A1            Asks user to press enter to continue
00002C2E  103C 000E               2739          MOVE.B  #14,D0
00002C32  4E4F                    2740          TRAP    #15
00002C34                          2741  
00002C34  103C 0004               2742          MOVE.B  #4,D0               Takes in user input
00002C38  4E4F                    2743          TRAP    #15
00002C3A  4281                    2744          CLR.L   D1                  Clears D1 incase user decides to input something
00002C3C                          2745  
00002C3C  43F9 00002E4E           2746          LEA     NEWLINE,A1          Creates a new line in output window
00002C42  103C 000E               2747          MOVE.B  #14,D0
00002C46  4E4F                    2748          TRAP    #15
00002C48                          2749  
00002C48  13FC 001E 000030AD      2750          MOVE.B  #dispnum,dispcount  Resets display counter
00002C50  6000 E48E               2751          BRA     NEWADDR             Loops back to beginning
00002C54                          2752  
00002C54                          2753  
00002C54                          2754  ******************************************************************************************************
00002C54                          2755  * Converts decimal number into hex and displays it
00002C54                          2756  *   converts number 10-15 to A-F
00002C54                          2757  *   INPUT: decimal number in D1
00002C54                          2758  *   OUTPUT: HEX number to output
00002C54  B23C 000A               2759  CONV    CMP.B   #10,D1              Displays 10 as A
00002C58  6700 002A               2760          BEQ     HEXA
00002C5C  B23C 000B               2761          CMP.B   #11,D1              Displays 11 as B
00002C60  6700 002C               2762          BEQ     HEXB
00002C64  B23C 000C               2763          CMP.B   #12,D1              Displays 12 as C
00002C68  6700 002E               2764          BEQ     HEXC
00002C6C  B23C 000D               2765          CMP.B   #13,D1              Displays 13 as D
00002C70  6700 0030               2766          BEQ     HEXD
00002C74  B23C 000E               2767          CMP.B   #14,D1              Displays 14 as E
00002C78  6700 0032               2768          BEQ     HEXE
00002C7C  B23C 000F               2769          CMP.B   #15,D1              Displays 15 as F
00002C80  6700 0034               2770          BEQ     HEXF
00002C84                          2771  
00002C84  43F9 00002E63           2772  HEXA    LEA     DISPA,A1            Loads A character
00002C8A  6000 0034               2773          BRA     PRINT
00002C8E                          2774    
00002C8E  43F9 00002E65           2775  HEXB    LEA     DISPB,A1            Loads B character
00002C94  6000 002A               2776          BRA     PRINT
00002C98                          2777  
00002C98  43F9 00002E67           2778  HEXC    LEA     DISPC,A1            Loads C character
00002C9E  6000 0020               2779          BRA     PRINT
00002CA2                          2780  
00002CA2  43F9 00002E69           2781  HEXD    LEA     DISPD,A1            Loads D character
00002CA8  6000 0016               2782          BRA     PRINT
00002CAC                          2783  
00002CAC  43F9 00002E6B           2784  HEXE    LEA     DISPE,A1            Loads E character
00002CB2  6000 000C               2785          BRA     PRINT
00002CB6                          2786  
00002CB6  43F9 00002E6D           2787  HEXF    LEA     DISPF,A1            Loads F character
00002CBC  6000 0002               2788          BRA     PRINT
00002CC0                          2789  
00002CC0  103C 000E               2790  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002CC4  4E4F                    2791          TRAP    #15                 Prints out message in A1
00002CC6  4ED3                    2792          JMP     (A3)
00002CC8                          2793  
00002CC8                          2794  ******************************************************************************
00002CC8                          2795  * Converts decimal input to hex
00002CC8                          2796  * INPUT: Decimal inside D2
00002CC8                          2797  * OUTPUT: HEX into D3
00002CC8                          2798  *   Converts number in decimal to hex        
00002CC8                          2799  DEC2HEX
00002CC8  B43C 0030               2800          CMP.B   #$30,D2             0
00002CCC  6700 00B0               2801          BEQ     D2HZERO
00002CD0  B43C 0031               2802          CMP.B   #$31,D2             1
00002CD4  6700 00AE               2803          BEQ     D2HONE
00002CD8  B43C 0032               2804          CMP.B   #$32,D2             2
00002CDC  6700 00AC               2805          BEQ     D2HTWO
00002CE0  B43C 0033               2806          CMP.B   #$33,D2             3
00002CE4  6700 00AA               2807          BEQ     D2HTHREE
00002CE8  B43C 0034               2808          CMP.B   #$34,D2             4
00002CEC  6700 00A8               2809          BEQ     D2HFOUR
00002CF0  B43C 0035               2810          CMP.B   #$35,D2             5
00002CF4  6700 00A6               2811          BEQ     D2HFIVE
00002CF8  B43C 0036               2812          CMP.B   #$36,D2             6
00002CFC  6700 00A4               2813          BEQ     D2HSIX
00002D00  B43C 0037               2814          CMP.B   #$37,D2             7
00002D04  6700 00A2               2815          BEQ     D2HSEVEN
00002D08  B43C 0038               2816          CMP.B   #$38,D2             8
00002D0C  6700 00A0               2817          BEQ     D2HEIGHT
00002D10  B43C 0039               2818          CMP.B   #$39,D2             9
00002D14  6700 009E               2819          BEQ     D2HNINE
00002D18  B43C 0041               2820          CMP.B   #$41,D2             A
00002D1C  6700 009C               2821          BEQ     D2HHEXA
00002D20  B43C 0042               2822          CMP.B   #$42,D2             B
00002D24  6700 009A               2823          BEQ     D2HHEXB
00002D28  B43C 0043               2824          CMP.B   #$43,D2             C
00002D2C  6700 0098               2825          BEQ     D2HHEXC
00002D30  B43C 0044               2826          CMP.B   #$44,D2             D
00002D34  6700 0096               2827          BEQ     D2HHEXD
00002D38  B43C 0045               2828          CMP.B   #$45,D2             E
00002D3C  6700 0094               2829          BEQ     D2HHEXE
00002D40  B43C 0046               2830          CMP.B   #$46,D2             F
00002D44  6700 0092               2831          BEQ     D2HHEXF
00002D48  B43C 0061               2832          CMP.B   #$61,D2             A
00002D4C  6700 006C               2833          BEQ     D2HHEXA
00002D50  B43C 0062               2834          CMP.B   #$62,D2             B
00002D54  6700 006A               2835          BEQ     D2HHEXB
00002D58  B43C 0063               2836          CMP.B   #$63,D2             C
00002D5C  6700 0068               2837          BEQ     D2HHEXC
00002D60  B43C 0064               2838          CMP.B   #$64,D2             D
00002D64  6700 0066               2839          BEQ     D2HHEXD
00002D68  B43C 0065               2840          CMP.B   #$65,D2             E
00002D6C  6700 0064               2841          BEQ     D2HHEXE
00002D70  B43C 0066               2842          CMP.B   #$66,D2             F
00002D74  6700 0062               2843          BEQ     D2HHEXF
00002D78                          2844  
00002D78                          2845          * User entered a non-hex character
00002D78                          2846          * Moves F to D1 to indicate error before returning
00002D78  123C 000F               2847          MOVE.B  #$F,D1
00002D7C  4E75                    2848          RTS
00002D7E                          2849  
00002D7E                          2850  *   Moves the appropiate hex number to D3
00002D7E  163C 0000               2851  D2HZERO MOVE.B  #$0,D3
00002D82  4E75                    2852          RTS
00002D84                          2853  
00002D84                          2854  D2HONE
00002D84  163C 0001               2855          MOVE.B  #$1,D3
00002D88  4E75                    2856          RTS
00002D8A                          2857  
00002D8A                          2858  D2HTWO
00002D8A  163C 0002               2859          MOVE.B  #$2,D3
00002D8E  4E75                    2860          RTS
00002D90                          2861  
00002D90                          2862  D2HTHREE
00002D90  163C 0003               2863          MOVE.B  #$3,D3
00002D94  4E75                    2864          RTS
00002D96                          2865  
00002D96                          2866  D2HFOUR
00002D96  163C 0004               2867          MOVE.B  #$4,D3
00002D9A  4E75                    2868          RTS
00002D9C                          2869  
00002D9C                          2870  D2HFIVE
00002D9C  163C 0005               2871          MOVE.B  #$5,D3
00002DA0  4E75                    2872          RTS
00002DA2                          2873  
00002DA2                          2874  D2HSIX
00002DA2  163C 0006               2875          MOVE.B  #$6,D3
00002DA6  4E75                    2876          RTS
00002DA8                          2877  
00002DA8                          2878  D2HSEVEN
00002DA8  163C 0007               2879          MOVE.B  #$7,D3
00002DAC  4E75                    2880          RTS
00002DAE                          2881  
00002DAE                          2882  D2HEIGHT
00002DAE  163C 0008               2883          MOVE.B  #$8,D3
00002DB2  4E75                    2884          RTS
00002DB4                          2885  
00002DB4                          2886  D2HNINE
00002DB4  163C 0009               2887          MOVE.B  #$9,D3
00002DB8  4E75                    2888          RTS
00002DBA                          2889  
00002DBA                          2890  D2HHEXA
00002DBA  163C 000A               2891          MOVE.B  #$A,D3
00002DBE  4E75                    2892          RTS
00002DC0                          2893  
00002DC0                          2894  D2HHEXB
00002DC0  163C 000B               2895          MOVE.B  #$B,D3
00002DC4  4E75                    2896          RTS
00002DC6                          2897  
00002DC6                          2898  D2HHEXC
00002DC6  163C 000C               2899          MOVE.B  #$C,D3
00002DCA  4E75                    2900          RTS
00002DCC                          2901  
00002DCC                          2902  D2HHEXD
00002DCC  163C 000D               2903          MOVE.B  #$D,D3
00002DD0  4E75                    2904          RTS
00002DD2                          2905  
00002DD2                          2906  D2HHEXE
00002DD2  163C 000E               2907          MOVE.B  #$E,D3
00002DD6  4E75                    2908          RTS
00002DD8                          2909  
00002DD8                          2910  D2HHEXF
00002DD8  163C 000F               2911          MOVE.B  #$F,D3
00002DDC  4E75                    2912          RTS
00002DDE                          2913  
00002DDE                          2914  *************************************************************************************************
00002DDE                          2915  ASK4REPEAT
00002DDE  43F9 00002E4E           2916          LEA     NEWLINE,A1          Creates a new line in output window
00002DE4  103C 000E               2917          MOVE.B  #14,D0
00002DE8  4E4F                    2918          TRAP    #15
00002DEA                          2919  ASK4REPEAT2
00002DEA  43F9 00002F98           2920          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00002DF0  103C 000E               2921          MOVE.B  #14,D0
00002DF4  4E4F                    2922          TRAP    #15
00002DF6                          2923  
00002DF6  43F9 000030BA           2924          LEA     bit4,A1             User has to enter Y to start over
00002DFC  103C 0002               2925          MOVE.B  #2,D0               N to exit
00002E00  4E4F                    2926          TRAP    #15
00002E02                          2927  
00002E02  1239 000030BA           2928          MOVE.B  bit4,D1             User input was stored in bit4
00002E08  B23C 0059               2929          CMP.B   #$59,D1             Char Y
00002E0C  6700 E1F8               2930          BEQ     IOSTART
00002E10  B23C 0079               2931          CMP.B   #$79,D1             Char y
00002E14  6700 E1F0               2932          BEQ     IOSTART
00002E18  B23C 004E               2933          CMP.B   #$4E,D1             Char N
00002E1C  6700 001C               2934          BEQ     DONE
00002E20  B23C 006E               2935          CMP.B   #$6E,D1             Char n
00002E24  6700 0014               2936          BEQ     DONE
00002E28  60C0                    2937          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00002E2A                          2938  
00002E2A                          2939  
00002E2A                          2940  **************************************************************************************************
00002E2A  43F9 0000305F           2941  ERROR   LEA     MERROR,A1
00002E30  103C 000E               2942          MOVE.B  #14,D0
00002E34  4E4F                    2943          TRAP    #15
00002E36  6000 000E               2944          BRA     EXIT
00002E3A                          2945  
00002E3A  43F9 00003076           2946  DONE    LEA     MDONE,A1
00002E40  103C 000E               2947          MOVE.B  #14,D0
00002E44  4E4F                    2948          TRAP    #15
00002E46                          2949  
00002E46  103C 0009               2950  EXIT    MOVE.B  #9,D0
00002E4A  4E4F                    2951          TRAP    #15
00002E4C                          2952  
00002E4C                          2953  ************************************ Output stuff **************************************
00002E4C                          2954  * Stuff for output
00002E4C                          2955  
00002E4C  =0000000D               2956  CR      EQU     $0D
00002E4C  =0000000A               2957  LF      EQU     $0A
00002E4C                          2958  
00002E4C= 20 00                   2959  SPACE       DC.B    ' ',0
00002E4E= 0D 0A 00                2960  NEWLINE     DC.B    '',CR,LF,0
00002E51= 20 20 20 00             2961  TAB         DC.B    '   ',0
00002E55= 2C 00                   2962  COMMA       DC.B    ',',0
00002E57= 28 00                   2963  OPENBRA     DC.B    '(',0
00002E59= 29 00                   2964  CLOSEBRA    DC.B    ')',0
00002E5B= 2B 00                   2965  POS         DC.B    '+',0
00002E5D= 2D 00                   2966  NEG         DC.B    '-',0
00002E5F= 23 00                   2967  HASH        DC.B    '#',0
00002E61= 2F 00                   2968  SLASH       DC.B    '/',0
00002E63                          2969  
00002E63                          2970  
00002E63= 41 00                   2971  DISPA       DC.B    'A',0
00002E65= 42 00                   2972  DISPB       DC.B    'B',0
00002E67= 43 00                   2973  DISPC       DC.B    'C',0
00002E69= 44 00                   2974  DISPD       DC.B    'D',0
00002E6B= 45 00                   2975  DISPE       DC.B    'E',0
00002E6D= 46 00                   2976  DISPF       DC.B    'F',0
00002E6F                          2977  
00002E6F= 2E 00                   2978  MDOT        DC.B    '.',0
00002E71= 24 00                   2979  MHEX        DC.B    '$',0
00002E73= 42 20 00                2980  MBYTE       DC.B    'B ',0
00002E76= 57 20 00                2981  MWORD       DC.B    'W ',0
00002E79= 4C 20 00                2982  MLONG       DC.B    'L ',0
00002E7C= 44 00                   2983  MDN         DC.B    'D',0
00002E7E= 41 00                   2984  MAN         DC.B    'A',0
00002E80                          2985  
00002E80= 4A 53 52 00             2986  MJSR        DC.B    'JSR',0
00002E84= 42 54 53 54 00          2987  MBTST       DC.B    'BTST',0
00002E89= 52 4F 4C 00             2988  MROL        DC.B    'ROL',0
00002E8D= 52 4F 52 00             2989  MROR        DC.B    'ROR',0
00002E91= 4C 53 4C 00             2990  MLSL        DC.B    'LSL',0
00002E95= 4C 53 52 00             2991  MLSR        DC.B    'LSR',0
00002E99= 4E 45 47 2E 00          2992  MMNEGW      DC.B    'NEG.',0
00002E9E= 44 49 56 53 2E 57 00    2993  MMDIVSW     DC.B    'DIVS.W',0
00002EA5= 4D 55 4C 53 2E 57 00    2994  MMULSW      DC.B    'MULS.W',0
00002EAC= 4D 4F 56 45 2E 42 00    2995  MMOVEB      DC.B    'MOVE.B',0
00002EB3= 4D 4F 56 45 2E 57 00    2996  MMOVEW      DC.B    'MOVE.W',0
00002EBA= 4D 4F 56 45 2E 4C 00    2997  MMOVEL      DC.B    'MOVE.L',0
00002EC1= 4D 4F 56 45 41 2E ...   2998  MMOVEAW     DC.B    'MOVEA.W',0
00002EC9= 4D 4F 56 45 41 2E ...   2999  MMOVEAL     DC.B    'MOVEA.L',0
00002ED1= 4D 4F 56 45 4D 2E 00    3000  MMOVEM      DC.B    'MOVEM.',0
00002ED8                          3001  
00002ED8= 41 53 4C 00             3002  MASL        DC.B    'ASL',0
00002EDC= 41 53 52 00             3003  MASR        DC.B    'ASR',0
00002EE0= 44 41 54 41 00          3004  MDATA       DC.B    'DATA',0
00002EE5= 53 55 42 2E 00          3005  MSUB        DC.B    'SUB.',0
00002EEA= 53 55 42 41 2E 00       3006  MSUBA       DC.B    'SUBA.',0
00002EF0= 41 4E 44 2E 00          3007  MAND        DC.B    'AND.',0
00002EF5= 41 44 44 2E 00          3008  MADD        DC.B    'ADD.',0
00002EFA= 53 55 42 49 2E 00       3009  MSUBI       DC.B    'SUBI.',0
00002F00= 4F 52 49 2E 00          3010  MORI        DC.B    'ORI.',0
00002F05= 4E 4F 54 2E 00          3011  MNOT        DC.B    'NOT.',0
00002F0A= 4D 55 4C 53 2E 00       3012  MMUL        DC.B    'MULS.',0
00002F10= 4E 45 47 00             3013  MNEG        DC.B    'NEG',0
00002F14= 43 4D 50 2E 00          3014  MCMP        DC.B    'CMP.',0
00002F19= 43 4D 50 49 2E 00       3015  MCMPI       DC.B    'CMPI.',0
00002F1F= 43 4D 50 41 2E 00       3016  MCMPA       DC.B    'CMPA.',0
00002F25= 45 4F 52 2E 00          3017  MEOR        DC.B    'EOR.',0
00002F2A= 45 4F 52 49 2E 00       3018  MEORI       DC.B    'EORI.',0
00002F30= 41 44 44 41 2E 00       3019  MADDA       DC.B    'ADDA.',0
00002F36                          3020  
00002F36= 42 45 51 00             3021  MBEQ        DC.B    'BEQ',0
00002F3A= 42 4E 45 00             3022  MBNE        DC.B    'BNE',0
00002F3E= 42 4C 54 00             3023  MBLT        DC.B    'BLT',0
00002F42= 42 48 49 00             3024  MBHI        DC.B    'BHI',0
00002F46= 42 52 41 00             3025  MBRA        DC.B    'BRA',0
00002F4A= 4E 4F 50 00             3026  MNOP        DC.B    'NOP',0
00002F4E= 52 54 53 00             3027  MRTS        DC.B    'RTS',0
00002F52                          3028  
00002F52= 4C 65 6D 6D 65 20 ...   3029  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002F75= 47 69 6D 6D 65 20 ...   3030  MADDR2      DC.B    'Gimme that end address too homie: ',0
00002F98= 54 72 79 6E 61 20 ...   3031  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
00002FB8= 45 6E 64 20 61 64 ...   3032  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00002FF0= 41 64 64 72 65 73 ...   3033  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
00003023= 52 65 2D 65 6E 74 ...   3034  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
0000303F= 41 64 64 72 65 73 ...   3035  MIOERR4     DC.B    'Address must be an even number.',0
0000305F= 45 52 52 4F 52 3A ...   3036  MERROR      DC.B    'ERROR: Something broke',0
00003076= 43 4F 4D 50 4C 45 ...   3037  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00003091= 2A 2A 50 52 45 53 ...   3038  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
000030AD                          3039  
000030AD                          3040  
000030AD                          3041  ********************************** MEMORY STORAGE **********************************************
000030AD                          3042  * Stores memory locations at the end of the program
000030AD                          3043  * How DS works: Give it a variable name.
000030AD                          3044  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
000030AD                          3045  *   Last is the number of storage you want. 
000030AD                          3046  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
000030AD                          3047  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
000030AD                          3048  *            
000030AD                          3049  
000030AD                          3050  dispcount   DS.B    1           Used to count display lines
000030AE                          3051  
000030AE                          3052  startaddr   DS.L    1
000030B2                          3053  endaddr     DS.L    1
000030B6                          3054  
000030B6                          3055  bit0        DS.B    1           SEE NOTE UP TOP
000030B7                          3056  bit1        DS.B    1           SEE NOTE UP TOP
000030B8                          3057  bit2        DS.B    1           SEE NOTE UP TOP
000030B9                          3058  bit3        DS.B    1           SEE NOTE UP TOP
000030BA                          3059  bit4        DS.B    1           SEE NOTE UP TOP
000030BB                          3060  
000030BB                          3061  
000030BB                          3062      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1508
ADDIMD0             1538
ADDIMD1             1546
ADDIMD4             1554
ADDIMDDES           15C2
ADDIMDDES0          15E6
ADDIMDDES1          15F4
ADDIMDDES4          1602
ADDR1               7000
ADDR2               726C
ASK4REPEAT          2DDE
ASK4REPEAT2         2DEA
ASLRMEMH            1D22
BCC                 1FC4
BCCBEQ              2040
BCCBHI              205E
BCCBLT              2054
BCCBNE              204A
BCCBRA              2036
BCCDISP             200A
BCCLONG             1FF2
BCCNEXT             1FFA
BCCPRINT            2068
BCCWORD             1FEA
BIT0                30B6
BIT1                30B7
BIT2                30B8
BIT3                30B9
BIT4                30BA
BTST                1264
CLOSEBRA            2E59
CLRDN               2B78
CODE                11B4
COMMA               2E55
CONV                2C54
CR                  D
D2HEIGHT            2DAE
D2HFIVE             2D9C
D2HFOUR             2D96
D2HHEXA             2DBA
D2HHEXB             2DC0
D2HHEXC             2DC6
D2HHEXD             2DCC
D2HHEXE             2DD2
D2HHEXF             2DD8
D2HNINE             2DB4
D2HONE              2D84
D2HSEVEN            2DA8
D2HSIX              2DA2
D2HTHREE            2D90
D2HTWO              2D8A
D2HZERO             2D7E
DEC2HEX             2CC8
DISPA               2E63
DISPADDR            10B6
DISPADDR1           10FE
DISPADDR2           1100
DISPADDR3           1134
DISPADDR4           114A
DISPADDR5           1160
DISPADDR6           1176
DISPADDREND         1180
DISPADDRSTART       10F2
DISPB               2E65
DISPC               2E67
DISPCOUNT           30AD
DISPD               2E69
DISPE               2E6B
DISPEA              2B12
DISPEA3             2B36
DISPEA4             2B5E
DISPEA5             2B74
DISPEALONG          2B2E
DISPEAWORD          2B26
DISPF               2E6D
DISPNUM             1E
DIVSW               1ABA
DONE                2E3A
ENDADDR             30B2
ENDNEWLINE          2BFE
ENDNLINC            1A2C
ERROR               2E2A
EXIT                2E46
HANDLEDES           156A
HASH                2E5F
HEXA                2C84
HEXB                2C8E
HEXC                2C98
HEXD                2CA2
HEXE                2CAC
HEXF                2CB6
IMD                 2078
IMD2                20A0
IMD3                20A8
IMD4                20B4
IMDBYTE             214E
IMDEA               2176
IMDEA2              2192
IMDEA3              21A8
IMDLONG             216C
IMDPRINT            20EE
IMDPRINTCMPI        213C
IMDPRINTEND         2146
IMDPRINTEORI        2132
IMDPRINTORI         211E
IMDPRINTSUBI        2128
IMDWORD             215E
INVOP               2B8C
INVOP1              2BBC
INVOP2              2BBE
INVOP3              2BDC
INVOP4              2BF2
INVOPCODE           2B8A
IOERROR1            1078
IOERROR2            1086
IOERROR3            1096
IOERROR4            10A6
IOGETADDR           102E
IOLOOP              1054
IOSTART             1006
IOSTARTLOOP         104E
JSR                 1218
LF                  A
LSLR                1C9E
LSLRDESD            191C
LSLRMEM             1E76
LSLRMEMH            1DA6
LSLRSRCD            18F4
MADD                2EF5
MADDA               2F30
MADDR1              2F52
MADDR2              2F75
MAN                 2E7E
MAND                2EF0
MASL                2ED8
MASR                2EDC
MBEQ                2F36
MBHI                2F42
MBLT                2F3E
MBNE                2F3A
MBRA                2F46
MBTST               2E84
MBYTE               2E73
MCMP                2F14
MCMPA               2F1F
MCMPI               2F19
MCONT               3091
MDATA               2EE0
MDN                 2E7C
MDONE               3076
MDOT                2E6F
MEOR                2F25
MEORI               2F2A
MERROR              305F
MHEX                2E71
MIOERR1             2FB8
MIOERR2             2FF0
MIOERR3             3023
MIOERR4             303F
MISC                21AC
MISCBIT2            21F4
MISCBIT3            2200
MISCBYTE            229E
MISCCHECKM          2214
MISCEA              22CC
MISCEA2             22E8
MISCLONG            22C0
MISCMMPOSTINC       2414
MISCMMPOSTINC2      241E
MISCMMPOSTINC3      2454
MISCMMPOSTINCPRINT  2458
MISCMMPOSTINCPRINT2  246C
MISCMMPOSTINCPRINT3  2478
MISCMMPREDEC        23A6
MISCMMPREDEC2       23D0
MISCMMPREDEC3       23E6
MISCMMPREDECPRINT   23EA
MISCMMPREDECPRINT2  23FE
MISCMMPREDECPRINT3  240A
MISCMMPRINTNUM      2482
MISCMMPRINTSIZE     238E
MISCMMSIZEL         2388
MISCMMSLASH         2490
MISCMOVEM           2320
MISCMOVEM2          2330
MISCMOVEM3          2340
MISCMOVEM4          2352
MISCNOP             2234
MISCNOT             2254
MISCNOT2            225C
MISCNOT3            2264
MISCNOT4            2270
MISCPRINT           22EC
MISCPRINTEND        2318
MISCPRINTNEG        230E
MISCPRINTNOT        2304
MISCRTS             2244
MISCWORD            22B0
MJSR                2E80
MLONG               2E79
MLSL                2E91
MLSR                2E95
MMDIVSW             2E9E
MMNEGW              2E99
MMOVEAL             2EC9
MMOVEAW             2EC1
MMOVEB              2EAC
MMOVEL              2EBA
MMOVEM              2ED1
MMOVEW              2EB3
MMUL                2F0A
MMULSW              2EA5
MNEG                2F10
MNOP                2F4A
MNOT                2F05
MORI                2F00
MOVB                1482
MOVBDN1             1868
MOVBDN2             1A08
MOVEAL              142E
MOVEAN1             1618
MOVEAN2             1938
MOVEAW              134E
MOVEIAN1            168C
MOVEIAND1           17C8
MOVEIANI1           1720
MOVIAN2             1954
MOVIAND2            19C8
MOVIANI2            1988
MOVL                13A2
MOVW                12C2
MREPEAT             2F98
MROL                2E89
MROR                2E8D
MRTS                2F4E
MSUB                2EE5
MSUBA               2EEA
MSUBI               2EFA
MULSW               1A30
MWORD               2E76
NEG                 2E5D
NEGW                1B48
NEWADDR             10E0
NEWLINE             2E4E
OPENBRA             2E57
POS                 2E5B
PRINT               2CC0
PRINTASL            1D3E
PRINTASR            1D72
PRINTB              1EC0
PRINTBYTE           1BA2
PRINTL              1F28
PRINTLONG           1C4A
PRINTLSL            1E42
PRINTLSLRCOUNT      1F5C
PRINTLSR            1F90
PRINTROL            1DDA
PRINTROR            1E0E
PRINTW              1EF4
PRINTWORD           1BF6
RORL                1DC2
SLASH               2E61
SPACE               2E4C
START               1000
STARTADDR           30AE
SUB                 249E
SUB1                24D0
SUB2                24B2
SUB3                24BA
SUB4                24C4
SUBA                26EC
SUBACHECK           250C
SUBACONT            2740
SUBAN               28D6
SUBAN2              28F2
SUBANID             290E
SUBANIDNEG          2982
SUBANIDPOS          2942
SUBDN               289E
SUBDN2              28BA
SUBEA               29C2
SUBEAHEX            2A20
SUBEAHEX1           2AC0
SUBEAHEX2           2AC8
SUBEAHEX3           2AD0
SUBEAHEX4           2AF8
SUBEAHEX5           2B0E
SUBEAID             2AB0
SUBEAID2            2A2C
SUBERRORTEST1       285C
SUBERRORTEST11      289C
SUBJMPA2            27CC
SUBPRINT            27CE
SUBPRINTADD         281E
SUBPRINTADDA        2730
SUBPRINTAND         280E
SUBPRINTB           282E
SUBPRINTCMP         283A
SUBPRINTCMPA        2720
SUBPRINTEND         285A
SUBPRINTEOR         284A
SUBPRINTSUB         27FE
SUBPRINTSUBA        2710
SUBSIZE1            256C
SUBSIZE11           2592
SUBSIZE12           25A8
SUBSIZE2            25AC
SUBSIZE21           25D2
SUBSIZE22           25E8
SUBSIZE3            25EC
SUBSIZE31           2612
SUBSIZE32           2628
SUBSIZE4            262C
SUBSIZE41           2652
SUBSIZE42           2668
SUBSIZE5            266C
SUBSIZE51           2692
SUBSIZE52           26A8
SUBSIZE6            26AC
SUBSIZE61           26D2
SUBSIZE62           26E8
SUBSIZE7            2758
SUBSIZE71           277A
SUBSIZE72           2790
SUBSIZE8            2794
SUBSIZE81           27B4
SUBSIZE82           27C8
TAB                 2E51
