00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/6/2015 10:52:21 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * CMP
00000000                            33  * CMPI
00000000                            34  * CMPA
00000000                            35  * EOR
00000000                            36  * EORI
00000000                            37  * ADDA
00000000                            38  * RTS
00000000                            39  * MOVEM
00000000                            40  * 
00000000                            41  * Display buffer thingy
00000000                            42  * IO for user input
00000000                            43  * IO for continue/exit
00000000                            44  * 
00000000                            45  * MOVE                  1806        LONGWORD ADDRESS AND IMMEDIATE DATA FOR DESTINATION ARE NOT IMPLEMETED
00000000                            46  * MOVEA                 3846
00000000                            47  * MULS                  CFC6
00000000                            48  * DIVS                  85C3
00000000                            49  * NEG                   4443
00000000                            50  * LSL                   E76A
00000000                            51  * LSR                   E66A
00000000                            52  * ROL                   
00000000                            53  * ROR                   
00000000                            54  * BTST                  0702
00000000                            55  * JSR
00000000                            56  * ASL 
00000000                            57  * ASR
00000000                            58  ****************************************************************************
00000000                            59  
00000000                            60  
00000000                            61  * sets start and end address
00000000                            62  * temp hard code
00000000                            63  * make UI later for input
00000000                            64  
00000000                            65  
00000000  =00007000                 66  addr1       EQU     $7000
00000000                            67  *addr2      EQU     $703C
00000000  =0000726C                 68  addr2       EQU     $726C
00000000                            69  
00000000  =0000001E                 70  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            71  
00000000                            72  
00000000                            73  
00001000                            74      ORG    $1000
00001000                            75  START:                  ; first instruction of program
00001000                            76  
00001000                            77          
00001000                            78          
00001000                            79  
00001000                            80          *   this stores some test EA into memory m,
00001000                            81          *LEA     addr1,A1
00001000                            82          *MOVE.W  #$0440,(A1)+        *917C
00001000                            83          *MOVE.W  #$917C,(A1)+       
00001000                            84          *MOVE.L  #$5555A7FF,(A1)+
00001000                            85          *MOVE.W  #$9078,(A1)+
00001000                            86          *MOVE.W  #$5555,(A1)+
00001000                            87          
00001000                            88          
00001000                            89          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            90          
00001000                            91          *MOVE.L  #$6700F0D8,$7000
00001000                            92          *MOVE.W  #$4E71,$7000         NOP
00001000                            93  
00001000                            94          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            95          *MOVE.L  #$48E3FAF5,$7000
00001000                            96          *MOVE.L  #$4CF8CDD9,$7004
00001000                            97          *MOVE.W  #$4000,$7008
00001000                            98  
00001000                            99  
00001000                           100          * start address: 7000
00001000                           101          * end address:   766C
00001000                           102  
00001000                           103  
00001000  31FC E762 7000           104           MOVE.W  #$E762,$7000
00001006                           105          *MOVE.L  #$4CF8CDD9,$7004
00001006                           106          *MOVE.W  #$4000,$7008
00001006                           107  
00001006                           108  *********************************************************************************************************************
00001006                           109  * Takes in user start and end address
00001006                           110  
00001006                           111  IOSTART
00001006                           112  *   Displays message asking for address
00001006  43F9 00002FD6            113          LEA     MADDR1,A1           Loads message to retrieve first number
0000100C  6100 0020                114          BSR     IOGETADDR
00001010                           115  
00001010  0804 0000                116          BTST    #0,D4               Checks of the starting address is an odd number
00001014  6600 0090                117          BNE     IOERROR4            Throws an error if it is because it will crash
00001018                           118  
00001018  2E04                     119          MOVE.L  D4,D7               Moves starting address to D7 for now
0000101A  43F9 00002FF9            120          LEA     MADDR2,A1           Then grabs the ending address
00001020  6100 000C                121          BSR     IOGETADDR
00001024  B887                     122          CMP.L   D7,D4               Compares the start address to end address
00001026  6E00 008E                123          BGT     DISPADDR            Continues if start < end
0000102A  6000 004C                124          BRA     IOERROR1            Error if not
0000102E                           125  
0000102E                           126  IOGETADDR
0000102E  2649                     127          MOVEA.L A1,A3               Saves the message incase of an error
00001030  103C 000E                128          MOVE.B  #14,D0              Prepares to display message
00001034  4E4F                     129          TRAP    #15                 Displays message
00001036                           130  
00001036  4244                     131          CLR     D4                  Clears D4 register to prevent errors
00001038                           132  
00001038  43F9 00003132            133          LEA     startaddr,A1        Uses this memory location to store the data
0000103E  103C 0002                134          MOVE.B  #2,D0               Trap task 4 reads number from keyboard into D1.L
00001042  4E4F                     135          TRAP    #15
00001044                           136  
00001044  B23C 0008                137          CMP.B   #8,D1               Throws an error if the input is longer than a longword
00001048  6E00 003C                138          BGT     IOERROR2
0000104C  1A01                     139          MOVE.B  D1,D5               Moves the length of the input to D5
0000104E                           140  
0000104E                           141  IOSTARTLOOP
0000104E  45F9 00003132            142          LEA     startaddr,A2        Moves starting address to A2, which will be current addr
00001054                           143  
00001054                           144  IOLOOP
00001054  141A                     145          MOVE.B  (A2)+,D2            Moves data from current addr to D2
00001056  5305                     146          SUB.B   #1,D5               Subtract 1 from counter
00001058  6100 1CF2                147          BSR     DEC2HEX             Converts decimal to hex number
0000105C  B23C 000F                148          CMP.B   #$F,D1
00001060  6700 0034                149          BEQ     IOERROR3
00001064                           150  
00001064  1C05                     151          MOVE.B  D5,D6               Moves counter to D6 to be manipulated
00001066  CDFC 0004                152          MULS    #4,D6               Multiply by 4 to find number of shifts left
0000106A                           153          
0000106A  EDAB                     154          LSL.L   D6,D3               Shifts hex left
0000106C  D883                     155          ADD.L   D3,D4               Adds number to new total
0000106E                           156          
0000106E  7600                     157          MOVE.L  #0,D3               Clears D3 to prevent errors
00001070                           158          
00001070  BA3C 0000                159          CMP.B   #0,D5               Compares counter to 0    
00001074  66DE                     160          BNE     IOLOOP              Otherwise will loop
00001076  4E75                     161          RTS
00001078                           162  
00001078                           163  * Error message for start address greater than end address
00001078                           164  IOERROR1
00001078  43F9 0000303C            165          LEA     MIOERR1,A1
0000107E  103C 000D                166          MOVE.B  #13,D0
00001082  4E4F                     167          TRAP    #15
00001084  6080                     168          BRA     IOSTART
00001086                           169  
00001086                           170  * Error message if user input address is longer than longword
00001086                           171  IOERROR2
00001086  43F9 00003074            172          LEA     MIOERR2,A1
0000108C  103C 000D                173          MOVE.B  #13,D0
00001090  4E4F                     174          TRAP    #15
00001092  224B                     175          MOVEA.L A3,A1
00001094  6098                     176          BRA     IOGETADDR
00001096                           177  
00001096                           178  * Error message if user enters non-valid hex numbers
00001096                           179  IOERROR3
00001096  43F9 000030A7            180          LEA     MIOERR3,A1
0000109C  103C 000D                181          MOVE.B  #13,D0
000010A0  4E4F                     182          TRAP    #15
000010A2  224B                     183          MOVEA.L A3,A1
000010A4  6088                     184          BRA     IOGETADDR
000010A6                           185  
000010A6                           186  * Error message for odd numbered addresses
000010A6                           187  IOERROR4
000010A6  43F9 000030C3            188          LEA     MIOERR4,A1
000010AC  103C 000D                189          MOVE.B  #13,D0
000010B0  4E4F                     190          TRAP    #15
000010B2  6000 FF52                191          BRA     IOSTART
000010B6                           192  
000010B6                           193  ******************************************** displays address location***********************************************
000010B6                           194  * This displays the address location of the op-code being worked on
000010B6                           195  * A6 is used as current address
000010B6                           196  DISPADDR
000010B6  23C7 00003132            197          MOVE.L  D7,startaddr
000010BC  23C4 00003136            198          MOVE.L  D4,endaddr
000010C2  6100 1B38                199          BSR     CLRDN
000010C6  2C79 00003132            200          MOVEA.L startaddr,A6        Moves starting addr into A6 register
000010CC  13FC 001E 00003131       201          MOVE.B  #dispnum,dispcount  Sets display line counter
000010D4                           202  
000010D4  43F9 00002ED2            203          LEA     NEWLINE,A1          Creates a new line in output window
000010DA  103C 000E                204          MOVE.B  #14,D0
000010DE  4E4F                     205          TRAP    #15
000010E0                           206  
000010E0                           207  NEWADDR
000010E0  2E0E                     208          MOVE.L  A6,D7               Loads the current address into D7
000010E2  BEB9 00003136            209          CMP.L   endaddr,D7          Compares current address to end address
000010E8  6E00 1D78                210          BGT     ASK4REPEAT          Branches to done if current address > end address
000010EC  45F9 00001180            211          LEA     DISPADDREND,A2
000010F2                           212  
000010F2                           213  ************************************************
000010F2                           214  * Displays address as HEX
000010F2                           215  * INPUT: address stored into D7
000010F2                           216  * OUTPUT: prints hex address to output window
000010F2                           217  DISPADDRSTART
000010F2  1C3C 0002                218          MOVE.B  #2,D6               D6 is a counter, used for looping
000010F6  2407                     219          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
000010F8  4842                     220          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
000010FA  6000 0004                221          BRA     DISPADDR2           Skips the second part to do later
000010FE                           222  
000010FE                           223  DISPADDR1
000010FE  3407                     224          MOVE.W  D7,D2
00001100                           225  DISPADDR2
00001100  3202                     226          MOVE.W  D2,D1               D1 will be the first byte of the word
00001102  3602                     227          MOVE.W  D2,D3               D3 will be the second byte of the word
00001104  3802                     228          MOVE.W  D2,D4               D4 will be the third byte of the word
00001106  3A02                     229          MOVE.W  D2,D5               D5 will be the fourth byte of the word
00001108                           230  
00001108  E049                     231          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000110A  E849                     232          LSR.W   #4,D1
0000110C  E94B                     233          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
0000110E  E04B                     234          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001110  E84B                     235          LSR.W   #4,D3
00001112  E14C                     236          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001114  E04C                     237          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
00001116  E84C                     238          LSR.W   #4,D4
00001118  E14D                     239          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000111A  E94D                     240          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
0000111C  E04D                     241          LSR.W   #8,D5
0000111E  E84D                     242          LSR.W   #4,D5
00001120                           243          
00001120                           244          
00001120  47F9 00001134            245          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
00001126  B23C 0009                246          CMP.B   #9,D1               Compares digit to 9
0000112A  6E00 1BAC                247          BGT     CONV                Print out letter representation if greater than 9
0000112E                           248  
0000112E  103C 0003                249          MOVE.B  #3,D0               Displays digit if it is less than A
00001132  4E4F                     250          TRAP    #15
00001134                           251          
00001134                           252  DISPADDR3   
00001134  1203                     253          MOVE.B  D3,D1               Displays digit in 1's place second
00001136                           254  
00001136                           255          *   converts digits 10+ into letters
00001136  47F9 0000114A            256          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
0000113C  B23C 0009                257          CMP.B   #9,D1               Compares digit to 9
00001140  6E00 1B96                258          BGT     CONV                Print out letter representation if greater than 9
00001144                           259          
00001144  103C 0003                260          MOVE.B  #3,D0               Displays digit if it is less than A
00001148  4E4F                     261          TRAP    #15
0000114A                           262  
0000114A                           263  DISPADDR4
0000114A  1204                     264          MOVE.B  D4,D1               Displays digit in 1's place second
0000114C                           265  
0000114C                           266          *   converts digits 10+ into letters
0000114C  47F9 00001160            267          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001152  B23C 0009                268          CMP.B   #9,D1               Compares digit to 9
00001156  6E00 1B80                269          BGT     CONV                Print out letter representation if greater than 9
0000115A                           270          
0000115A  103C 0003                271          MOVE.B  #3,D0               Displays digit if it is less than A
0000115E  4E4F                     272          TRAP    #15
00001160                           273  
00001160                           274  DISPADDR5
00001160  1205                     275          MOVE.B  D5,D1               Displays digit in 1's place second
00001162                           276  
00001162                           277          *   converts digits 10+ into letters
00001162  47F9 00001176            278          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
00001168  B23C 0009                279          CMP.B   #9,D1               Compares digit to 9
0000116C  6E00 1B6A                280          BGT     CONV                Print out letter representation if greater than 9
00001170                           281          
00001170  103C 0003                282          MOVE.B  #3,D0               Displays digit if it is less than A
00001174  4E4F                     283          TRAP    #15
00001176                           284          
00001176                           285  DISPADDR6
00001176                           286  * Display counter -- creates new line every 8 bytes
00001176                           287          * D6 is used as counter
00001176                           288          
00001176  5306                     289          SUB.B   #1,D6
00001178  BC3C 0000                290          CMP.B   #0,D6
0000117C  6680                     291          BNE     DISPADDR1
0000117E                           292  
0000117E  4ED2                     293          JMP     (A2)                Jumps to address stored in A2 when complete
00001180                           294  
00001180                           295  DISPADDREND
00001180  43F9 00002ED5            296          LEA     TAB,A1
00001186  103C 000E                297          MOVE.B  #14,D0
0000118A  4E4F                     298          TRAP    #15
0000118C                           299          
0000118C                           300  *********************************************************************************************************************
0000118C                           301  * Splits the first byte of the op code into nibbles
0000118C                           302  * then sends it to the branch-table to jump to the appropiate section to be decoded
0000118C                           303  
0000118C  4281                     304          CLR.L   D1                  Clears the data registers
0000118E  4282                     305          CLR.L   D2
00001190  4283                     306          CLR.L   D3
00001192  4284                     307          CLR.L   D4
00001194  4285                     308          CLR.L   D5
00001196  4286                     309          CLR.L   D6
00001198  3C16                     310          MOVE.W  (A6),D6
0000119A  141E                     311          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000119C                           312    
0000119C  1E02                     313          MOVE.B  D2,D7
0000119E  E14F                     314          LSL.W   #8,D7
000011A0                           315          
000011A0  1602                     316          MOVE.B  D2,D3               Copies data at D2 to D3
000011A2                           317          *   this gets digit in 10's place
000011A2  E80B                     318          LSR.B   #4,D3               Shifts right to get rid of 1's place
000011A4                           319          *   this gets digit in 1's place
000011A4  E90A                     320          LSL.B   #4,D2               Shifts left to get rid of 10's place
000011A6  E80A                     321          LSR.B   #4,D2               Shifts back right into 1's place
000011A8                           322          
000011A8                           323          *   D3 holds digit in 10's place
000011A8                           324          *   D2 holds digit in 1's place
000011A8                           325  
000011A8                           326          *   Moves second nibble to D5 to be used later
000011A8  1A02                     327          MOVE.B  D2,D5
000011AA  13C3 0000313A            328          MOVE.B  D3,bit0
000011B0                           329          *   Goes to a branch-table to figure out which op code it is
000011B0  6000 0002                330          BRA     CODE
000011B4                           331  
000011B4                           332  ******************************************************************************************************
000011B4                           333  *   This is where the table goes to detirmine which op-code to use
000011B4                           334  CODE    
000011B4  B63C 0000                335          CMP.B   #$0,D3              Goes to immediate operation section
000011B8  6700 0ECE                336          BEQ     IMD
000011BC  B63C 0004                337          CMP.B   #$4,D3              Goes to miscellaneous section
000011C0  6700 0FFA                338          BEQ     MISC
000011C4  B63C 0006                339          CMP.B   #$6,D3
000011C8  6700 0E0A                340          BEQ     BCC
000011CC  B63C 0009                341          CMP.B   #$9,D3              Goes to sub section
000011D0  6700 1350                342          BEQ     SUB
000011D4  B63C 000C                343          CMP.B   #$C,D3              Goes to sub but displays as AND
000011D8  6700 1348                344          BEQ     SUB
000011DC  B63C 000D                345          CMP.B   #$D,D3              Goes to sub but displays as ADD
000011E0  6700 1340                346          BEQ     SUB
000011E4  B63C 000B                347          CMP.B   #$B,D3              Goes to sub but displays as CMP or EOR
000011E8  6700 1338                348          BEQ     SUB
000011EC  B63C 0001                349          CMP.B   #$1,D3
000011F0  6700 0290                350          BEQ     MOVB                Goes to movb
000011F4  B63C 0003                351          CMP.B   #$3,D3
000011F8  6700 00C8                352          BEQ     MOVW                Goes to movb
000011FC  B63C 0002                353          CMP.B   #$2,D3
00001200  6700 01A0                354          BEQ     MOVL                Goes to movb
00001204  B63C 0008                355          CMP.B   #$8,D3
00001208  6700 08B0                356          BEQ     DIVSW               Goes to divsw
0000120C  B63C 000E                357          CMP.B   #$E,D3
00001210  6700 0A8C                358          BEQ     LSLR                Goes to divsw
00001214                           359  
00001214  6000 19F8                360          BRA     INVOPCODE
00001218                           361          
00001218                           362  JSR
00001218  43F9 00002F04            363          LEA MJSR,A1
0000121E  103C 000E                364          MOVE.B  #14,D0
00001222  4E4F                     365          TRAP    #15 
00001224                           366          
00001224  1406                     367          MOVE.B  D6,D2
00001226  EB0A                     368          LSL.B   #5,D2
00001228  EA0A                     369          LSR.B   #5,D2
0000122A  13C2 0000313E            370          MOVE.B  D2,bit4
00001230                           371          
00001230  1406                     372          MOVE.B  D6,D2
00001232  E50A                     373          LSL.B   #2,D2
00001234  EA0A                     374          LSR.B   #5,D2
00001236  13C2 0000313D            375          MOVE.B  D2,bit3
0000123C                           376  
0000123C  183C 0003                377          MOVE.B  #$3,D4
00001240                           378  
00001240  0C39 0002 0000313D       379          CMP.B   #$2,bit3
00001248  6700 0442                380          BEQ     MOVEIAN1
0000124C                           381          
0000124C  43F9 00002ED5            382          LEA     TAB,A1
00001252  323C 0003                383          MOVE    #3,D1
00001256  4E4F                     384          TRAP    #15
00001258                           385          
00001258  0C39 0007 0000313D       386          CMP.B   #$7,bit3
00001260  6700 0360                387          BEQ     ADDIMDDES
00001264                           388          
00001264                           389  BTST 
00001264  43F9 00002F08            390          LEA MBTST,A1
0000126A  103C 000E                391          MOVE.B  #14,D0
0000126E  4E4F                     392          TRAP    #15 
00001270                           393          
00001270  1406                     394          MOVE.B  D6,D2
00001272  EB0A                     395          LSL.B   #5,D2
00001274  EA0A                     396          LSR.B   #5,D2
00001276  13C2 0000313B            397          MOVE.B  D2,bit1
0000127C                           398          
0000127C  1406                     399          MOVE.B  D6,D2
0000127E  E50A                     400          LSL.B   #2,D2
00001280  EA0A                     401          LSR.B   #5,D2
00001282  13C2 0000313C            402          MOVE.B  D2,bit2
00001288                           403          
00001288  3406                     404          MOVE.W  D6,D2
0000128A  E94A                     405          LSL.W   #4,D2
0000128C  E04A                     406          LSR.W   #8,D2
0000128E  EA4A                     407          LSR.W   #5,D2
00001290  13C2 0000313D            408          MOVE.B  D2,bit3
00001296                           409          
00001296  43F9 00002ED5            410          LEA TAB,A1
0000129C  103C 000E                411          MOVE.B  #14,D0
000012A0  4E4F                     412          TRAP    #15
000012A2                           413  
000012A2  43F9 00002EED            414          LEA DISPD,A1
000012A8  103C 000E                415          MOVE.B  #14,D0
000012AC  4E4F                     416          TRAP    #15
000012AE                           417          
000012AE  1A3C 0004                418          MOVE.B   #$4,D5
000012B2                           419          
000012B2  1239 0000313D            420          MOVE.B  bit3,D1
000012B8  103C 0003                421          MOVE.B  #3,D0
000012BC  4E4F                     422          TRAP    #15
000012BE                           423          
000012BE  6000 02AA                424          BRA HANDLEDES
000012C2                           425          
000012C2                           426  MOVW
000012C2  E20A                     427          LSR.B   #1,D2
000012C4  13C2 0000313B            428          MOVE.B  D2,bit1
000012CA                           429          
000012CA  1416                     430          MOVE.B  (A6),D2
000012CC  EB0A                     431          LSL.B   #5,D2
000012CE  EA0A                     432          LSR.B   #5,D2
000012D0  13C2 0000313E            433          MOVE.B  D2,bit4
000012D6                           434          
000012D6  141E                     435          MOVE.B  (A6)+,D2
000012D8  E50A                     436          LSL.B   #2,D2
000012DA  EA0A                     437          LSR.B   #5,D2
000012DC  13C2 0000313D            438          MOVE.B  D2,bit3
000012E2                           439          
000012E2  EF4E                     440          LSL.W   #7,D6
000012E4  E04E                     441          LSR.W   #8,D6 
000012E6  EA4E                     442          LSR.W   #5,D6 
000012E8  13C6 0000313C            443          MOVE.B  D6,bit2
000012EE                           444  
000012EE  0C39 0001 0000313C       445          CMP.B   #$1,bit2
000012F6  6700 0056                446          BEQ     MOVEAW
000012FA                           447  
000012FA  43F9 00002F37            448          LEA MMOVEW,A1
00001300  103C 000E                449          MOVE.B  #14,D0
00001304  4E4F                     450          TRAP    #15 
00001306                           451  
00001306  0C39 0000 0000313D       452          CMP.B   #$0,bit3           
0000130E  6700 0558                453          BEQ     MOVBDN1
00001312  0C39 0001 0000313D       454          CMP.B   #$1,bit3
0000131A  6700 02FC                455          BEQ     MOVEAN1
0000131E  0C39 0002 0000313D       456          CMP.B   #$2,bit3
00001326  6700 0364                457          BEQ     MOVEIAN1
0000132A  0C39 0003 0000313D       458          CMP.B   #$3,bit3
00001332  6700 03EC                459          BEQ     MOVEIANI1
00001336  0C39 0004 0000313D       460          CMP.B   #$4,bit3
0000133E  6700 0488                461          BEQ     MOVEIAND1
00001342  0C39 0007 0000313D       462          CMP.B   #$7,bit3
0000134A  6700 01BC                463          BEQ     ADDIMD
0000134E                           464  
0000134E                           465  MOVEAW
0000134E  43F9 00002F45            466          LEA MMOVEAW,A1
00001354  103C 000E                467          MOVE.B  #14,D0
00001358  4E4F                     468          TRAP    #15 
0000135A                           469          
0000135A  0C39 0000 0000313D       470          CMP.B   #$0,bit3           
00001362  6700 0504                471          BEQ     MOVBDN1
00001366  0C39 0001 0000313D       472          CMP.B   #$1,bit3
0000136E  6700 02A8                473          BEQ     MOVEAN1
00001372  0C39 0002 0000313D       474          CMP.B   #$2,bit3
0000137A  6700 0310                475          BEQ     MOVEIAN1
0000137E  0C39 0003 0000313D       476          CMP.B   #$3,bit3
00001386  6700 0398                477          BEQ     MOVEIANI1
0000138A  0C39 0004 0000313D       478          CMP.B   #$4,bit3
00001392  6700 0434                479          BEQ     MOVEIAND1
00001396  0C39 0007 0000313D       480          CMP.B   #$7,bit3
0000139E  6700 0168                481          BEQ     ADDIMD
000013A2                           482  
000013A2                           483  MOVL
000013A2  E20A                     484          LSR.B   #1,D2
000013A4  13C2 0000313B            485          MOVE.B  D2,bit1
000013AA                           486          
000013AA  1416                     487          MOVE.B  (A6),D2
000013AC  EB0A                     488          LSL.B   #5,D2
000013AE  EA0A                     489          LSR.B   #5,D2
000013B0  13C2 0000313E            490          MOVE.B  D2,bit4
000013B6                           491          
000013B6  141E                     492          MOVE.B  (A6)+,D2
000013B8  E50A                     493          LSL.B   #2,D2
000013BA  EA0A                     494          LSR.B   #5,D2
000013BC  13C2 0000313D            495          MOVE.B  D2,bit3
000013C2                           496          
000013C2  EF4E                     497          LSL.W   #7,D6
000013C4  E04E                     498          LSR.W   #8,D6 
000013C6  EA4E                     499          LSR.W   #5,D6 
000013C8  13C6 0000313C            500          MOVE.B  D6,bit2
000013CE                           501          
000013CE  0C39 0001 0000313C       502          CMP.B   #$1,bit2
000013D6  6700 0056                503          BEQ     MOVEAL
000013DA                           504  
000013DA  43F9 00002F3E            505          LEA MMOVEL,A1
000013E0  103C 000E                506          MOVE.B  #14,D0
000013E4  4E4F                     507          TRAP    #15 
000013E6                           508          
000013E6  0C39 0000 0000313D       509          CMP.B   #$0,bit3           
000013EE  6700 0478                510          BEQ     MOVBDN1
000013F2  0C39 0001 0000313D       511          CMP.B   #$1,bit3
000013FA  6700 021C                512          BEQ     MOVEAN1
000013FE  0C39 0002 0000313D       513          CMP.B   #$2,bit3
00001406  6700 0284                514          BEQ     MOVEIAN1
0000140A  0C39 0003 0000313D       515          CMP.B   #$3,bit3
00001412  6700 030C                516          BEQ     MOVEIANI1
00001416  0C39 0004 0000313D       517          CMP.B   #$4,bit3
0000141E  6700 03A8                518          BEQ     MOVEIAND1
00001422  0C39 0007 0000313D       519          CMP.B   #$7,bit3
0000142A  6700 00DC                520          BEQ     ADDIMD
0000142E                           521  
0000142E                           522  MOVEAL
0000142E  43F9 00002F4D            523          LEA MMOVEAL,A1
00001434  103C 000E                524          MOVE.B  #14,D0
00001438  4E4F                     525          TRAP    #15 
0000143A                           526          
0000143A  0C39 0000 0000313D       527          CMP.B   #$0,bit3           
00001442  6700 0424                528          BEQ     MOVBDN1
00001446  0C39 0001 0000313D       529          CMP.B   #$1,bit3
0000144E  6700 01C8                530          BEQ     MOVEAN1
00001452  0C39 0002 0000313D       531          CMP.B   #$2,bit3
0000145A  6700 0230                532          BEQ     MOVEIAN1
0000145E  0C39 0003 0000313D       533          CMP.B   #$3,bit3
00001466  6700 02B8                534          BEQ     MOVEIANI1
0000146A  0C39 0004 0000313D       535          CMP.B   #$4,bit3
00001472  6700 0354                536          BEQ     MOVEIAND1
00001476  0C39 0007 0000313D       537          CMP.B   #$7,bit3
0000147E  6700 0088                538          BEQ     ADDIMD        
00001482                           539  
00001482                           540  MOVB
00001482  43F9 00002F30            541          LEA MMOVEB,A1
00001488  103C 000E                542          MOVE.B  #14,D0
0000148C  4E4F                     543          TRAP    #15 
0000148E                           544          
0000148E  E20A                     545          LSR.B   #1,D2
00001490  13C2 0000313B            546          MOVE.B  D2,bit1
00001496                           547          
00001496  1416                     548          MOVE.B  (A6),D2
00001498  EB0A                     549          LSL.B   #5,D2
0000149A  EA0A                     550          LSR.B   #5,D2
0000149C  13C2 0000313E            551          MOVE.B  D2,bit4
000014A2                           552          
000014A2  141E                     553          MOVE.B  (A6)+,D2
000014A4  E50A                     554          LSL.B   #2,D2
000014A6  EA0A                     555          LSR.B   #5,D2
000014A8  13C2 0000313D            556          MOVE.B  D2,bit3
000014AE                           557          
000014AE  EF4E                     558          LSL.W   #7,D6
000014B0  E04E                     559          LSR.W   #8,D6 
000014B2  EA4E                     560          LSR.W   #5,D6 
000014B4  13C6 0000313C            561          MOVE.B  D6,bit2
000014BA                           562          
000014BA                           563      
000014BA  4285                     564          CLR.L   D5
000014BC                           565          
000014BC  0C39 0000 0000313D       566          CMP.B   #$0,bit3           
000014C4  6700 03A2                567          BEQ     MOVBDN1
000014C8  0C39 0001 0000313D       568          CMP.B   #$1,bit3
000014D0  6700 0146                569          BEQ     MOVEAN1
000014D4  0C39 0002 0000313D       570          CMP.B   #$2,bit3
000014DC  6700 01AE                571          BEQ     MOVEIAN1
000014E0  0C39 0003 0000313D       572          CMP.B   #$3,bit3
000014E8  6700 0236                573          BEQ     MOVEIANI1
000014EC  0C39 0004 0000313D       574          CMP.B   #$4,bit3
000014F4  6700 02D2                575          BEQ     MOVEIAND1
000014F8  0C39 0007 0000313D       576          CMP.B   #$7,bit3
00001500  6700 0006                577          BEQ     ADDIMD
00001504                           578          
00001504  6000 170A                579          BRA     INVOP
00001508                           580  
00001508                           581  ADDIMD
00001508  43F9 00002ED5            582      LEA     TAB,A1
0000150E  103C 000E                583      MOVE.B  #14,D0
00001512  4E4F                     584      TRAP    #15
00001514                           585      
00001514  0C39 0000 0000313E       586      CMP.B   #$0,bit4
0000151C  6700 001A                587      BEQ     ADDIMD0
00001520  0C39 0001 0000313E       588      CMP.B   #$1,bit4
00001528  6700 001C                589      BEQ     ADDIMD1
0000152C  0C39 0004 0000313E       590      CMP.B   #$4,bit4
00001534  6700 001E                591      BEQ     ADDIMD4
00001538                           592  
00001538                           593  ADDIMD0
00001538  183C 0001                594      MOVE.B  #$1,D4
0000153C  45F9 0000156A            595      LEA     HANDLEDES,A2
00001542  6000 1652                596      BRA     DISPEA
00001546                           597  ADDIMD1 
00001546  183C 0002                598      MOVE.B  #$2,D4
0000154A  45F9 0000156A            599      LEA     HANDLEDES,A2
00001550  6000 1644                600      BRA     DISPEA
00001554                           601  ADDIMD4
00001554  43F9 00002EE3            602      LEA     HASH,A1
0000155A  103C 000E                603      MOVE.B  #14,D0
0000155E  4E4F                     604      TRAP    #15
00001560                           605      
00001560  45F9 0000156A            606      LEA     HANDLEDES,A2
00001566  6000 162E                607      BRA     DISPEA 
0000156A                           608      
0000156A                           609  HANDLEDES
0000156A  43F9 00002ED9            610      LEA     COMMA,A1
00001570  103C 000E                611      MOVE.B  #14,D0
00001574  4E4F                     612      TRAP    #15
00001576                           613      
00001576  0C39 0000 0000313C       614      CMP.B   #$0,bit2
0000157E  6700 0488                615      BEQ     MOVBDN2
00001582  0C39 0001 0000313C       616      CMP.B   #$1,bit2
0000158A  6700 03AC                617      BEQ     MOVEAN2
0000158E  0C39 0002 0000313C       618      CMP.B   #$2,bit2 
00001596  6700 03BC                619      BEQ     MOVIAN2
0000159A  0C39 0003 0000313C       620      CMP.B   #$3,bit2 
000015A2  6700 03E4                621      BEQ     MOVIANI2
000015A6  0C39 0004 0000313C       622      CMP.B   #$4,bit2 
000015AE  6700 0418                623      BEQ     MOVIAND2
000015B2  BA3C 0005                624      CMP.B   #$5,D5
000015B6  6700 0450                625      BEQ     MOVBDN2
000015BA  BA3C 0007                626      CMP.B   #$7,D5
000015BE  6700 0002                627      BEQ     ADDIMDDES
000015C2                           628  
000015C2                           629  ADDIMDDES
000015C2  0C39 0000 0000313E       630      CMP.B   #$0,bit4
000015CA  6700 001A                631      BEQ     ADDIMDDES0
000015CE  0C39 0001 0000313E       632      CMP.B   #$1,bit4
000015D6  6700 001C                633      BEQ     ADDIMDDES1
000015DA  0C39 0004 0000313E       634      CMP.B   #$4,bit4
000015E2  6700 001E                635      BEQ     ADDIMDDES4
000015E6                           636      
000015E6                           637  ADDIMDDES0
000015E6  183C 0001                638      MOVE.B  #$1,D4
000015EA  45F9 00002C82            639      LEA     ENDNEWLINE,A2
000015F0  6000 15A4                640      BRA     DISPEA
000015F4                           641      
000015F4                           642  ADDIMDDES1
000015F4  183C 0002                643      MOVE.B  #$2,D4
000015F8  45F9 00002C82            644      LEA     ENDNEWLINE,A2
000015FE  6000 1596                645      BRA     DISPEA
00001602                           646      
00001602                           647  ADDIMDDES4    
00001602  43F9 00002EE3            648      LEA     HASH,A1
00001608  103C 000E                649      MOVE.B  #14,D0
0000160C  4E4F                     650      TRAP    #15
0000160E                           651      
0000160E  45F9 00002C82            652      LEA     ENDNEWLINE,A2
00001614  6000 1580                653      BRA     DISPEA 
00001618                           654          
00001618                           655  MOVEAN1
00001618  43F9 00002ED5            656      LEA TAB,A1
0000161E  103C 000E                657      MOVE.B  #14,D0
00001622  4E4F                     658      TRAP    #15
00001624                           659  
00001624  43F9 00002EE7            660      LEA DISPA,A1
0000162A  103C 000E                661      MOVE.B  #14,D0
0000162E  4E4F                     662      TRAP    #15
00001630                           663      
00001630  1239 0000313E            664      MOVE.B  bit4,D1
00001636  103C 0003                665      MOVE.B  #3,D0
0000163A  4E4F                     666      TRAP    #15
0000163C                           667      
0000163C  43F9 00002ED9            668      LEA COMMA,A1
00001642  103C 000E                669      MOVE.B  #14,D0
00001646  4E4F                     670      TRAP    #15
00001648                           671      
00001648  0C39 0000 0000313C       672      CMP.B   #$0,bit2
00001650  6700 03B6                673      BEQ     MOVBDN2
00001654  0C39 0001 0000313C       674      CMP.B   #$1,bit2
0000165C  6700 02DA                675      BEQ     MOVEAN2
00001660  0C39 0002 0000313C       676      CMP.B   #$2,bit2 
00001668  6700 02EA                677      BEQ     MOVIAN2
0000166C  0C39 0003 0000313C       678      CMP.B   #$3,bit2 
00001674  6700 0312                679      BEQ     MOVIANI2
00001678  0C39 0004 0000313C       680      CMP.B   #$4,bit2 
00001680  6700 0346                681      BEQ     MOVIAND2
00001684  BA3C 0005                682      CMP.B   #$5,D5
00001688  6700 037E                683      BEQ     MOVBDN2
0000168C                           684      
0000168C                           685  MOVEIAN1
0000168C  43F9 00002ED5            686      LEA TAB,A1
00001692  103C 000E                687      MOVE.B  #14,D0
00001696  4E4F                     688      TRAP    #15
00001698                           689      
00001698  43F9 00002EDB            690      LEA OPENBRA,A1
0000169E  103C 000E                691      MOVE.B  #14,D0
000016A2  4E4F                     692      TRAP    #15
000016A4                           693  
000016A4  43F9 00002EE7            694      LEA DISPA,A1
000016AA  103C 000E                695      MOVE.B  #14,D0
000016AE  4E4F                     696      TRAP    #15
000016B0                           697      
000016B0  1239 0000313E            698      MOVE.B  bit4,D1
000016B6  103C 0003                699      MOVE.B  #3,D0
000016BA  4E4F                     700      TRAP    #15
000016BC                           701      
000016BC  43F9 00002EDD            702      LEA CLOSEBRA,A1
000016C2  103C 000E                703      MOVE.B  #14,D0
000016C6  4E4F                     704      TRAP    #15
000016C8                           705      
000016C8  B83C 0003                706      CMP.B   #$3,D4
000016CC  6700 15B4                707      BEQ     ENDNEWLINE
000016D0                           708      
000016D0  43F9 00002ED9            709      LEA COMMA,A1
000016D6  103C 000E                710      MOVE.B  #14,D0
000016DA  4E4F                     711      TRAP    #15
000016DC                           712      
000016DC  0C39 0000 0000313C       713      CMP.B   #$0,bit2
000016E4  6700 0322                714      BEQ     MOVBDN2
000016E8  0C39 0001 0000313C       715      CMP.B   #$1,bit2
000016F0  6700 0246                716      BEQ     MOVEAN2
000016F4  0C39 0002 0000313C       717      CMP.B   #$2,bit2 
000016FC  6700 0256                718      BEQ     MOVIAN2
00001700  0C39 0003 0000313C       719      CMP.B   #$3,bit2 
00001708  6700 027E                720      BEQ     MOVIANI2
0000170C  0C39 0004 0000313C       721      CMP.B   #$4,bit2 
00001714  6700 02B2                722      BEQ     MOVIAND2
00001718  BA3C 0005                723      CMP.B   #$5,D5
0000171C  6700 02EA                724      BEQ     MOVBDN2
00001720                           725  
00001720                           726  MOVEIANI1
00001720  43F9 00002ED5            727      LEA TAB,A1
00001726  103C 000E                728      MOVE.B  #14,D0
0000172A  4E4F                     729      TRAP    #15
0000172C                           730      
0000172C  43F9 00002EDB            731      LEA OPENBRA,A1
00001732  103C 000E                732      MOVE.B  #14,D0
00001736  4E4F                     733      TRAP    #15
00001738                           734  
00001738  43F9 00002EE7            735      LEA DISPA,A1
0000173E  103C 000E                736      MOVE.B  #14,D0
00001742  4E4F                     737      TRAP    #15
00001744                           738      
00001744  1239 0000313E            739      MOVE.B  bit4,D1
0000174A  103C 0003                740      MOVE.B  #3,D0
0000174E  4E4F                     741      TRAP    #15
00001750                           742      
00001750  43F9 00002EDD            743      LEA CLOSEBRA,A1
00001756  103C 000E                744      MOVE.B  #14,D0
0000175A  4E4F                     745      TRAP    #15
0000175C                           746      
0000175C  43F9 00002EDF            747      LEA POS,A1
00001762  103C 000E                748      MOVE.B  #14,D0
00001766  4E4F                     749      TRAP    #15
00001768                           750      
00001768  BA3C 0003                751      CMP.B   #$3,D5
0000176C  6700 1514                752      BEQ     ENDNEWLINE
00001770                           753             
00001770  BA3C 0004                754      CMP.B   #$4,D5
00001774  6700 150C                755      BEQ     ENDNEWLINE
00001778                           756          
00001778                           757          
00001778  43F9 00002ED9            758      LEA COMMA,A1
0000177E  103C 000E                759      MOVE.B  #14,D0
00001782  4E4F                     760      TRAP    #15
00001784                           761      
00001784  0C39 0000 0000313C       762      CMP.B   #$0,bit2
0000178C  6700 027A                763      BEQ     MOVBDN2
00001790  0C39 0001 0000313C       764      CMP.B   #$1,bit2
00001798  6700 019E                765      BEQ     MOVEAN2
0000179C  0C39 0002 0000313C       766      CMP.B   #$2,bit2 
000017A4  6700 01AE                767      BEQ     MOVIAN2
000017A8  0C39 0003 0000313C       768      CMP.B   #$3,bit2 
000017B0  6700 01D6                769      BEQ     MOVIANI2
000017B4  0C39 0004 0000313C       770      CMP.B   #$4,bit2 
000017BC  6700 020A                771      BEQ     MOVIAND2
000017C0  BA3C 0005                772      CMP.B   #$5,D5
000017C4  6700 0242                773      BEQ     MOVBDN2
000017C8                           774  
000017C8                           775  MOVEIAND1
000017C8  43F9 00002ED5            776      LEA TAB,A1
000017CE  103C 000E                777      MOVE.B  #14,D0
000017D2  4E4F                     778      TRAP    #15
000017D4                           779      
000017D4  43F9 00002EE1            780      LEA NEG,A1
000017DA  103C 000E                781      MOVE.B  #14,D0
000017DE  4E4F                     782      TRAP    #15
000017E0                           783      
000017E0  43F9 00002EDB            784      LEA OPENBRA,A1
000017E6  103C 000E                785      MOVE.B  #14,D0
000017EA  4E4F                     786      TRAP    #15
000017EC                           787  
000017EC  43F9 00002EE7            788      LEA DISPA,A1
000017F2  103C 000E                789      MOVE.B  #14,D0
000017F6  4E4F                     790      TRAP    #15
000017F8                           791      
000017F8  1239 0000313E            792      MOVE.B  bit4,D1
000017FE  103C 0003                793      MOVE.B  #3,D0
00001802  4E4F                     794      TRAP    #15
00001804                           795      
00001804  43F9 00002EDD            796      LEA CLOSEBRA,A1
0000180A  103C 000E                797      MOVE.B  #14,D0
0000180E  4E4F                     798      TRAP    #15
00001810                           799      
00001810  BA3C 0004                800      CMP.B   #$4,D5
00001814  6700 146C                801      BEQ     ENDNEWLINE
00001818                           802      
00001818  43F9 00002ED9            803      LEA COMMA,A1
0000181E  103C 000E                804      MOVE.B  #14,D0
00001822  4E4F                     805      TRAP    #15
00001824                           806      
00001824  0C39 0000 0000313C       807      CMP.B   #$0,bit2
0000182C  6700 01DA                808      BEQ     MOVBDN2
00001830  0C39 0001 0000313C       809      CMP.B   #$1,bit2
00001838  6700 00FE                810      BEQ     MOVEAN2
0000183C  0C39 0002 0000313C       811      CMP.B   #$2,bit2 
00001844  6700 010E                812      BEQ     MOVIAN2
00001848  0C39 0003 0000313C       813      CMP.B   #$3,bit2 
00001850  6700 0136                814      BEQ     MOVIANI2
00001854  0C39 0004 0000313C       815      CMP.B   #$4,bit2 
0000185C  6700 016A                816      BEQ     MOVIAND2
00001860  BA3C 0005                817      CMP.B   #$5,D5
00001864  6700 01A2                818      BEQ     MOVBDN2
00001868                           819  
00001868                           820  MOVBDN1
00001868  43F9 00002ED5            821      LEA TAB,A1
0000186E  103C 000E                822      MOVE.B  #14,D0
00001872  4E4F                     823      TRAP    #15
00001874                           824  
00001874  BA3C 0006                825      CMP.B   #$6,D5             * Data Reg for LSLR
00001878  6700 007A                826      BEQ     LSLRSRCD
0000187C                           827  
0000187C  43F9 00002EED            828      LEA DISPD,A1
00001882  103C 000E                829      MOVE.B  #14,D0
00001886  4E4F                     830      TRAP    #15
00001888                           831      
00001888  1239 0000313E            832      MOVE.B  bit4,D1
0000188E  103C 0003                833      MOVE.B  #3,D0
00001892  4E4F                     834      TRAP    #15
00001894                           835  
00001894  BA3C 0004                836      CMP.B   #$4,D5
00001898  6700 0192                837      BEQ     ENDNLINC
0000189C                           838  
0000189C  43F9 00002ED9            839      LEA COMMA,A1
000018A2  103C 000E                840      MOVE.B  #14,D0
000018A6  4E4F                     841      TRAP    #15
000018A8                           842  
000018A8  BA3C 0006                843      CMP.B   #$6,D5             * Data Reg for LSLR
000018AC  6700 006E                844      BEQ     LSLRDESD
000018B0  0C39 0000 0000313C       845      CMP.B   #$0,bit2
000018B8  6700 014E                846      BEQ     MOVBDN2
000018BC  0C39 0001 0000313C       847      CMP.B   #$1,bit2
000018C4  6700 0072                848      BEQ     MOVEAN2
000018C8  0C39 0002 0000313C       849      CMP.B   #$2,bit2 
000018D0  6700 0082                850      BEQ     MOVIAN2
000018D4  0C39 0003 0000313C       851      CMP.B   #$3,bit2 
000018DC  6700 00AA                852      BEQ     MOVIANI2
000018E0  0C39 0004 0000313C       853      CMP.B   #$4,bit2 
000018E8  6700 00DE                854      BEQ     MOVIAND2
000018EC  BA3C 0005                855      CMP.B   #$5,D5
000018F0  6700 0116                856      BEQ     MOVBDN2
000018F4                           857      
000018F4                           858  LSLRSRCD
000018F4  43F9 00002EED            859      LEA DISPD,A1
000018FA  103C 000E                860      MOVE.B  #14,D0
000018FE  4E4F                     861      TRAP    #15
00001900                           862          
00001900  1239 0000313A            863      MOVE.B  bit0,D1
00001906  103C 0003                864      MOVE.B  #3,D0
0000190A  4E4F                     865      TRAP    #15    
0000190C                           866  
0000190C  43F9 00002ED9            867      LEA COMMA,A1
00001912  103C 000E                868      MOVE.B  #14,D0
00001916  4E4F                     869      TRAP    #15  
00001918                           870      
00001918  6000 0002                871      BRA     LSLRDESD
0000191C                           872      
0000191C                           873  LSLRDESD
0000191C  43F9 00002EED            874      LEA DISPD,A1
00001922  103C 000E                875      MOVE.B  #14,D0
00001926  4E4F                     876      TRAP    #15
00001928                           877          
00001928  1239 0000313E            878      MOVE.B  bit4,D1
0000192E  103C 0003                879      MOVE.B  #3,D0
00001932  4E4F                     880      TRAP    #15      
00001934                           881      
00001934                           882      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001934  6000 134C                883      BRA     ENDNEWLINE       
00001938                           884  
00001938                           885  MOVEAN2
00001938  43F9 00002EE7            886      LEA DISPA,A1
0000193E  103C 000E                887      MOVE.B  #14,D0
00001942  4E4F                     888      TRAP    #15
00001944                           889      
00001944  1239 0000313B            890      MOVE.B  bit1,D1
0000194A  103C 0003                891      MOVE.B  #3,D0
0000194E  4E4F                     892      TRAP    #15
00001950                           893  
00001950                           894      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001950  6000 1330                895      BRA     ENDNEWLINE    
00001954                           896  
00001954                           897  MOVIAN2
00001954  43F9 00002EDB            898      LEA OPENBRA,A1
0000195A  103C 000E                899      MOVE.B  #14,D0
0000195E  4E4F                     900      TRAP    #15
00001960                           901  
00001960  43F9 00002EE7            902      LEA DISPA,A1
00001966  103C 000E                903      MOVE.B  #14,D0
0000196A  4E4F                     904      TRAP    #15
0000196C                           905      
0000196C  1239 0000313B            906      MOVE.B  bit1,D1
00001972  103C 0003                907      MOVE.B  #3,D0
00001976  4E4F                     908      TRAP    #15
00001978                           909      
00001978  43F9 00002EDD            910      LEA CLOSEBRA,A1
0000197E  103C 000E                911      MOVE.B  #14,D0
00001982  4E4F                     912      TRAP    #15
00001984                           913      
00001984                           914      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001984  6000 12FC                915      BRA     ENDNEWLINE
00001988                           916  
00001988                           917  MOVIANI2
00001988  43F9 00002EDB            918      LEA OPENBRA,A1
0000198E  103C 000E                919      MOVE.B  #14,D0
00001992  4E4F                     920      TRAP    #15
00001994                           921  
00001994  43F9 00002EE7            922      LEA DISPA,A1
0000199A  103C 000E                923      MOVE.B  #14,D0
0000199E  4E4F                     924      TRAP    #15
000019A0                           925      
000019A0  1239 0000313B            926      MOVE.B  bit1,D1
000019A6  103C 0003                927      MOVE.B  #3,D0
000019AA  4E4F                     928      TRAP    #15
000019AC                           929      
000019AC  43F9 00002EDD            930      LEA CLOSEBRA,A1
000019B2  103C 000E                931      MOVE.B  #14,D0
000019B6  4E4F                     932      TRAP    #15
000019B8                           933      
000019B8  43F9 00002EDF            934      LEA POS,A1
000019BE  103C 000E                935      MOVE.B  #14,D0
000019C2  4E4F                     936      TRAP    #15
000019C4                           937      
000019C4                           938      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000019C4  6000 12BC                939      BRA     ENDNEWLINE
000019C8                           940  
000019C8                           941  MOVIAND2
000019C8  43F9 00002EE1            942      LEA NEG,A1
000019CE  103C 000E                943      MOVE.B  #14,D0
000019D2  4E4F                     944      TRAP    #15
000019D4                           945      
000019D4  43F9 00002EDB            946      LEA OPENBRA,A1
000019DA  103C 000E                947      MOVE.B  #14,D0
000019DE  4E4F                     948      TRAP    #15
000019E0                           949  
000019E0  43F9 00002EE7            950      LEA DISPA,A1
000019E6  103C 000E                951      MOVE.B  #14,D0
000019EA  4E4F                     952      TRAP    #15
000019EC                           953      
000019EC  1239 0000313B            954      MOVE.B  bit1,D1
000019F2  103C 0003                955      MOVE.B  #3,D0
000019F6  4E4F                     956      TRAP    #15
000019F8                           957      
000019F8  43F9 00002EDD            958      LEA CLOSEBRA,A1
000019FE  103C 000E                959      MOVE.B  #14,D0
00001A02  4E4F                     960      TRAP    #15
00001A04                           961  
00001A04                           962      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A04  6000 127C                963      BRA     ENDNEWLINE
00001A08                           964  
00001A08                           965  MOVBDN2
00001A08  43F9 00002EED            966      LEA DISPD,A1
00001A0E  103C 000E                967      MOVE.B  #14,D0
00001A12  4E4F                     968      TRAP    #15
00001A14                           969          
00001A14  1239 0000313B            970      MOVE.B  bit1,D1
00001A1A  103C 0003                971      MOVE.B  #3,D0
00001A1E  4E4F                     972      TRAP    #15   
00001A20                           973      
00001A20  B83C 0000                974      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001A24  6700 125C                975      BEQ     ENDNEWLINE
00001A28                           976      
00001A28                           977      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A28  6000 1258                978      BRA     ENDNEWLINE
00001A2C                           979      
00001A2C                           980      
00001A2C                           981  ENDNLINC
00001A2C                           982      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001A2C  6000 1254                983      BRA     ENDNEWLINE    
00001A30                           984      
00001A30                           985  MULSW
00001A30  1407                     986          MOVE.B  D7,D2
00001A32  EB0A                     987          LSL.B   #5,D2
00001A34  EA0A                     988          LSR.B   #5,D2
00001A36  13C2 0000313E            989          MOVE.B  D2,bit4
00001A3C                           990          
00001A3C  1407                     991          MOVE.B  D7,D2
00001A3E  E50A                     992          LSL.B   #2,D2
00001A40  EA0A                     993          LSR.B   #5,D2
00001A42  13C2 0000313D            994          MOVE.B  D2,bit3
00001A48                           995          
00001A48  3C07                     996          MOVE.W  D7,D6
00001A4A  EF4E                     997          LSL.W   #7,D6
00001A4C  E04E                     998          LSR.W   #8,D6 
00001A4E  EA4E                     999          LSR.W   #5,D6 
00001A50  13C6 0000313C           1000          MOVE.B  D6,bit2
00001A56                          1001          
00001A56  E94F                    1002          LSL.W   #4,D7
00001A58  E04F                    1003          LSR.W   #8,D7 
00001A5A  EA4F                    1004          LSR.W   #5,D7 
00001A5C  13C7 0000313B           1005          MOVE.B  D7,bit1
00001A62                          1006          
00001A62  43F9 00002F29           1007          LEA MMULSW,A1
00001A68  323C 000E               1008          MOVE    #14,D1
00001A6C  4E4F                    1009          TRAP    #15
00001A6E                          1010          
00001A6E  1A3C 0005               1011          MOVE.B  #$5,D5 
00001A72                          1012          
00001A72  0C39 0000 0000313D      1013          CMP.B   #$0,bit3           
00001A7A  6700 FDEC               1014          BEQ     MOVBDN1
00001A7E  0C39 0001 0000313D      1015          CMP.B   #$1,bit3
00001A86  6700 FB90               1016          BEQ     MOVEAN1
00001A8A  0C39 0002 0000313D      1017          CMP.B   #$2,bit3
00001A92  6700 FBF8               1018          BEQ     MOVEIAN1
00001A96  0C39 0003 0000313D      1019          CMP.B   #$3,bit3
00001A9E  6700 FC80               1020          BEQ     MOVEIANI1
00001AA2  0C39 0004 0000313D      1021          CMP.B   #$4,bit3
00001AAA  6700 FD1C               1022          BEQ     MOVEIAND1
00001AAE  0C39 0007 0000313D      1023          CMP.B   #$7,bit3
00001AB6  6700 FA50               1024          BEQ     ADDIMD
00001ABA                          1025  
00001ABA                          1026           
00001ABA                          1027  DIVSW               
00001ABA                          1028          *MOVE.B  D6,D2
00001ABA  141E                    1029          MOVE.B  (A6)+,D2
00001ABC  EB0A                    1030          LSL.B   #5,D2
00001ABE  EA0A                    1031          LSR.B   #5,D2
00001AC0  13C2 0000313E           1032          MOVE.B  D2,bit4
00001AC6                          1033          
00001AC6  1406                    1034          MOVE.B  D6,D2
00001AC8  E50A                    1035          LSL.B   #2,D2
00001ACA  EA0A                    1036          LSR.B   #5,D2
00001ACC  13C2 0000313D           1037          MOVE.B  D2,bit3
00001AD2                          1038          
00001AD2  3E06                    1039          MOVE.W  D6,D7
00001AD4  EF4F                    1040          LSL.W   #7,D7
00001AD6  E04F                    1041          LSR.W   #8,D7 
00001AD8  EA4F                    1042          LSR.W   #5,D7 
00001ADA  13C7 0000313C           1043          MOVE.B  D7,bit2
00001AE0                          1044          
00001AE0  E94E                    1045          LSL.W   #4,D6
00001AE2  E04E                    1046          LSR.W   #8,D6 
00001AE4  EA4E                    1047          LSR.W   #5,D6 
00001AE6  13C6 0000313B           1048          MOVE.B  D6,bit1
00001AEC                          1049          
00001AEC  43F9 00002F22           1050          LEA MMDIVSW,A1
00001AF2  323C 000E               1051          MOVE    #14,D1
00001AF6  4E4F                    1052          TRAP    #15
00001AF8                          1053          
00001AF8  1A3C 0005               1054          MOVE.B  #$5,D5 
00001AFC  183C 0004               1055          MOVE.B  #$4,D4
00001B00                          1056          
00001B00  0C39 0000 0000313D      1057          CMP.B   #$0,bit3           
00001B08  6700 FD5E               1058          BEQ     MOVBDN1
00001B0C  0C39 0001 0000313D      1059          CMP.B   #$1,bit3
00001B14  6700 FB02               1060          BEQ     MOVEAN1
00001B18  0C39 0002 0000313D      1061          CMP.B   #$2,bit3
00001B20  6700 FB6A               1062          BEQ     MOVEIAN1
00001B24  0C39 0003 0000313D      1063          CMP.B   #$3,bit3
00001B2C  6700 FBF2               1064          BEQ     MOVEIANI1
00001B30  0C39 0004 0000313D      1065          CMP.B   #$4,bit3
00001B38  6700 FC8E               1066          BEQ     MOVEIAND1
00001B3C  0C39 0007 0000313D      1067          CMP.B   #$7,bit3
00001B44  6700 F9C2               1068          BEQ     ADDIMD
00001B48                          1069  
00001B48                          1070  NEGW
00001B48  1406                    1071          MOVE.B  D6,D2
00001B4A  EB0A                    1072          LSL.B   #5,D2
00001B4C  EA0A                    1073          LSR.B   #5,D2
00001B4E  13C2 0000313E           1074          MOVE.B  D2,bit4
00001B54                          1075          
00001B54  1406                    1076          MOVE.B  D6,D2
00001B56  E50A                    1077          LSL.B   #2,D2
00001B58  EA0A                    1078          LSR.B   #5,D2
00001B5A  13C2 0000313D           1079          MOVE.B  D2,bit3
00001B60                          1080          
00001B60  3E06                    1081          MOVE.W  D6,D7
00001B62  E14F                    1082          LSL.W   #8,D7
00001B64  E04F                    1083          LSR.W   #8,D7 
00001B66  EC4F                    1084          LSR.W   #6,D7 
00001B68  13C7 0000313C           1085          MOVE.B  D7,bit2
00001B6E                          1086          
00001B6E  43F9 00002F1D           1087          LEA MMNEGW,A1
00001B74  323C 000E               1088          MOVE    #14,D1
00001B78  4E4F                    1089          TRAP    #15
00001B7A                          1090          
00001B7A  183C 0003               1091          MOVE.B  #$3,D4
00001B7E                          1092          
00001B7E  0C39 0000 0000313C      1093          CMP.B   #$0,bit2
00001B86  6700 001A               1094          BEQ     PRINTBYTE
00001B8A  0C39 0001 0000313C      1095          CMP.B   #$1,bit2
00001B92  6700 0062               1096          BEQ     PRINTWORD
00001B96  0C39 0002 0000313C      1097          CMP.B   #$2,bit2
00001B9E  6700 00AA               1098          BEQ     PRINTLONG
00001BA2                          1099          
00001BA2                          1100  PRINTBYTE
00001BA2  43F9 00002EF7           1101      LEA MBYTE,A1
00001BA8  323C 000E               1102      MOVE    #14,D1
00001BAC  4E4F                    1103      TRAP    #15
00001BAE                          1104  
00001BAE  0C39 0000 0000313D      1105      CMP.B   #$0,bit3           
00001BB6  6700 FCB0               1106          BEQ     MOVBDN1
00001BBA  0C39 0001 0000313D      1107          CMP.B   #$1,bit3
00001BC2  6700 FA54               1108          BEQ     MOVEAN1
00001BC6  0C39 0002 0000313D      1109          CMP.B   #$2,bit3
00001BCE  6700 FABC               1110          BEQ     MOVEIAN1
00001BD2  0C39 0003 0000313D      1111          CMP.B   #$3,bit3
00001BDA  6700 FB44               1112          BEQ     MOVEIANI1
00001BDE  0C39 0004 0000313D      1113          CMP.B   #$4,bit3
00001BE6  6700 FBE0               1114          BEQ     MOVEIAND1
00001BEA  0C39 0007 0000313D      1115          CMP.B   #$7,bit3
00001BF2  6700 F9CE               1116          BEQ     ADDIMDDES
00001BF6                          1117      
00001BF6                          1118  PRINTWORD
00001BF6  43F9 00002EFA           1119      LEA MWORD,A1
00001BFC  323C 000E               1120      MOVE    #14,D1
00001C00  4E4F                    1121      TRAP    #15
00001C02                          1122  
00001C02  0C39 0000 0000313D      1123      CMP.B   #$0,bit3           
00001C0A  6700 FC5C               1124          BEQ     MOVBDN1
00001C0E  0C39 0001 0000313D      1125          CMP.B   #$1,bit3
00001C16  6700 FA00               1126          BEQ     MOVEAN1
00001C1A  0C39 0002 0000313D      1127          CMP.B   #$2,bit3
00001C22  6700 FA68               1128          BEQ     MOVEIAN1
00001C26  0C39 0003 0000313D      1129          CMP.B   #$3,bit3
00001C2E  6700 FAF0               1130          BEQ     MOVEIANI1
00001C32  0C39 0004 0000313D      1131          CMP.B   #$4,bit3
00001C3A  6700 FB8C               1132          BEQ     MOVEIAND1
00001C3E  0C39 0007 0000313D      1133          CMP.B   #$7,bit3
00001C46  6700 F97A               1134          BEQ     ADDIMDDES
00001C4A                          1135      
00001C4A                          1136  PRINTLONG
00001C4A  43F9 00002EFD           1137      LEA MLONG,A1
00001C50  323C 000E               1138      MOVE    #14,D1
00001C54  4E4F                    1139      TRAP    #15
00001C56                          1140   
00001C56  0C39 0000 0000313D      1141      CMP.B   #$0,bit3           
00001C5E  6700 FC08               1142          BEQ     MOVBDN1
00001C62  0C39 0001 0000313D      1143          CMP.B   #$1,bit3
00001C6A  6700 F9AC               1144          BEQ     MOVEAN1
00001C6E  0C39 0002 0000313D      1145          CMP.B   #$2,bit3
00001C76  6700 FA14               1146          BEQ     MOVEIAN1
00001C7A  0C39 0003 0000313D      1147          CMP.B   #$3,bit3
00001C82  6700 FA9C               1148          BEQ     MOVEIANI1
00001C86  0C39 0004 0000313D      1149          CMP.B   #$4,bit3
00001C8E  6700 FB38               1150          BEQ     MOVEIAND1
00001C92  0C39 0007 0000313D      1151          CMP.B   #$7,bit3
00001C9A  6700 F926               1152          BEQ     ADDIMDDES
00001C9E                          1153          
00001C9E                          1154  LSLR
00001C9E                          1155          *MOVE.B  D6,D2
00001C9E  141E                    1156          MOVE.B  (A6)+,D2
00001CA0  EB0A                    1157          LSL.B   #5,D2
00001CA2  EA0A                    1158          LSR.B   #5,D2
00001CA4  13C2 0000313E           1159          MOVE.B  D2,bit4
00001CAA                          1160          
00001CAA  1406                    1161          MOVE.B  D6,D2
00001CAC  E50A                    1162          LSL.B   #2,D2
00001CAE  EE0A                    1163          LSR.B   #7,D2
00001CB0  13C2 0000313D           1164          MOVE.B  D2,bit3
00001CB6                          1165          
00001CB6  3E06                    1166          MOVE.W  D6,D7
00001CB8  E14F                    1167          LSL.W   #8,D7
00001CBA  E04F                    1168          LSR.W   #8,D7 
00001CBC  EC4F                    1169          LSR.W   #6,D7 
00001CBE  13C7 0000313C           1170          MOVE.B  D7,bit2
00001CC4                          1171          
00001CC4  3E06                    1172          MOVE.W  D6,D7
00001CC6  EF4F                    1173          LSL.W   #7,D7
00001CC8  E04F                    1174          LSR.W   #8,D7 
00001CCA  EE4F                    1175          LSR.W   #7,D7
00001CCC  13C7 0000313B           1176          MOVE.B  D7,bit1   
00001CD2                          1177      
00001CD2  1806                    1178          MOVE.B  D6,D4
00001CD4                          1179          
00001CD4  3E06                    1180          MOVE.W  D6,D7
00001CD6  E94F                    1181          LSL.W   #4,D7
00001CD8  E04F                    1182          LSR.W   #8,D7 
00001CDA  EA4F                    1183          LSR.W   #5,D7
00001CDC  13C7 0000313A           1184          MOVE.B  D7,bit0 
00001CE2                          1185          
00001CE2  1E06                    1186          MOVE.B  D6,D7
00001CE4  E90F                    1187          LSL.B   #4,D7
00001CE6  EE0F                    1188          LSR.B   #7,D7
00001CE8                          1189          
00001CE8  0C39 0003 0000313C      1190          CMP.B   #3,bit2
00001CF0  6700 00B4               1191          BEQ     LSLRMEMH
00001CF4                          1192          
00001CF4  BE3C 0000               1193          CMP.B   #0,D7
00001CF8  6700 0028               1194          BEQ     ASLRMEMH
00001CFC                          1195          
00001CFC  1606                    1196          MOVE.B  D6,D3
00001CFE  E70B                    1197          LSL.B   #3,D3
00001D00  EC0B                    1198          LSR.B   #6,D3
00001D02  B63C 0003               1199          CMP.B   #3,D3
00001D06  6700 00CA               1200          BEQ     RORL
00001D0A                          1201          
00001D0A  0C39 0001 0000313B      1202          CMP.B   #$1,bit1
00001D12  6700 013E               1203          BEQ     PRINTLSL
00001D16  0C39 0000 0000313B      1204          CMP.B   #$0,bit1
00001D1E  6700 0280               1205          BEQ     PRINTLSR
00001D22                          1206          
00001D22                          1207  ASLRMEMH
00001D22  1A3C 0004               1208          MOVE.B  #4,D5
00001D26  0C39 0001 0000313B      1209          CMP.B   #$1,bit1
00001D2E  6700 000E               1210          BEQ     PRINTASL
00001D32  0C39 0000 0000313B      1211          CMP.B   #$0,bit1
00001D3A  6700 0036               1212          BEQ     PRINTASR
00001D3E                          1213          
00001D3E                          1214  PRINTASL
00001D3E  43F9 00002F5C           1215          LEA MASL,A1
00001D44  303C 000E               1216          MOVE    #14,D0
00001D48  4E4F                    1217          TRAP    #15
00001D4A                          1218          
00001D4A  0C39 0000 0000313C      1219          CMP.B   #$0,bit2
00001D52  6700 017C               1220          BEQ     PRINTB
00001D56  0C39 0001 0000313C      1221          CMP.B   #$1,bit2
00001D5E  6700 01A4               1222          BEQ     PRINTW
00001D62  0C39 0002 0000313C      1223          CMP.B   #$2,bit2
00001D6A  6700 01CC               1224          BEQ     PRINTL
00001D6E  6000 0116               1225          BRA     LSLRMEM
00001D72                          1226          
00001D72                          1227  PRINTASR        
00001D72  43F9 00002F60           1228          LEA MASR,A1
00001D78  303C 000E               1229          MOVE    #14,D0
00001D7C  4E4F                    1230          TRAP    #15
00001D7E                          1231          
00001D7E  0C39 0000 0000313C      1232          CMP.B   #$0,bit2
00001D86  6700 0148               1233          BEQ     PRINTB
00001D8A  0C39 0001 0000313C      1234          CMP.B   #$1,bit2
00001D92  6700 0170               1235          BEQ     PRINTW
00001D96  0C39 0002 0000313C      1236          CMP.B   #$2,bit2
00001D9E  6700 0198               1237          BEQ     PRINTL
00001DA2  6000 00E2               1238          BRA     LSLRMEM
00001DA6                          1239          
00001DA6                          1240  LSLRMEMH
00001DA6  3E06                    1241          MOVE.W  D6,D7
00001DA8  ED4F                    1242          LSL.W   #6,D7
00001DAA  E04F                    1243          LSR.W   #8,D7
00001DAC  EE4F                    1244          LSR.W   #7,D7
00001DAE  BE3C 0000               1245          CMP.B   #0,D7
00001DB2  6700 FF6E               1246          BEQ     ASLRMEMH
00001DB6                          1247          
00001DB6  1A3C 0004               1248          MOVE.B  #4,D5
00001DBA  0C39 0001 0000313B      1249          CMP.B   #$1,bit1
00001DC2  6700 008E               1250          BEQ     PRINTLSL
00001DC6  0C39 0000 0000313B      1251          CMP.B   #$0,bit1
00001DCE  6700 01D0               1252          BEQ     PRINTLSR
00001DD2                          1253  RORL
00001DD2  0C39 0001 0000313B      1254          CMP.B   #$1,bit1
00001DDA  6700 000E               1255          BEQ     PRINTROL
00001DDE  0C39 0000 0000313B      1256          CMP.B   #$0,bit1
00001DE6  6700 0036               1257          BEQ     PRINTROR
00001DEA                          1258  PRINTROL
00001DEA  43F9 00002F0D           1259          LEA MROL,A1
00001DF0  303C 000E               1260          MOVE    #14,D0
00001DF4  4E4F                    1261          TRAP    #15
00001DF6                          1262          
00001DF6  0C39 0000 0000313C      1263          CMP.B   #$0,bit2
00001DFE  6700 00D0               1264          BEQ     PRINTB
00001E02  0C39 0001 0000313C      1265          CMP.B   #$1,bit2
00001E0A  6700 00F8               1266          BEQ     PRINTW
00001E0E  0C39 0002 0000313C      1267          CMP.B   #$2,bit2
00001E16  6700 0120               1268          BEQ     PRINTL
00001E1A  6000 006A               1269          BRA     LSLRMEM
00001E1E                          1270  PRINTROR
00001E1E  43F9 00002F11           1271          LEA MROR,A1
00001E24  323C 000E               1272          MOVE    #14,D1
00001E28  4E4F                    1273          TRAP    #15
00001E2A                          1274          
00001E2A  0C39 0000 0000313C      1275          CMP.B   #$0,bit2
00001E32  6700 009C               1276          BEQ     PRINTB
00001E36  0C39 0001 0000313C      1277          CMP.B   #$1,bit2
00001E3E  6700 00C4               1278          BEQ     PRINTW
00001E42  0C39 0002 0000313C      1279          CMP.B   #$2,bit2
00001E4A  6700 00EC               1280          BEQ     PRINTL
00001E4E  6000 0036               1281          BRA     LSLRMEM
00001E52                          1282  PRINTLSL
00001E52  43F9 00002F15           1283          LEA MLSL,A1
00001E58  303C 000E               1284          MOVE    #14,D0
00001E5C  4E4F                    1285          TRAP    #15
00001E5E                          1286          
00001E5E  0C39 0000 0000313C      1287          CMP.B   #$0,bit2
00001E66  6700 0068               1288          BEQ     PRINTB
00001E6A  0C39 0001 0000313C      1289          CMP.B   #$1,bit2
00001E72  6700 0090               1290          BEQ     PRINTW
00001E76  0C39 0002 0000313C      1291          CMP.B   #$2,bit2
00001E7E  6700 00B8               1292          BEQ     PRINTL
00001E82  6000 0002               1293          BRA     LSLRMEM
00001E86                          1294          
00001E86                          1295  LSLRMEM
00001E86                          1296          
00001E86  E50C                    1297          LSL.B   #2,D4
00001E88  EA0C                    1298          LSR.B   #5,D4
00001E8A  13C4 0000313D           1299          MOVE.B  D4,bit3
00001E90                          1300          
00001E90  183C 0003               1301          MOVE.B  #$3,D4
00001E94                          1302          
00001E94  0C39 0002 0000313D      1303          CMP.B   #$2,bit3
00001E9C  6700 F7EE               1304          BEQ     MOVEIAN1
00001EA0  0C39 0003 0000313D      1305          CMP.B   #$3,bit3
00001EA8  6700 F876               1306          BEQ     MOVEIANI1
00001EAC  0C39 0004 0000313D      1307          CMP.B   #$4,bit3
00001EB4  6700 F912               1308          BEQ     MOVEIAND1
00001EB8                          1309          
00001EB8  43F9 00002ED5           1310          LEA TAB,A1
00001EBE  123C 0003               1311          MOVE.B  #3,D1
00001EC2  4E4F                    1312          TRAP    #15 
00001EC4                          1313          
00001EC4  0C39 0007 0000313D      1314          CMP.B   #$7,bit3
00001ECC  6700 F6F4               1315          BEQ     ADDIMDDES
00001ED0                          1316  PRINTB
00001ED0  43F9 00002EF3           1317          LEA MDOT,A1
00001ED6  303C 000E               1318          MOVE    #14,D0
00001EDA  4E4F                    1319          TRAP    #15
00001EDC                          1320  
00001EDC  43F9 00002EF7           1321          LEA MBYTE,A1
00001EE2  303C 000E               1322          MOVE    #14,D0
00001EE6  4E4F                    1323          TRAP    #15
00001EE8                          1324          
00001EE8  3A3C 0006               1325          MOVE #$6,D5
00001EEC                          1326          
00001EEC  0C39 0000 0000313D      1327          CMP.B   #0,bit3
00001EF4  6700 0076               1328          BEQ     PRINTLSLRCOUNT
00001EF8  0C39 0001 0000313D      1329          CMP.B   #1,bit3
00001F00  6700 F966               1330          BEQ     MOVBDN1
00001F04                          1331  
00001F04                          1332  PRINTW 
00001F04  43F9 00002EF3           1333          LEA MDOT,A1
00001F0A  303C 000E               1334          MOVE    #14,D0
00001F0E  4E4F                    1335          TRAP    #15
00001F10                          1336  
00001F10  43F9 00002EFA           1337          LEA MWORD,A1
00001F16  303C 000E               1338          MOVE    #14,D0
00001F1A  4E4F                    1339          TRAP    #15
00001F1C                          1340          
00001F1C  3A3C 0006               1341          MOVE #$6,D5
00001F20                          1342          
00001F20  0C39 0000 0000313D      1343          CMP.B   #0,bit3
00001F28  6700 0042               1344          BEQ     PRINTLSLRCOUNT
00001F2C  0C39 0001 0000313D      1345          CMP.B   #1,bit3
00001F34  6700 F932               1346          BEQ     MOVBDN1
00001F38                          1347  
00001F38                          1348  PRINTL
00001F38  43F9 00002EF3           1349          LEA MDOT,A1
00001F3E  303C 000E               1350          MOVE    #14,D0
00001F42  4E4F                    1351          TRAP    #15
00001F44                          1352  
00001F44  43F9 00002EFD           1353          LEA MLONG,A1
00001F4A  303C 000E               1354          MOVE    #14,D0
00001F4E  4E4F                    1355          TRAP    #15
00001F50                          1356  
00001F50  3A3C 0006               1357          MOVE #$6,D5
00001F54                          1358          
00001F54  0C39 0000 0000313D      1359          CMP.B   #0,bit3
00001F5C  6700 000E               1360          BEQ     PRINTLSLRCOUNT
00001F60  0C39 0001 0000313D      1361          CMP.B   #1,bit3
00001F68  6700 F8FE               1362          BEQ     MOVBDN1    
00001F6C                          1363  
00001F6C                          1364  PRINTLSLRCOUNT
00001F6C  43F9 00002ED5           1365          LEA TAB,A1
00001F72  303C 000E               1366          MOVE    #14,D0
00001F76  4E4F                    1367          TRAP    #15
00001F78                          1368          
00001F78  43F9 00002EE3           1369          LEA HASH,A1
00001F7E  303C 000E               1370          MOVE    #14,D0
00001F82  4E4F                    1371          TRAP    #15
00001F84                          1372          
00001F84  1239 0000313A           1373          MOVE.B  bit0,D1
00001F8A  303C 0003               1374          MOVE    #3,D0
00001F8E  4E4F                    1375          TRAP    #15
00001F90                          1376          
00001F90  43F9 00002ED9           1377          LEA COMMA,A1
00001F96  303C 000E               1378          MOVE    #14,D0
00001F9A  4E4F                    1379          TRAP    #15
00001F9C                          1380          
00001F9C  6000 F97E               1381          BRA LSLRDESD
00001FA0                          1382    
00001FA0                          1383  PRINTLSR
00001FA0  43F9 00002F19           1384          LEA MLSR,A1
00001FA6  323C 000E               1385          MOVE    #14,D1
00001FAA  4E4F                    1386          TRAP    #15
00001FAC                          1387          
00001FAC  0C39 0000 0000313C      1388          CMP.B   #$0,bit2
00001FB4  6700 FF1A               1389          BEQ     PRINTB
00001FB8  0C39 0001 0000313C      1390          CMP.B   #$1,bit2
00001FC0  6700 FF42               1391          BEQ     PRINTW
00001FC4  0C39 0002 0000313C      1392          CMP.B   #$2,bit2
00001FCC  6700 FF6A               1393          BEQ     PRINTL
00001FD0  6000 FEB4               1394          BRA     LSLRMEM
00001FD4                          1395  
00001FD4                          1396  ******************************************************************************************************
00001FD4                          1397  *   Branch, branch to subroutine, and branch conditionally
00001FD4                          1398  *   BRA, BSR, Bcc
00001FD4                          1399  
00001FD4                          1400  BCC
00001FD4  13C5 0000313B           1401          MOVE.B  D5,bit1             Moves condition code to bit1
00001FDA  1A1E                    1402          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001FDC  13C5 0000313C           1403          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001FE2  280E                    1404          MOVE.L  A6,D4               Moves current address to D4 register
00001FE4                          1405  
00001FE4  BA3C 0000               1406          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001FE8  6700 0010               1407          BEQ     BCCWORD
00001FEC  BA3C 00FF               1408          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001FF0  6700 0010               1409          BEQ     BCCLONG             Else, displacement is 8-bits
00001FF4                          1410  
00001FF4                          1411          * Calculates 8-bit displacement
00001FF4                          1412          * 8-bit displacement is already in D5
00001FF4                          1413          * Adds displacement to current address
00001FF4  D805                    1414          ADD.B   D5,D4               Adds the displacement to current address
00001FF6  6000 0012               1415          BRA     BCCNEXT
00001FFA                          1416  
00001FFA                          1417  * Calculates 16-bit displacement
00001FFA                          1418  BCCWORD
00001FFA  3A1E                    1419          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001FFC  D845                    1420          ADD.W   D5,D4               Adds the displacement to current address
00001FFE  6000 000A               1421          BRA     BCCNEXT
00002002                          1422  
00002002                          1423  * Calculates 32-bit displacement
00002002                          1424  BCCLONG
00002002  2A1E                    1425          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00002004  D885                    1426          ADD.L   D5,D4               Adds the displacement to current address
00002006  6000 0002               1427          BRA     BCCNEXT
0000200A                          1428  
0000200A                          1429  * Does the actual calculation
0000200A                          1430  * Adds the displacement to the current address
0000200A                          1431  BCCNEXT
0000200A  6100 000E               1432          BSR     BCCDISP             Displays branch op-code
0000200E  45F9 00002C82           1433          LEA     ENDNEWLINE,A2
00002014  2E04                    1434          MOVE.L  D4,D7
00002016  6000 F0DA               1435          BRA     DISPADDRSTART
0000201A                          1436  
0000201A                          1437  BCCDISP
0000201A  B43C 0000               1438          CMP.B   #$0,D2
0000201E  6700 0026               1439          BEQ     BCCBRA
00002022  B43C 0007               1440          CMP.B   #$7,D2
00002026  6700 0028               1441          BEQ     BCCBEQ
0000202A  B43C 0006               1442          CMP.B   #$6,D2
0000202E  6700 002A               1443          BEQ     BCCBNE
00002032  B43C 000D               1444          CMP.B   #$D,D2
00002036  6700 002C               1445          BEQ     BCCBLT
0000203A  B43C 0002               1446          CMP.B   #$2,D2
0000203E  6700 002E               1447          BEQ     BCCBHI
00002042                          1448  
00002042  6000 0BCC               1449          BRA     INVOP
00002046                          1450  
00002046                          1451  BCCBRA
00002046  43F9 00002FCA           1452          LEA     MBRA,A1
0000204C  6000 002A               1453          BRA     BCCPRINT
00002050                          1454  BCCBEQ
00002050  43F9 00002FBA           1455          LEA     MBEQ,A1
00002056  6000 0020               1456          BRA     BCCPRINT
0000205A                          1457  BCCBNE
0000205A  43F9 00002FBE           1458          LEA     MBNE,A1
00002060  6000 0016               1459          BRA     BCCPRINT
00002064                          1460  BCCBLT
00002064  43F9 00002FC2           1461          LEA     MBLT,A1
0000206A  6000 000C               1462          BRA     BCCPRINT
0000206E                          1463  BCCBHI
0000206E  43F9 00002FC6           1464          LEA     MBHI,A1
00002074  6000 0002               1465          BRA     BCCPRINT
00002078                          1466  BCCPRINT
00002078  103C 000E               1467          MOVE.B  #14,D0
0000207C  4E4F                    1468          TRAP    #15
0000207E  43F9 00002ED5           1469          LEA     TAB,A1
00002084  4E4F                    1470          TRAP    #15
00002086  4E75                    1471          RTS
00002088                          1472  
00002088                          1473  ******************************************************************************************************
00002088                          1474  *   Immediate data arithmetic operations
00002088                          1475  *   SUBI
00002088                          1476  
00002088  13C5 0000313B           1477  IMD     MOVE.B  D5,bit1
0000208E  141E                    1478          MOVE.B  (A6)+,D2
00002090                          1479          
00002090  3805                    1480          MOVE    D5,D4
00002092  C83C 0001               1481          AND.B   #$0001,D4
00002096  B83C 0001               1482          CMP.B   #$1,D4
0000209A  6700 F1C8               1483          BEQ     BTST
0000209E                          1484  
0000209E  DE02                    1485          ADD.B   D2,D7
000020A0                          1486  
000020A0  1602                    1487          MOVE.B  D2,D3               Copies data at D2 to D3
000020A2                          1488          *   this gets digit in 10's place
000020A2  E80B                    1489          LSR.B   #4,D3               Shifts right to get rid of 1's place
000020A4                          1490          *   this gets digit in 1's place
000020A4  E90A                    1491          LSL.B   #4,D2               Shifts left to get rid of 10's place
000020A6  E80A                    1492          LSR.B   #4,D2               Shifts back right into 1's place
000020A8                          1493  
000020A8                          1494          *   D3 holds digit in 10's place
000020A8                          1495          *   D2 holds digit in 1's place
000020A8                          1496  
000020A8  E20B                    1497          LSR.B   #1,D3
000020AA  6400 0004               1498          BCC     IMD2
000020AE  5404                    1499          ADD.B   #$2,D4
000020B0  E20B                    1500  IMD2    LSR.B   #1,D3
000020B2  6400 0004               1501          BCC     IMD3
000020B6  5804                    1502          ADD.B   #$4,D4
000020B8  B43C 0007               1503  IMD3    CMP.B   #$7,D2
000020BC  6D00 0006               1504          BLT     IMD4
000020C0  5204                    1505          ADD.B   #$1,D4
000020C2  5102                    1506          SUB.B   #$8,D2
000020C4                          1507  
000020C4                          1508          *   Stores them into addr
000020C4  13C3 0000313C           1509  IMD4    MOVE.B  D3,bit2
000020CA  13C4 0000313D           1510          MOVE.B  D4,bit3
000020D0  13C2 0000313E           1511          MOVE.B  D2,bit4
000020D6                          1512  
000020D6                          1513  **************************
000020D6                          1514  * This finds the size of the operation
000020D6                          1515  
000020D6  0C39 0000 0000313C      1516          CMP.B   #$0,bit2
000020DE  6700 007E               1517          BEQ     IMDBYTE
000020E2  0C39 0001 0000313C      1518          CMP.B   #$1,bit2
000020EA  6700 0082               1519          BEQ     IMDWORD
000020EE  0C39 0002 0000313C      1520          CMP.B   #$2,bit2
000020F6  6700 0084               1521          BEQ     IMDLONG
000020FA  6000 0B14               1522          BRA     INVOP
000020FE                          1523  
000020FE                          1524  *************************************************************
000020FE                          1525  * Display IMD op-code
000020FE                          1526  IMDPRINT
000020FE  0C39 0000 0000313B      1527          CMP.B   #$0,bit1
00002106  6700 0026               1528          BEQ     IMDPRINTORI
0000210A  0C39 0004 0000313B      1529          CMP.B   #$4,bit1
00002112  6700 0024               1530          BEQ     IMDPRINTSUBI
00002116  0C39 000A 0000313B      1531          CMP.B   #$A,bit1
0000211E  6700 0022               1532          BEQ     IMDPRINTEORI
00002122  0C39 000C 0000313B      1533          CMP.B   #$C,bit1
0000212A  6700 0020               1534          BEQ     IMDPRINTCMPI
0000212E                          1535  
0000212E                          1536  IMDPRINTORI
0000212E  43F9 00002F84           1537          LEA     MORI,A1
00002134  6000 0020               1538          BRA     IMDPRINTEND
00002138                          1539  
00002138                          1540  IMDPRINTSUBI
00002138  43F9 00002F7E           1541          LEA     MSUBI,A1
0000213E  6000 0016               1542          BRA     IMDPRINTEND
00002142                          1543  
00002142                          1544  IMDPRINTEORI
00002142  43F9 00002FAE           1545          LEA     MEORI,A1
00002148  6000 000C               1546          BRA     IMDPRINTEND
0000214C                          1547  
0000214C                          1548  IMDPRINTCMPI
0000214C  43F9 00002F9D           1549          LEA     MCMPI,A1
00002152  6000 0002               1550          BRA     IMDPRINTEND
00002156                          1551  
00002156                          1552  IMDPRINTEND
00002156  103C 000E               1553          MOVE.B  #14,D0
0000215A  4E4F                    1554          TRAP    #15
0000215C  4E75                    1555          RTS
0000215E                          1556  
0000215E                          1557  *************************************************************
0000215E                          1558  * Immediate data operation size BYTE
0000215E                          1559  IMDBYTE
0000215E  619E                    1560          BSR     IMDPRINT
00002160  43F9 00002EF7           1561          LEA     MBYTE,A1
00002166                          1562  
00002166                          1563          * Moves size to D4, needed to use DISPEA
00002166  183C 0001               1564          MOVE.B  #$1,D4
0000216A  6000 001A               1565          BRA     IMDEA
0000216E                          1566  
0000216E                          1567  *************************************************************
0000216E                          1568  * Immediate data operation size WORD
0000216E                          1569  IMDWORD
0000216E  618E                    1570          BSR     IMDPRINT
00002170  43F9 00002EFA           1571          LEA     MWORD,A1
00002176                          1572  
00002176  1803                    1573          MOVE.B  D3,D4
00002178  6000 000C               1574          BRA     IMDEA
0000217C                          1575  
0000217C                          1576  
0000217C                          1577  *************************************************************
0000217C                          1578  * Immediate data operation size LONG
0000217C                          1579  IMDLONG
0000217C  6180                    1580          BSR     IMDPRINT
0000217E  43F9 00002EFD           1581          LEA     MLONG,A1
00002184                          1582          
00002184                          1583  
00002184                          1584          * Moves size to D4, needed to use DISPEA
00002184  1803                    1585          MOVE.B  D3,D4
00002186                          1586  
00002186                          1587  IMDEA
00002186                          1588          * This prints out the size and creates tab
00002186  103C 000E               1589          MOVE.B  #14,D0
0000218A  4E4F                    1590          TRAP    #15
0000218C  43F9 00002ED5           1591          LEA     TAB,A1
00002192  103C 000E               1592          MOVE.B  #14,D0
00002196  4E4F                    1593          TRAP    #15
00002198                          1594          * Loads return address into A2
00002198  45F9 000021A2           1595          LEA     IMDEA2,A2
0000219E  6000 09F6               1596          BRA     DISPEA
000021A2                          1597  IMDEA2
000021A2  43F9 00002ED9           1598          LEA     COMMA,A1
000021A8  103C 000E               1599          MOVE.B  #14,D0
000021AC  4E4F                    1600          TRAP    #15
000021AE                          1601  
000021AE  45F9 000021B8           1602          LEA     IMDEA3,A2
000021B4  6000 0890               1603          BRA     SUBEA
000021B8                          1604  IMDEA3
000021B8  6000 0AC8               1605          BRA     ENDNEWLINE
000021BC                          1606  
000021BC                          1607  ******************************************************************************************************
000021BC                          1608  * Miscellaneous section
000021BC                          1609  *   Not goes here
000021BC                          1610  
000021BC                          1611  MISC
000021BC  13C5 0000313B           1612          MOVE.B  D5,bit1
000021C2  141E                    1613          MOVE.B  (A6)+,D2
000021C4                          1614  
000021C4  DE02                    1615          ADD.B   D2,D7
000021C6                          1616  
000021C6  1602                    1617          MOVE.B  D2,D3               Copies data at D2 to D3
000021C8                          1618          *   this gets digit in 10's place
000021C8  E80B                    1619          LSR.B   #4,D3               Shifts right to get rid of 1's place
000021CA                          1620          *   this gets digit in 1's place
000021CA  E90A                    1621          LSL.B   #4,D2               Shifts left to get rid of 10's place
000021CC  E80A                    1622          LSR.B   #4,D2               Shifts back right into 1's place
000021CE                          1623  
000021CE                          1624  
000021CE  3806                    1625          MOVE.W  D6,D4
000021D0  E94C                    1626          LSL.W   #$4,D4
000021D2  E04C                    1627          LSR.W   #$8,D4
000021D4  E44C                    1628          LSR.W   #$2,D4
000021D6  13C4 0000313C           1629          MOVE.B  D4,bit2
000021DC  0C39 003A 0000313C      1630          CMP.B   #$3A,bit2
000021E4  6700 F032               1631          BEQ     JSR
000021E8                          1632          *   D5 is bit1
000021E8                          1633          *   D3 is bit2
000021E8                          1634          *   D2 is bit3
000021E8                          1635  
000021E8                          1636  **************************
000021E8                          1637  * This finds the size of the operation
000021E8                          1638          * D5 is bit1
000021E8  BA3C 0004               1639          CMP.B   #$4,D5
000021EC  6700 F95A               1640          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
000021F0  BA3C 0006               1641          CMP.B   #$6,D5              Branches to NOT section
000021F4  6700 006E               1642          BEQ     MISCNOT
000021F8  BA3C 000E               1643          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
000021FC  6700 0006               1644          BEQ     MISCBIT2
00002200  6000 0022               1645          BRA     MISCCHECKM
00002204                          1646  
00002204                          1647  MISCBIT2
00002204                          1648          * D3 is bit2
00002204  B63C 0007               1649          CMP.B   #$7,D3              Branches to NOP
00002208  6700 0006               1650          BEQ     MISCBIT3
0000220C  6000 0A02               1651          BRA     INVOP
00002210                          1652  
00002210                          1653  MISCBIT3
00002210                          1654          * D2 is bit3
00002210  B43C 0001               1655          CMP.B   #$1,D2              Branches to NOP
00002214  6700 002E               1656          BEQ     MISCNOP
00002218  B43C 0005               1657          CMP.B   #$5,D2              Branches to NOP
0000221C  6700 0036               1658          BEQ     MISCRTS
00002220  6000 09EE               1659          BRA     INVOP
00002224                          1660  
00002224                          1661  
00002224                          1662  MISCCHECKM
00002224  1805                    1663          MOVE.B  D5,D4
00002226  C83C 0008               1664          AND.B   #$8,D4
0000222A  B83C 0008               1665          CMP.B   #$8,D4
0000222E  6600 09E0               1666          BNE     INVOP
00002232  1803                    1667          MOVE.B  D3,D4
00002234  C83C 0008               1668          AND.B   #$8,D4
00002238  B83C 0008               1669          CMP.B   #$8,D4
0000223C  6600 09D2               1670          BNE     INVOP
00002240  6000 00EE               1671          BRA     MISCMOVEM
00002244                          1672  
00002244                          1673  ******************************************************
00002244                          1674  * NOP
00002244                          1675  * No operation
00002244                          1676  MISCNOP
00002244  43F9 00002FCE           1677          LEA     MNOP,A1
0000224A  103C 000E               1678          MOVE.B  #14,D0
0000224E  4E4F                    1679          TRAP    #15
00002250                          1680  
00002250  6000 0A30               1681          BRA     ENDNEWLINE          Goes to next opcode
00002254                          1682  
00002254                          1683  ******************************************************
00002254                          1684  * RTS
00002254                          1685  * Return to sub routine
00002254                          1686  MISCRTS
00002254  43F9 00002FD2           1687          LEA     MRTS,A1
0000225A  103C 000E               1688          MOVE.B  #14,D0
0000225E  4E4F                    1689          TRAP    #15
00002260                          1690  
00002260  6000 0A20               1691          BRA     ENDNEWLINE          Goes to next opcode
00002264                          1692  
00002264                          1693  ******************************************************
00002264                          1694  * NOT
00002264                          1695  * Reuses some of IMD section to display because they have similar format
00002264                          1696  *  (I was kinda lazy too)
00002264                          1697  MISCNOT
00002264  E20B                    1698          LSR.B   #1,D3
00002266  6400 0004               1699          BCC     MISCNOT2
0000226A  5404                    1700          ADD.B   #$2,D4
0000226C                          1701  MISCNOT2   
0000226C  E20B                    1702          LSR.B   #1,D3
0000226E  6400 0004               1703          BCC     MISCNOT3
00002272  5804                    1704          ADD.B   #$4,D4
00002274                          1705  MISCNOT3   
00002274  B43C 0007               1706          CMP.B   #$7,D2
00002278  6D00 0006               1707          BLT     MISCNOT4
0000227C  5204                    1708          ADD.B   #$1,D4
0000227E  5102                    1709          SUB.B   #$8,D2
00002280                          1710  
00002280                          1711          *   Stores them into addr
00002280                          1712  MISCNOT4
00002280  13C3 0000313C           1713          MOVE.B  D3,bit2
00002286  13C4 0000313D           1714          MOVE.B  D4,bit3
0000228C  13C2 0000313E           1715          MOVE.B  D2,bit4
00002292                          1716  
00002292  B63C 0000               1717          CMP.B   #$0,D3
00002296  6700 0016               1718          BEQ     MISCBYTE
0000229A  B63C 0001               1719          CMP.B   #$1,D3
0000229E  6700 0020               1720          BEQ     MISCWORD
000022A2  B63C 0002               1721          CMP.B   #$2,D3
000022A6  6700 0028               1722          BEQ     MISCLONG
000022AA  6000 0964               1723          BRA     INVOP
000022AE                          1724  *************************************************************
000022AE                          1725  * Immediate data operation size BYTE
000022AE                          1726  MISCBYTE
000022AE  6100 004C               1727          BSR     MISCPRINT
000022B2  43F9 00002EF7           1728          LEA     MBYTE,A1
000022B8                          1729  
000022B8                          1730          * Moves size to D4, needed to use DISPEA
000022B8  183C 0001               1731          MOVE.B  #$1,D4
000022BC  6000 001E               1732          BRA     MISCEA
000022C0                          1733  
000022C0                          1734  *************************************************************
000022C0                          1735  * Immediate data operation size WORD
000022C0                          1736  MISCWORD
000022C0  6100 003A               1737          BSR     MISCPRINT
000022C4  43F9 00002EFA           1738          LEA     MWORD,A1
000022CA                          1739  
000022CA  1803                    1740          MOVE.B  D3,D4
000022CC  6000 000E               1741          BRA     MISCEA
000022D0                          1742  
000022D0                          1743  
000022D0                          1744  *************************************************************
000022D0                          1745  * Immediate data operation size LONG
000022D0                          1746  MISCLONG
000022D0  6100 002A               1747          BSR     MISCPRINT
000022D4  43F9 00002EFD           1748          LEA     MLONG,A1
000022DA                          1749  
000022DA                          1750          * Moves size to D4, needed to use DISPEA
000022DA  1803                    1751          MOVE.B  D3,D4
000022DC                          1752  
000022DC                          1753  MISCEA
000022DC  103C 000E               1754          MOVE.B  #14,D0
000022E0  4E4F                    1755          TRAP    #15
000022E2  43F9 00002ED5           1756          LEA     TAB,A1
000022E8  103C 000E               1757          MOVE.B  #14,D0
000022EC  4E4F                    1758          TRAP    #15
000022EE                          1759  
000022EE  45F9 000022F8           1760          LEA     MISCEA2,A2
000022F4  6000 0750               1761          BRA     SUBEA
000022F8                          1762  MISCEA2
000022F8  6000 0988               1763          BRA     ENDNEWLINE
000022FC                          1764  
000022FC                          1765  *************************************************************
000022FC                          1766  * Display IMD op-code
000022FC                          1767  MISCPRINT
000022FC  0C39 0004 0000313B      1768          CMP.B   #$4,bit1
00002304  6700 0018               1769          BEQ     MISCPRINTNEG
00002308  0C39 0006 0000313B      1770          CMP.B   #$6,bit1
00002310  6700 0002               1771          BEQ     MISCPRINTNOT
00002314                          1772  
00002314                          1773  MISCPRINTNOT
00002314  43F9 00002F89           1774          LEA     MNOT,A1
0000231A  6000 000C               1775          BRA     MISCPRINTEND
0000231E                          1776  
0000231E                          1777  MISCPRINTNEG
0000231E  43F9 00002F94           1778          LEA     MNEG,A1
00002324  6000 0002               1779          BRA     MISCPRINTEND
00002328                          1780  
00002328                          1781  MISCPRINTEND
00002328  103C 000E               1782          MOVE.B  #14,D0
0000232C  4E4F                    1783          TRAP    #15
0000232E  4E75                    1784          RTS
00002330                          1785  
00002330                          1786  
00002330                          1787  *************************************************************************
00002330                          1788  * MOVEM stuff
00002330                          1789          *   D5 is bit1
00002330                          1790          *   D3 is bit2
00002330                          1791          *   D2 is bit3
00002330                          1792  MISCMOVEM
00002330  1805                    1793          MOVE.B  D5,D4               Gets the dr field and stores it into D5
00002332  4245                    1794          CLR     D5                  Moves 0 to D5
00002334  0804 0002               1795          BTST    #2,D4               Checks the bit at spot 2
00002338  6700 0006               1796          BEQ     MISCMOVEM2          Moves 1 to D5 if it is 1
0000233C  1A3C 0001               1797          MOVE.B  #1,D5               Else, it will skip it
00002340                          1798  
00002340                          1799  MISCMOVEM2
00002340  4246                    1800          CLR     D6                  Clears D6, setting it to 0
00002342  1803                    1801          MOVE.B  D3,D4               Gets the size field and stores it into D6
00002344  0804 0002               1802          BTST    #2,D4               Checks the bit at spot 2
00002348  6700 0006               1803          BEQ     MISCMOVEM3          Moves 1 to D5 if it is 1,
0000234C  1C3C 0001               1804          MOVE.B  #1,D6               Else, it will skip it. 
00002350                          1805  
00002350                          1806  MISCMOVEM3
00002350  C63C 0003               1807          AND.B   #$3,D3              Gets ride of the first 2 bits
00002354  E30B                    1808          LSL.B   #1,D3               Shifts it over 1 to make room for last bit
00002356  0882 0003               1809          BCLR    #3,D2               Checks furthest left bit and set it to 0
0000235A  6700 0006               1810          BEQ     MISCMOVEM4
0000235E  08C3 0000               1811          BSET    #0,D3               If bit was 1, adds 1 to mode
00002362                          1812  
00002362                          1813      * bit1 is in D5 dr field
00002362                          1814      * bit2 is in D6 size
00002362                          1815      * bit3 is in D3 mode
00002362                          1816      * bit4 is in D2 reg
00002362                          1817  MISCMOVEM4
00002362  13C5 0000313B           1818          MOVE.B  D5,bit1
00002368  13C6 0000313C           1819          MOVE.B  D6,bit2
0000236E  13C3 0000313D           1820          MOVE.B  D3,bit3
00002374  13C2 0000313E           1821          MOVE.B  D2,bit4
0000237A                          1822  
0000237A                          1823      * Prints out MOVEM and size + tab
0000237A  43F9 00002F55           1824          LEA     MMOVEM,A1
00002380  103C 000E               1825          MOVE.B  #14,D0
00002384  4E4F                    1826          TRAP    #15
00002386                          1827  
00002386  BC3C 0001               1828          CMP.B   #1,D6
0000238A  6700 000C               1829          BEQ     MISCMMSIZEL
0000238E  43F9 00002EFA           1830          LEA     MWORD,A1
00002394  6000 0008               1831          BRA     MISCMMPRINTSIZE
00002398                          1832  
00002398                          1833  MISCMMSIZEL
00002398  43F9 00002EFD           1834          LEA     MLONG,A1
0000239E                          1835  
0000239E                          1836  MISCMMPRINTSIZE
0000239E  4E4F                    1837          TRAP    #15
000023A0  43F9 00002ED5           1838          LEA     TAB,A1
000023A6  4E4F                    1839          TRAP    #15
000023A8                          1840  
000023A8  3C1E                    1841          MOVE.W  (A6)+,D6
000023AA  BA3C 0000               1842          CMP.B   #0,D5
000023AE  6700 0006               1843          BEQ     MISCMMPREDECCHECK
000023B2  6000 007C               1844          BRA     MISCMMPOSTINC
000023B6                          1845  
000023B6                          1846  MISCMMPREDECCHECK
000023B6  B63C 0004               1847          CMP.B   #$4,D3
000023BA  6700 0006               1848          BEQ     MISCMMPREDEC
000023BE  6000 00DE               1849          BRA     MISCMMREGMEM
000023C2                          1850  
000023C2                          1851  ******************************************************************
000023C2                          1852  * MOVEM Post-decrement
000023C2                          1853  * Prints out registers from post-decrement
000023C2                          1854  * D6 holds the reg list
000023C2                          1855  MISCMMPREDEC
000023C2  1806                    1856          MOVE.B  D6,D4
000023C4  3E3C 0008               1857          MOVE.W  #8,D7               Counter
000023C8  123C 000F               1858          MOVE.B  #$F,D1
000023CC                          1859  
000023CC  49F9 00002EE7           1860          LEA     DISPA,A4
000023D2  6100 0032               1861          BSR     MISCMMPREDECPRINT
000023D6                          1862  
000023D6  3806                    1863          MOVE.W  D6,D4
000023D8  E04C                    1864          LSR.W   #8,D4
000023DA  3E3C 0008               1865          MOVE.W  #8,D7               Counter
000023DE  49F9 00002EED           1866          LEA     DISPD,A4
000023E4  6100 0020               1867          BSR     MISCMMPREDECPRINT
000023E8  6000 0002               1868          BRA     MISCMMPREDEC2
000023EC                          1869  
000023EC                          1870  MISCMMPREDEC2
000023EC  43F9 00002ED9           1871          LEA     COMMA,A1
000023F2  103C 000E               1872          MOVE.B  #14,D0
000023F6  4E4F                    1873          TRAP    #15
000023F8                          1874  
000023F8  45F9 00002402           1875          LEA     MISCMMPREDEC3,A2
000023FE  6000 0646               1876          BRA     SUBEA
00002402                          1877  
00002402                          1878  MISCMMPREDEC3
00002402  6000 087E               1879          BRA     ENDNEWLINE
00002406                          1880  
00002406                          1881  * Prints out reg list
00002406                          1882  MISCMMPREDECPRINT
00002406  E30C                    1883          LSL.B   #1,D4
00002408  6400 001C               1884          BCC     MISCMMPREDECPRINT3
0000240C                          1885  
0000240C  B23C 000F               1886          CMP.B   #$F,D1
00002410  6700 0008               1887          BEQ     MISCMMPREDECPRINT2
00002414  4EB9 00002514           1888          JSR     MISCMMSLASH
0000241A                          1889  
0000241A                          1890  MISCMMPREDECPRINT2
0000241A  224C                    1891          MOVEA.L A4,A1
0000241C  103C 000E               1892          MOVE.B  #14,D0
00002420  4E4F                    1893          TRAP    #15
00002422  6100 00E2               1894          BSR     MISCMMPRINTNUM
00002426                          1895  
00002426                          1896  MISCMMPREDECPRINT3
00002426  5307                    1897          SUB.B   #1,D7
00002428  BE3C 0000               1898          CMP.B   #0,D7
0000242C  66D8                    1899          BNE     MISCMMPREDECPRINT
0000242E  4E75                    1900          RTS
00002430                          1901  
00002430                          1902  ******************************************************************
00002430                          1903  * MOVEM Post-increment
00002430                          1904  * Prints out registers from post-increment
00002430                          1905  * D6 holds the reg list
00002430                          1906  MISCMMPOSTINC
00002430  45F9 0000243A           1907          LEA     MISCMMPOSTINC2,A2
00002436  6000 060E               1908          BRA     SUBEA
0000243A                          1909  
0000243A                          1910  MISCMMPOSTINC2
0000243A  43F9 00002ED9           1911          LEA     COMMA,A1
00002440  103C 000E               1912          MOVE.B  #14,D0
00002444  4E4F                    1913          TRAP    #15
00002446                          1914  
00002446  3806                    1915          MOVE.W  D6,D4
00002448  E04C                    1916          LSR.W   #8,D4
0000244A  3E3C 0008               1917          MOVE.W  #8,D7               Counter
0000244E  123C 000F               1918          MOVE.B  #$F,D1
00002452                          1919  
00002452  49F9 00002EE7           1920          LEA     DISPA,A4
00002458  6100 001A               1921          BSR     MISCMMPOSTINCPRINT
0000245C                          1922  
0000245C  1806                    1923          MOVE.B  D6,D4
0000245E  3E3C 0008               1924          MOVE.W  #8,D7               Counter
00002462  49F9 00002EED           1925          LEA     DISPD,A4
00002468  6100 000A               1926          BSR     MISCMMPOSTINCPRINT
0000246C  6000 0002               1927          BRA     MISCMMPOSTINC3
00002470                          1928  
00002470                          1929  MISCMMPOSTINC3
00002470  6000 0810               1930          BRA     ENDNEWLINE
00002474                          1931  
00002474                          1932  * Prints out reg list
00002474                          1933  MISCMMPOSTINCPRINT
00002474  E20C                    1934          LSR.B   #1,D4
00002476  6400 001C               1935          BCC     MISCMMPOSTINCPRINT3
0000247A                          1936  
0000247A  B23C 000F               1937          CMP.B   #$F,D1
0000247E  6700 0008               1938          BEQ     MISCMMPOSTINCPRINT2
00002482  4EB9 00002514           1939          JSR     MISCMMSLASH
00002488                          1940  
00002488                          1941  MISCMMPOSTINCPRINT2
00002488  224C                    1942          MOVEA.L A4,A1
0000248A  103C 000E               1943          MOVE.B  #14,D0
0000248E  4E4F                    1944          TRAP    #15
00002490  6100 0074               1945          BSR     MISCMMPRINTNUM
00002494                          1946  
00002494                          1947  MISCMMPOSTINCPRINT3
00002494  5307                    1948          SUB.B   #1,D7
00002496  BE3C 0000               1949          CMP.B   #0,D7
0000249A  66D8                    1950          BNE     MISCMMPOSTINCPRINT
0000249C  4E75                    1951          RTS
0000249E                          1952  
0000249E                          1953  ******************************************************************
0000249E                          1954  * MOVEM Post-increment
0000249E                          1955  * Prints out registers from post-increment
0000249E                          1956  * D6 holds the reg list
0000249E                          1957  MISCMMREGMEM
0000249E  1806                    1958          MOVE.B  D6,D4
000024A0  3E3C 0008               1959          MOVE.W  #8,D7               Counter
000024A4  123C 000F               1960          MOVE.B  #$F,D1
000024A8                          1961  
000024A8  49F9 00002EED           1962          LEA     DISPD,A4
000024AE  61C4                    1963          BSR     MISCMMPOSTINCPRINT
000024B0                          1964  
000024B0  3806                    1965          MOVE.W  D6,D4
000024B2  E04C                    1966          LSR.W   #8,D4
000024B4  3E3C 0008               1967          MOVE.W  #8,D7               Counter
000024B8  49F9 00002EE7           1968          LEA     DISPA,A4
000024BE  61B4                    1969          BSR     MISCMMPOSTINCPRINT
000024C0  6000 0002               1970          BRA     MISCMMREGMEM2
000024C4                          1971  
000024C4                          1972  MISCMMREGMEM2
000024C4  43F9 00002ED9           1973          LEA     COMMA,A1
000024CA  103C 000E               1974          MOVE.B  #14,D0
000024CE  4E4F                    1975          TRAP    #15
000024D0                          1976  
000024D0  45F9 000024DA           1977          LEA     MISCMMREGMEM3,A2
000024D6  6000 056E               1978          BRA     SUBEA
000024DA                          1979  
000024DA                          1980  MISCMMREGMEM3
000024DA  6000 07A6               1981          BRA     ENDNEWLINE
000024DE                          1982  
000024DE                          1983  * Prints out reg list
000024DE                          1984  MISCMMREGMEMPRINT
000024DE  E20C                    1985          LSR.B   #1,D4
000024E0  64B2                    1986          BCC     MISCMMPOSTINCPRINT3
000024E2                          1987  
000024E2  B23C 000F               1988          CMP.B   #$F,D1
000024E6  67A0                    1989          BEQ     MISCMMPOSTINCPRINT2
000024E8  4EB9 00002514           1990          JSR     MISCMMSLASH
000024EE                          1991  
000024EE                          1992  MISCMMREGMEMPRINT2
000024EE  224C                    1993          MOVEA.L A4,A1
000024F0  103C 000E               1994          MOVE.B  #14,D0
000024F4  4E4F                    1995          TRAP    #15
000024F6  6100 000E               1996          BSR     MISCMMPRINTNUM
000024FA                          1997  
000024FA                          1998  MISCMMREGMEMPRINT3
000024FA  5307                    1999          SUB.B   #1,D7
000024FC  BE3C 0000               2000          CMP.B   #0,D7
00002500  6600 FF72               2001          BNE     MISCMMPOSTINCPRINT
00002504  4E75                    2002          RTS
00002506                          2003  
00002506                          2004  
00002506                          2005  
00002506                          2006  ***********************************************
00002506                          2007  * Stuff for printing reg list
00002506                          2008  MISCMMPRINTNUM
00002506  123C 0008               2009          MOVE.B  #8,D1
0000250A  9207                    2010          SUB.B   D7,D1
0000250C  103C 0003               2011          MOVE.B  #3,D0
00002510  4E4F                    2012          TRAP    #15
00002512  4E75                    2013          RTS
00002514                          2014  
00002514                          2015  MISCMMSLASH
00002514  43F9 00002EE5           2016          LEA     SLASH,A1
0000251A  103C 000E               2017          MOVE.B  #14,D0
0000251E  4E4F                    2018          TRAP    #15
00002520  4E75                    2019          RTS
00002522                          2020  
00002522                          2021  ******************************************************************************************************
00002522                          2022  * SUB section
00002522                          2023  
00002522                          2024          *   Grabs next two nibbles
00002522  141E                    2025  SUB     MOVE.B  (A6)+,D2
00002524                          2026  
00002524  DE02                    2027          ADD.B   D2,D7
00002526                          2028  
00002526  1602                    2029          MOVE.B  D2,D3               Copies data at D2 to D3
00002528                          2030          *   this gets digit in 10's place
00002528  E80B                    2031          LSR.B   #4,D3               Shifts right to get rid of 1's place
0000252A                          2032          *   this gets digit in 1's place
0000252A  E90A                    2033          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000252C  E80A                    2034          LSR.B   #4,D2               Shifts back right into 1's place
0000252E                          2035  
0000252E                          2036          *   D3 holds digit in 10's place
0000252E                          2037          *   D2 holds digit in 1's place
0000252E                          2038  
0000252E                          2039          
0000252E                          2040          *   Converts nibble into 3-bit parts
0000252E  E20B                    2041          LSR.B   #1,D3
00002530  6400 0004               2042          BCC     SUB2
00002534  5404                    2043          ADD.B   #$2,D4
00002536                          2044          
00002536  E20B                    2045  SUB2    LSR.B   #1,D3
00002538  6400 0004               2046          BCC     SUB3
0000253C  5804                    2047          ADD.B   #$4,D4
0000253E                          2048          
0000253E  1205                    2049  SUB3    MOVE.B  D5,D1
00002540  E209                    2050          LSR.B   #1,D1
00002542  6400 0004               2051          BCC     SUB4
00002546  5803                    2052          ADD.B   #$4,D3
00002548                          2053  
00002548  B43C 0007               2054  SUB4    CMP.B   #$7,D2
0000254C  6D00 0006               2055          BLT     SUB1
00002550  5204                    2056          ADD.B   #$1,D4
00002552  5102                    2057          SUB.B   #$8,D2
00002554                          2058  
00002554                          2059          *   Stores them into addr
00002554  13C1 0000313B           2060  SUB1    MOVE.B  D1,bit1
0000255A  13C3 0000313C           2061          MOVE.B  D3,bit2
00002560  13C4 0000313D           2062          MOVE.B  D4,bit3
00002566  13C2 0000313E           2063          MOVE.B  D2,bit4
0000256C                          2064  
0000256C                          2065          * do this later
0000256C  4241                    2066          CLR     D1
0000256E  7400                    2067          MOVE.L  #0,D2
00002570  7600                    2068          MOVE.L  #0,D3
00002572  7800                    2069          MOVE.L  #0,D4
00002574  7A00                    2070          MOVE.L  #0,D5
00002576  7C00                    2071          MOVE.L  #0,D6
00002578                          2072  
00002578                          2073          
00002578                          2074  ******************************************************************************************************
00002578                          2075  * After spliting the op-code into SUB's defined groupings
00002578                          2076  *   This figures out which operation it is and goes to that sub-routine
00002578                          2077  
00002578                          2078          * This checks if bit0 is C which is either AND or MULS
00002578  0C39 000C 0000313A      2079          CMP.B   #$C,bit0
00002580  6600 000E               2080          BNE     SUBACHECK
00002584  0C39 0007 0000313C      2081          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
0000258C  6700 F4A2               2082          BEQ     MULSW                       AND will use SUB's routine
00002590                          2083  
00002590                          2084  SUBACHECK
00002590                          2085          * This will display SUBA instead  -- check this later
00002590  0C39 0003 0000313C      2086          CMP.B   #$3,bit2
00002598  6700 01D6               2087          BEQ     SUBA
0000259C  0C39 0007 0000313C      2088          CMP.B   #$7,bit2
000025A4  6700 01CA               2089          BEQ     SUBA
000025A8                          2090  
000025A8                          2091          * This will find the size and stuff
000025A8  0C39 0000 0000313C      2092          CMP.B   #$0,bit2
000025B0  6700 003E               2093          BEQ     SUBSIZE1
000025B4  0C39 0001 0000313C      2094          CMP.B   #$1,bit2
000025BC  6700 0072               2095          BEQ     SUBSIZE2
000025C0  0C39 0002 0000313C      2096          CMP.B   #$2,bit2
000025C8  6700 00A6               2097          BEQ     SUBSIZE3
000025CC  0C39 0004 0000313C      2098          CMP.B   #$4,bit2
000025D4  6700 00DA               2099          BEQ     SUBSIZE4
000025D8  0C39 0005 0000313C      2100          CMP.B   #$5,bit2
000025E0  6700 010E               2101          BEQ     SUBSIZE5
000025E4  0C39 0006 0000313C      2102          CMP.B   #$6,bit2
000025EC  6700 0142               2103          BEQ     SUBSIZE6
000025F0                          2104     
000025F0                          2105  ******************************************************************************************************
000025F0                          2106  *   Displays size, then does operation order
000025F0                          2107  
000025F0                          2108  *   000 byte    EA,DN
000025F0                          2109  SUBSIZE1
000025F0  6100 0260               2110          BSR     SUBPRINT
000025F4  43F9 00002EF7           2111          LEA     MBYTE,A1
000025FA  103C 000E               2112          MOVE.B  #14,D0
000025FE  4E4F                    2113          TRAP    #15
00002600  43F9 00002ED5           2114          LEA     TAB,A1
00002606  103C 000E               2115          MOVE.B  #14,D0
0000260A  4E4F                    2116          TRAP    #15
0000260C                          2117  
0000260C  45F9 00002616           2118          LEA     SUBSIZE11,A2
00002612  6000 0432               2119          BRA     SUBEA
00002616                          2120  SUBSIZE11
00002616  45F9 0000262C           2121          LEA     SUBSIZE12,A2
0000261C  43F9 00002ED9           2122          LEA     COMMA,A1
00002622  103C 000E               2123          MOVE.B  #14,D0
00002626  4E4F                    2124          TRAP    #15
00002628  6000 02F8               2125          BRA     SUBDN
0000262C                          2126  SUBSIZE12
0000262C  6000 0654               2127          BRA     ENDNEWLINE
00002630                          2128  
00002630                          2129  *************************************************
00002630                          2130  *   001 word    EA,DN
00002630                          2131  SUBSIZE2
00002630  6100 0220               2132          BSR     SUBPRINT
00002634  43F9 00002EFA           2133          LEA     MWORD,A1
0000263A  103C 000E               2134          MOVE.B  #14,D0
0000263E  4E4F                    2135          TRAP    #15
00002640  43F9 00002ED5           2136          LEA     TAB,A1
00002646  103C 000E               2137          MOVE.B  #14,D0
0000264A  4E4F                    2138          TRAP    #15
0000264C                          2139  
0000264C  45F9 00002656           2140          LEA     SUBSIZE21,A2
00002652  6000 03F2               2141          BRA     SUBEA
00002656                          2142  SUBSIZE21
00002656  45F9 0000266C           2143          LEA     SUBSIZE22,A2
0000265C  43F9 00002ED9           2144          LEA     COMMA,A1
00002662  103C 000E               2145          MOVE.B  #14,D0
00002666  4E4F                    2146          TRAP    #15
00002668  6000 02B8               2147          BRA     SUBDN
0000266C                          2148  SUBSIZE22
0000266C  6000 0614               2149          BRA     ENDNEWLINE
00002670                          2150  
00002670                          2151  *************************************************
00002670                          2152  *   010 long    EA,DN
00002670                          2153  SUBSIZE3
00002670  6100 01E0               2154          BSR     SUBPRINT
00002674  43F9 00002EFD           2155          LEA     MLONG,A1
0000267A  103C 000E               2156          MOVE.B  #14,D0
0000267E  4E4F                    2157          TRAP    #15
00002680  43F9 00002ED5           2158          LEA     TAB,A1
00002686  103C 000E               2159          MOVE.B  #14,D0
0000268A  4E4F                    2160          TRAP    #15
0000268C                          2161  
0000268C  45F9 00002696           2162          LEA     SUBSIZE31,A2
00002692  6000 03B2               2163          BRA     SUBEA
00002696                          2164  SUBSIZE31
00002696  45F9 000026AC           2165          LEA     SUBSIZE32,A2
0000269C  43F9 00002ED9           2166          LEA     COMMA,A1
000026A2  103C 000E               2167          MOVE.B  #14,D0
000026A6  4E4F                    2168          TRAP    #15
000026A8  6000 0278               2169          BRA     SUBDN
000026AC                          2170  SUBSIZE32
000026AC  6000 05D4               2171          BRA     ENDNEWLINE
000026B0                          2172  
000026B0                          2173  *************************************************
000026B0                          2174  *   100 byte    DN,EA
000026B0                          2175  SUBSIZE4
000026B0  6100 01A0               2176          BSR     SUBPRINT
000026B4  43F9 00002EF7           2177          LEA     MBYTE,A1
000026BA  103C 000E               2178          MOVE.B  #14,D0
000026BE  4E4F                    2179          TRAP    #15
000026C0  43F9 00002ED5           2180          LEA     TAB,A1
000026C6  103C 000E               2181          MOVE.B  #14,D0
000026CA  4E4F                    2182          TRAP    #15
000026CC                          2183  
000026CC                          2184          *BSR     SUBERRORTEST1
000026CC                          2185  
000026CC  45F9 000026D6           2186          LEA     SUBSIZE41,A2
000026D2  6000 024E               2187          BRA     SUBDN
000026D6                          2188  SUBSIZE41
000026D6  45F9 000026EC           2189          LEA     SUBSIZE42,A2
000026DC  43F9 00002ED9           2190          LEA     COMMA,A1
000026E2  103C 000E               2191          MOVE.B  #14,D0
000026E6  4E4F                    2192          TRAP    #15
000026E8  6000 035C               2193          BRA     SUBEA
000026EC                          2194  SUBSIZE42
000026EC  6000 0594               2195          BRA     ENDNEWLINE
000026F0                          2196  
000026F0                          2197  *************************************************
000026F0                          2198  *   101 word    DN,EA
000026F0                          2199  SUBSIZE5
000026F0                          2200          *BSR     SUBERRORTEST1               * This does error testing
000026F0  6100 0160               2201          BSR     SUBPRINT                    * Prints out 'SUB.'
000026F4  43F9 00002EFA           2202          LEA     MWORD,A1
000026FA  103C 000E               2203          MOVE.B  #14,D0
000026FE  4E4F                    2204          TRAP    #15
00002700  43F9 00002ED5           2205          LEA     TAB,A1
00002706  103C 000E               2206          MOVE.B  #14,D0
0000270A  4E4F                    2207          TRAP    #15
0000270C                          2208  
0000270C  45F9 00002716           2209          LEA     SUBSIZE51,A2
00002712  6000 020E               2210          BRA     SUBDN
00002716                          2211  SUBSIZE51
00002716  45F9 0000272C           2212          LEA     SUBSIZE52,A2
0000271C  43F9 00002ED9           2213          LEA     COMMA,A1
00002722  103C 000E               2214          MOVE.B  #14,D0
00002726  4E4F                    2215          TRAP    #15
00002728  6000 031C               2216          BRA     SUBEA
0000272C                          2217  SUBSIZE52
0000272C  6000 0554               2218          BRA     ENDNEWLINE
00002730                          2219  
00002730                          2220  *************************************************
00002730                          2221  *   110 long    DN,EA
00002730                          2222  SUBSIZE6
00002730                          2223          *BSR     SUBERRORTEST1               * This does error testing
00002730  6100 0120               2224          BSR     SUBPRINT                    * Prints out 'SUB.'
00002734  43F9 00002EFD           2225          LEA     MLONG,A1
0000273A  103C 000E               2226          MOVE.B  #14,D0
0000273E  4E4F                    2227          TRAP    #15
00002740  43F9 00002ED5           2228          LEA     TAB,A1
00002746  103C 000E               2229          MOVE.B  #14,D0
0000274A  4E4F                    2230          TRAP    #15
0000274C                          2231  
0000274C                          2232          *BSR     SUBERRORTEST1
0000274C                          2233  
0000274C  45F9 00002756           2234          LEA     SUBSIZE61,A2
00002752  6000 01CE               2235          BRA     SUBDN
00002756                          2236  SUBSIZE61
00002756  45F9 0000276C           2237          LEA     SUBSIZE62,A2
0000275C  43F9 00002ED9           2238          LEA     COMMA,A1
00002762  103C 000E               2239          MOVE.B  #14,D0
00002766  4E4F                    2240          TRAP    #15
00002768  6000 02DC               2241          BRA     SUBEA
0000276C                          2242  SUBSIZE62
0000276C  6000 0514               2243          BRA     ENDNEWLINE
00002770                          2244  
00002770                          2245  ****************************************************************************
00002770                          2246  *   This section is for SUBA
00002770                          2247  *   Displays 'SUBA.' then decodes the op-code as SUBA
00002770                          2248  SUBA
00002770  0C39 0009 0000313A      2249          CMP.B   #$9,bit0
00002778  6700 001A               2250          BEQ     SUBPRINTSUBA
0000277C  0C39 000B 0000313A      2251          CMP.B   #$B,bit0
00002784  6700 001E               2252          BEQ     SUBPRINTCMPA
00002788  0C39 000D 0000313A      2253          CMP.B   #$D,bit0
00002790  6700 0022               2254          BEQ     SUBPRINTADDA
00002794                          2255  
00002794                          2256  
00002794                          2257  SUBPRINTSUBA
00002794  43F9 00002F6E           2258          LEA     MSUBA,A1                    Displays 'SUBA.'
0000279A  103C 000E               2259          MOVE.B  #14,D0
0000279E  4E4F                    2260          TRAP    #15
000027A0  6000 0022               2261          BRA     SUBACONT
000027A4                          2262  
000027A4                          2263  SUBPRINTCMPA
000027A4  43F9 00002FA3           2264          LEA     MCMPA,A1                    Displays 'SUBA.'
000027AA  103C 000E               2265          MOVE.B  #14,D0
000027AE  4E4F                    2266          TRAP    #15
000027B0  6000 0012               2267          BRA     SUBACONT
000027B4                          2268  
000027B4                          2269  SUBPRINTADDA
000027B4  43F9 00002FB4           2270          LEA     MADDA,A1                    Displays 'SUBA.'
000027BA  103C 000E               2271          MOVE.B  #14,D0
000027BE  4E4F                    2272          TRAP    #15
000027C0  6000 0002               2273          BRA     SUBACONT
000027C4                          2274  
000027C4                          2275  SUBACONT
000027C4                          2276          * Does the rest of SUBA
000027C4  0C39 0003 0000313C      2277          CMP.B   #$3,bit2
000027CC  6700 000E               2278          BEQ     SUBSIZE7
000027D0  0C39 0007 0000313C      2279          CMP.B   #$7,bit2
000027D8  6700 003E               2280          BEQ     SUBSIZE8
000027DC                          2281  
000027DC                          2282  *************************************************
000027DC                          2283  *   SUBA Word   ea,An
000027DC                          2284  SUBSIZE7
000027DC  43F9 00002EFA           2285          LEA     MWORD,A1
000027E2  103C 000E               2286          MOVE.B  #14,D0
000027E6  4E4F                    2287          TRAP    #15
000027E8  43F9 00002ED5           2288          LEA     TAB,A1
000027EE  103C 000E               2289          MOVE.B  #14,D0
000027F2  4E4F                    2290          TRAP    #15
000027F4                          2291  
000027F4  45F9 000027FE           2292          LEA     SUBSIZE71,A2
000027FA  6000 024A               2293          BRA     SUBEA
000027FE                          2294  SUBSIZE71
000027FE  45F9 00002814           2295          LEA     SUBSIZE72,A2
00002804  43F9 00002ED9           2296          LEA     COMMA,A1
0000280A  103C 000E               2297          MOVE.B  #14,D0
0000280E  4E4F                    2298          TRAP    #15
00002810  6000 0164               2299          BRA     SUBAN2
00002814                          2300  SUBSIZE72
00002814  6000 046C               2301          BRA     ENDNEWLINE
00002818                          2302  
00002818                          2303  *************************************************
00002818                          2304  *   SUBA longword   ea,An
00002818                          2305  SUBSIZE8
00002818  43F9 00002EFD           2306          LEA     MLONG,A1
0000281E  103C 000E               2307          MOVE.B  #14,D0
00002822  4E4F                    2308          TRAP    #15
00002824  43F9 00002ED5           2309          LEA     TAB,A1
0000282A  103C 000E               2310          MOVE.B  #14,D0
0000282E  4E4F                    2311          TRAP    #15
00002830                          2312  
00002830  45F8 27FE               2313          LEA     SUBSIZE71,A2
00002834  6000 0210               2314          BRA     SUBEA
00002838                          2315  SUBSIZE81
00002838  45F8 2814               2316          LEA     SUBSIZE72,A2
0000283C  43F9 00002ED9           2317          LEA     COMMA,A1
00002842  103C 000E               2318          MOVE.B  #14,D0
00002846  4E4F                    2319          TRAP    #15
00002848  6000 012C               2320          BRA     SUBAN2
0000284C                          2321  SUBSIZE82
0000284C  6000 0434               2322          BRA     ENDNEWLINE
00002850                          2323  
00002850                          2324  *************************************************
00002850                          2325  * Jumps to memory location at A2
00002850                          2326  SUBJMPA2
00002850  4ED2                    2327          JMP     (A2)
00002852                          2328  
00002852                          2329  *************************************************
00002852                          2330  * Prints out opcode name
00002852                          2331  SUBPRINT
00002852  0C39 0009 0000313A      2332          CMP.B   #$9,bit0                Prints SUB
0000285A  6700 0026               2333          BEQ     SUBPRINTSUB
0000285E  0C39 000B 0000313A      2334          CMP.B   #$B,bit0                Prints CMP or EOR
00002866  6700 004A               2335          BEQ     SUBPRINTB
0000286A  0C39 000C 0000313A      2336          CMP.B   #$C,bit0                Prints AND
00002872  6700 001E               2337          BEQ     SUBPRINTAND
00002876  0C39 000D 0000313A      2338          CMP.B   #$D,bit0                Prints ADD
0000287E  6700 0022               2339          BEQ     SUBPRINTADD
00002882                          2340  
00002882                          2341  SUBPRINTSUB   * Displays 'SUB.' 
00002882  43F9 00002F69           2342          LEA     MSUB,A1
00002888  103C 000E               2343          MOVE.B  #14,D0
0000288C  4E4F                    2344          TRAP    #15
0000288E  6000 004E               2345          BRA     SUBPRINTEND
00002892                          2346  
00002892                          2347  SUBPRINTAND   * Displays 'AND.' 
00002892  43F9 00002F74           2348          LEA     MAND,A1
00002898  103C 000E               2349          MOVE.B  #14,D0
0000289C  4E4F                    2350          TRAP    #15
0000289E  6000 003E               2351          BRA     SUBPRINTEND
000028A2                          2352  
000028A2                          2353  SUBPRINTADD   * Displays 'ADD.' 
000028A2  43F9 00002F79           2354          LEA     MADD,A1
000028A8  103C 000E               2355          MOVE.B  #14,D0
000028AC  4E4F                    2356          TRAP    #15
000028AE  6000 002E               2357          BRA     SUBPRINTEND
000028B2                          2358  
000028B2                          2359  SUBPRINTB
000028B2  0C39 0004 0000313C      2360          CMP.B   #$4,bit2
000028BA  6D00 0012               2361          BLT     SUBPRINTEOR
000028BE                          2362  
000028BE                          2363  SUBPRINTCMP   * Displays 'CMP.' 
000028BE  43F9 00002F98           2364          LEA     MCMP,A1
000028C4  103C 000E               2365          MOVE.B  #14,D0
000028C8  4E4F                    2366          TRAP    #15
000028CA  6000 0012               2367          BRA     SUBPRINTEND
000028CE                          2368  
000028CE                          2369  SUBPRINTEOR   * Displays 'EOR.' 
000028CE  43F9 00002FA9           2370          LEA     MEOR,A1
000028D4  103C 000E               2371          MOVE.B  #14,D0
000028D8  4E4F                    2372          TRAP    #15
000028DA  6000 0002               2373          BRA     SUBPRINTEND
000028DE                          2374  
000028DE                          2375  SUBPRINTEND
000028DE  4E75                    2376          RTS
000028E0                          2377  
000028E0                          2378  
000028E0                          2379  *******************************************************************
000028E0                          2380  * Error testing for DN->EA operations
000028E0                          2381  *  Data register, address register, and immediate data cannot be destinations
000028E0                          2382  SUBERRORTEST1
000028E0                          2383          * test for DN or AN register, branches to invalid op code if true
000028E0  0C39 0000 0000313D      2384          CMP.B   #0,bit3
000028E8  6700 0326               2385          BEQ     INVOP
000028EC  0C39 0001 0000313D      2386          CMP.B   #1,bit3
000028F4  6700 031A               2387          BEQ     INVOP
000028F8                          2388          
000028F8                          2389          * check if destination is immediate data
000028F8  0C39 0007 0000313D      2390          CMP.B   #7,bit3
00002900  6600 001E               2391          BNE     SUBERRORTEST11
00002904  0C39 0000 0000313E      2392          CMP.B   #0,bit4
0000290C  6700 0012               2393          BEQ     SUBERRORTEST11
00002910  0C39 0001 0000313E      2394          CMP.B   #1,bit4
00002918  6700 0006               2395          BEQ     SUBERRORTEST11
0000291C  6000 02F2               2396          BRA     INVOP
00002920                          2397          
00002920                          2398  SUBERRORTEST11
00002920  4E75                    2399          RTS
00002922                          2400  
00002922                          2401  
00002922                          2402  ******************************************************************************************************
00002922                          2403  *   Displays data register
00002922                          2404  SUBDN
00002922  43F9 00002F00           2405          LEA     MDN,A1
00002928  103C 000E               2406          MOVE.B  #14,D0
0000292C  4E4F                    2407          TRAP    #15
0000292E                          2408  
0000292E  1239 0000313B           2409          MOVE.B  bit1,D1
00002934  103C 0003               2410          MOVE.B  #3,D0
00002938  4E4F                    2411          TRAP    #15
0000293A                          2412          
0000293A  6000 FF14               2413          BRA     SUBJMPA2
0000293E                          2414  
0000293E                          2415  *   Displays data register
0000293E                          2416  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
0000293E                          2417  SUBDN2
0000293E  43F9 00002F00           2418          LEA     MDN,A1
00002944  103C 000E               2419          MOVE.B  #14,D0
00002948  4E4F                    2420          TRAP    #15
0000294A                          2421  
0000294A  1239 0000313E           2422          MOVE.B  bit4,D1
00002950  103C 0003               2423          MOVE.B  #3,D0
00002954  4E4F                    2424          TRAP    #15
00002956                          2425          
00002956  6000 FEF8               2426          BRA     SUBJMPA2
0000295A                          2427  
0000295A                          2428  *   Displays address register
0000295A                          2429  SUBAN
0000295A  43F9 00002F02           2430          LEA     MAN,A1
00002960  103C 000E               2431          MOVE.B  #14,D0
00002964  4E4F                    2432          TRAP    #15
00002966                          2433  
00002966  1239 0000313E           2434          MOVE.B  bit4,D1
0000296C  103C 0003               2435          MOVE.B  #3,D0
00002970  4E4F                    2436          TRAP    #15
00002972                          2437          
00002972  6000 FEDC               2438          BRA     SUBJMPA2
00002976                          2439  
00002976                          2440  *   Displays address register
00002976                          2441  *   This is for SUBA, SUBA puts An into bit1
00002976                          2442  SUBAN2
00002976  43F9 00002F02           2443          LEA     MAN,A1
0000297C  103C 000E               2444          MOVE.B  #14,D0
00002980  4E4F                    2445          TRAP    #15
00002982                          2446  
00002982  1239 0000313B           2447          MOVE.B  bit1,D1
00002988  103C 0003               2448          MOVE.B  #3,D0
0000298C  4E4F                    2449          TRAP    #15
0000298E                          2450          
0000298E  6000 FEC0               2451          BRA     SUBJMPA2
00002992                          2452  
00002992                          2453  
00002992                          2454  *   Displays indirect address register
00002992                          2455  SUBANID
00002992  43F9 00002EDB           2456          LEA     OPENBRA,A1
00002998  103C 000E               2457          MOVE.B  #14,D0
0000299C  4E4F                    2458          TRAP    #15
0000299E                          2459  
0000299E  43F9 00002F02           2460          LEA     MAN,A1
000029A4  103C 000E               2461          MOVE.B  #14,D0
000029A8  4E4F                    2462          TRAP    #15
000029AA                          2463  
000029AA  1239 0000313E           2464          MOVE.B  bit4,D1
000029B0  103C 0003               2465          MOVE.B  #3,D0
000029B4  4E4F                    2466          TRAP    #15
000029B6                          2467  
000029B6  43F9 00002EDD           2468          LEA     CLOSEBRA,A1
000029BC  103C 000E               2469          MOVE.B  #14,D0
000029C0  4E4F                    2470          TRAP    #15
000029C2                          2471  
000029C2  6000 FE8C               2472          BRA     SUBJMPA2
000029C6                          2473  
000029C6                          2474  *   Displays indirect address register with post increment
000029C6                          2475  SUBANIDPOS
000029C6  43F9 00002EDB           2476          LEA     OPENBRA,A1
000029CC  103C 000E               2477          MOVE.B  #14,D0
000029D0  4E4F                    2478          TRAP    #15
000029D2                          2479  
000029D2  43F9 00002F02           2480          LEA     MAN,A1
000029D8  103C 000E               2481          MOVE.B  #14,D0
000029DC  4E4F                    2482          TRAP    #15
000029DE                          2483  
000029DE  1239 0000313E           2484          MOVE.B  bit4,D1
000029E4  103C 0003               2485          MOVE.B  #3,D0
000029E8  4E4F                    2486          TRAP    #15
000029EA                          2487  
000029EA  43F9 00002EDD           2488          LEA     CLOSEBRA,A1
000029F0  103C 000E               2489          MOVE.B  #14,D0
000029F4  4E4F                    2490          TRAP    #15
000029F6                          2491  
000029F6  43F9 00002EDF           2492          LEA     POS,A1
000029FC  103C 000E               2493          MOVE.B  #14,D0
00002A00  4E4F                    2494          TRAP    #15
00002A02                          2495  
00002A02  6000 FE4C               2496          BRA     SUBJMPA2
00002A06                          2497  
00002A06                          2498  *   Displays indirect address register with pre decrement
00002A06                          2499  SUBANIDNEG
00002A06  43F9 00002EE1           2500          LEA     NEG,A1
00002A0C  103C 000E               2501          MOVE.B  #14,D0
00002A10  4E4F                    2502          TRAP    #15
00002A12                          2503  
00002A12  43F9 00002EDB           2504          LEA     OPENBRA,A1
00002A18  103C 000E               2505          MOVE.B  #14,D0
00002A1C  4E4F                    2506          TRAP    #15
00002A1E                          2507  
00002A1E  43F9 00002F02           2508          LEA     MAN,A1
00002A24  103C 000E               2509          MOVE.B  #14,D0
00002A28  4E4F                    2510          TRAP    #15
00002A2A                          2511  
00002A2A  1239 0000313E           2512          MOVE.B  bit4,D1
00002A30  103C 0003               2513          MOVE.B  #3,D0
00002A34  4E4F                    2514          TRAP    #15
00002A36                          2515  
00002A36  43F9 00002EDD           2516          LEA     CLOSEBRA,A1
00002A3C  103C 000E               2517          MOVE.B  #14,D0
00002A40  4E4F                    2518          TRAP    #15
00002A42                          2519  
00002A42  6000 FE0C               2520          BRA     SUBJMPA2
00002A46                          2521  
00002A46                          2522  
00002A46                          2523  
00002A46                          2524  
00002A46                          2525  ******************************************************************************************************
00002A46                          2526  * Displays the EA as hex numbers
00002A46                          2527  * 
00002A46                          2528  SUBEA
00002A46                          2529          *   This finds which mode to use
00002A46  0C39 0000 0000313D      2530          CMP.B   #$0,bit3
00002A4E  6700 FEEE               2531          BEQ     SUBDN2
00002A52  0C39 0001 0000313D      2532          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
00002A5A  6700 FEFE               2533          BEQ     SUBAN
00002A5E  0C39 0002 0000313D      2534          CMP.B   #$2,bit3
00002A66  6700 FF2A               2535          BEQ     SUBANID
00002A6A  0C39 0003 0000313D      2536          CMP.B   #$3,bit3
00002A72  6700 FF52               2537          BEQ     SUBANIDPOS
00002A76  0C39 0004 0000313D      2538          CMP.B   #$4,bit3
00002A7E  6786                    2539          BEQ     SUBANIDNEG
00002A80  0C39 0005 0000313D      2540          CMP.B   #$5,bit3
00002A88  6700 0424               2541          BEQ     ERROR
00002A8C  0C39 0006 0000313D      2542          CMP.B   #$6,bit3
00002A94  6700 0418               2543          BEQ     ERROR
00002A98  0C39 0007 0000313D      2544          CMP.B   #$7,bit3
00002AA0  6700 0002               2545          BEQ     SUBEAHEX
00002AA4                          2546  
00002AA4                          2547  SUBEAHEX
00002AA4  0C39 0004 0000313E      2548          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
00002AAC  6700 0086               2549          BEQ     SUBEAID
00002AB0                          2550  SUBEAID2
00002AB0                          2551          *   Else it will assume it is absolute addressing mode
00002AB0  43F9 00002EF5           2552          LEA     MHEX,A1
00002AB6  103C 000E               2553          MOVE.B  #14,D0
00002ABA  4E4F                    2554          TRAP    #15
00002ABC                          2555  
00002ABC  0C39 0000 0000313E      2556          CMP.B   #$0,bit4
00002AC4  6700 007E               2557          BEQ     SUBEAHEX1
00002AC8  0C39 0001 0000313E      2558          CMP.B   #$1,bit4
00002AD0  6700 007A               2559          BEQ     SUBEAHEX2
00002AD4                          2560  
00002AD4  0C39 0000 0000313C      2561          CMP.B   #$0,bit2            * SUB byte displays as word
00002ADC  6700 0066               2562          BEQ     SUBEAHEX1
00002AE0  0C39 0004 0000313C      2563          CMP.B   #$4,bit2            * SUB byte displays as word
00002AE8  6700 005A               2564          BEQ     SUBEAHEX1
00002AEC  0C39 0001 0000313C      2565          CMP.B   #$1,bit2            * SUB word
00002AF4  6700 004E               2566          BEQ     SUBEAHEX1
00002AF8  0C39 0005 0000313C      2567          CMP.B   #$5,bit2            * SUB word
00002B00  6700 0042               2568          BEQ     SUBEAHEX1
00002B04  0C39 0003 0000313C      2569          CMP.B   #$3,bit2            * SUBA word
00002B0C  6700 0036               2570          BEQ     SUBEAHEX1
00002B10  0C39 0002 0000313C      2571          CMP.B   #$2,bit2            * SUB longword
00002B18  6700 0032               2572          BEQ     SUBEAHEX2
00002B1C  0C39 0006 0000313C      2573          CMP.B   #$6,bit2            * SUB longword
00002B24  6700 0026               2574          BEQ     SUBEAHEX2
00002B28  0C39 0007 0000313C      2575          CMP.B   #$7,bit2            * SUBA longword
00002B30  6700 001A               2576          BEQ     SUBEAHEX2
00002B34                          2577  
00002B34                          2578  SUBEAID
00002B34  43F9 00002EE3           2579          LEA     HASH,A1
00002B3A  103C 000E               2580          MOVE.B  #14,D0
00002B3E  4E4F                    2581          TRAP    #15
00002B40  6000 FF6E               2582          BRA     SUBEAID2
00002B44                          2583  
00002B44                          2584  SUBEAHEX1  
00002B44                          2585          *absolute address word
00002B44  1E3C 0002               2586          MOVE.B  #2,D7
00002B48  6000 000A               2587          BRA     SUBEAHEX3
00002B4C                          2588  
00002B4C                          2589  SUBEAHEX2  *absolute address long
00002B4C  1E3C 0004               2590          MOVE.B  #4,D7
00002B50  6000 0002               2591          BRA     SUBEAHEX3
00002B54                          2592  
00002B54                          2593  SUBEAHEX3
00002B54  BE3C 0000               2594          CMP.B   #0,D7               Compares current addr to ending addr
00002B58  6700 FCF6               2595          BEQ     SUBJMPA2            Branches to done if they are equal
00002B5C                          2596  
00002B5C                          2597      
00002B5C  141E                    2598          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002B5E                          2599          
00002B5E  1602                    2600          MOVE.B  D2,D3               Copies data at D2 to D3
00002B60                          2601          *   this gets digit in 10's place
00002B60  E80B                    2602          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002B62                          2603          *   this gets digit in 1's place
00002B62  E90A                    2604          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002B64  E80A                    2605          LSR.B   #4,D2               Shifts back right into 1's place
00002B66                          2606  
00002B66                          2607          
00002B66                          2608          *   D3 holds digit in 10's place
00002B66                          2609          *   D2 holds digit in 1's place
00002B66                          2610          
00002B66  1203                    2611          MOVE.B  D3,D1               Displays digit in 10's place first
00002B68                          2612  
00002B68                          2613          *   converts digits 10+ into letters
00002B68                          2614  
00002B68  47F9 00002B7C           2615          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
00002B6E  B23C 0009               2616          CMP.B   #9,D1               Compares digit to 9
00002B72  6E00 0164               2617          BGT     CONV                Print out letter representation if greater than 9
00002B76                          2618  
00002B76  103C 0003               2619          MOVE.B  #3,D0               Displays digit if it is less than A
00002B7A  4E4F                    2620          TRAP    #15
00002B7C                          2621          
00002B7C                          2622  SUBEAHEX4    
00002B7C  1202                    2623          MOVE.B  D2,D1               Displays digit in 1's place second
00002B7E                          2624  
00002B7E                          2625          *   converts digits 10+ into letters
00002B7E  47F9 00002B92           2626          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002B84  B23C 0009               2627          CMP.B   #9,D1               Compares digit to 9
00002B88  6E00 014E               2628          BGT     CONV                Print out letter representation if greater than 9
00002B8C                          2629          
00002B8C  103C 0003               2630          MOVE.B  #3,D0               Displays digit if it is less than A
00002B90  4E4F                    2631          TRAP    #15
00002B92                          2632          
00002B92                          2633  SUBEAHEX5         
00002B92                          2634  * Display counter -- creates new line every 8 bytes
00002B92                          2635          * D7 is used as counter
00002B92                          2636          
00002B92  5307                    2637          SUB.B   #1,D7                       
00002B94  60BE                    2638          BRA     SUBEAHEX3              Loops back to display next address
00002B96                          2639  
00002B96                          2640  ***   display EA ends here
00002B96                          2641  
00002B96                          2642  ******************************************************************************************************
00002B96                          2643  * Displays the EA as hex numbers
00002B96                          2644  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002B96                          2645  * OUTPUT: Displays size of EA reading from A6
00002B96                          2646  * Jumps to location stored in A2 when finished
00002B96                          2647  DISPEA
00002B96  43F9 00002EF5           2648          LEA     MHEX,A1
00002B9C  103C 000E               2649          MOVE.B  #14,D0
00002BA0  4E4F                    2650          TRAP    #15
00002BA2                          2651  
00002BA2  B83C 0002               2652          CMP.B   #$2,D4              Branches to longword display if size is 2
00002BA6  6700 000A               2653          BEQ     DISPEALONG          Else it will assume word length
00002BAA                          2654  
00002BAA                          2655  DISPEAWORD
00002BAA                          2656          *absolute address word
00002BAA  1E3C 0002               2657          MOVE.B  #2,D7
00002BAE  6000 000A               2658          BRA     DISPEA3
00002BB2                          2659   
00002BB2                          2660  DISPEALONG
00002BB2                          2661          *absolute address long
00002BB2  1E3C 0004               2662          MOVE.B  #4,D7
00002BB6  6000 0002               2663          BRA     DISPEA3
00002BBA                          2664  
00002BBA                          2665  DISPEA3
00002BBA  BE3C 0000               2666          CMP.B   #0,D7               Compares current addr to ending addr
00002BBE  6700 FC90               2667          BEQ     SUBJMPA2            Branches to done if they are equal
00002BC2                          2668  
00002BC2                          2669      
00002BC2  141E                    2670          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002BC4                          2671          
00002BC4  1602                    2672          MOVE.B  D2,D3               Copies data at D2 to D3
00002BC6                          2673          *   this gets digit in 10's place
00002BC6  E80B                    2674          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002BC8                          2675          *   this gets digit in 1's place
00002BC8  E90A                    2676          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002BCA  E80A                    2677          LSR.B   #4,D2               Shifts back right into 1's place
00002BCC                          2678  
00002BCC                          2679          
00002BCC                          2680          *   D3 holds digit in 10's place
00002BCC                          2681          *   D2 holds digit in 1's place
00002BCC                          2682          
00002BCC  1203                    2683          MOVE.B  D3,D1               Displays digit in 10's place first
00002BCE                          2684  
00002BCE                          2685          *   converts digits 10+ into letters
00002BCE                          2686  
00002BCE  47F9 00002BE2           2687          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002BD4  B23C 0009               2688          CMP.B   #9,D1               Compares digit to 9
00002BD8  6E00 00FE               2689          BGT     CONV                Print out letter representation if greater than 9
00002BDC                          2690  
00002BDC  103C 0003               2691          MOVE.B  #3,D0               Displays digit if it is less than A
00002BE0  4E4F                    2692          TRAP    #15
00002BE2                          2693    
00002BE2                          2694  DISPEA4
00002BE2  1202                    2695          MOVE.B  D2,D1               Displays digit in 1's place second
00002BE4                          2696  
00002BE4                          2697          *   converts digits 10+ into letters
00002BE4  47F9 00002BF8           2698          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
00002BEA  B23C 0009               2699          CMP.B   #9,D1               Compares digit to 9
00002BEE  6E00 00E8               2700          BGT     CONV                Print out letter representation if greater than 9
00002BF2                          2701          
00002BF2  103C 0003               2702          MOVE.B  #3,D0               Displays digit if it is less than A
00002BF6  4E4F                    2703          TRAP    #15
00002BF8                          2704        
00002BF8                          2705  DISPEA5
00002BF8                          2706  * Display counter -- creates new line every 8 bytes
00002BF8                          2707          * D7 is used as counter
00002BF8                          2708          
00002BF8  5307                    2709          SUB.B   #1,D7                       
00002BFA  60BE                    2710          BRA     DISPEA3              Loops back to display next address
00002BFC                          2711  
00002BFC                          2712  ***   display EA ends here
00002BFC                          2713  
00002BFC                          2714  *******************************************************************
00002BFC                          2715  * Clears all of the data registers
00002BFC                          2716  CLRDN
00002BFC  4280                    2717          CLR.L   D0
00002BFE  4281                    2718          CLR.L   D1
00002C00  4282                    2719          CLR.L   D2
00002C02  4283                    2720          CLR.L   D3
00002C04  4284                    2721          CLR.L   D4
00002C06  4285                    2722          CLR.L   D5
00002C08  4286                    2723          CLR.L   D6
00002C0A  4287                    2724          CLR.L   D7
00002C0C  4E75                    2725          RTS
00002C0E                          2726  
00002C0E                          2727  ********************************************************************
00002C0E                          2728  * Invalid op-code handling
00002C0E                          2729  * Displays DATA YYYY
00002C0E                          2730  *  YYYY represents the op-code that failed
00002C0E                          2731  INVOPCODE
00002C0E  DE1E                    2732          ADD.B   (A6)+,D7
00002C10                          2733  
00002C10                          2734  INVOP
00002C10  43F9 00002F64           2735          LEA     MDATA,A1
00002C16  103C 000E               2736          MOVE.B  #14,D0
00002C1A  4E4F                    2737          TRAP    #15
00002C1C  43F9 00002ED5           2738          LEA     TAB,A1
00002C22  103C 000E               2739          MOVE.B  #14,D0
00002C26  4E4F                    2740          TRAP    #15
00002C28  43F9 00002EF5           2741          LEA     MHEX,A1
00002C2E  103C 000E               2742          MOVE.B  #14,D0
00002C32  4E4F                    2743          TRAP    #15
00002C34                          2744          
00002C34  1C3C 0002               2745          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
00002C38                          2746          
00002C38  3407                    2747          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
00002C3A  E04A                    2748          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
00002C3C  6000 0004               2749          BRA     INVOP2              Skips the second part to do later
00002C40                          2750  
00002C40                          2751  INVOP1
00002C40  1407                    2752          MOVE.B  D7,D2
00002C42                          2753  INVOP2
00002C42  1602                    2754          MOVE.B  D2,D3               Copies data at D2 to D3
00002C44                          2755          *   this gets digit in 10's place
00002C44  E80B                    2756          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002C46                          2757          *   this gets digit in 1's place
00002C46  E90A                    2758          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002C48  E80A                    2759          LSR.B   #4,D2               Shifts back right into 1's place
00002C4A                          2760  
00002C4A                          2761          
00002C4A                          2762          *   D3 holds digit in 10's place
00002C4A                          2763          *   D2 holds digit in 1's place
00002C4A                          2764          
00002C4A  1203                    2765          MOVE.B  D3,D1               Displays digit in 10's place first
00002C4C                          2766  
00002C4C                          2767          *   converts digits 10+ into letters
00002C4C                          2768  
00002C4C  47F9 00002C60           2769          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
00002C52  B23C 0009               2770          CMP.B   #9,D1               Compares digit to 9
00002C56  6E00 0080               2771          BGT     CONV                Print out letter representation if greater than 9
00002C5A                          2772  
00002C5A  103C 0003               2773          MOVE.B  #3,D0               Displays digit if it is less than A
00002C5E  4E4F                    2774          TRAP    #15
00002C60                          2775          
00002C60                          2776  INVOP3   
00002C60  1202                    2777          MOVE.B  D2,D1               Displays digit in 1's place second
00002C62                          2778  
00002C62                          2779          *   converts digits 10+ into letters
00002C62  47F9 00002C76           2780          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002C68  B23C 0009               2781          CMP.B   #9,D1               Compares digit to 9
00002C6C  6E00 006A               2782          BGT     CONV                Print out letter representation if greater than 9
00002C70                          2783          
00002C70  103C 0003               2784          MOVE.B  #3,D0               Displays digit if it is less than A
00002C74  4E4F                    2785          TRAP    #15
00002C76                          2786          
00002C76                          2787  INVOP4
00002C76                          2788  * Display counter -- creates new line every 8 bytes
00002C76                          2789          * D6 is used as counter
00002C76                          2790          
00002C76  5306                    2791          SUB.B   #1,D6
00002C78  BC3C 0000               2792          CMP.B   #0,D6
00002C7C  6700 0004               2793          BEQ     ENDNEWLINE
00002C80  60BE                    2794          BRA     INVOP1              Loops back to display next address
00002C82                          2795  
00002C82                          2796  
00002C82                          2797  ******************************************************************************************************
00002C82                          2798  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002C82                          2799  ENDNEWLINE
00002C82  43F9 00002ED2           2800          LEA     NEWLINE,A1          Creates a new line in output window
00002C88  103C 000E               2801          MOVE.B  #14,D0
00002C8C  4E4F                    2802          TRAP    #15
00002C8E                          2803  
00002C8E  5339 00003131           2804          SUB.B   #1,dispcount
00002C94  0C39 0000 00003131      2805          CMP.B   #0,dispcount               Checks if display counter is zero
00002C9C  6600 E442               2806          BNE     NEWADDR
00002CA0                          2807  
00002CA0                          2808  * Asks user to press enter to continue
00002CA0                          2809  * Resets counter
00002CA0  43F9 00002ED2           2810          LEA     NEWLINE,A1          Creates a new line in output window
00002CA6  103C 000E               2811          MOVE.B  #14,D0
00002CAA  4E4F                    2812          TRAP    #15
00002CAC                          2813          
00002CAC  43F9 00003115           2814          LEA     MCONT,A1            Asks user to press enter to continue
00002CB2  103C 000E               2815          MOVE.B  #14,D0
00002CB6  4E4F                    2816          TRAP    #15
00002CB8                          2817  
00002CB8  103C 0004               2818          MOVE.B  #4,D0               Takes in user input
00002CBC  4E4F                    2819          TRAP    #15
00002CBE  4281                    2820          CLR.L   D1                  Clears D1 incase user decides to input something
00002CC0                          2821  
00002CC0  43F9 00002ED2           2822          LEA     NEWLINE,A1          Creates a new line in output window
00002CC6  103C 000E               2823          MOVE.B  #14,D0
00002CCA  4E4F                    2824          TRAP    #15
00002CCC                          2825  
00002CCC  13FC 001E 00003131      2826          MOVE.B  #dispnum,dispcount  Resets display counter
00002CD4  6000 E40A               2827          BRA     NEWADDR             Loops back to beginning
00002CD8                          2828  
00002CD8                          2829  
00002CD8                          2830  ******************************************************************************************************
00002CD8                          2831  * Converts decimal number into hex and displays it
00002CD8                          2832  *   converts number 10-15 to A-F
00002CD8                          2833  *   INPUT: decimal number in D1
00002CD8                          2834  *   OUTPUT: HEX number to output
00002CD8  B23C 000A               2835  CONV    CMP.B   #10,D1              Displays 10 as A
00002CDC  6700 002A               2836          BEQ     HEXA
00002CE0  B23C 000B               2837          CMP.B   #11,D1              Displays 11 as B
00002CE4  6700 002C               2838          BEQ     HEXB
00002CE8  B23C 000C               2839          CMP.B   #12,D1              Displays 12 as C
00002CEC  6700 002E               2840          BEQ     HEXC
00002CF0  B23C 000D               2841          CMP.B   #13,D1              Displays 13 as D
00002CF4  6700 0030               2842          BEQ     HEXD
00002CF8  B23C 000E               2843          CMP.B   #14,D1              Displays 14 as E
00002CFC  6700 0032               2844          BEQ     HEXE
00002D00  B23C 000F               2845          CMP.B   #15,D1              Displays 15 as F
00002D04  6700 0034               2846          BEQ     HEXF
00002D08                          2847  
00002D08  43F9 00002EE7           2848  HEXA    LEA     DISPA,A1            Loads A character
00002D0E  6000 0034               2849          BRA     PRINT
00002D12                          2850    
00002D12  43F9 00002EE9           2851  HEXB    LEA     DISPB,A1            Loads B character
00002D18  6000 002A               2852          BRA     PRINT
00002D1C                          2853  
00002D1C  43F9 00002EEB           2854  HEXC    LEA     DISPC,A1            Loads C character
00002D22  6000 0020               2855          BRA     PRINT
00002D26                          2856  
00002D26  43F9 00002EED           2857  HEXD    LEA     DISPD,A1            Loads D character
00002D2C  6000 0016               2858          BRA     PRINT
00002D30                          2859  
00002D30  43F9 00002EEF           2860  HEXE    LEA     DISPE,A1            Loads E character
00002D36  6000 000C               2861          BRA     PRINT
00002D3A                          2862  
00002D3A  43F9 00002EF1           2863  HEXF    LEA     DISPF,A1            Loads F character
00002D40  6000 0002               2864          BRA     PRINT
00002D44                          2865  
00002D44  103C 000E               2866  PRINT   MOVE.B  #14,D0              Sets trap task to #14
00002D48  4E4F                    2867          TRAP    #15                 Prints out message in A1
00002D4A  4ED3                    2868          JMP     (A3)
00002D4C                          2869  
00002D4C                          2870  ******************************************************************************
00002D4C                          2871  * Converts decimal input to hex
00002D4C                          2872  * INPUT: Decimal inside D2
00002D4C                          2873  * OUTPUT: HEX into D3
00002D4C                          2874  *   Converts number in decimal to hex        
00002D4C                          2875  DEC2HEX
00002D4C  B43C 0030               2876          CMP.B   #$30,D2             0
00002D50  6700 00B0               2877          BEQ     D2HZERO
00002D54  B43C 0031               2878          CMP.B   #$31,D2             1
00002D58  6700 00AE               2879          BEQ     D2HONE
00002D5C  B43C 0032               2880          CMP.B   #$32,D2             2
00002D60  6700 00AC               2881          BEQ     D2HTWO
00002D64  B43C 0033               2882          CMP.B   #$33,D2             3
00002D68  6700 00AA               2883          BEQ     D2HTHREE
00002D6C  B43C 0034               2884          CMP.B   #$34,D2             4
00002D70  6700 00A8               2885          BEQ     D2HFOUR
00002D74  B43C 0035               2886          CMP.B   #$35,D2             5
00002D78  6700 00A6               2887          BEQ     D2HFIVE
00002D7C  B43C 0036               2888          CMP.B   #$36,D2             6
00002D80  6700 00A4               2889          BEQ     D2HSIX
00002D84  B43C 0037               2890          CMP.B   #$37,D2             7
00002D88  6700 00A2               2891          BEQ     D2HSEVEN
00002D8C  B43C 0038               2892          CMP.B   #$38,D2             8
00002D90  6700 00A0               2893          BEQ     D2HEIGHT
00002D94  B43C 0039               2894          CMP.B   #$39,D2             9
00002D98  6700 009E               2895          BEQ     D2HNINE
00002D9C  B43C 0041               2896          CMP.B   #$41,D2             A
00002DA0  6700 009C               2897          BEQ     D2HHEXA
00002DA4  B43C 0042               2898          CMP.B   #$42,D2             B
00002DA8  6700 009A               2899          BEQ     D2HHEXB
00002DAC  B43C 0043               2900          CMP.B   #$43,D2             C
00002DB0  6700 0098               2901          BEQ     D2HHEXC
00002DB4  B43C 0044               2902          CMP.B   #$44,D2             D
00002DB8  6700 0096               2903          BEQ     D2HHEXD
00002DBC  B43C 0045               2904          CMP.B   #$45,D2             E
00002DC0  6700 0094               2905          BEQ     D2HHEXE
00002DC4  B43C 0046               2906          CMP.B   #$46,D2             F
00002DC8  6700 0092               2907          BEQ     D2HHEXF
00002DCC  B43C 0061               2908          CMP.B   #$61,D2             A
00002DD0  6700 006C               2909          BEQ     D2HHEXA
00002DD4  B43C 0062               2910          CMP.B   #$62,D2             B
00002DD8  6700 006A               2911          BEQ     D2HHEXB
00002DDC  B43C 0063               2912          CMP.B   #$63,D2             C
00002DE0  6700 0068               2913          BEQ     D2HHEXC
00002DE4  B43C 0064               2914          CMP.B   #$64,D2             D
00002DE8  6700 0066               2915          BEQ     D2HHEXD
00002DEC  B43C 0065               2916          CMP.B   #$65,D2             E
00002DF0  6700 0064               2917          BEQ     D2HHEXE
00002DF4  B43C 0066               2918          CMP.B   #$66,D2             F
00002DF8  6700 0062               2919          BEQ     D2HHEXF
00002DFC                          2920  
00002DFC                          2921          * User entered a non-hex character
00002DFC                          2922          * Moves F to D1 to indicate error before returning
00002DFC  123C 000F               2923          MOVE.B  #$F,D1
00002E00  4E75                    2924          RTS
00002E02                          2925  
00002E02                          2926  *   Moves the appropiate hex number to D3
00002E02  163C 0000               2927  D2HZERO MOVE.B  #$0,D3
00002E06  4E75                    2928          RTS
00002E08                          2929  
00002E08                          2930  D2HONE
00002E08  163C 0001               2931          MOVE.B  #$1,D3
00002E0C  4E75                    2932          RTS
00002E0E                          2933  
00002E0E                          2934  D2HTWO
00002E0E  163C 0002               2935          MOVE.B  #$2,D3
00002E12  4E75                    2936          RTS
00002E14                          2937  
00002E14                          2938  D2HTHREE
00002E14  163C 0003               2939          MOVE.B  #$3,D3
00002E18  4E75                    2940          RTS
00002E1A                          2941  
00002E1A                          2942  D2HFOUR
00002E1A  163C 0004               2943          MOVE.B  #$4,D3
00002E1E  4E75                    2944          RTS
00002E20                          2945  
00002E20                          2946  D2HFIVE
00002E20  163C 0005               2947          MOVE.B  #$5,D3
00002E24  4E75                    2948          RTS
00002E26                          2949  
00002E26                          2950  D2HSIX
00002E26  163C 0006               2951          MOVE.B  #$6,D3
00002E2A  4E75                    2952          RTS
00002E2C                          2953  
00002E2C                          2954  D2HSEVEN
00002E2C  163C 0007               2955          MOVE.B  #$7,D3
00002E30  4E75                    2956          RTS
00002E32                          2957  
00002E32                          2958  D2HEIGHT
00002E32  163C 0008               2959          MOVE.B  #$8,D3
00002E36  4E75                    2960          RTS
00002E38                          2961  
00002E38                          2962  D2HNINE
00002E38  163C 0009               2963          MOVE.B  #$9,D3
00002E3C  4E75                    2964          RTS
00002E3E                          2965  
00002E3E                          2966  D2HHEXA
00002E3E  163C 000A               2967          MOVE.B  #$A,D3
00002E42  4E75                    2968          RTS
00002E44                          2969  
00002E44                          2970  D2HHEXB
00002E44  163C 000B               2971          MOVE.B  #$B,D3
00002E48  4E75                    2972          RTS
00002E4A                          2973  
00002E4A                          2974  D2HHEXC
00002E4A  163C 000C               2975          MOVE.B  #$C,D3
00002E4E  4E75                    2976          RTS
00002E50                          2977  
00002E50                          2978  D2HHEXD
00002E50  163C 000D               2979          MOVE.B  #$D,D3
00002E54  4E75                    2980          RTS
00002E56                          2981  
00002E56                          2982  D2HHEXE
00002E56  163C 000E               2983          MOVE.B  #$E,D3
00002E5A  4E75                    2984          RTS
00002E5C                          2985  
00002E5C                          2986  D2HHEXF
00002E5C  163C 000F               2987          MOVE.B  #$F,D3
00002E60  4E75                    2988          RTS
00002E62                          2989  
00002E62                          2990  *************************************************************************************************
00002E62                          2991  ASK4REPEAT
00002E62  43F9 00002ED2           2992          LEA     NEWLINE,A1          Creates a new line in output window
00002E68  103C 000E               2993          MOVE.B  #14,D0
00002E6C  4E4F                    2994          TRAP    #15
00002E6E                          2995  ASK4REPEAT2
00002E6E  43F9 0000301C           2996          LEA     MREPEAT,A1          Asks user if they want to start over or exit
00002E74  103C 000E               2997          MOVE.B  #14,D0
00002E78  4E4F                    2998          TRAP    #15
00002E7A                          2999  
00002E7A  43F9 0000313E           3000          LEA     bit4,A1             User has to enter Y to start over
00002E80  103C 0002               3001          MOVE.B  #2,D0               N to exit
00002E84  4E4F                    3002          TRAP    #15
00002E86                          3003  
00002E86  1239 0000313E           3004          MOVE.B  bit4,D1             User input was stored in bit4
00002E8C  B23C 0059               3005          CMP.B   #$59,D1             Char Y
00002E90  6700 E174               3006          BEQ     IOSTART
00002E94  B23C 0079               3007          CMP.B   #$79,D1             Char y
00002E98  6700 E16C               3008          BEQ     IOSTART
00002E9C  B23C 004E               3009          CMP.B   #$4E,D1             Char N
00002EA0  6700 001C               3010          BEQ     DONE
00002EA4  B23C 006E               3011          CMP.B   #$6E,D1             Char n
00002EA8  6700 0014               3012          BEQ     DONE
00002EAC  60C0                    3013          BRA     ASK4REPEAT2          Asks again if user enters invalid character
00002EAE                          3014  
00002EAE                          3015  
00002EAE                          3016  **************************************************************************************************
00002EAE  43F9 000030E3           3017  ERROR   LEA     MERROR,A1
00002EB4  103C 000E               3018          MOVE.B  #14,D0
00002EB8  4E4F                    3019          TRAP    #15
00002EBA  6000 000E               3020          BRA     EXIT
00002EBE                          3021  
00002EBE  43F9 000030FA           3022  DONE    LEA     MDONE,A1
00002EC4  103C 000E               3023          MOVE.B  #14,D0
00002EC8  4E4F                    3024          TRAP    #15
00002ECA                          3025  
00002ECA  103C 0009               3026  EXIT    MOVE.B  #9,D0
00002ECE  4E4F                    3027          TRAP    #15
00002ED0                          3028  
00002ED0                          3029  ************************************ Output stuff **************************************
00002ED0                          3030  * Stuff for output
00002ED0                          3031  
00002ED0  =0000000D               3032  CR      EQU     $0D
00002ED0  =0000000A               3033  LF      EQU     $0A
00002ED0                          3034  
00002ED0= 20 00                   3035  SPACE       DC.B    ' ',0
00002ED2= 0D 0A 00                3036  NEWLINE     DC.B    '',CR,LF,0
00002ED5= 20 20 20 00             3037  TAB         DC.B    '   ',0
00002ED9= 2C 00                   3038  COMMA       DC.B    ',',0
00002EDB= 28 00                   3039  OPENBRA     DC.B    '(',0
00002EDD= 29 00                   3040  CLOSEBRA    DC.B    ')',0
00002EDF= 2B 00                   3041  POS         DC.B    '+',0
00002EE1= 2D 00                   3042  NEG         DC.B    '-',0
00002EE3= 23 00                   3043  HASH        DC.B    '#',0
00002EE5= 2F 00                   3044  SLASH       DC.B    '/',0
00002EE7                          3045  
00002EE7                          3046  
00002EE7= 41 00                   3047  DISPA       DC.B    'A',0
00002EE9= 42 00                   3048  DISPB       DC.B    'B',0
00002EEB= 43 00                   3049  DISPC       DC.B    'C',0
00002EED= 44 00                   3050  DISPD       DC.B    'D',0
00002EEF= 45 00                   3051  DISPE       DC.B    'E',0
00002EF1= 46 00                   3052  DISPF       DC.B    'F',0
00002EF3                          3053  
00002EF3= 2E 00                   3054  MDOT        DC.B    '.',0
00002EF5= 24 00                   3055  MHEX        DC.B    '$',0
00002EF7= 42 20 00                3056  MBYTE       DC.B    'B ',0
00002EFA= 57 20 00                3057  MWORD       DC.B    'W ',0
00002EFD= 4C 20 00                3058  MLONG       DC.B    'L ',0
00002F00= 44 00                   3059  MDN         DC.B    'D',0
00002F02= 41 00                   3060  MAN         DC.B    'A',0
00002F04                          3061  
00002F04= 4A 53 52 00             3062  MJSR        DC.B    'JSR',0
00002F08= 42 54 53 54 00          3063  MBTST       DC.B    'BTST',0
00002F0D= 52 4F 4C 00             3064  MROL        DC.B    'ROL',0
00002F11= 52 4F 52 00             3065  MROR        DC.B    'ROR',0
00002F15= 4C 53 4C 00             3066  MLSL        DC.B    'LSL',0
00002F19= 4C 53 52 00             3067  MLSR        DC.B    'LSR',0
00002F1D= 4E 45 47 2E 00          3068  MMNEGW      DC.B    'NEG.',0
00002F22= 44 49 56 53 2E 57 00    3069  MMDIVSW     DC.B    'DIVS.W',0
00002F29= 4D 55 4C 53 2E 57 00    3070  MMULSW      DC.B    'MULS.W',0
00002F30= 4D 4F 56 45 2E 42 00    3071  MMOVEB      DC.B    'MOVE.B',0
00002F37= 4D 4F 56 45 2E 57 00    3072  MMOVEW      DC.B    'MOVE.W',0
00002F3E= 4D 4F 56 45 2E 4C 00    3073  MMOVEL      DC.B    'MOVE.L',0
00002F45= 4D 4F 56 45 41 2E ...   3074  MMOVEAW     DC.B    'MOVEA.W',0
00002F4D= 4D 4F 56 45 41 2E ...   3075  MMOVEAL     DC.B    'MOVEA.L',0
00002F55= 4D 4F 56 45 4D 2E 00    3076  MMOVEM      DC.B    'MOVEM.',0
00002F5C                          3077  
00002F5C= 41 53 4C 00             3078  MASL        DC.B    'ASL',0
00002F60= 41 53 52 00             3079  MASR        DC.B    'ASR',0
00002F64= 44 41 54 41 00          3080  MDATA       DC.B    'DATA',0
00002F69= 53 55 42 2E 00          3081  MSUB        DC.B    'SUB.',0
00002F6E= 53 55 42 41 2E 00       3082  MSUBA       DC.B    'SUBA.',0
00002F74= 41 4E 44 2E 00          3083  MAND        DC.B    'AND.',0
00002F79= 41 44 44 2E 00          3084  MADD        DC.B    'ADD.',0
00002F7E= 53 55 42 49 2E 00       3085  MSUBI       DC.B    'SUBI.',0
00002F84= 4F 52 49 2E 00          3086  MORI        DC.B    'ORI.',0
00002F89= 4E 4F 54 2E 00          3087  MNOT        DC.B    'NOT.',0
00002F8E= 4D 55 4C 53 2E 00       3088  MMUL        DC.B    'MULS.',0
00002F94= 4E 45 47 00             3089  MNEG        DC.B    'NEG',0
00002F98= 43 4D 50 2E 00          3090  MCMP        DC.B    'CMP.',0
00002F9D= 43 4D 50 49 2E 00       3091  MCMPI       DC.B    'CMPI.',0
00002FA3= 43 4D 50 41 2E 00       3092  MCMPA       DC.B    'CMPA.',0
00002FA9= 45 4F 52 2E 00          3093  MEOR        DC.B    'EOR.',0
00002FAE= 45 4F 52 49 2E 00       3094  MEORI       DC.B    'EORI.',0
00002FB4= 41 44 44 41 2E 00       3095  MADDA       DC.B    'ADDA.',0
00002FBA                          3096  
00002FBA= 42 45 51 00             3097  MBEQ        DC.B    'BEQ',0
00002FBE= 42 4E 45 00             3098  MBNE        DC.B    'BNE',0
00002FC2= 42 4C 54 00             3099  MBLT        DC.B    'BLT',0
00002FC6= 42 48 49 00             3100  MBHI        DC.B    'BHI',0
00002FCA= 42 52 41 00             3101  MBRA        DC.B    'BRA',0
00002FCE= 4E 4F 50 00             3102  MNOP        DC.B    'NOP',0
00002FD2= 52 54 53 00             3103  MRTS        DC.B    'RTS',0
00002FD6                          3104  
00002FD6= 4C 65 6D 6D 65 20 ...   3105  MADDR1      DC.B    'Lemme get dat start address, fam: ',0
00002FF9= 47 69 6D 6D 65 20 ...   3106  MADDR2      DC.B    'Gimme that end address too homie: ',0
0000301C= 54 72 79 6E 61 20 ...   3107  MREPEAT     DC.B    'Tryna go again or what? (Y/N): ',0
0000303C= 45 6E 64 20 61 64 ...   3108  MIOERR1     DC.B    'End address must be after the start address, try again.',0
00003074= 41 64 64 72 65 73 ...   3109  MIOERR2     DC.B    'Address cannot be longer than longword, try again.',0
000030A7= 52 65 2D 65 6E 74 ...   3110  MIOERR3     DC.B    'Re-enter valid hex numbers.',0
000030C3= 41 64 64 72 65 73 ...   3111  MIOERR4     DC.B    'Address must be an even number.',0
000030E3= 45 52 52 4F 52 3A ...   3112  MERROR      DC.B    'ERROR: Something broke',0
000030FA= 43 4F 4D 50 4C 45 ...   3113  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
00003115= 2A 2A 50 52 45 53 ...   3114  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
00003131                          3115  
00003131                          3116  
00003131                          3117  ********************************** MEMORY STORAGE **********************************************
00003131                          3118  * Stores memory locations at the end of the program
00003131                          3119  * How DS works: Give it a variable name.
00003131                          3120  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
00003131                          3121  *   Last is the number of storage you want. 
00003131                          3122  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
00003131                          3123  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
00003131                          3124  *            
00003131                          3125  
00003131                          3126  dispcount   DS.B    1           Used to count display lines
00003132                          3127  
00003132                          3128  startaddr   DS.L    1
00003136                          3129  endaddr     DS.L    1
0000313A                          3130  
0000313A                          3131  bit0        DS.B    1           SEE NOTE UP TOP
0000313B                          3132  bit1        DS.B    1           SEE NOTE UP TOP
0000313C                          3133  bit2        DS.B    1           SEE NOTE UP TOP
0000313D                          3134  bit3        DS.B    1           SEE NOTE UP TOP
0000313E                          3135  bit4        DS.B    1           SEE NOTE UP TOP
0000313F                          3136  
0000313F                          3137  
0000313F                          3138      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1508
ADDIMD0             1538
ADDIMD1             1546
ADDIMD4             1554
ADDIMDDES           15C2
ADDIMDDES0          15E6
ADDIMDDES1          15F4
ADDIMDDES4          1602
ADDR1               7000
ADDR2               726C
ASK4REPEAT          2E62
ASK4REPEAT2         2E6E
ASLRMEMH            1D22
BCC                 1FD4
BCCBEQ              2050
BCCBHI              206E
BCCBLT              2064
BCCBNE              205A
BCCBRA              2046
BCCDISP             201A
BCCLONG             2002
BCCNEXT             200A
BCCPRINT            2078
BCCWORD             1FFA
BIT0                313A
BIT1                313B
BIT2                313C
BIT3                313D
BIT4                313E
BTST                1264
CLOSEBRA            2EDD
CLRDN               2BFC
CODE                11B4
COMMA               2ED9
CONV                2CD8
CR                  D
D2HEIGHT            2E32
D2HFIVE             2E20
D2HFOUR             2E1A
D2HHEXA             2E3E
D2HHEXB             2E44
D2HHEXC             2E4A
D2HHEXD             2E50
D2HHEXE             2E56
D2HHEXF             2E5C
D2HNINE             2E38
D2HONE              2E08
D2HSEVEN            2E2C
D2HSIX              2E26
D2HTHREE            2E14
D2HTWO              2E0E
D2HZERO             2E02
DEC2HEX             2D4C
DISPA               2EE7
DISPADDR            10B6
DISPADDR1           10FE
DISPADDR2           1100
DISPADDR3           1134
DISPADDR4           114A
DISPADDR5           1160
DISPADDR6           1176
DISPADDREND         1180
DISPADDRSTART       10F2
DISPB               2EE9
DISPC               2EEB
DISPCOUNT           3131
DISPD               2EED
DISPE               2EEF
DISPEA              2B96
DISPEA3             2BBA
DISPEA4             2BE2
DISPEA5             2BF8
DISPEALONG          2BB2
DISPEAWORD          2BAA
DISPF               2EF1
DISPNUM             1E
DIVSW               1ABA
DONE                2EBE
ENDADDR             3136
ENDNEWLINE          2C82
ENDNLINC            1A2C
ERROR               2EAE
EXIT                2ECA
HANDLEDES           156A
HASH                2EE3
HEXA                2D08
HEXB                2D12
HEXC                2D1C
HEXD                2D26
HEXE                2D30
HEXF                2D3A
IMD                 2088
IMD2                20B0
IMD3                20B8
IMD4                20C4
IMDBYTE             215E
IMDEA               2186
IMDEA2              21A2
IMDEA3              21B8
IMDLONG             217C
IMDPRINT            20FE
IMDPRINTCMPI        214C
IMDPRINTEND         2156
IMDPRINTEORI        2142
IMDPRINTORI         212E
IMDPRINTSUBI        2138
IMDWORD             216E
INVOP               2C10
INVOP1              2C40
INVOP2              2C42
INVOP3              2C60
INVOP4              2C76
INVOPCODE           2C0E
IOERROR1            1078
IOERROR2            1086
IOERROR3            1096
IOERROR4            10A6
IOGETADDR           102E
IOLOOP              1054
IOSTART             1006
IOSTARTLOOP         104E
JSR                 1218
LF                  A
LSLR                1C9E
LSLRDESD            191C
LSLRMEM             1E86
LSLRMEMH            1DA6
LSLRSRCD            18F4
MADD                2F79
MADDA               2FB4
MADDR1              2FD6
MADDR2              2FF9
MAN                 2F02
MAND                2F74
MASL                2F5C
MASR                2F60
MBEQ                2FBA
MBHI                2FC6
MBLT                2FC2
MBNE                2FBE
MBRA                2FCA
MBTST               2F08
MBYTE               2EF7
MCMP                2F98
MCMPA               2FA3
MCMPI               2F9D
MCONT               3115
MDATA               2F64
MDN                 2F00
MDONE               30FA
MDOT                2EF3
MEOR                2FA9
MEORI               2FAE
MERROR              30E3
MHEX                2EF5
MIOERR1             303C
MIOERR2             3074
MIOERR3             30A7
MIOERR4             30C3
MISC                21BC
MISCBIT2            2204
MISCBIT3            2210
MISCBYTE            22AE
MISCCHECKM          2224
MISCEA              22DC
MISCEA2             22F8
MISCLONG            22D0
MISCMMPOSTINC       2430
MISCMMPOSTINC2      243A
MISCMMPOSTINC3      2470
MISCMMPOSTINCPRINT  2474
MISCMMPOSTINCPRINT2  2488
MISCMMPOSTINCPRINT3  2494
MISCMMPREDEC        23C2
MISCMMPREDEC2       23EC
MISCMMPREDEC3       2402
MISCMMPREDECCHECK   23B6
MISCMMPREDECPRINT   2406
MISCMMPREDECPRINT2  241A
MISCMMPREDECPRINT3  2426
MISCMMPRINTNUM      2506
MISCMMPRINTSIZE     239E
MISCMMREGMEM        249E
MISCMMREGMEM2       24C4
MISCMMREGMEM3       24DA
MISCMMREGMEMPRINT   24DE
MISCMMREGMEMPRINT2  24EE
MISCMMREGMEMPRINT3  24FA
MISCMMSIZEL         2398
MISCMMSLASH         2514
MISCMOVEM           2330
MISCMOVEM2          2340
MISCMOVEM3          2350
MISCMOVEM4          2362
MISCNOP             2244
MISCNOT             2264
MISCNOT2            226C
MISCNOT3            2274
MISCNOT4            2280
MISCPRINT           22FC
MISCPRINTEND        2328
MISCPRINTNEG        231E
MISCPRINTNOT        2314
MISCRTS             2254
MISCWORD            22C0
MJSR                2F04
MLONG               2EFD
MLSL                2F15
MLSR                2F19
MMDIVSW             2F22
MMNEGW              2F1D
MMOVEAL             2F4D
MMOVEAW             2F45
MMOVEB              2F30
MMOVEL              2F3E
MMOVEM              2F55
MMOVEW              2F37
MMUL                2F8E
MMULSW              2F29
MNEG                2F94
MNOP                2FCE
MNOT                2F89
MORI                2F84
MOVB                1482
MOVBDN1             1868
MOVBDN2             1A08
MOVEAL              142E
MOVEAN1             1618
MOVEAN2             1938
MOVEAW              134E
MOVEIAN1            168C
MOVEIAND1           17C8
MOVEIANI1           1720
MOVIAN2             1954
MOVIAND2            19C8
MOVIANI2            1988
MOVL                13A2
MOVW                12C2
MREPEAT             301C
MROL                2F0D
MROR                2F11
MRTS                2FD2
MSUB                2F69
MSUBA               2F6E
MSUBI               2F7E
MULSW               1A30
MWORD               2EFA
NEG                 2EE1
NEGW                1B48
NEWADDR             10E0
NEWLINE             2ED2
OPENBRA             2EDB
POS                 2EDF
PRINT               2D44
PRINTASL            1D3E
PRINTASR            1D72
PRINTB              1ED0
PRINTBYTE           1BA2
PRINTL              1F38
PRINTLONG           1C4A
PRINTLSL            1E52
PRINTLSLRCOUNT      1F6C
PRINTLSR            1FA0
PRINTROL            1DEA
PRINTROR            1E1E
PRINTW              1F04
PRINTWORD           1BF6
RORL                1DD2
SLASH               2EE5
SPACE               2ED0
START               1000
STARTADDR           3132
SUB                 2522
SUB1                2554
SUB2                2536
SUB3                253E
SUB4                2548
SUBA                2770
SUBACHECK           2590
SUBACONT            27C4
SUBAN               295A
SUBAN2              2976
SUBANID             2992
SUBANIDNEG          2A06
SUBANIDPOS          29C6
SUBDN               2922
SUBDN2              293E
SUBEA               2A46
SUBEAHEX            2AA4
SUBEAHEX1           2B44
SUBEAHEX2           2B4C
SUBEAHEX3           2B54
SUBEAHEX4           2B7C
SUBEAHEX5           2B92
SUBEAID             2B34
SUBEAID2            2AB0
SUBERRORTEST1       28E0
SUBERRORTEST11      2920
SUBJMPA2            2850
SUBPRINT            2852
SUBPRINTADD         28A2
SUBPRINTADDA        27B4
SUBPRINTAND         2892
SUBPRINTB           28B2
SUBPRINTCMP         28BE
SUBPRINTCMPA        27A4
SUBPRINTEND         28DE
SUBPRINTEOR         28CE
SUBPRINTSUB         2882
SUBPRINTSUBA        2794
SUBSIZE1            25F0
SUBSIZE11           2616
SUBSIZE12           262C
SUBSIZE2            2630
SUBSIZE21           2656
SUBSIZE22           266C
SUBSIZE3            2670
SUBSIZE31           2696
SUBSIZE32           26AC
SUBSIZE4            26B0
SUBSIZE41           26D6
SUBSIZE42           26EC
SUBSIZE5            26F0
SUBSIZE51           2716
SUBSIZE52           272C
SUBSIZE6            2730
SUBSIZE61           2756
SUBSIZE62           276C
SUBSIZE7            27DC
SUBSIZE71           27FE
SUBSIZE72           2814
SUBSIZE8            2818
SUBSIZE81           2838
SUBSIZE82           284C
TAB                 2ED5
