00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 12/1/2015 1:00:00 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : A Disassembler for the Motorola MC68000 Microprocessor
00000000                             3  * Written by : Team A (Phat, Felicia, Arthur)
00000000                             4  * Date       : Thanksgiving 2015 (We started earlier but I happen to be filling this in today)
00000000                             5  * Description: Converts assembly language written in hex to readable human code (CSS422 Project)
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000                             9  ********************************
00000000                            10  * INFO:
00000000                            11  * bit0-4 are used to store information about binary op-code split into it's split-up stage
00000000                            12  * They are stored at the end of the code. (You can find code for storage at the end, after all the messages.)
00000000                            13  *   bit0 - Store first hex of op code
00000000                            14  *   bit1 - Store first 'bit' of a split op code
00000000                            15  *   bit2 - Store second 'bit' of a split op code
00000000                            16  *   bit3 - Store third 'bit' of a split op code
00000000                            17  *   bit4 - Store fourth 'bit' of a split op code
00000000                            18  * 
00000000                            19  * 
00000000                            20  * 
00000000                            21  * COMPLETED WORK:
00000000                            22  * SUB
00000000                            23  * SUBA
00000000                            24  * SUBA      ERROR on CFC6 produces SUBA.L D6,A7 should be MULS.W    D6,D7 fixed however further testing needed 
00000000                            25  * AND
00000000                            26  * ADD   - NOT TESTED
00000000                            27  * SUBI
00000000                            28  * ORI   - EORI and CMPI uses the same logic as these two
00000000                            29  * NOT
00000000                            30  * Bcc
00000000                            31  * BRA   - NOT TESTED
00000000                            32  * 
00000000                            33  * Display buffer thingy
00000000                            34  *
00000000                            35  * 
00000000                            36  * MOVE      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       1806
00000000                            37  * MOVEA     MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       3846
00000000                            38  * MULS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE        MULS LONG?     CFC6
00000000                            39  * DIVS      MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       85C3
00000000                            40  * NEG       MISSES  LONGADRESS(L&W) and IMEDIATE DATA     INVALID OPCODE                       4443
00000000                            41  * LSL       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E76A
00000000                            42  * LSR       MISSES  EFFECTIVE ADDRESSES                   INVALID OPCODE                       E66A
00000000                            43  ****************************************************************************
00000000                            44  
00000000                            45  
00000000                            46  * sets start and end address
00000000                            47  * temp hard code
00000000                            48  * make UI later for input
00000000  =00007000                 49  addr1       EQU     $7000
00000000                            50  *addr2   EQU     $703C
00000000  =0000726C                 51  addr2       EQU     $726C
00000000  =0000001E                 52  dispnum     EQU     30          Number of lines output will display before asking to continue
00000000                            53  
00000000                            54  
00001000                            55      ORG    $1000
00001000                            56  START:                  ; first instruction of program
00001000                            57  
00001000                            58          
00001000                            59  
00001000                            60  
00001000                            61          *   this stores some test EA into memory
00001000                            62          *LEA     addr1,A1
00001000                            63          *MOVE.W  #$0440,(A1)+        *917C
00001000                            64          *MOVE.W  #$917C,(A1)+       
00001000                            65          *MOVE.L  #$5555A7FF,(A1)+
00001000                            66          *MOVE.W  #$9078,(A1)+
00001000                            67          *MOVE.W  #$5555,(A1)+
00001000                            68          
00001000                            69  
00001000                            70          *MOVE.L  #$0,A1             This clears the memory at A1, not sure why i didn't it but its probably important
00001000                            71          
00001000                            72          *MOVE.L  #$6700F0D8,$7000
00001000  31FC 4E71 7000            73          MOVE.W  #$4E71,$7000         NOP
00001006                            74  
00001006                            75          *MOVE.L  #$0,A1              This clears the memory at A1, not sure why i didn't it but its probably important
00001006                            76          
00001006                            77          *MOVE.W  #$E66A,$7000
00001006                            78  
00001006                            79          
00001006                            80  ******************************************** displays address location***********************************************
00001006                            81  * This displays the address location of the op-code being worked on
00001006                            82  * A6 is used as current address
00001006                            83  
00001006  2C7C 00007000             84          MOVEA.L #addr1,A6           Moves starting addr into A6 register
0000100C  13FC 001E 0000270C        85          MOVE.B  #dispnum,dispcount  Sets display line counter
00001014                            86  
00001014                            87  NEWADDR
00001014  2E0E                      88          MOVE.L  A6,D7               Loads the current address into D7
00001016  BEBC 0000726C             89          CMP.L   #addr2,D7           Compares current address to end address
0000101C  6E00 15D0                 90          BGT     DONE                Branches to done if current address > end address
00001020  45F9 000010B4             91          LEA     DISPADDREND,A2
00001026                            92  
00001026                            93  ************************************************
00001026                            94  * Displays address as HEX
00001026                            95  * INPUT: address stored into D7
00001026                            96  * OUTPUT: prints hex address to output window
00001026                            97  DISPADDRSTART
00001026  1C3C 0002                 98          MOVE.B  #2,D6               D6 is a counter, used for looping
0000102A  2407                      99          MOVE.L  D7,D2               Copies opcode saved in D7 to D2 to be manipulated
0000102C  4842                     100          SWAP    D2                  Swaps the location to be displayed (Display first word of a long word)
0000102E  6000 0004                101          BRA     DISPADDR2           Skips the second part to do later
00001032                           102  
00001032                           103  DISPADDR1
00001032  3407                     104          MOVE.W  D7,D2
00001034                           105  DISPADDR2
00001034  3202                     106          MOVE.W  D2,D1               D1 will be the first byte of the word
00001036  3602                     107          MOVE.W  D2,D3               D3 will be the second byte of the word
00001038  3802                     108          MOVE.W  D2,D4               D4 will be the third byte of the word
0000103A  3A02                     109          MOVE.W  D2,D5               D5 will be the fourth byte of the word
0000103C                           110  
0000103C  E049                     111          LSR.W   #8,D1               Shifts D1 right 12 times to move the first byte of the word to the last byte
0000103E  E849                     112          LSR.W   #4,D1
00001040  E94B                     113          LSL.W   #4,D3               Shifts D3 left 4 times to get rid of the first byte
00001042  E04B                     114          LSR.W   #8,D3                 Then shifts D3 right 12 times to move it to the last byte
00001044  E84B                     115          LSR.W   #4,D3
00001046  E14C                     116          LSL.W   #8,D4               Shifts D4 to the left 8 times to get rid of first 2 bytes
00001048  E04C                     117          LSR.W   #8,D4                 Then shifts it right 12 times to move it to the last byte
0000104A  E84C                     118          LSR.W   #4,D4
0000104C  E14D                     119          LSL.W   #8,D5               Shifts D5 to the left 12 times to get rid of the first 3 bytes
0000104E  E94D                     120          LSL.W   #4,D5                 Then shifts it back to the left 12 times to move it to the last byte position
00001050  E04D                     121          LSR.W   #8,D5
00001052  E84D                     122          LSR.W   #4,D5
00001054                           123          
00001054                           124          
00001054  47F9 00001068            125          LEA     DISPADDR3,A3        Place address of TENS into A3 to continue from there after conversion
0000105A  B23C 0009                126          CMP.B   #9,D1               Compares digit to 9
0000105E  6E00 150A                127          BGT     CONV                Print out letter representation if greater than 9
00001062                           128  
00001062  103C 0003                129          MOVE.B  #3,D0               Displays digit if it is less than A
00001066  4E4F                     130          TRAP    #15
00001068                           131          
00001068                           132  DISPADDR3   
00001068  1203                     133          MOVE.B  D3,D1               Displays digit in 1's place second
0000106A                           134  
0000106A                           135          *   converts digits 10+ into letters
0000106A  47F9 0000107E            136          LEA     DISPADDR4,A3           Places address of NEXT into A3 to continue from there after conversion
00001070  B23C 0009                137          CMP.B   #9,D1               Compares digit to 9
00001074  6E00 14F4                138          BGT     CONV                Print out letter representation if greater than 9
00001078                           139          
00001078  103C 0003                140          MOVE.B  #3,D0               Displays digit if it is less than A
0000107C  4E4F                     141          TRAP    #15
0000107E                           142  
0000107E                           143  DISPADDR4
0000107E  1204                     144          MOVE.B  D4,D1               Displays digit in 1's place second
00001080                           145  
00001080                           146          *   converts digits 10+ into letters
00001080  47F9 00001094            147          LEA     DISPADDR5,A3           Places address of NEXT into A3 to continue from there after conversion
00001086  B23C 0009                148          CMP.B   #9,D1               Compares digit to 9
0000108A  6E00 14DE                149          BGT     CONV                Print out letter representation if greater than 9
0000108E                           150          
0000108E  103C 0003                151          MOVE.B  #3,D0               Displays digit if it is less than A
00001092  4E4F                     152          TRAP    #15
00001094                           153  
00001094                           154  DISPADDR5
00001094  1205                     155          MOVE.B  D5,D1               Displays digit in 1's place second
00001096                           156  
00001096                           157          *   converts digits 10+ into letters
00001096  47F9 000010AA            158          LEA     DISPADDR6,A3           Places address of NEXT into A3 to continue from there after conversion
0000109C  B23C 0009                159          CMP.B   #9,D1               Compares digit to 9
000010A0  6E00 14C8                160          BGT     CONV                Print out letter representation if greater than 9
000010A4                           161          
000010A4  103C 0003                162          MOVE.B  #3,D0               Displays digit if it is less than A
000010A8  4E4F                     163          TRAP    #15
000010AA                           164          
000010AA                           165  DISPADDR6
000010AA                           166  * Display counter -- creates new line every 8 bytes
000010AA                           167          * D6 is used as counter
000010AA                           168          
000010AA  5306                     169          SUB.B   #1,D6
000010AC  BC3C 0000                170          CMP.B   #0,D6
000010B0  6680                     171          BNE     DISPADDR1
000010B2                           172  
000010B2  4ED2                     173          JMP     (A2)                Jumps to address stored in A2 when complete
000010B4                           174  
000010B4                           175  DISPADDREND
000010B4  43F9 00002605            176          LEA     TAB,A1
000010BA  103C 000E                177          MOVE.B  #14,D0
000010BE  4E4F                     178          TRAP    #15
000010C0                           179          
000010C0                           180  *********************************************************************************************************************
000010C0                           181  * Splits the first byte of the op code into nibbles
000010C0                           182  * then sends it to the branch-table to jump to the appropiate section to be decoded
000010C0                           183  
000010C0  4281                     184          CLR.L   D1                  Clears the data registers
000010C2  4282                     185          CLR.L   D2
000010C4  4283                     186          CLR.L   D3
000010C6  4284                     187          CLR.L   D4
000010C8  4285                     188          CLR.L   D5
000010CA  4286                     189          CLR.L   D6
000010CC  3C16                     190          MOVE.W  (A6),D6
000010CE  141E                     191          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
000010D0                           192    
000010D0  1E02                     193          MOVE.B  D2,D7
000010D2  E14F                     194          LSL.W   #8,D7
000010D4                           195          
000010D4  1602                     196          MOVE.B  D2,D3               Copies data at D2 to D3
000010D6                           197          *   this gets digit in 10's place
000010D6  E80B                     198          LSR.B   #4,D3               Shifts right to get rid of 1's place
000010D8                           199          *   this gets digit in 1's place
000010D8  E90A                     200          LSL.B   #4,D2               Shifts left to get rid of 10's place
000010DA  E80A                     201          LSR.B   #4,D2               Shifts back right into 1's place
000010DC                           202          
000010DC                           203          *   D3 holds digit in 10's place
000010DC                           204          *   D2 holds digit in 1's place
000010DC                           205  
000010DC                           206          *   Moves second nibble to D5 to be used later
000010DC  1A02                     207          MOVE.B  D2,D5
000010DE  13C3 0000270D            208          MOVE.B  D3,bit0
000010E4                           209          *   Goes to a branch-table to figure out which op code it is
000010E4  6000 0002                210          BRA     CODE
000010E8                           211  
000010E8                           212  ******************************************************************************************************
000010E8                           213  *   This is where the table goes to detirmine which op-code to use
000010E8                           214  CODE    
000010E8  B63C 0000                215          CMP.B   #$0,D3              Goes to immediate operation section
000010EC  6700 0B38                216          BEQ     IMD
000010F0  B63C 0004                217          CMP.B   #$4,D3              Goes to miscellaneous section
000010F4  6700 0C2A                218          BEQ     MISC
000010F8  B63C 0006                219          CMP.B   #$6,D3
000010FC  6700 0A74                220          BEQ     BCC
00001100  B63C 0009                221          CMP.B   #$9,D3              Goes to sub section
00001104  6700 0D3C                222          BEQ     SUB
00001108  B63C 000C                223          CMP.B   #$C,D3              Goes to sub but displays as AND
0000110C  6700 0D34                224          BEQ     SUB
00001110  B63C 000D                225          CMP.B   #$D,D3              Goes to sub but displays as ADD
00001114  6700 0D2C                226          BEQ     SUB
00001118  B63C 0001                227          CMP.B   #$1,D3
0000111C  6700 01E6                228          BEQ     MOVB                Goes to movb
00001120  B63C 0003                229          CMP.B   #$3,D3
00001124  6700 001E                230          BEQ     MOVW                Goes to movb
00001128  B63C 0002                231          CMP.B   #$2,D3
0000112C  6700 00F6                232          BEQ     MOVL                Goes to movb
00001130  B63C 0008                233          CMP.B   #$8,D3
00001134  6700 06F4                234          BEQ     DIVSW               Goes to divsw
00001138  B63C 000E                235          CMP.B   #$E,D3
0000113C  6700 08D0                236          BEQ     LSLR                Goes to divsw
00001140                           237  
00001140  6000 136A                238          BRA     INVOPCODE
00001144                           239  
00001144                           240  MOVW
00001144                           241          
00001144                           242          
00001144  E20A                     243          LSR.B   #1,D2
00001146  13C2 0000270E            244          MOVE.B  D2,bit1
0000114C                           245          
0000114C  1416                     246          MOVE.B  (A6),D2
0000114E  EB0A                     247          LSL.B   #5,D2
00001150  EA0A                     248          LSR.B   #5,D2
00001152  13C2 00002711            249          MOVE.B  D2,bit4
00001158                           250          
00001158  141E                     251          MOVE.B  (A6)+,D2
0000115A  E50A                     252          LSL.B   #2,D2
0000115C  EA0A                     253          LSR.B   #5,D2
0000115E  13C2 00002710            254          MOVE.B  D2,bit3
00001164                           255          
00001164  EF4E                     256          LSL.W   #7,D6
00001166  E04E                     257          LSR.W   #8,D6 
00001168  EA4E                     258          LSR.W   #5,D6 
0000116A  13C6 0000270F            259          MOVE.B  D6,bit2
00001170                           260  
00001170  0C39 0001 0000270F       261          CMP.B   #$1,bit2
00001178  6700 0056                262          BEQ     MOVEAW
0000117C                           263  
0000117C  43F9 00002654            264          LEA MMOVEW,A1
00001182  103C 000E                265          MOVE.B  #14,D0
00001186  4E4F                     266          TRAP    #15 
00001188                           267  
00001188  0C39 0000 00002710       268          CMP.B   #$0,bit3           
00001190  6700 0446                269          BEQ     MOVBDN1
00001194  0C39 0001 00002710       270          CMP.B   #$1,bit3
0000119C  6700 020A                271          BEQ     MOVEAN1
000011A0  0C39 0002 00002710       272          CMP.B   #$2,bit3
000011A8  6700 0272                273          BEQ     MOVEIAN1
000011AC  0C39 0003 00002710       274          CMP.B   #$3,bit3
000011B4  6700 02F2                275          BEQ     MOVEIANI1
000011B8  0C39 0004 00002710       276          CMP.B   #$4,bit3
000011C0  6700 037E                277          BEQ     MOVEIAND1
000011C4  0C39 0007 00002710       278          CMP.B   #$7,bit3
000011CC  6700 01B6                279          BEQ     ADDIMD
000011D0                           280  
000011D0                           281          * Add INVOP
000011D0                           282  
000011D0                           283  MOVEAW
000011D0  43F9 00002662            284          LEA MMOVEAW,A1
000011D6  103C 000E                285          MOVE.B  #14,D0
000011DA  4E4F                     286          TRAP    #15 
000011DC                           287          
000011DC  0C39 0000 00002710       288          CMP.B   #$0,bit3           
000011E4  6700 03F2                289          BEQ     MOVBDN1
000011E8  0C39 0001 00002710       290          CMP.B   #$1,bit3
000011F0  6700 01B6                291          BEQ     MOVEAN1
000011F4  0C39 0002 00002710       292          CMP.B   #$2,bit3
000011FC  6700 021E                293          BEQ     MOVEIAN1
00001200  0C39 0003 00002710       294          CMP.B   #$3,bit3
00001208  6700 029E                295          BEQ     MOVEIANI1
0000120C  0C39 0004 00002710       296          CMP.B   #$4,bit3
00001214  6700 032A                297          BEQ     MOVEIAND1
00001218  0C39 0007 00002710       298          CMP.B   #$7,bit3
00001220  6700 0162                299          BEQ     ADDIMD
00001224                           300  
00001224                           301  MOVL
00001224  E20A                     302          LSR.B   #1,D2
00001226  13C2 0000270E            303          MOVE.B  D2,bit1
0000122C                           304          
0000122C  1416                     305          MOVE.B  (A6),D2
0000122E  EB0A                     306          LSL.B   #5,D2
00001230  EA0A                     307          LSR.B   #5,D2
00001232  13C2 00002711            308          MOVE.B  D2,bit4
00001238                           309          
00001238  141E                     310          MOVE.B  (A6)+,D2
0000123A  E50A                     311          LSL.B   #2,D2
0000123C  EA0A                     312          LSR.B   #5,D2
0000123E  13C2 00002710            313          MOVE.B  D2,bit3
00001244                           314          
00001244  EF4E                     315          LSL.W   #7,D6
00001246  E04E                     316          LSR.W   #8,D6 
00001248  EA4E                     317          LSR.W   #5,D6 
0000124A  13C6 0000270F            318          MOVE.B  D6,bit2
00001250                           319          
00001250  0C39 0001 0000270F       320          CMP.B   #$1,bit2
00001258  6700 0056                321          BEQ     MOVEAL
0000125C                           322  
0000125C  43F9 0000265B            323          LEA MMOVEL,A1
00001262  103C 000E                324          MOVE.B  #14,D0
00001266  4E4F                     325          TRAP    #15 
00001268                           326          
00001268  0C39 0000 00002710       327          CMP.B   #$0,bit3           
00001270  6700 0366                328          BEQ     MOVBDN1
00001274  0C39 0001 00002710       329          CMP.B   #$1,bit3
0000127C  6700 012A                330          BEQ     MOVEAN1
00001280  0C39 0002 00002710       331          CMP.B   #$2,bit3
00001288  6700 0192                332          BEQ     MOVEIAN1
0000128C  0C39 0003 00002710       333          CMP.B   #$3,bit3
00001294  6700 0212                334          BEQ     MOVEIANI1
00001298  0C39 0004 00002710       335          CMP.B   #$4,bit3
000012A0  6700 029E                336          BEQ     MOVEIAND1
000012A4  0C39 0007 00002710       337          CMP.B   #$7,bit3
000012AC  6700 00D6                338          BEQ     ADDIMD
000012B0                           339  
000012B0                           340  
000012B0                           341  MOVEAL
000012B0  43F9 0000266A            342          LEA MMOVEAL,A1
000012B6  103C 000E                343          MOVE.B  #14,D0
000012BA  4E4F                     344          TRAP    #15 
000012BC                           345          
000012BC  0C39 0000 00002710       346          CMP.B   #$0,bit3           
000012C4  6700 0312                347          BEQ     MOVBDN1
000012C8  0C39 0001 00002710       348          CMP.B   #$1,bit3
000012D0  6700 00D6                349          BEQ     MOVEAN1
000012D4  0C39 0002 00002710       350          CMP.B   #$2,bit3
000012DC  6700 013E                351          BEQ     MOVEIAN1
000012E0  0C39 0003 00002710       352          CMP.B   #$3,bit3
000012E8  6700 01BE                353          BEQ     MOVEIANI1
000012EC  0C39 0004 00002710       354          CMP.B   #$4,bit3
000012F4  6700 024A                355          BEQ     MOVEIAND1
000012F8  0C39 0007 00002710       356          CMP.B   #$7,bit3
00001300  6700 0082                357          BEQ     ADDIMD        
00001304                           358  
00001304                           359  MOVB
00001304  43F9 0000264D            360          LEA MMOVEB,A1
0000130A  103C 000E                361          MOVE.B  #14,D0
0000130E  4E4F                     362          TRAP    #15 
00001310                           363          
00001310  E20A                     364          LSR.B   #1,D2
00001312  13C2 0000270E            365          MOVE.B  D2,bit1
00001318                           366          
00001318  1416                     367          MOVE.B  (A6),D2
0000131A  EB0A                     368          LSL.B   #5,D2
0000131C  EA0A                     369          LSR.B   #5,D2
0000131E  13C2 00002711            370          MOVE.B  D2,bit4
00001324                           371          
00001324  141E                     372          MOVE.B  (A6)+,D2
00001326  E50A                     373          LSL.B   #2,D2
00001328  EA0A                     374          LSR.B   #5,D2
0000132A  13C2 00002710            375          MOVE.B  D2,bit3
00001330                           376          
00001330  EF4E                     377          LSL.W   #7,D6
00001332  E04E                     378          LSR.W   #8,D6 
00001334  EA4E                     379          LSR.W   #5,D6 
00001336  13C6 0000270F            380          MOVE.B  D6,bit2
0000133C                           381          
0000133C  0C39 0000 00002710       382          CMP.B   #$0,bit3           
00001344  6700 0292                383          BEQ     MOVBDN1
00001348  0C39 0001 00002710       384          CMP.B   #$1,bit3
00001350  6700 0056                385          BEQ     MOVEAN1
00001354  0C39 0002 00002710       386          CMP.B   #$2,bit3
0000135C  6700 00BE                387          BEQ     MOVEIAN1
00001360  0C39 0003 00002710       388          CMP.B   #$3,bit3
00001368  6700 013E                389          BEQ     MOVEIANI1
0000136C  0C39 0004 00002710       390          CMP.B   #$4,bit3
00001374  6700 01CA                391          BEQ     MOVEIAND1
00001378  0C39 0007 00002710       392          CMP.B   #$7,bit3
00001380  6700 0002                393          BEQ     ADDIMD
00001384                           394  
00001384                           395  ADDIMD
00001384  0C39 0000 00002711       396      CMP.B   #$0,bit4
0000138C  6700 001A                397      BEQ     ADDIMD0
00001390  0C39 0001 00002711       398      CMP.B   #$1,bit4
00001398  6700 000E                399      BEQ     ADDIMD1
0000139C  0C39 0003 00002711       400      CMP.B   #$3,bit4
000013A4  6700 0002                401      BEQ     ADDIMD3
000013A8                           402  
000013A8                           403  ADDIMD0
000013A8                           404      * TODO 
000013A8                           405  ADDIMD1 
000013A8                           406      * TODO
000013A8                           407  ADDIMD3
000013A8                           408      * TODO    
000013A8                           409  MOVEAN1
000013A8  43F9 00002605            410      LEA TAB,A1
000013AE  103C 000E                411      MOVE.B  #14,D0
000013B2  4E4F                     412      TRAP    #15
000013B4                           413  
000013B4  43F9 00002615            414      LEA DISPA,A1
000013BA  103C 000E                415      MOVE.B  #14,D0
000013BE  4E4F                     416      TRAP    #15
000013C0                           417      
000013C0  1239 00002711            418      MOVE.B  bit4,D1
000013C6  103C 0003                419      MOVE.B  #3,D0
000013CA  4E4F                     420      TRAP    #15
000013CC                           421      
000013CC  43F9 00002609            422      LEA COMMA,A1
000013D2  103C 000E                423      MOVE.B  #14,D0
000013D6  4E4F                     424      TRAP    #15
000013D8                           425      
000013D8  0C39 0000 0000270F       426      CMP.B   #$0,bit2
000013E0  6700 0396                427      BEQ     MOVBDN2
000013E4  0C39 0001 0000270F       428      CMP.B   #$1,bit2
000013EC  6700 02BA                429      BEQ     MOVEAN2
000013F0  0C39 0002 0000270F       430      CMP.B   #$2,bit2 
000013F8  6700 02CA                431      BEQ     MOVIAN2
000013FC  0C39 0003 0000270F       432      CMP.B   #$3,bit2 
00001404  6700 02F2                433      BEQ     MOVIANI2
00001408  0C39 0004 0000270F       434      CMP.B   #$4,bit2 
00001410  6700 0326                435      BEQ     MOVIAND2
00001414  BA3C 0005                436      CMP.B   #$5,D5
00001418  6700 035E                437      BEQ     MOVBDN2
0000141C                           438      
0000141C                           439  MOVEIAN1
0000141C  43F9 00002605            440      LEA TAB,A1
00001422  103C 000E                441      MOVE.B  #14,D0
00001426  4E4F                     442      TRAP    #15
00001428                           443      
00001428  43F9 0000260B            444      LEA OPENBRA,A1
0000142E  103C 000E                445      MOVE.B  #14,D0
00001432  4E4F                     446      TRAP    #15
00001434                           447  
00001434  43F9 00002615            448      LEA DISPA,A1
0000143A  103C 000E                449      MOVE.B  #14,D0
0000143E  4E4F                     450      TRAP    #15
00001440                           451      
00001440  1239 00002711            452      MOVE.B  bit4,D1
00001446  103C 0003                453      MOVE.B  #3,D0
0000144A  4E4F                     454      TRAP    #15
0000144C                           455      
0000144C  43F9 0000260D            456      LEA CLOSEBRA,A1
00001452  103C 000E                457      MOVE.B  #14,D0
00001456  4E4F                     458      TRAP    #15
00001458                           459      
00001458  43F9 00002609            460      LEA COMMA,A1
0000145E  103C 000E                461      MOVE.B  #14,D0
00001462  4E4F                     462      TRAP    #15
00001464                           463      
00001464  0C39 0000 0000270F       464      CMP.B   #$0,bit2
0000146C  6700 030A                465      BEQ     MOVBDN2
00001470  0C39 0001 0000270F       466      CMP.B   #$1,bit2
00001478  6700 022E                467      BEQ     MOVEAN2
0000147C  0C39 0002 0000270F       468      CMP.B   #$2,bit2 
00001484  6700 023E                469      BEQ     MOVIAN2
00001488  0C39 0003 0000270F       470      CMP.B   #$3,bit2 
00001490  6700 0266                471      BEQ     MOVIANI2
00001494  0C39 0004 0000270F       472      CMP.B   #$4,bit2 
0000149C  6700 029A                473      BEQ     MOVIAND2
000014A0  BA3C 0005                474      CMP.B   #$5,D5
000014A4  6700 02D2                475      BEQ     MOVBDN2
000014A8                           476  
000014A8                           477  MOVEIANI1
000014A8  43F9 00002605            478      LEA TAB,A1
000014AE  103C 000E                479      MOVE.B  #14,D0
000014B2  4E4F                     480      TRAP    #15
000014B4                           481      
000014B4  43F9 0000260B            482      LEA OPENBRA,A1
000014BA  103C 000E                483      MOVE.B  #14,D0
000014BE  4E4F                     484      TRAP    #15
000014C0                           485  
000014C0  43F9 00002615            486      LEA DISPA,A1
000014C6  103C 000E                487      MOVE.B  #14,D0
000014CA  4E4F                     488      TRAP    #15
000014CC                           489      
000014CC  1239 00002711            490      MOVE.B  bit4,D1
000014D2  103C 0003                491      MOVE.B  #3,D0
000014D6  4E4F                     492      TRAP    #15
000014D8                           493      
000014D8  43F9 0000260D            494      LEA CLOSEBRA,A1
000014DE  103C 000E                495      MOVE.B  #14,D0
000014E2  4E4F                     496      TRAP    #15
000014E4                           497      
000014E4  43F9 0000260F            498      LEA POS,A1
000014EA  103C 000E                499      MOVE.B  #14,D0
000014EE  4E4F                     500      TRAP    #15
000014F0                           501      
000014F0  43F9 00002609            502      LEA COMMA,A1
000014F6  103C 000E                503      MOVE.B  #14,D0
000014FA  4E4F                     504      TRAP    #15
000014FC                           505      
000014FC  0C39 0000 0000270F       506      CMP.B   #$0,bit2
00001504  6700 0272                507      BEQ     MOVBDN2
00001508  0C39 0001 0000270F       508      CMP.B   #$1,bit2
00001510  6700 0196                509      BEQ     MOVEAN2
00001514  0C39 0002 0000270F       510      CMP.B   #$2,bit2 
0000151C  6700 01A6                511      BEQ     MOVIAN2
00001520  0C39 0003 0000270F       512      CMP.B   #$3,bit2 
00001528  6700 01CE                513      BEQ     MOVIANI2
0000152C  0C39 0004 0000270F       514      CMP.B   #$4,bit2 
00001534  6700 0202                515      BEQ     MOVIAND2
00001538  BA3C 0005                516      CMP.B   #$5,D5
0000153C  6700 023A                517      BEQ     MOVBDN2
00001540                           518  
00001540                           519  MOVEIAND1
00001540  43F9 00002605            520      LEA TAB,A1
00001546  103C 000E                521      MOVE.B  #14,D0
0000154A  4E4F                     522      TRAP    #15
0000154C                           523      
0000154C  43F9 00002611            524      LEA NEG,A1
00001552  103C 000E                525      MOVE.B  #14,D0
00001556  4E4F                     526      TRAP    #15
00001558                           527      
00001558  43F9 0000260B            528      LEA OPENBRA,A1
0000155E  103C 000E                529      MOVE.B  #14,D0
00001562  4E4F                     530      TRAP    #15
00001564                           531  
00001564  43F9 00002615            532      LEA DISPA,A1
0000156A  103C 000E                533      MOVE.B  #14,D0
0000156E  4E4F                     534      TRAP    #15
00001570                           535      
00001570  1239 00002711            536      MOVE.B  bit4,D1
00001576  103C 0003                537      MOVE.B  #3,D0
0000157A  4E4F                     538      TRAP    #15
0000157C                           539      
0000157C  43F9 0000260D            540      LEA CLOSEBRA,A1
00001582  103C 000E                541      MOVE.B  #14,D0
00001586  4E4F                     542      TRAP    #15
00001588                           543      
00001588  43F9 00002609            544      LEA COMMA,A1
0000158E  103C 000E                545      MOVE.B  #14,D0
00001592  4E4F                     546      TRAP    #15
00001594                           547      
00001594  0C39 0000 0000270F       548      CMP.B   #$0,bit2
0000159C  6700 01DA                549      BEQ     MOVBDN2
000015A0  0C39 0001 0000270F       550      CMP.B   #$1,bit2
000015A8  6700 00FE                551      BEQ     MOVEAN2
000015AC  0C39 0002 0000270F       552      CMP.B   #$2,bit2 
000015B4  6700 010E                553      BEQ     MOVIAN2
000015B8  0C39 0003 0000270F       554      CMP.B   #$3,bit2 
000015C0  6700 0136                555      BEQ     MOVIANI2
000015C4  0C39 0004 0000270F       556      CMP.B   #$4,bit2 
000015CC  6700 016A                557      BEQ     MOVIAND2
000015D0  BA3C 0005                558      CMP.B   #$5,D5
000015D4  6700 01A2                559      BEQ     MOVBDN2
000015D8                           560  
000015D8                           561  MOVBDN1
000015D8  43F9 00002605            562      LEA TAB,A1
000015DE  103C 000E                563      MOVE.B  #14,D0
000015E2  4E4F                     564      TRAP    #15
000015E4                           565  
000015E4  BA3C 0006                566      CMP.B   #$6,D5             * Data Reg for LSLR
000015E8  6700 007A                567      BEQ     LSLRSRCD
000015EC                           568  
000015EC  43F9 0000261B            569      LEA DISPD,A1
000015F2  103C 000E                570      MOVE.B  #14,D0
000015F6  4E4F                     571      TRAP    #15
000015F8                           572      
000015F8  1239 00002711            573      MOVE.B  bit4,D1
000015FE  103C 0003                574      MOVE.B  #3,D0
00001602  4E4F                     575      TRAP    #15
00001604                           576  
00001604  BA3C 0004                577      CMP.B   #$4,D5
00001608  6700 0192                578      BEQ     ENDNLINC
0000160C                           579  
0000160C  43F9 00002609            580      LEA COMMA,A1
00001612  103C 000E                581      MOVE.B  #14,D0
00001616  4E4F                     582      TRAP    #15
00001618                           583  
00001618  BA3C 0006                584      CMP.B   #$6,D5             * Data Reg for LSLR
0000161C  6700 006E                585      BEQ     LSLRDESD
00001620  0C39 0000 0000270F       586      CMP.B   #$0,bit2
00001628  6700 014E                587      BEQ     MOVBDN2
0000162C  0C39 0001 0000270F       588      CMP.B   #$1,bit2
00001634  6700 0072                589      BEQ     MOVEAN2
00001638  0C39 0002 0000270F       590      CMP.B   #$2,bit2 
00001640  6700 0082                591      BEQ     MOVIAN2
00001644  0C39 0003 0000270F       592      CMP.B   #$3,bit2 
0000164C  6700 00AA                593      BEQ     MOVIANI2
00001650  0C39 0004 0000270F       594      CMP.B   #$4,bit2 
00001658  6700 00DE                595      BEQ     MOVIAND2
0000165C  BA3C 0005                596      CMP.B   #$5,D5
00001660  6700 0116                597      BEQ     MOVBDN2
00001664                           598      
00001664                           599  LSLRSRCD
00001664  43F9 0000261B            600      LEA DISPD,A1
0000166A  103C 000E                601      MOVE.B  #14,D0
0000166E  4E4F                     602      TRAP    #15
00001670                           603          
00001670  1239 0000270D            604      MOVE.B  bit0,D1
00001676  103C 0003                605      MOVE.B  #3,D0
0000167A  4E4F                     606      TRAP    #15    
0000167C                           607  
0000167C  43F9 00002609            608      LEA COMMA,A1
00001682  103C 000E                609      MOVE.B  #14,D0
00001686  4E4F                     610      TRAP    #15  
00001688                           611      
00001688  6000 0002                612      BRA     LSLRDESD
0000168C                           613      
0000168C                           614  LSLRDESD
0000168C  43F9 0000261B            615      LEA DISPD,A1
00001692  103C 000E                616      MOVE.B  #14,D0
00001696  4E4F                     617      TRAP    #15
00001698                           618          
00001698  1239 00002711            619      MOVE.B  bit4,D1
0000169E  103C 0003                620      MOVE.B  #3,D0
000016A2  4E4F                     621      TRAP    #15      
000016A4                           622      
000016A4                           623      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000016A4  6000 0E7A                624      BRA     ENDNEWLINE       
000016A8                           625  
000016A8                           626  MOVEAN2
000016A8  43F9 00002615            627      LEA DISPA,A1
000016AE  103C 000E                628      MOVE.B  #14,D0
000016B2  4E4F                     629      TRAP    #15
000016B4                           630      
000016B4  1239 0000270E            631      MOVE.B  bit1,D1
000016BA  103C 0003                632      MOVE.B  #3,D0
000016BE  4E4F                     633      TRAP    #15
000016C0                           634  
000016C0                           635      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000016C0  6000 0E5E                636      BRA     ENDNEWLINE    
000016C4                           637  
000016C4                           638  MOVIAN2
000016C4  43F9 0000260B            639      LEA OPENBRA,A1
000016CA  103C 000E                640      MOVE.B  #14,D0
000016CE  4E4F                     641      TRAP    #15
000016D0                           642  
000016D0  43F9 00002615            643      LEA DISPA,A1
000016D6  103C 000E                644      MOVE.B  #14,D0
000016DA  4E4F                     645      TRAP    #15
000016DC                           646      
000016DC  1239 0000270E            647      MOVE.B  bit1,D1
000016E2  103C 0003                648      MOVE.B  #3,D0
000016E6  4E4F                     649      TRAP    #15
000016E8                           650      
000016E8  43F9 0000260D            651      LEA CLOSEBRA,A1
000016EE  103C 000E                652      MOVE.B  #14,D0
000016F2  4E4F                     653      TRAP    #15
000016F4                           654      
000016F4                           655      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
000016F4  6000 0E2A                656      BRA     ENDNEWLINE
000016F8                           657  
000016F8                           658  MOVIANI2
000016F8  43F9 0000260B            659      LEA OPENBRA,A1
000016FE  103C 000E                660      MOVE.B  #14,D0
00001702  4E4F                     661      TRAP    #15
00001704                           662  
00001704  43F9 00002615            663      LEA DISPA,A1
0000170A  103C 000E                664      MOVE.B  #14,D0
0000170E  4E4F                     665      TRAP    #15
00001710                           666      
00001710  1239 0000270E            667      MOVE.B  bit1,D1
00001716  103C 0003                668      MOVE.B  #3,D0
0000171A  4E4F                     669      TRAP    #15
0000171C                           670      
0000171C  43F9 0000260D            671      LEA CLOSEBRA,A1
00001722  103C 000E                672      MOVE.B  #14,D0
00001726  4E4F                     673      TRAP    #15
00001728                           674      
00001728  43F9 0000260F            675      LEA POS,A1
0000172E  103C 000E                676      MOVE.B  #14,D0
00001732  4E4F                     677      TRAP    #15
00001734                           678      
00001734                           679      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001734  6000 0DEA                680      BRA     ENDNEWLINE
00001738                           681  
00001738                           682  MOVIAND2
00001738  43F9 00002611            683      LEA NEG,A1
0000173E  103C 000E                684      MOVE.B  #14,D0
00001742  4E4F                     685      TRAP    #15
00001744                           686      
00001744  43F9 0000260B            687      LEA OPENBRA,A1
0000174A  103C 000E                688      MOVE.B  #14,D0
0000174E  4E4F                     689      TRAP    #15
00001750                           690  
00001750  43F9 00002615            691      LEA DISPA,A1
00001756  103C 000E                692      MOVE.B  #14,D0
0000175A  4E4F                     693      TRAP    #15
0000175C                           694      
0000175C  1239 0000270E            695      MOVE.B  bit1,D1
00001762  103C 0003                696      MOVE.B  #3,D0
00001766  4E4F                     697      TRAP    #15
00001768                           698      
00001768  43F9 0000260D            699      LEA CLOSEBRA,A1
0000176E  103C 000E                700      MOVE.B  #14,D0
00001772  4E4F                     701      TRAP    #15
00001774                           702  
00001774                           703      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001774  6000 0DAA                704      BRA     ENDNEWLINE
00001778                           705  
00001778                           706  MOVBDN2
00001778  43F9 0000261B            707      LEA DISPD,A1
0000177E  103C 000E                708      MOVE.B  #14,D0
00001782  4E4F                     709      TRAP    #15
00001784                           710          
00001784  1239 0000270E            711      MOVE.B  bit1,D1
0000178A  103C 0003                712      MOVE.B  #3,D0
0000178E  4E4F                     713      TRAP    #15   
00001790                           714      
00001790  B83C 0000                715      CMP.B   #$0,D4                 * MULS meaning that A6 has already been incremented 
00001794  6700 0D8A                716      BEQ     ENDNEWLINE
00001798                           717      
00001798                           718      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
00001798  6000 0D86                719      BRA     ENDNEWLINE
0000179C                           720      
0000179C                           721      
0000179C                           722  ENDNLINC
0000179C                           723      *MOVE.B  (A6)+,$7500            * Kind of sketch but makes it work 
0000179C  6000 0D82                724      BRA     ENDNEWLINE    
000017A0                           725      
000017A0                           726  MULSW
000017A0  1407                     727          MOVE.B  D7,D2
000017A2  EB0A                     728          LSL.B   #5,D2
000017A4  EA0A                     729          LSR.B   #5,D2
000017A6  13C2 00002711            730          MOVE.B  D2,bit4
000017AC                           731          
000017AC  1407                     732          MOVE.B  D7,D2
000017AE  E50A                     733          LSL.B   #2,D2
000017B0  EA0A                     734          LSR.B   #5,D2
000017B2  13C2 00002710            735          MOVE.B  D2,bit3
000017B8                           736          
000017B8  3C07                     737          MOVE.W  D7,D6
000017BA  EF4E                     738          LSL.W   #7,D6
000017BC  E04E                     739          LSR.W   #8,D6 
000017BE  EA4E                     740          LSR.W   #5,D6 
000017C0  13C6 0000270F            741          MOVE.B  D6,bit2
000017C6                           742          
000017C6  E94F                     743          LSL.W   #4,D7
000017C8  E04F                     744          LSR.W   #8,D7 
000017CA  EA4F                     745          LSR.W   #5,D7 
000017CC  13C7 0000270E            746          MOVE.B  D7,bit1
000017D2                           747          
000017D2  43F9 00002646            748          LEA MMULSW,A1
000017D8  323C 000E                749          MOVE    #14,D1
000017DC  4E4F                     750          TRAP    #15
000017DE                           751          
000017DE  1A3C 0005                752          MOVE.B  #$5,D5 
000017E2                           753          
000017E2  0C39 0000 00002710       754          CMP.B   #$0,bit3           
000017EA  6700 FDEC                755          BEQ     MOVBDN1
000017EE  0C39 0001 00002710       756          CMP.B   #$1,bit3
000017F6  6700 FBB0                757          BEQ     MOVEAN1
000017FA  0C39 0002 00002710       758          CMP.B   #$2,bit3
00001802  6700 FC18                759          BEQ     MOVEIAN1
00001806  0C39 0003 00002710       760          CMP.B   #$3,bit3
0000180E  6700 FC98                761          BEQ     MOVEIANI1
00001812  0C39 0004 00002710       762          CMP.B   #$4,bit3
0000181A  6700 FD24                763          BEQ     MOVEIAND1
0000181E  0C39 0007 00002710       764          CMP.B   #$7,bit3
00001826  6700 FB5C                765          BEQ     ADDIMD
0000182A                           766  
0000182A                           767           
0000182A                           768  DIVSW               
0000182A  1406                     769          MOVE.B  D6,D2
0000182C  EB0A                     770          LSL.B   #5,D2
0000182E  EA0A                     771          LSR.B   #5,D2
00001830  13C2 00002711            772          MOVE.B  D2,bit4
00001836                           773          
00001836  1406                     774          MOVE.B  D6,D2
00001838  E50A                     775          LSL.B   #2,D2
0000183A  EA0A                     776          LSR.B   #5,D2
0000183C  13C2 00002710            777          MOVE.B  D2,bit3
00001842                           778          
00001842  3E06                     779          MOVE.W  D6,D7
00001844  EF4F                     780          LSL.W   #7,D7
00001846  E04F                     781          LSR.W   #8,D7 
00001848  EA4F                     782          LSR.W   #5,D7 
0000184A  13C7 0000270F            783          MOVE.B  D7,bit2
00001850                           784          
00001850  E94E                     785          LSL.W   #4,D6
00001852  E04E                     786          LSR.W   #8,D6 
00001854  EA4E                     787          LSR.W   #5,D6 
00001856  13C6 0000270E            788          MOVE.B  D6,bit1
0000185C                           789          
0000185C  43F9 0000263F            790          LEA MMDIVSW,A1
00001862  323C 000E                791          MOVE    #14,D1
00001866  4E4F                     792          TRAP    #15
00001868                           793          
00001868  1A3C 0005                794          MOVE.B  #$5,D5 
0000186C  183C 0004                795          MOVE.B  #$4,D4
00001870                           796          
00001870  0C39 0000 00002710       797          CMP.B   #$0,bit3           
00001878  6700 FD5E                798          BEQ     MOVBDN1
0000187C  0C39 0001 00002710       799          CMP.B   #$1,bit3
00001884  6700 FB22                800          BEQ     MOVEAN1
00001888  0C39 0002 00002710       801          CMP.B   #$2,bit3
00001890  6700 FB8A                802          BEQ     MOVEIAN1
00001894  0C39 0003 00002710       803          CMP.B   #$3,bit3
0000189C  6700 FC0A                804          BEQ     MOVEIANI1
000018A0  0C39 0004 00002710       805          CMP.B   #$4,bit3
000018A8  6700 FC96                806          BEQ     MOVEIAND1
000018AC  0C39 0007 00002710       807          CMP.B   #$7,bit3
000018B4  6700 FACE                808          BEQ     ADDIMD
000018B8                           809  
000018B8                           810  NEGW
000018B8  1406                     811          MOVE.B  D6,D2
000018BA  EB0A                     812          LSL.B   #5,D2
000018BC  EA0A                     813          LSR.B   #5,D2
000018BE  13C2 00002711            814          MOVE.B  D2,bit4
000018C4                           815          
000018C4  1406                     816          MOVE.B  D6,D2
000018C6  E50A                     817          LSL.B   #2,D2
000018C8  EA0A                     818          LSR.B   #5,D2
000018CA  13C2 00002710            819          MOVE.B  D2,bit3
000018D0                           820          
000018D0  3E06                     821          MOVE.W  D6,D7
000018D2  E14F                     822          LSL.W   #8,D7
000018D4  E04F                     823          LSR.W   #8,D7 
000018D6  EC4F                     824          LSR.W   #6,D7 
000018D8  13C7 0000270F            825          MOVE.B  D7,bit2
000018DE                           826          
000018DE  43F9 0000263A            827          LEA MMNEGW,A1
000018E4  323C 000E                828          MOVE    #14,D1
000018E8  4E4F                     829          TRAP    #15
000018EA                           830          
000018EA  1A3C 0004                831          MOVE.B  #$4,D5
000018EE                           832          
000018EE  0C39 0000 0000270F       833          CMP.B   #$0,bit2
000018F6  6700 001A                834          BEQ     PRINTBYTE
000018FA  0C39 0001 0000270F       835          CMP.B   #$1,bit2
00001902  6700 0062                836          BEQ     PRINTWORD
00001906  0C39 0002 0000270F       837          CMP.B   #$2,bit2
0000190E  6700 00AA                838          BEQ     PRINTLONG
00001912                           839          
00001912                           840  PRINTBYTE
00001912  43F9 00002623            841      LEA MBYTE,A1
00001918  323C 000E                842      MOVE    #14,D1
0000191C  4E4F                     843      TRAP    #15
0000191E                           844  
0000191E  0C39 0000 00002710       845      CMP.B   #$0,bit3           
00001926  6700 FCB0                846          BEQ     MOVBDN1
0000192A  0C39 0001 00002710       847          CMP.B   #$1,bit3
00001932  6700 FA74                848          BEQ     MOVEAN1
00001936  0C39 0002 00002710       849          CMP.B   #$2,bit3
0000193E  6700 FADC                850          BEQ     MOVEIAN1
00001942  0C39 0003 00002710       851          CMP.B   #$3,bit3
0000194A  6700 FB5C                852          BEQ     MOVEIANI1
0000194E  0C39 0004 00002710       853          CMP.B   #$4,bit3
00001956  6700 FBE8                854          BEQ     MOVEIAND1
0000195A  0C39 0007 00002710       855          CMP.B   #$7,bit3
00001962  6700 FA20                856          BEQ     ADDIMD
00001966                           857      
00001966                           858  PRINTWORD
00001966  43F9 00002626            859      LEA MWORD,A1
0000196C  323C 000E                860      MOVE    #14,D1
00001970  4E4F                     861      TRAP    #15
00001972                           862  
00001972  0C39 0000 00002710       863      CMP.B   #$0,bit3           
0000197A  6700 FC5C                864          BEQ     MOVBDN1
0000197E  0C39 0001 00002710       865          CMP.B   #$1,bit3
00001986  6700 FA20                866          BEQ     MOVEAN1
0000198A  0C39 0002 00002710       867          CMP.B   #$2,bit3
00001992  6700 FA88                868          BEQ     MOVEIAN1
00001996  0C39 0003 00002710       869          CMP.B   #$3,bit3
0000199E  6700 FB08                870          BEQ     MOVEIANI1
000019A2  0C39 0004 00002710       871          CMP.B   #$4,bit3
000019AA  6700 FB94                872          BEQ     MOVEIAND1
000019AE  0C39 0007 00002710       873          CMP.B   #$7,bit3
000019B6  6700 F9CC                874          BEQ     ADDIMD
000019BA                           875      
000019BA                           876  PRINTLONG
000019BA  43F9 00002629            877      LEA MLONG,A1
000019C0  323C 000E                878      MOVE    #14,D1
000019C4  4E4F                     879      TRAP    #15
000019C6                           880   
000019C6  0C39 0000 00002710       881      CMP.B   #$0,bit3           
000019CE  6700 FC08                882          BEQ     MOVBDN1
000019D2  0C39 0001 00002710       883          CMP.B   #$1,bit3
000019DA  6700 F9CC                884          BEQ     MOVEAN1
000019DE  0C39 0002 00002710       885          CMP.B   #$2,bit3
000019E6  6700 FA34                886          BEQ     MOVEIAN1
000019EA  0C39 0003 00002710       887          CMP.B   #$3,bit3
000019F2  6700 FAB4                888          BEQ     MOVEIANI1
000019F6  0C39 0004 00002710       889          CMP.B   #$4,bit3
000019FE  6700 FB40                890          BEQ     MOVEIAND1
00001A02  0C39 0007 00002710       891          CMP.B   #$7,bit3
00001A0A  6700 F978                892          BEQ     ADDIMD
00001A0E                           893          
00001A0E                           894  LSLR
00001A0E                           895          *MOVE.B  D6,D2
00001A0E  141E                     896          MOVE.B  (A6)+,D2
00001A10  EB0A                     897          LSL.B   #5,D2
00001A12  EA0A                     898          LSR.B   #5,D2
00001A14  13C2 00002711            899          MOVE.B  D2,bit4
00001A1A                           900          
00001A1A  1406                     901          MOVE.B  D6,D2
00001A1C  E50A                     902          LSL.B   #2,D2
00001A1E  EE0A                     903          LSR.B   #7,D2
00001A20  13C2 00002710            904          MOVE.B  D2,bit3
00001A26                           905          
00001A26  3E06                     906          MOVE.W  D6,D7
00001A28  E14F                     907          LSL.W   #8,D7
00001A2A  E04F                     908          LSR.W   #8,D7 
00001A2C  EC4F                     909          LSR.W   #6,D7 
00001A2E  13C7 0000270F            910          MOVE.B  D7,bit2
00001A34                           911          
00001A34  3E06                     912          MOVE.W  D6,D7
00001A36  EF4F                     913          LSL.W   #7,D7
00001A38  E04F                     914          LSR.W   #8,D7 
00001A3A  EE4F                     915          LSR.W   #7,D7
00001A3C  13C7 0000270E            916          MOVE.B  D7,bit1   
00001A42                           917      
00001A42  E94E                     918          LSL.W   #4,D6
00001A44  E04E                     919          LSR.W   #8,D6 
00001A46  EA4E                     920          LSR.W   #5,D6
00001A48  13C6 0000270D            921          MOVE.B  D6,bit0 
00001A4E                           922          
00001A4E  0C39 0001 0000270E       923          CMP.B   #$1,bit1
00001A56  6700 000E                924          BEQ     PRINTLSL
00001A5A  0C39 0000 0000270E       925          CMP.B   #$0,bit1
00001A62  6700 00DE                926          BEQ     PRINTLSR
00001A66                           927          
00001A66                           928  PRINTLSL
00001A66  43F9 00002630            929          LEA MLSL,A1
00001A6C  303C 000E                930          MOVE    #14,D0
00001A70  4E4F                     931          TRAP    #15
00001A72                           932          
00001A72  0C39 0000 0000270F       933          CMP.B   #$0,bit2
00001A7A  6700 001A                934          BEQ     PRINTB
00001A7E  0C39 0001 0000270F       935          CMP.B   #$1,bit2
00001A86  6700 0036                936          BEQ     PRINTW
00001A8A  0C39 0002 0000270F       937          CMP.B   #$2,bit2
00001A92  6700 0052                938          BEQ     PRINTL
00001A96                           939          
00001A96                           940  PRINTB
00001A96  43F9 00002623            941          LEA MBYTE,A1
00001A9C  303C 000E                942          MOVE    #14,D0
00001AA0  4E4F                     943          TRAP    #15
00001AA2                           944          
00001AA2  3A3C 0006                945          MOVE #$6,D5
00001AA6                           946          
00001AA6  0C39 0000 00002710       947          CMP.B   #0,bit3
00001AAE  6700 005E                948          BEQ     PRINTLSLRCOUNT
00001AB2  0C39 0001 00002710       949          CMP.B   #1,bit3
00001ABA  6700 FB1C                950          BEQ     MOVBDN1
00001ABE                           951  
00001ABE                           952  PRINTW 
00001ABE  43F9 00002626            953          LEA MWORD,A1
00001AC4  303C 000E                954          MOVE    #14,D0
00001AC8  4E4F                     955          TRAP    #15
00001ACA                           956          
00001ACA  3A3C 0006                957          MOVE #$6,D5
00001ACE                           958          
00001ACE  0C39 0000 00002710       959          CMP.B   #0,bit3
00001AD6  6700 0036                960          BEQ     PRINTLSLRCOUNT
00001ADA  0C39 0001 00002710       961          CMP.B   #1,bit3
00001AE2  6700 FAF4                962          BEQ     MOVBDN1
00001AE6                           963  
00001AE6                           964  PRINTL
00001AE6  43F9 00002629            965          LEA MLONG,A1
00001AEC  303C 000E                966          MOVE    #14,D0
00001AF0  4E4F                     967          TRAP    #15
00001AF2                           968  
00001AF2  3A3C 0006                969          MOVE #$6,D5
00001AF6                           970          
00001AF6  0C39 0000 00002710       971          CMP.B   #0,bit3
00001AFE  6700 000E                972          BEQ     PRINTLSLRCOUNT
00001B02  0C39 0001 00002710       973          CMP.B   #1,bit3
00001B0A  6700 FACC                974          BEQ     MOVBDN1    
00001B0E                           975  
00001B0E                           976  PRINTLSLRCOUNT
00001B0E  43F9 00002605            977          LEA TAB,A1
00001B14  303C 000E                978          MOVE    #14,D0
00001B18  4E4F                     979          TRAP    #15
00001B1A                           980          
00001B1A  45F9 00002613            981          LEA HASH,A2
00001B20  303C 000E                982          MOVE    #14,D0
00001B24  4E4F                     983          TRAP    #15
00001B26                           984          
00001B26  1239 0000270D            985          MOVE.B  bit0,D1
00001B2C  303C 0003                986          MOVE    #3,D0
00001B30  4E4F                     987          TRAP    #15
00001B32                           988          
00001B32  43F9 00002609            989          LEA COMMA,A1
00001B38  303C 000E                990          MOVE    #14,D0
00001B3C  4E4F                     991          TRAP    #15
00001B3E                           992          
00001B3E  6000 FB4C                993          BRA LSLRDESD
00001B42                           994    
00001B42                           995  PRINTLSR
00001B42  43F9 00002635            996          LEA MLSR,A1
00001B48  323C 000E                997          MOVE    #14,D1
00001B4C  4E4F                     998          TRAP    #15
00001B4E                           999          
00001B4E  0C39 0000 0000270F      1000          CMP.B   #$0,bit2
00001B56  6700 FF3E               1001          BEQ     PRINTB
00001B5A  0C39 0001 0000270F      1002          CMP.B   #$1,bit2
00001B62  6700 FF5A               1003          BEQ     PRINTW
00001B66  0C39 0002 0000270F      1004          CMP.B   #$2,bit2
00001B6E  6700 FF76               1005          BEQ     PRINTL
00001B72                          1006  
00001B72                          1007  ******************************************************************************************************
00001B72                          1008  *   Branch, branch to subroutine, and branch conditionally
00001B72                          1009  *   BRA, BSR, Bcc
00001B72                          1010  
00001B72                          1011  BCC
00001B72  13C5 0000270E           1012          MOVE.B  D5,bit1             Moves condition code to bit1
00001B78  1A1E                    1013          MOVE.B  (A6)+,D5            Moves the 8-bit displacement to D5
00001B7A  13C5 0000270F           1014          MOVE.B  D5,bit2             Moves the 8-bit displacement to bit2
00001B80  280E                    1015          MOVE.L  A6,D4               Moves current address to D4 register
00001B82                          1016  
00001B82  BA3C 0000               1017          CMP.B   #$0,D5              If bit1 is 0, displacement is word size
00001B86  6700 0010               1018          BEQ     BCCWORD
00001B8A  BA3C 00FF               1019          CMP.B   #$FF,D5             If bit1 is FF, displacement is longword size
00001B8E  6700 0010               1020          BEQ     BCCLONG             Else, displacement is 8-bits
00001B92                          1021  
00001B92                          1022          * Calculates 8-bit displacement
00001B92                          1023          * 8-bit displacement is already in D5
00001B92                          1024          * Adds displacement to current address
00001B92  D805                    1025          ADD.B   D5,D4               Adds the displacement to current address
00001B94  6000 0012               1026          BRA     BCCNEXT
00001B98                          1027  
00001B98                          1028  * Calculates 16-bit displacement
00001B98                          1029  BCCWORD
00001B98  3A1E                    1030          MOVE.W  (A6)+,D5            Moves the the 16-bit displacement to D5
00001B9A  D845                    1031          ADD.W   D5,D4               Adds the displacement to current address
00001B9C  6000 000A               1032          BRA     BCCNEXT
00001BA0                          1033  
00001BA0                          1034  * Calculates 32-bit displacement
00001BA0                          1035  BCCLONG
00001BA0  2A1E                    1036          MOVE.L  (A6)+,D5            Moves the 32-bit displacement to D5
00001BA2  D885                    1037          ADD.L   D5,D4               Adds the displacement to current address
00001BA4  6000 0002               1038          BRA     BCCNEXT
00001BA8                          1039  
00001BA8                          1040  * Does the actual calculation
00001BA8                          1041  * Adds the displacement to the current address
00001BA8                          1042  BCCNEXT
00001BA8  6100 000E               1043          BSR     BCCDISP             Displays branch op-code
00001BAC  45F9 00002520           1044          LEA     ENDNEWLINE,A2
00001BB2  2E04                    1045          MOVE.L  D4,D7
00001BB4  6000 F470               1046          BRA     DISPADDRSTART
00001BB8                          1047  
00001BB8                          1048  BCCDISP
00001BB8  B43C 0000               1049          CMP.B   #$0,D2
00001BBC  6700 0026               1050          BEQ     BCCBRA
00001BC0  B43C 0007               1051          CMP.B   #$7,D2
00001BC4  6700 0028               1052          BEQ     BCCBEQ
00001BC8  B43C 0006               1053          CMP.B   #$6,D2
00001BCC  6700 002A               1054          BEQ     BCCBNE
00001BD0  B43C 000D               1055          CMP.B   #$D,D2
00001BD4  6700 002C               1056          BEQ     BCCBLT
00001BD8  B43C 0002               1057          CMP.B   #$2,D2
00001BDC  6700 002E               1058          BEQ     BCCBHI
00001BE0                          1059  
00001BE0  6000 08CC               1060          BRA     INVOP
00001BE4                          1061  
00001BE4                          1062  BCCBRA
00001BE4  43F9 000026B6           1063          LEA     MBRA,A1
00001BEA  6000 002A               1064          BRA     BCCPRINT
00001BEE                          1065  BCCBEQ
00001BEE  43F9 000026A6           1066          LEA     MBEQ,A1
00001BF4  6000 0020               1067          BRA     BCCPRINT
00001BF8                          1068  BCCBNE
00001BF8  43F9 000026AA           1069          LEA     MBNE,A1
00001BFE  6000 0016               1070          BRA     BCCPRINT
00001C02                          1071  BCCBLT
00001C02  43F9 000026AE           1072          LEA     MBLT,A1
00001C08  6000 000C               1073          BRA     BCCPRINT
00001C0C                          1074  BCCBHI
00001C0C  43F9 000026B2           1075          LEA     MBHI,A1
00001C12  6000 0002               1076          BRA     BCCPRINT
00001C16                          1077  BCCPRINT
00001C16  103C 000E               1078          MOVE.B  #14,D0
00001C1A  4E4F                    1079          TRAP    #15
00001C1C  43F9 00002605           1080          LEA     TAB,A1
00001C22  4E4F                    1081          TRAP    #15
00001C24  4E75                    1082          RTS
00001C26                          1083  
00001C26                          1084  ******************************************************************************************************
00001C26                          1085  *   Immediate data arithmetic operations
00001C26                          1086  *   SUBI
00001C26                          1087  
00001C26  13C5 0000270E           1088  IMD     MOVE.B  D5,bit1
00001C2C  141E                    1089          MOVE.B  (A6)+,D2
00001C2E                          1090  
00001C2E  DE02                    1091          ADD.B   D2,D7
00001C30                          1092  
00001C30  1602                    1093          MOVE.B  D2,D3               Copies data at D2 to D3
00001C32                          1094          *   this gets digit in 10's place
00001C32  E80B                    1095          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001C34                          1096          *   this gets digit in 1's place
00001C34  E90A                    1097          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001C36  E80A                    1098          LSR.B   #4,D2               Shifts back right into 1's place
00001C38                          1099  
00001C38                          1100          *   D3 holds digit in 10's place
00001C38                          1101          *   D2 holds digit in 1's place
00001C38                          1102  
00001C38  E20B                    1103          LSR.B   #1,D3
00001C3A  6400 0004               1104          BCC     IMD2
00001C3E  5404                    1105          ADD.B   #$2,D4
00001C40  E20B                    1106  IMD2    LSR.B   #1,D3
00001C42  6400 0004               1107          BCC     IMD3
00001C46  5804                    1108          ADD.B   #$4,D4
00001C48  B43C 0007               1109  IMD3    CMP.B   #$7,D2
00001C4C  6D00 0006               1110          BLT     IMD4
00001C50  5204                    1111          ADD.B   #$1,D4
00001C52  5102                    1112          SUB.B   #$8,D2
00001C54                          1113  
00001C54                          1114          *   Stores them into addr
00001C54  13C3 0000270F           1115  IMD4    MOVE.B  D3,bit2
00001C5A  13C4 00002710           1116          MOVE.B  D4,bit3
00001C60  13C2 00002711           1117          MOVE.B  D2,bit4
00001C66                          1118  
00001C66                          1119  **************************
00001C66                          1120  * This finds the size of the operation
00001C66                          1121  
00001C66  0C39 0000 0000270F      1122          CMP.B   #$0,bit2
00001C6E  6700 0052               1123          BEQ     IMDBYTE
00001C72  0C39 0001 0000270F      1124          CMP.B   #$1,bit2
00001C7A  6700 0056               1125          BEQ     IMDWORD
00001C7E  0C39 0002 0000270F      1126          CMP.B   #$2,bit2
00001C86  6700 0058               1127          BEQ     IMDLONG
00001C8A  6000 0822               1128          BRA     INVOP
00001C8E                          1129  
00001C8E                          1130  *************************************************************
00001C8E                          1131  * Display IMD op-code
00001C8E                          1132  IMDPRINT
00001C8E  0C39 0000 0000270E      1133          CMP.B   #$0,bit1
00001C96  6700 000E               1134          BEQ     IMDPRINTORI
00001C9A  0C39 0004 0000270E      1135          CMP.B   #$4,bit1
00001CA2  6700 000C               1136          BEQ     IMDPRINTSUBI
00001CA6                          1137  
00001CA6                          1138  IMDPRINTORI
00001CA6  43F9 00002692           1139          LEA     MORI,A1
00001CAC  6000 000C               1140          BRA     IMDPRINTEND
00001CB0                          1141  
00001CB0                          1142  IMDPRINTSUBI
00001CB0  43F9 0000268C           1143          LEA     MSUBI,A1
00001CB6  6000 0002               1144          BRA     IMDPRINTEND
00001CBA                          1145  
00001CBA                          1146  IMDPRINTEND
00001CBA  103C 000E               1147          MOVE.B  #14,D0
00001CBE  4E4F                    1148          TRAP    #15
00001CC0  4E75                    1149          RTS
00001CC2                          1150  
00001CC2                          1151  *************************************************************
00001CC2                          1152  * Immediate data operation size BYTE
00001CC2                          1153  IMDBYTE
00001CC2  61CA                    1154          BSR     IMDPRINT
00001CC4  43F9 00002623           1155          LEA     MBYTE,A1
00001CCA                          1156  
00001CCA                          1157          * Moves size to D4, needed to use DISPEA
00001CCA  183C 0001               1158          MOVE.B  #$1,D4
00001CCE  6000 001A               1159          BRA     IMDEA
00001CD2                          1160  
00001CD2                          1161  *************************************************************
00001CD2                          1162  * Immediate data operation size WORD
00001CD2                          1163  IMDWORD
00001CD2  61BA                    1164          BSR     IMDPRINT
00001CD4  43F9 00002626           1165          LEA     MWORD,A1
00001CDA                          1166  
00001CDA  1803                    1167          MOVE.B  D3,D4
00001CDC  6000 000C               1168          BRA     IMDEA
00001CE0                          1169  
00001CE0                          1170  
00001CE0                          1171  *************************************************************
00001CE0                          1172  * Immediate data operation size LONG
00001CE0                          1173  IMDLONG
00001CE0  61AC                    1174          BSR     IMDPRINT
00001CE2  43F9 00002629           1175          LEA     MLONG,A1
00001CE8                          1176          
00001CE8                          1177  
00001CE8                          1178          * Moves size to D4, needed to use DISPEA
00001CE8  1803                    1179          MOVE.B  D3,D4
00001CEA                          1180  
00001CEA                          1181  IMDEA
00001CEA                          1182          * This prints out the size and creates tab
00001CEA  103C 000E               1183          MOVE.B  #14,D0
00001CEE  4E4F                    1184          TRAP    #15
00001CF0  43F9 00002605           1185          LEA     TAB,A1
00001CF6  103C 000E               1186          MOVE.B  #14,D0
00001CFA  4E4F                    1187          TRAP    #15
00001CFC                          1188          * Loads return address into A2
00001CFC  45F9 00001D06           1189          LEA     IMDEA2,A2
00001D02  6000 0742               1190          BRA     DISPEA
00001D06                          1191  IMDEA2
00001D06  43F9 00002609           1192          LEA     COMMA,A1
00001D0C  103C 000E               1193          MOVE.B  #14,D0
00001D10  4E4F                    1194          TRAP    #15
00001D12                          1195  
00001D12  45F9 00001D1C           1196          LEA     IMDEA3,A2
00001D18  6000 05DC               1197          BRA     SUBEA
00001D1C                          1198  IMDEA3
00001D1C  6000 0802               1199          BRA     ENDNEWLINE
00001D20                          1200  
00001D20                          1201  ******************************************************************************************************
00001D20                          1202  * Miscellaneous section
00001D20                          1203  *   Not goes here
00001D20                          1204  
00001D20                          1205  MISC
00001D20  13C5 0000270E           1206          MOVE.B  D5,bit1
00001D26  141E                    1207          MOVE.B  (A6)+,D2
00001D28                          1208  
00001D28  DE02                    1209          ADD.B   D2,D7
00001D2A                          1210  
00001D2A  1602                    1211          MOVE.B  D2,D3               Copies data at D2 to D3
00001D2C                          1212          *   this gets digit in 10's place
00001D2C  E80B                    1213          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001D2E                          1214          *   this gets digit in 1's place
00001D2E  E90A                    1215          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001D30  E80A                    1216          LSR.B   #4,D2               Shifts back right into 1's place
00001D32                          1217  
00001D32                          1218          *   D5 is bit1
00001D32                          1219          *   D3 is bit2
00001D32                          1220          *   D2 is bit3
00001D32                          1221  
00001D32                          1222  **************************
00001D32                          1223  * This finds the size of the operation
00001D32                          1224          * D5 is bit1
00001D32  BA3C 0004               1225          CMP.B   #$4,D5
00001D36  6700 FB80               1226          BEQ     NEGW                We can branch to MISCNOT now because they use similar format <<********************************************************************************************
00001D3A  BA3C 0006               1227          CMP.B   #$6,D5              Branches to NOT section
00001D3E  6700 0036               1228          BEQ     MISCNOT
00001D42  BA3C 000E               1229          CMP.B   #$E,D5              Goes to section to check for NOP or JSR
00001D46  6700 0006               1230          BEQ     MISCBIT2
00001D4A  6000 0762               1231          BRA     INVOP
00001D4E                          1232  
00001D4E                          1233  MISCBIT2
00001D4E                          1234          * D3 is bit2
00001D4E  B63C 0007               1235          CMP.B   #$7,D3              Branches to NOP
00001D52  6700 0006               1236          BEQ     MISCBIT3
00001D56  6000 0756               1237          BRA     INVOP
00001D5A                          1238  
00001D5A                          1239  MISCBIT3
00001D5A                          1240          * D2 is bit3
00001D5A  B43C 0001               1241          CMP.B   #$1,D2              Branches to NOP
00001D5E  6700 0006               1242          BEQ     MISCNOP
00001D62  6000 074A               1243          BRA     INVOP
00001D66                          1244  
00001D66                          1245  ******************************************************
00001D66                          1246  * NOP
00001D66                          1247  * No operation
00001D66                          1248  MISCNOP
00001D66  43F9 000026BA           1249          LEA     MNOP,A1
00001D6C  103C 000E               1250          MOVE.B  #14,D0
00001D70  4E4F                    1251          TRAP    #15
00001D72                          1252  
00001D72  6000 07AC               1253          BRA     ENDNEWLINE          Goes to next opcode
00001D76                          1254  
00001D76                          1255  ******************************************************
00001D76                          1256  * NOT
00001D76                          1257  * Reuses some of IMD section to display because they have similar format
00001D76                          1258  *  (I was kinda lazy too)
00001D76                          1259  MISCNOT
00001D76  E20B                    1260          LSR.B   #1,D3
00001D78  6400 0004               1261          BCC     MISCNOT2
00001D7C  5404                    1262          ADD.B   #$2,D4
00001D7E                          1263  MISCNOT2   
00001D7E  E20B                    1264          LSR.B   #1,D3
00001D80  6400 0004               1265          BCC     MISCNOT3
00001D84  5804                    1266          ADD.B   #$4,D4
00001D86                          1267  MISCNOT3   
00001D86  B43C 0007               1268          CMP.B   #$7,D2
00001D8A  6D00 0006               1269          BLT     MISCNOT4
00001D8E  5204                    1270          ADD.B   #$1,D4
00001D90  5102                    1271          SUB.B   #$8,D2
00001D92                          1272  
00001D92                          1273          *   Stores them into addr
00001D92                          1274  MISCNOT4
00001D92  13C3 0000270F           1275          MOVE.B  D3,bit2
00001D98  13C4 00002710           1276          MOVE.B  D4,bit3
00001D9E  13C2 00002711           1277          MOVE.B  D2,bit4
00001DA4                          1278  
00001DA4  B63C 0000               1279          CMP.B   #$0,D3
00001DA8  6700 0016               1280          BEQ     MISCBYTE
00001DAC  B63C 0001               1281          CMP.B   #$1,D3
00001DB0  6700 0020               1282          BEQ     MISCWORD
00001DB4  B63C 0002               1283          CMP.B   #$2,D3
00001DB8  6700 0028               1284          BEQ     MISCLONG
00001DBC  6000 06F0               1285          BRA     INVOP
00001DC0                          1286  *************************************************************
00001DC0                          1287  * Immediate data operation size BYTE
00001DC0                          1288  MISCBYTE
00001DC0  6100 004C               1289          BSR     MISCPRINT
00001DC4  43F9 00002623           1290          LEA     MBYTE,A1
00001DCA                          1291  
00001DCA                          1292          * Moves size to D4, needed to use DISPEA
00001DCA  183C 0001               1293          MOVE.B  #$1,D4
00001DCE  6000 001E               1294          BRA     MISCEA
00001DD2                          1295  
00001DD2                          1296  *************************************************************
00001DD2                          1297  * Immediate data operation size WORD
00001DD2                          1298  MISCWORD
00001DD2  6100 003A               1299          BSR     MISCPRINT
00001DD6  43F9 00002626           1300          LEA     MWORD,A1
00001DDC                          1301  
00001DDC  1803                    1302          MOVE.B  D3,D4
00001DDE  6000 000E               1303          BRA     MISCEA
00001DE2                          1304  
00001DE2                          1305  
00001DE2                          1306  *************************************************************
00001DE2                          1307  * Immediate data operation size LONG
00001DE2                          1308  MISCLONG
00001DE2  6100 002A               1309          BSR     MISCPRINT
00001DE6  43F9 00002629           1310          LEA     MLONG,A1
00001DEC                          1311  
00001DEC                          1312          * Moves size to D4, needed to use DISPEA
00001DEC  1803                    1313          MOVE.B  D3,D4
00001DEE                          1314  
00001DEE                          1315  MISCEA
00001DEE  103C 000E               1316          MOVE.B  #14,D0
00001DF2  4E4F                    1317          TRAP    #15
00001DF4  43F9 00002605           1318          LEA     TAB,A1
00001DFA  103C 000E               1319          MOVE.B  #14,D0
00001DFE  4E4F                    1320          TRAP    #15
00001E00                          1321  
00001E00  45F9 00001E0A           1322          LEA     MISCEA2,A2
00001E06  6000 04EE               1323          BRA     SUBEA
00001E0A                          1324  MISCEA2
00001E0A  6000 0714               1325          BRA     ENDNEWLINE
00001E0E                          1326  
00001E0E                          1327  *************************************************************
00001E0E                          1328  * Display IMD op-code
00001E0E                          1329  MISCPRINT
00001E0E  0C39 0004 0000270E      1330          CMP.B   #$4,bit1
00001E16  6700 0018               1331          BEQ     MISCPRINTNEG
00001E1A  0C39 0006 0000270E      1332          CMP.B   #$6,bit1
00001E22  6700 0002               1333          BEQ     MISCPRINTNOT
00001E26                          1334  
00001E26                          1335  MISCPRINTNOT
00001E26  43F9 00002697           1336          LEA     MNOT,A1
00001E2C  6000 000C               1337          BRA     MISCPRINTEND
00001E30                          1338  
00001E30                          1339  MISCPRINTNEG
00001E30  43F9 000026A2           1340          LEA     MNEG,A1
00001E36  6000 0002               1341          BRA     MISCPRINTEND
00001E3A                          1342  
00001E3A                          1343  MISCPRINTEND
00001E3A  103C 000E               1344          MOVE.B  #14,D0
00001E3E  4E4F                    1345          TRAP    #15
00001E40  4E75                    1346          RTS
00001E42                          1347  
00001E42                          1348  
00001E42                          1349  ******************************************************************************************************
00001E42                          1350  * SUB section
00001E42                          1351  
00001E42                          1352          *   Grabs next two nibbles
00001E42  141E                    1353  SUB     MOVE.B  (A6)+,D2
00001E44                          1354  
00001E44  DE02                    1355          ADD.B   D2,D7
00001E46                          1356  
00001E46  1602                    1357          MOVE.B  D2,D3               Copies data at D2 to D3
00001E48                          1358          *   this gets digit in 10's place
00001E48  E80B                    1359          LSR.B   #4,D3               Shifts right to get rid of 1's place
00001E4A                          1360          *   this gets digit in 1's place
00001E4A  E90A                    1361          LSL.B   #4,D2               Shifts left to get rid of 10's place
00001E4C  E80A                    1362          LSR.B   #4,D2               Shifts back right into 1's place
00001E4E                          1363  
00001E4E                          1364          *   D3 holds digit in 10's place
00001E4E                          1365          *   D2 holds digit in 1's place
00001E4E                          1366  
00001E4E                          1367          
00001E4E                          1368          *   Converts nibble into 3-bit parts
00001E4E  E20B                    1369          LSR.B   #1,D3
00001E50  6400 0004               1370          BCC     SUB2
00001E54  5404                    1371          ADD.B   #$2,D4
00001E56                          1372          
00001E56  E20B                    1373  SUB2    LSR.B   #1,D3
00001E58  6400 0004               1374          BCC     SUB3
00001E5C  5804                    1375          ADD.B   #$4,D4
00001E5E                          1376          
00001E5E  1205                    1377  SUB3    MOVE.B  D5,D1
00001E60  E209                    1378          LSR.B   #1,D1
00001E62  6400 0004               1379          BCC     SUB4
00001E66  5803                    1380          ADD.B   #$4,D3
00001E68                          1381  
00001E68  B43C 0007               1382  SUB4    CMP.B   #$7,D2
00001E6C  6D00 0006               1383          BLT     SUB1
00001E70  5204                    1384          ADD.B   #$1,D4
00001E72  5102                    1385          SUB.B   #$8,D2
00001E74                          1386  
00001E74                          1387          *   Stores them into addr
00001E74  13C1 0000270E           1388  SUB1    MOVE.B  D1,bit1
00001E7A  13C3 0000270F           1389          MOVE.B  D3,bit2
00001E80  13C4 00002710           1390          MOVE.B  D4,bit3
00001E86  13C2 00002711           1391          MOVE.B  D2,bit4
00001E8C                          1392  
00001E8C                          1393          * do this later
00001E8C  4241                    1394          CLR     D1
00001E8E  7400                    1395          MOVE.L  #0,D2
00001E90  7600                    1396          MOVE.L  #0,D3
00001E92  7800                    1397          MOVE.L  #0,D4
00001E94  7A00                    1398          MOVE.L  #0,D5
00001E96  7C00                    1399          MOVE.L  #0,D6
00001E98                          1400  
00001E98                          1401          
00001E98                          1402  ******************************************************************************************************
00001E98                          1403  * After spliting the op-code into SUB's defined groupings
00001E98                          1404  *   This figures out which operation it is and goes to that sub-routine
00001E98                          1405  
00001E98                          1406          * This checks if bit0 is C which is either AND or MULS
00001E98  0C39 000C 0000270D      1407          CMP.B   #$C,bit0
00001EA0  6600 000E               1408          BNE     SUBACHECK
00001EA4  0C39 0007 0000270F      1409          CMP.B   #$7,bit2                    If bit0 is C and bit2 is 7, then it will branch to MULS instead
00001EAC  6700 F8F2               1410          BEQ     MULSW                       AND will use SUB's routine
00001EB0                          1411  
00001EB0                          1412  SUBACHECK
00001EB0                          1413          * This will display SUBA instead  -- check this later
00001EB0  0C39 0003 0000270F      1414          CMP.B   #$3,bit2
00001EB8  6700 01E6               1415          BEQ     SUBA
00001EBC  0C39 0007 0000270F      1416          CMP.B   #$7,bit2
00001EC4  6700 01DA               1417          BEQ     SUBA
00001EC8                          1418  
00001EC8                          1419          * This will find the size and stuff
00001EC8  0C39 0000 0000270F      1420          CMP.B   #$0,bit2
00001ED0  6700 003E               1421          BEQ     SUBSIZE1
00001ED4  0C39 0001 0000270F      1422          CMP.B   #$1,bit2
00001EDC  6700 0072               1423          BEQ     SUBSIZE2
00001EE0  0C39 0002 0000270F      1424          CMP.B   #$2,bit2
00001EE8  6700 00A6               1425          BEQ     SUBSIZE3
00001EEC  0C39 0004 0000270F      1426          CMP.B   #$4,bit2
00001EF4  6700 00DA               1427          BEQ     SUBSIZE4
00001EF8  0C39 0005 0000270F      1428          CMP.B   #$5,bit2
00001F00  6700 0112               1429          BEQ     SUBSIZE5
00001F04  0C39 0006 0000270F      1430          CMP.B   #$6,bit2
00001F0C  6700 014A               1431          BEQ     SUBSIZE6
00001F10                          1432     
00001F10                          1433  ******************************************************************************************************
00001F10                          1434  *   Displays size, then does operation order
00001F10                          1435  
00001F10                          1436  *   000 byte    EA,DN
00001F10                          1437  SUBSIZE1
00001F10  6100 0228               1438          BSR     SUBPRINT
00001F14  43F9 00002623           1439          LEA     MBYTE,A1
00001F1A  103C 000E               1440          MOVE.B  #14,D0
00001F1E  4E4F                    1441          TRAP    #15
00001F20  43F9 00002605           1442          LEA     TAB,A1
00001F26  103C 000E               1443          MOVE.B  #14,D0
00001F2A  4E4F                    1444          TRAP    #15
00001F2C                          1445  
00001F2C  45F9 00001F36           1446          LEA     SUBSIZE11,A2
00001F32  6000 03C2               1447          BRA     SUBEA
00001F36                          1448  SUBSIZE11
00001F36  45F9 00001F4C           1449          LEA     SUBSIZE12,A2
00001F3C  43F9 00002609           1450          LEA     COMMA,A1
00001F42  103C 000E               1451          MOVE.B  #14,D0
00001F46  4E4F                    1452          TRAP    #15
00001F48  6000 0288               1453          BRA     SUBDN
00001F4C                          1454  SUBSIZE12
00001F4C  6000 05D2               1455          BRA     ENDNEWLINE
00001F50                          1456  
00001F50                          1457  *************************************************
00001F50                          1458  *   001 word    EA,DN
00001F50                          1459  SUBSIZE2
00001F50  6100 01E8               1460          BSR     SUBPRINT
00001F54  43F9 00002626           1461          LEA     MWORD,A1
00001F5A  103C 000E               1462          MOVE.B  #14,D0
00001F5E  4E4F                    1463          TRAP    #15
00001F60  43F9 00002605           1464          LEA     TAB,A1
00001F66  103C 000E               1465          MOVE.B  #14,D0
00001F6A  4E4F                    1466          TRAP    #15
00001F6C                          1467  
00001F6C  45F9 00001F76           1468          LEA     SUBSIZE21,A2
00001F72  6000 0382               1469          BRA     SUBEA
00001F76                          1470  SUBSIZE21
00001F76  45F9 00001F8C           1471          LEA     SUBSIZE22,A2
00001F7C  43F9 00002609           1472          LEA     COMMA,A1
00001F82  103C 000E               1473          MOVE.B  #14,D0
00001F86  4E4F                    1474          TRAP    #15
00001F88  6000 0248               1475          BRA     SUBDN
00001F8C                          1476  SUBSIZE22
00001F8C  6000 0592               1477          BRA     ENDNEWLINE
00001F90                          1478  
00001F90                          1479  *************************************************
00001F90                          1480  *   010 long    EA,DN
00001F90                          1481  SUBSIZE3
00001F90  6100 01A8               1482          BSR     SUBPRINT
00001F94  43F9 00002629           1483          LEA     MLONG,A1
00001F9A  103C 000E               1484          MOVE.B  #14,D0
00001F9E  4E4F                    1485          TRAP    #15
00001FA0  43F9 00002605           1486          LEA     TAB,A1
00001FA6  103C 000E               1487          MOVE.B  #14,D0
00001FAA  4E4F                    1488          TRAP    #15
00001FAC                          1489  
00001FAC  45F9 00001FB6           1490          LEA     SUBSIZE31,A2
00001FB2  6000 0342               1491          BRA     SUBEA
00001FB6                          1492  SUBSIZE31
00001FB6  45F9 00001FCC           1493          LEA     SUBSIZE32,A2
00001FBC  43F9 00002609           1494          LEA     COMMA,A1
00001FC2  103C 000E               1495          MOVE.B  #14,D0
00001FC6  4E4F                    1496          TRAP    #15
00001FC8  6000 0208               1497          BRA     SUBDN
00001FCC                          1498  SUBSIZE32
00001FCC  6000 0552               1499          BRA     ENDNEWLINE
00001FD0                          1500  
00001FD0                          1501  *************************************************
00001FD0                          1502  *   100 byte    DN,EA
00001FD0                          1503  SUBSIZE4
00001FD0  6100 0168               1504          BSR     SUBPRINT
00001FD4  43F9 00002623           1505          LEA     MBYTE,A1
00001FDA  103C 000E               1506          MOVE.B  #14,D0
00001FDE  4E4F                    1507          TRAP    #15
00001FE0  43F9 00002605           1508          LEA     TAB,A1
00001FE6  103C 000E               1509          MOVE.B  #14,D0
00001FEA  4E4F                    1510          TRAP    #15
00001FEC                          1511  
00001FEC  6100 01A2               1512          BSR     SUBERRORTEST1
00001FF0                          1513  
00001FF0  45F9 00001FFA           1514          LEA     SUBSIZE41,A2
00001FF6  6000 01DA               1515          BRA     SUBDN
00001FFA                          1516  SUBSIZE41
00001FFA  45F9 00002010           1517          LEA     SUBSIZE42,A2
00002000  43F9 00002609           1518          LEA     COMMA,A1
00002006  103C 000E               1519          MOVE.B  #14,D0
0000200A  4E4F                    1520          TRAP    #15
0000200C  6000 02E8               1521          BRA     SUBEA
00002010                          1522  SUBSIZE42
00002010  6000 050E               1523          BRA     ENDNEWLINE
00002014                          1524  
00002014                          1525  *************************************************
00002014                          1526  *   101 word    DN,EA
00002014                          1527  SUBSIZE5
00002014  6100 017A               1528          BSR     SUBERRORTEST1               * This does error testing
00002018  6100 0120               1529          BSR     SUBPRINT                    * Prints out 'SUB.'
0000201C  43F9 00002626           1530          LEA     MWORD,A1
00002022  103C 000E               1531          MOVE.B  #14,D0
00002026  4E4F                    1532          TRAP    #15
00002028  43F9 00002605           1533          LEA     TAB,A1
0000202E  103C 000E               1534          MOVE.B  #14,D0
00002032  4E4F                    1535          TRAP    #15
00002034                          1536  
00002034  45F9 0000203E           1537          LEA     SUBSIZE51,A2
0000203A  6000 0196               1538          BRA     SUBDN
0000203E                          1539  SUBSIZE51
0000203E  45F9 00002054           1540          LEA     SUBSIZE52,A2
00002044  43F9 00002609           1541          LEA     COMMA,A1
0000204A  103C 000E               1542          MOVE.B  #14,D0
0000204E  4E4F                    1543          TRAP    #15
00002050  6000 02A4               1544          BRA     SUBEA
00002054                          1545  SUBSIZE52
00002054  6000 04CA               1546          BRA     ENDNEWLINE
00002058                          1547  
00002058                          1548  *************************************************
00002058                          1549  *   110 long    DN,EA
00002058                          1550  SUBSIZE6
00002058  6100 0136               1551          BSR     SUBERRORTEST1               * This does error testing
0000205C  6100 00DC               1552          BSR     SUBPRINT                    * Prints out 'SUB.'
00002060  43F9 00002629           1553          LEA     MLONG,A1
00002066  103C 000E               1554          MOVE.B  #14,D0
0000206A  4E4F                    1555          TRAP    #15
0000206C  43F9 00002605           1556          LEA     TAB,A1
00002072  103C 000E               1557          MOVE.B  #14,D0
00002076  4E4F                    1558          TRAP    #15
00002078                          1559  
00002078  6100 0116               1560          BSR     SUBERRORTEST1
0000207C                          1561  
0000207C  45F9 00002086           1562          LEA     SUBSIZE61,A2
00002082  6000 014E               1563          BRA     SUBDN
00002086                          1564  SUBSIZE61
00002086  45F9 0000209C           1565          LEA     SUBSIZE62,A2
0000208C  43F9 00002609           1566          LEA     COMMA,A1
00002092  103C 000E               1567          MOVE.B  #14,D0
00002096  4E4F                    1568          TRAP    #15
00002098  6000 025C               1569          BRA     SUBEA
0000209C                          1570  SUBSIZE62
0000209C  6000 0482               1571          BRA     ENDNEWLINE
000020A0                          1572  
000020A0                          1573  ****************************************************************************
000020A0                          1574  *   This section is for SUBA
000020A0                          1575  *   Displays 'SUBA.' then decodes the op-code as SUBA
000020A0                          1576  SUBA
000020A0  43F9 0000267C           1577          LEA     MSUBA,A1                    Displays 'SUBA.'
000020A6  103C 000E               1578          MOVE.B  #14,D0
000020AA  4E4F                    1579          TRAP    #15
000020AC                          1580          
000020AC                          1581          * Does the rest of SUBA
000020AC  0C39 0003 0000270F      1582          CMP.B   #$3,bit2
000020B4  6700 000E               1583          BEQ     SUBSIZE7
000020B8  0C39 0007 0000270F      1584          CMP.B   #$7,bit2
000020C0  6700 003E               1585          BEQ     SUBSIZE8
000020C4                          1586  
000020C4                          1587  *************************************************
000020C4                          1588  *   SUBA Word   ea,An
000020C4                          1589  SUBSIZE7
000020C4  43F9 00002626           1590          LEA     MWORD,A1
000020CA  103C 000E               1591          MOVE.B  #14,D0
000020CE  4E4F                    1592          TRAP    #15
000020D0  43F9 00002605           1593          LEA     TAB,A1
000020D6  103C 000E               1594          MOVE.B  #14,D0
000020DA  4E4F                    1595          TRAP    #15
000020DC                          1596  
000020DC  45F9 000020E6           1597          LEA     SUBSIZE71,A2
000020E2  6000 0212               1598          BRA     SUBEA
000020E6                          1599  SUBSIZE71
000020E6  45F9 000020FC           1600          LEA     SUBSIZE72,A2
000020EC  43F9 00002609           1601          LEA     COMMA,A1
000020F2  103C 000E               1602          MOVE.B  #14,D0
000020F6  4E4F                    1603          TRAP    #15
000020F8  6000 012C               1604          BRA     SUBAN2
000020FC                          1605  SUBSIZE72
000020FC  6000 0422               1606          BRA     ENDNEWLINE
00002100                          1607  
00002100                          1608  *************************************************
00002100                          1609  *   SUBA longword   ea,An
00002100                          1610  SUBSIZE8
00002100  43F9 00002629           1611          LEA     MLONG,A1
00002106  103C 000E               1612          MOVE.B  #14,D0
0000210A  4E4F                    1613          TRAP    #15
0000210C  43F9 00002605           1614          LEA     TAB,A1
00002112  103C 000E               1615          MOVE.B  #14,D0
00002116  4E4F                    1616          TRAP    #15
00002118                          1617  
00002118  45F8 20E6               1618          LEA     SUBSIZE71,A2
0000211C  6000 01D8               1619          BRA     SUBEA
00002120                          1620  SUBSIZE81
00002120  45F8 20FC               1621          LEA     SUBSIZE72,A2
00002124  43F9 00002609           1622          LEA     COMMA,A1
0000212A  103C 000E               1623          MOVE.B  #14,D0
0000212E  4E4F                    1624          TRAP    #15
00002130  6000 00F4               1625          BRA     SUBAN2
00002134                          1626  SUBSIZE82
00002134  6000 03EA               1627          BRA     ENDNEWLINE
00002138                          1628  
00002138                          1629  *************************************************
00002138                          1630  * Jumps to memory location at A2
00002138                          1631  SUBJMPA2
00002138  4ED2                    1632          JMP     (A2)
0000213A                          1633  
0000213A                          1634  *************************************************
0000213A                          1635  * Prints out opcode name
0000213A                          1636  SUBPRINT
0000213A  0C39 0009 0000270D      1637          CMP.B   #$9,bit0                Prints SUB
00002142  6700 001A               1638          BEQ     SUBPRINTSUB
00002146  0C39 000C 0000270D      1639          CMP.B   #$C,bit0                Prints AND
0000214E  6700 001E               1640          BEQ     SUBPRINTAND
00002152  0C39 000D 0000270D      1641          CMP.B   #$D,bit0                Prints ADD
0000215A  6700 0022               1642          BEQ     SUBPRINTADD
0000215E                          1643  
0000215E                          1644  SUBPRINTSUB   * Displays 'SUB.' 
0000215E  43F9 00002677           1645          LEA     MSUB,A1
00002164  103C 000E               1646          MOVE.B  #14,D0
00002168  4E4F                    1647          TRAP    #15
0000216A  6000 0022               1648          BRA     SUBPRINTEND
0000216E                          1649  
0000216E                          1650  SUBPRINTAND   * Displays 'AND.' 
0000216E  43F9 00002682           1651          LEA     MAND,A1
00002174  103C 000E               1652          MOVE.B  #14,D0
00002178  4E4F                    1653          TRAP    #15
0000217A  6000 0012               1654          BRA     SUBPRINTEND
0000217E                          1655  
0000217E                          1656  SUBPRINTADD   * Displays 'ADD.' 
0000217E  43F9 00002687           1657          LEA     MADD,A1
00002184  103C 000E               1658          MOVE.B  #14,D0
00002188  4E4F                    1659          TRAP    #15
0000218A  6000 0002               1660          BRA     SUBPRINTEND
0000218E                          1661  
0000218E                          1662  SUBPRINTEND
0000218E  4E75                    1663          RTS
00002190                          1664  
00002190                          1665  
00002190                          1666  *******************************************************************
00002190                          1667  * Error testing for DN->EA operations
00002190                          1668  *  Data register, address register, and immediate data cannot be destinations
00002190                          1669  SUBERRORTEST1
00002190                          1670          * test for DN or AN register, branches to invalid op code if true
00002190  0C39 0000 00002710      1671          CMP.B   #0,bit3
00002198  6700 0314               1672          BEQ     INVOP
0000219C  0C39 0001 00002710      1673          CMP.B   #1,bit3
000021A4  6700 0308               1674          BEQ     INVOP
000021A8                          1675          
000021A8                          1676          * check if destination is immediate data
000021A8  0C39 0007 00002710      1677          CMP.B   #7,bit3
000021B0  6600 001E               1678          BNE     SUBERRORTEST11
000021B4  0C39 0000 00002711      1679          CMP.B   #0,bit4
000021BC  6700 0012               1680          BEQ     SUBERRORTEST11
000021C0  0C39 0001 00002711      1681          CMP.B   #1,bit4
000021C8  6700 0006               1682          BEQ     SUBERRORTEST11
000021CC  6000 02E0               1683          BRA     INVOP
000021D0                          1684          
000021D0                          1685  SUBERRORTEST11
000021D0  4E75                    1686          RTS
000021D2                          1687  
000021D2                          1688  
000021D2                          1689  ******************************************************************************************************
000021D2                          1690  *   Displays data register
000021D2                          1691  SUBDN
000021D2  43F9 0000262C           1692          LEA     MDN,A1
000021D8  103C 000E               1693          MOVE.B  #14,D0
000021DC  4E4F                    1694          TRAP    #15
000021DE                          1695  
000021DE  1239 0000270E           1696          MOVE.B  bit1,D1
000021E4  103C 0003               1697          MOVE.B  #3,D0
000021E8  4E4F                    1698          TRAP    #15
000021EA                          1699          
000021EA  6000 FF4C               1700          BRA     SUBJMPA2
000021EE                          1701  
000021EE                          1702  *   Displays data register
000021EE                          1703  *   This is for Dn -> Dn cases. Source Dn uses bit4 as register instead of bit1
000021EE                          1704  SUBDN2
000021EE  43F9 0000262C           1705          LEA     MDN,A1
000021F4  103C 000E               1706          MOVE.B  #14,D0
000021F8  4E4F                    1707          TRAP    #15
000021FA                          1708  
000021FA  1239 00002711           1709          MOVE.B  bit4,D1
00002200  103C 0003               1710          MOVE.B  #3,D0
00002204  4E4F                    1711          TRAP    #15
00002206                          1712          
00002206  6000 FF30               1713          BRA     SUBJMPA2
0000220A                          1714  
0000220A                          1715  *   Displays address register
0000220A                          1716  SUBAN
0000220A  43F9 0000262E           1717          LEA     MAN,A1
00002210  103C 000E               1718          MOVE.B  #14,D0
00002214  4E4F                    1719          TRAP    #15
00002216                          1720  
00002216  1239 00002711           1721          MOVE.B  bit4,D1
0000221C  103C 0003               1722          MOVE.B  #3,D0
00002220  4E4F                    1723          TRAP    #15
00002222                          1724          
00002222  6000 FF14               1725          BRA     SUBJMPA2
00002226                          1726  
00002226                          1727  *   Displays address register
00002226                          1728  *   This is for SUBA, SUBA puts An into bit1
00002226                          1729  SUBAN2
00002226  43F9 0000262E           1730          LEA     MAN,A1
0000222C  103C 000E               1731          MOVE.B  #14,D0
00002230  4E4F                    1732          TRAP    #15
00002232                          1733  
00002232  1239 0000270E           1734          MOVE.B  bit1,D1
00002238  103C 0003               1735          MOVE.B  #3,D0
0000223C  4E4F                    1736          TRAP    #15
0000223E                          1737          
0000223E  6000 FEF8               1738          BRA     SUBJMPA2
00002242                          1739  
00002242                          1740  
00002242                          1741  *   Displays indirect address register
00002242                          1742  SUBANID
00002242  43F9 0000260B           1743          LEA     OPENBRA,A1
00002248  103C 000E               1744          MOVE.B  #14,D0
0000224C  4E4F                    1745          TRAP    #15
0000224E                          1746  
0000224E  43F9 0000262E           1747          LEA     MAN,A1
00002254  103C 000E               1748          MOVE.B  #14,D0
00002258  4E4F                    1749          TRAP    #15
0000225A                          1750  
0000225A  1239 00002711           1751          MOVE.B  bit4,D1
00002260  103C 0003               1752          MOVE.B  #3,D0
00002264  4E4F                    1753          TRAP    #15
00002266                          1754  
00002266  43F9 0000260D           1755          LEA     CLOSEBRA,A1
0000226C  103C 000E               1756          MOVE.B  #14,D0
00002270  4E4F                    1757          TRAP    #15
00002272                          1758  
00002272  6000 FEC4               1759          BRA     SUBJMPA2
00002276                          1760  
00002276                          1761  *   Displays indirect address register with post increment
00002276                          1762  SUBANIDPOS
00002276  43F9 0000260B           1763          LEA     OPENBRA,A1
0000227C  103C 000E               1764          MOVE.B  #14,D0
00002280  4E4F                    1765          TRAP    #15
00002282                          1766  
00002282  43F9 0000262E           1767          LEA     MAN,A1
00002288  103C 000E               1768          MOVE.B  #14,D0
0000228C  4E4F                    1769          TRAP    #15
0000228E                          1770  
0000228E  1239 00002711           1771          MOVE.B  bit4,D1
00002294  103C 0003               1772          MOVE.B  #3,D0
00002298  4E4F                    1773          TRAP    #15
0000229A                          1774  
0000229A  43F9 0000260D           1775          LEA     CLOSEBRA,A1
000022A0  103C 000E               1776          MOVE.B  #14,D0
000022A4  4E4F                    1777          TRAP    #15
000022A6                          1778  
000022A6  43F9 0000260F           1779          LEA     POS,A1
000022AC  103C 000E               1780          MOVE.B  #14,D0
000022B0  4E4F                    1781          TRAP    #15
000022B2                          1782  
000022B2  6000 FE84               1783          BRA     SUBJMPA2
000022B6                          1784  
000022B6                          1785  *   Displays indirect address register with pre decrement
000022B6                          1786  SUBANIDNEG
000022B6  43F9 00002611           1787          LEA     NEG,A1
000022BC  103C 000E               1788          MOVE.B  #14,D0
000022C0  4E4F                    1789          TRAP    #15
000022C2                          1790  
000022C2  43F9 0000260B           1791          LEA     OPENBRA,A1
000022C8  103C 000E               1792          MOVE.B  #14,D0
000022CC  4E4F                    1793          TRAP    #15
000022CE                          1794  
000022CE  43F9 0000262E           1795          LEA     MAN,A1
000022D4  103C 000E               1796          MOVE.B  #14,D0
000022D8  4E4F                    1797          TRAP    #15
000022DA                          1798  
000022DA  1239 00002711           1799          MOVE.B  bit4,D1
000022E0  103C 0003               1800          MOVE.B  #3,D0
000022E4  4E4F                    1801          TRAP    #15
000022E6                          1802  
000022E6  43F9 0000260D           1803          LEA     CLOSEBRA,A1
000022EC  103C 000E               1804          MOVE.B  #14,D0
000022F0  4E4F                    1805          TRAP    #15
000022F2                          1806  
000022F2  6000 FE44               1807          BRA     SUBJMPA2
000022F6                          1808  
000022F6                          1809  
000022F6                          1810  
000022F6                          1811  
000022F6                          1812  ******************************************************************************************************
000022F6                          1813  * Displays the EA as hex numbers
000022F6                          1814  * 
000022F6                          1815  SUBEA
000022F6                          1816          *   This finds which mode to use
000022F6  0C39 0000 00002710      1817          CMP.B   #$0,bit3
000022FE  6700 FEEE               1818          BEQ     SUBDN2
00002302  0C39 0001 00002710      1819          CMP.B   #$1,bit3                BYTE SIZED OPERATIONS ARE NOT ALLOWED FOR An
0000230A  6700 FEFE               1820          BEQ     SUBAN
0000230E  0C39 0002 00002710      1821          CMP.B   #$2,bit3
00002316  6700 FF2A               1822          BEQ     SUBANID
0000231A  0C39 0003 00002710      1823          CMP.B   #$3,bit3
00002322  6700 FF52               1824          BEQ     SUBANIDPOS
00002326  0C39 0004 00002710      1825          CMP.B   #$4,bit3
0000232E  6786                    1826          BEQ     SUBANIDNEG
00002330  0C39 0005 00002710      1827          CMP.B   #$5,bit3
00002338  6700 02A4               1828          BEQ     ERROR
0000233C  0C39 0006 00002710      1829          CMP.B   #$6,bit3
00002344  6700 0298               1830          BEQ     ERROR
00002348  0C39 0007 00002710      1831          CMP.B   #$7,bit3
00002350  6700 0002               1832          BEQ     SUBEAHEX
00002354                          1833  
00002354                          1834  SUBEAHEX
00002354  0C39 0004 00002711      1835          CMP.B   #$4,bit4            Branches to immediate data section of bit4 is 4
0000235C  6700 0086               1836          BEQ     SUBEAID
00002360                          1837  SUBEAID2
00002360                          1838          *   Else it will assume it is absolute addressing mode
00002360  43F9 00002621           1839          LEA     MHEX,A1
00002366  103C 000E               1840          MOVE.B  #14,D0
0000236A  4E4F                    1841          TRAP    #15
0000236C                          1842  
0000236C  0C39 0000 00002711      1843          CMP.B   #$0,bit4
00002374  6700 007E               1844          BEQ     SUBEAHEX1
00002378  0C39 0001 00002711      1845          CMP.B   #$1,bit4
00002380  6700 007A               1846          BEQ     SUBEAHEX2
00002384                          1847  
00002384  0C39 0000 0000270F      1848          CMP.B   #$0,bit2            * SUB byte displays as word
0000238C  6700 0066               1849          BEQ     SUBEAHEX1
00002390  0C39 0004 0000270F      1850          CMP.B   #$4,bit2            * SUB byte displays as word
00002398  6700 005A               1851          BEQ     SUBEAHEX1
0000239C  0C39 0001 0000270F      1852          CMP.B   #$1,bit2            * SUB word
000023A4  6700 004E               1853          BEQ     SUBEAHEX1
000023A8  0C39 0005 0000270F      1854          CMP.B   #$5,bit2            * SUB word
000023B0  6700 0042               1855          BEQ     SUBEAHEX1
000023B4  0C39 0003 0000270F      1856          CMP.B   #$3,bit2            * SUBA word
000023BC  6700 0036               1857          BEQ     SUBEAHEX1
000023C0  0C39 0002 0000270F      1858          CMP.B   #$2,bit2            * SUB longword
000023C8  6700 0032               1859          BEQ     SUBEAHEX2
000023CC  0C39 0006 0000270F      1860          CMP.B   #$6,bit2            * SUB longword
000023D4  6700 0026               1861          BEQ     SUBEAHEX2
000023D8  0C39 0007 0000270F      1862          CMP.B   #$7,bit2            * SUBA longword
000023E0  6700 001A               1863          BEQ     SUBEAHEX2
000023E4                          1864  
000023E4                          1865  SUBEAID
000023E4  43F9 00002613           1866          LEA     HASH,A1
000023EA  103C 000E               1867          MOVE.B  #14,D0
000023EE  4E4F                    1868          TRAP    #15
000023F0  6000 FF6E               1869          BRA     SUBEAID2
000023F4                          1870  
000023F4                          1871  SUBEAHEX1  
000023F4                          1872          *absolute address word
000023F4  1E3C 0002               1873          MOVE.B  #2,D7
000023F8  6000 000A               1874          BRA     SUBEAHEX3
000023FC                          1875  
000023FC                          1876  SUBEAHEX2  *absolute address long
000023FC  1E3C 0004               1877          MOVE.B  #4,D7
00002400  6000 0002               1878          BRA     SUBEAHEX3
00002404                          1879  
00002404                          1880  SUBEAHEX3
00002404  BE3C 0000               1881          CMP.B   #0,D7               Compares current addr to ending addr
00002408  6700 FD2E               1882          BEQ     SUBJMPA2            Branches to done if they are equal
0000240C                          1883  
0000240C                          1884      
0000240C  141E                    1885          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
0000240E                          1886          
0000240E  1602                    1887          MOVE.B  D2,D3               Copies data at D2 to D3
00002410                          1888          *   this gets digit in 10's place
00002410  E80B                    1889          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002412                          1890          *   this gets digit in 1's place
00002412  E90A                    1891          LSL.B   #4,D2               Shifts left to get rid of 10's place
00002414  E80A                    1892          LSR.B   #4,D2               Shifts back right into 1's place
00002416                          1893  
00002416                          1894          
00002416                          1895          *   D3 holds digit in 10's place
00002416                          1896          *   D2 holds digit in 1's place
00002416                          1897          
00002416  1203                    1898          MOVE.B  D3,D1               Displays digit in 10's place first
00002418                          1899  
00002418                          1900          *   converts digits 10+ into letters
00002418                          1901  
00002418  47F9 0000242C           1902          LEA     SUBEAHEX4,A3        Place address of TENS into A3 to continue from there after conversion
0000241E  B23C 0009               1903          CMP.B   #9,D1               Compares digit to 9
00002422  6E00 0146               1904          BGT     CONV                Print out letter representation if greater than 9
00002426                          1905  
00002426  103C 0003               1906          MOVE.B  #3,D0               Displays digit if it is less than A
0000242A  4E4F                    1907          TRAP    #15
0000242C                          1908          
0000242C                          1909  SUBEAHEX4    
0000242C  1202                    1910          MOVE.B  D2,D1               Displays digit in 1's place second
0000242E                          1911  
0000242E                          1912          *   converts digits 10+ into letters
0000242E  47F9 00002442           1913          LEA     SUBEAHEX5,A3           Places address of NEXT into A3 to continue from there after conversion
00002434  B23C 0009               1914          CMP.B   #9,D1               Compares digit to 9
00002438  6E00 0130               1915          BGT     CONV                Print out letter representation if greater than 9
0000243C                          1916          
0000243C  103C 0003               1917          MOVE.B  #3,D0               Displays digit if it is less than A
00002440  4E4F                    1918          TRAP    #15
00002442                          1919          
00002442                          1920  SUBEAHEX5         
00002442                          1921  * Display counter -- creates new line every 8 bytes
00002442                          1922          * D7 is used as counter
00002442                          1923          
00002442  5307                    1924          SUB.B   #1,D7                       
00002444  60BE                    1925          BRA     SUBEAHEX3              Loops back to display next address
00002446                          1926  
00002446                          1927  ***   display EA ends here
00002446                          1928  
00002446                          1929  ******************************************************************************************************
00002446                          1930  * Displays the EA as hex numbers
00002446                          1931  * INPUT: Size of EA in D4; 1 = word, 2 = longword
00002446                          1932  * OUTPUT: Displays size of EA reading from A6
00002446                          1933  * Jumps to location stored in A2 when finished
00002446                          1934  DISPEA
00002446  43F9 00002621           1935          LEA     MHEX,A1
0000244C  103C 000E               1936          MOVE.B  #14,D0
00002450  4E4F                    1937          TRAP    #15
00002452                          1938  
00002452  B83C 0002               1939          CMP.B   #$2,D4              Branches to longword display if size is 2
00002456  6700 000A               1940          BEQ     DISPEALONG          Else it will assume word length
0000245A                          1941  
0000245A                          1942  DISPEAWORD
0000245A                          1943          *absolute address word
0000245A  1E3C 0002               1944          MOVE.B  #2,D7
0000245E  6000 000A               1945          BRA     DISPEA3
00002462                          1946   
00002462                          1947  DISPEALONG
00002462                          1948          *absolute address long
00002462  1E3C 0004               1949          MOVE.B  #4,D7
00002466  6000 0002               1950          BRA     DISPEA3
0000246A                          1951  
0000246A                          1952  DISPEA3
0000246A  BE3C 0000               1953          CMP.B   #0,D7               Compares current addr to ending addr
0000246E  6700 FCC8               1954          BEQ     SUBJMPA2            Branches to done if they are equal
00002472                          1955  
00002472                          1956      
00002472  141E                    1957          MOVE.B  (A6)+,D2            Moves data at current address to D1, then increments
00002474                          1958          
00002474  1602                    1959          MOVE.B  D2,D3               Copies data at D2 to D3
00002476                          1960          *   this gets digit in 10's place
00002476  E80B                    1961          LSR.B   #4,D3               Shifts right to get rid of 1's place
00002478                          1962          *   this gets digit in 1's place
00002478  E90A                    1963          LSL.B   #4,D2               Shifts left to get rid of 10's place
0000247A  E80A                    1964          LSR.B   #4,D2               Shifts back right into 1's place
0000247C                          1965  
0000247C                          1966          
0000247C                          1967          *   D3 holds digit in 10's place
0000247C                          1968          *   D2 holds digit in 1's place
0000247C                          1969          
0000247C  1203                    1970          MOVE.B  D3,D1               Displays digit in 10's place first
0000247E                          1971  
0000247E                          1972          *   converts digits 10+ into letters
0000247E                          1973  
0000247E  47F9 00002492           1974          LEA     DISPEA4,A3        Place address of TENS into A3 to continue from there after conversion
00002484  B23C 0009               1975          CMP.B   #9,D1               Compares digit to 9
00002488  6E00 00E0               1976          BGT     CONV                Print out letter representation if greater than 9
0000248C                          1977  
0000248C  103C 0003               1978          MOVE.B  #3,D0               Displays digit if it is less than A
00002490  4E4F                    1979          TRAP    #15
00002492                          1980    
00002492                          1981  DISPEA4
00002492  1202                    1982          MOVE.B  D2,D1               Displays digit in 1's place second
00002494                          1983  
00002494                          1984          *   converts digits 10+ into letters
00002494  47F9 000024A8           1985          LEA     DISPEA5,A3           Places address of NEXT into A3 to continue from there after conversion
0000249A  B23C 0009               1986          CMP.B   #9,D1               Compares digit to 9
0000249E  6E00 00CA               1987          BGT     CONV                Print out letter representation if greater than 9
000024A2                          1988          
000024A2  103C 0003               1989          MOVE.B  #3,D0               Displays digit if it is less than A
000024A6  4E4F                    1990          TRAP    #15
000024A8                          1991        
000024A8                          1992  DISPEA5
000024A8                          1993  * Display counter -- creates new line every 8 bytes
000024A8                          1994          * D7 is used as counter
000024A8                          1995          
000024A8  5307                    1996          SUB.B   #1,D7                       
000024AA  60BE                    1997          BRA     DISPEA3              Loops back to display next address
000024AC                          1998  
000024AC                          1999  ***   display EA ends here
000024AC                          2000  
000024AC                          2001  
000024AC                          2002  ********************************************************************
000024AC                          2003  * Invalid op-code handling
000024AC                          2004  * Displays DATA YYYY
000024AC                          2005  *  YYYY represents the op-code that failed
000024AC                          2006  INVOPCODE
000024AC  DE1E                    2007          ADD.B   (A6)+,D7
000024AE                          2008  
000024AE                          2009  INVOP
000024AE  43F9 00002672           2010          LEA     MDATA,A1
000024B4  103C 000E               2011          MOVE.B  #14,D0
000024B8  4E4F                    2012          TRAP    #15
000024BA  43F9 00002605           2013          LEA     TAB,A1
000024C0  103C 000E               2014          MOVE.B  #14,D0
000024C4  4E4F                    2015          TRAP    #15
000024C6  43F9 00002621           2016          LEA     MHEX,A1
000024CC  103C 000E               2017          MOVE.B  #14,D0
000024D0  4E4F                    2018          TRAP    #15
000024D2                          2019          
000024D2  1C3C 0002               2020          MOVE.B  #2,D6               D6 is a counter, used to know loop back once
000024D6                          2021          
000024D6  3407                    2022          MOVE.W  D7,D2               Copies opcode saved in D2 to D7
000024D8  E04A                    2023          LSR.W   #8,D2               Shifts D2 right 8 spaces to get the first byte of the word
000024DA  6000 0004               2024          BRA     INVOP2              Skips the second part to do later
000024DE                          2025  
000024DE                          2026  INVOP1
000024DE  1407                    2027          MOVE.B  D7,D2
000024E0                          2028  INVOP2
000024E0  1602                    2029          MOVE.B  D2,D3               Copies data at D2 to D3
000024E2                          2030          *   this gets digit in 10's place
000024E2  E80B                    2031          LSR.B   #4,D3               Shifts right to get rid of 1's place
000024E4                          2032          *   this gets digit in 1's place
000024E4  E90A                    2033          LSL.B   #4,D2               Shifts left to get rid of 10's place
000024E6  E80A                    2034          LSR.B   #4,D2               Shifts back right into 1's place
000024E8                          2035  
000024E8                          2036          
000024E8                          2037          *   D3 holds digit in 10's place
000024E8                          2038          *   D2 holds digit in 1's place
000024E8                          2039          
000024E8  1203                    2040          MOVE.B  D3,D1               Displays digit in 10's place first
000024EA                          2041  
000024EA                          2042          *   converts digits 10+ into letters
000024EA                          2043  
000024EA  47F9 000024FE           2044          LEA     INVOP3,A3        Place address of TENS into A3 to continue from there after conversion
000024F0  B23C 0009               2045          CMP.B   #9,D1               Compares digit to 9
000024F4  6E00 0074               2046          BGT     CONV                Print out letter representation if greater than 9
000024F8                          2047  
000024F8  103C 0003               2048          MOVE.B  #3,D0               Displays digit if it is less than A
000024FC  4E4F                    2049          TRAP    #15
000024FE                          2050          
000024FE                          2051  INVOP3   
000024FE  1202                    2052          MOVE.B  D2,D1               Displays digit in 1's place second
00002500                          2053  
00002500                          2054          *   converts digits 10+ into letters
00002500  47F9 00002514           2055          LEA     INVOP4,A3           Places address of NEXT into A3 to continue from there after conversion
00002506  B23C 0009               2056          CMP.B   #9,D1               Compares digit to 9
0000250A  6E00 005E               2057          BGT     CONV                Print out letter representation if greater than 9
0000250E                          2058          
0000250E  103C 0003               2059          MOVE.B  #3,D0               Displays digit if it is less than A
00002512  4E4F                    2060          TRAP    #15
00002514                          2061          
00002514                          2062  INVOP4
00002514                          2063  * Display counter -- creates new line every 8 bytes
00002514                          2064          * D6 is used as counter
00002514                          2065          
00002514  5306                    2066          SUB.B   #1,D6
00002516  BC3C 0000               2067          CMP.B   #0,D6
0000251A  6700 0004               2068          BEQ     ENDNEWLINE
0000251E  60BE                    2069          BRA     INVOP1              Loops back to display next address
00002520                          2070  
00002520                          2071  
00002520                          2072  ******************************************************************************************************
00002520                          2073  * Creates a new line after an op-code is displayed, loops back to start to display next code
00002520                          2074  ENDNEWLINE
00002520  43F9 00002602           2075          LEA     NEWLINE,A1          Creates a new line in output window
00002526  103C 000E               2076          MOVE.B  #14,D0
0000252A  4E4F                    2077          TRAP    #15
0000252C                          2078  
0000252C  5339 0000270C           2079          SUB.B   #1,dispcount
00002532  0C39 0000 0000270C      2080          CMP.B   #0,dispcount               Checks if display counter is zero
0000253A  6600 EAD8               2081          BNE     NEWADDR
0000253E                          2082  
0000253E                          2083  * Asks user to press enter to continue
0000253E                          2084  * Resets counter
0000253E  43F9 00002602           2085          LEA     NEWLINE,A1          Creates a new line in output window
00002544  103C 000E               2086          MOVE.B  #14,D0
00002548  4E4F                    2087          TRAP    #15
0000254A                          2088          
0000254A  43F9 000026F0           2089          LEA     MCONT,A1            Asks user to press enter to continue
00002550  103C 000E               2090          MOVE.B  #14,D0
00002554  4E4F                    2091          TRAP    #15
00002556                          2092  
00002556  103C 0004               2093          MOVE.B  #4,D0               Takes in user input
0000255A  4E4F                    2094          TRAP    #15
0000255C  4281                    2095          CLR.L   D1                  Clears D1 incase user decides to input something
0000255E                          2096  
0000255E  13FC 001E 0000270C      2097          MOVE.B  #dispnum,dispcount  Resets display counter
00002566  6000 EAAC               2098          BRA     NEWADDR             Loops back to beginning
0000256A                          2099  
0000256A                          2100  
0000256A                          2101  ******************************************************************************************************
0000256A                          2102  * Converts decimal number into hex and displays it
0000256A                          2103  *   converts number 10-15 to A-F
0000256A                          2104  *   INPUT: decimal number in D1
0000256A                          2105  *   OUTPUT: HEX number to output
0000256A  B23C 000A               2106  CONV    CMP.B   #10,D1              Displays 10 as A
0000256E  6700 002A               2107          BEQ     HEXA
00002572  B23C 000B               2108          CMP.B   #11,D1              Displays 11 as B
00002576  6700 002C               2109          BEQ     HEXB
0000257A  B23C 000C               2110          CMP.B   #12,D1              Displays 12 as C
0000257E  6700 002E               2111          BEQ     HEXC
00002582  B23C 000D               2112          CMP.B   #13,D1              Displays 13 as D
00002586  6700 0030               2113          BEQ     HEXD
0000258A  B23C 000E               2114          CMP.B   #14,D1              Displays 14 as E
0000258E  6700 0032               2115          BEQ     HEXE
00002592  B23C 000F               2116          CMP.B   #15,D1              Displays 15 as F
00002596  6700 0034               2117          BEQ     HEXF
0000259A                          2118  
0000259A  43F9 00002615           2119  HEXA    LEA     DISPA,A1            Loads A character
000025A0  6000 0034               2120          BRA     PRINT
000025A4                          2121    
000025A4  43F9 00002617           2122  HEXB    LEA     DISPB,A1            Loads B character
000025AA  6000 002A               2123          BRA     PRINT
000025AE                          2124  
000025AE  43F9 00002619           2125  HEXC    LEA     DISPC,A1            Loads C character
000025B4  6000 0020               2126          BRA     PRINT
000025B8                          2127  
000025B8  43F9 0000261B           2128  HEXD    LEA     DISPD,A1            Loads D character
000025BE  6000 0016               2129          BRA     PRINT
000025C2                          2130  
000025C2  43F9 0000261D           2131  HEXE    LEA     DISPE,A1            Loads E character
000025C8  6000 000C               2132          BRA     PRINT
000025CC                          2133  
000025CC  43F9 0000261F           2134  HEXF    LEA     DISPF,A1            Loads F character
000025D2  6000 0002               2135          BRA     PRINT
000025D6                          2136  
000025D6  103C 000E               2137  PRINT   MOVE.B  #14,D0              Sets trap task to #14
000025DA  4E4F                    2138          TRAP    #15                 Prints out message in A1
000025DC  4ED3                    2139          JMP     (A3)
000025DE                          2140  
000025DE  43F9 000026BE           2141  ERROR   LEA     MERROR,A1
000025E4  103C 000E               2142          MOVE.B  #14,D0
000025E8  4E4F                    2143          TRAP    #15
000025EA  6000 000E               2144          BRA     EXIT
000025EE                          2145  
000025EE  43F9 000026D5           2146  DONE    LEA     MDONE,A1
000025F4  103C 000E               2147          MOVE.B  #14,D0
000025F8  4E4F                    2148          TRAP    #15
000025FA                          2149  
000025FA  103C 0009               2150  EXIT    MOVE.B  #9,D0
000025FE  4E4F                    2151          TRAP    #15
00002600                          2152  
00002600                          2153  ************************************ Output stuff **************************************
00002600                          2154  * Stuff for output
00002600                          2155  
00002600  =0000000D               2156  CR      EQU     $0D
00002600  =0000000A               2157  LF      EQU     $0A
00002600                          2158  
00002600= 20 00                   2159  SPACE       DC.B    ' ',0
00002602= 0D 0A 00                2160  NEWLINE     DC.B    '',CR,LF,0
00002605= 20 20 20 00             2161  TAB         DC.B    '   ',0
00002609= 2C 00                   2162  COMMA       DC.B    ',',0
0000260B= 28 00                   2163  OPENBRA     DC.B    '(',0
0000260D= 29 00                   2164  CLOSEBRA    DC.B    ')',0
0000260F= 2B 00                   2165  POS         DC.B    '+',0
00002611= 2D 00                   2166  NEG         DC.B    '-',0
00002613= 23 00                   2167  HASH        DC.B    '#',0
00002615                          2168  
00002615                          2169  
00002615= 41 00                   2170  DISPA       DC.B    'A',0
00002617= 42 00                   2171  DISPB       DC.B    'B',0
00002619= 43 00                   2172  DISPC       DC.B    'C',0
0000261B= 44 00                   2173  DISPD       DC.B    'D',0
0000261D= 45 00                   2174  DISPE       DC.B    'E',0
0000261F= 46 00                   2175  DISPF       DC.B    'F',0
00002621                          2176  
00002621= 24 00                   2177  MHEX        DC.B    '$',0
00002623= 42 20 00                2178  MBYTE       DC.B    'B ',0
00002626= 57 20 00                2179  MWORD       DC.B    'W ',0
00002629= 4C 20 00                2180  MLONG       DC.B    'L ',0
0000262C= 44 00                   2181  MDN         DC.B    'D',0
0000262E= 41 00                   2182  MAN         DC.B    'A',0
00002630                          2183  
00002630= 4C 53 4C 2E 00          2184  MLSL        DC.B    'LSL.',0
00002635= 4C 53 52 2E 00          2185  MLSR        DC.B    'LSR.',0
0000263A= 4E 45 47 2E 00          2186  MMNEGW      DC.B    'NEG.',0
0000263F= 44 49 56 53 2E 57 00    2187  MMDIVSW     DC.B    'DIVS.W',0
00002646= 4D 55 4C 53 2E 57 00    2188  MMULSW      DC.B    'MULS.W',0
0000264D= 4D 4F 56 45 2E 42 00    2189  MMOVEB      DC.B    'MOVE.B',0
00002654= 4D 4F 56 45 2E 57 00    2190  MMOVEW      DC.B    'MOVE.W',0
0000265B= 4D 4F 56 45 2E 4C 00    2191  MMOVEL      DC.B    'MOVE.L',0
00002662= 4D 4F 56 45 41 2E ...   2192  MMOVEAW     DC.B    'MOVEA.W',0
0000266A= 4D 4F 56 45 41 2E ...   2193  MMOVEAL     DC.B    'MOVEA.L',0
00002672                          2194  
00002672= 44 41 54 41 00          2195  MDATA       DC.B    'DATA',0
00002677= 53 55 42 2E 00          2196  MSUB        DC.B    'SUB.',0
0000267C= 53 55 42 41 2E 00       2197  MSUBA       DC.B    'SUBA.',0
00002682= 41 4E 44 2E 00          2198  MAND        DC.B    'AND.',0
00002687= 41 44 44 2E 00          2199  MADD        DC.B    'ADD.',0
0000268C= 53 55 42 49 2E 00       2200  MSUBI       DC.B    'SUBI.',0
00002692= 4F 52 49 2E 00          2201  MORI        DC.B    'ORI.',0
00002697= 4E 4F 54 2E 00          2202  MNOT        DC.B    'NOT.',0
0000269C= 4D 55 4C 53 2E 00       2203  MMUL        DC.B    'MULS.',0
000026A2= 4E 45 47 00             2204  MNEG        DC.B    'NEG',0
000026A6                          2205  
000026A6= 42 45 51 00             2206  MBEQ        DC.B    'BEQ',0
000026AA= 42 4E 45 00             2207  MBNE        DC.B    'BNE',0
000026AE= 42 4C 54 00             2208  MBLT        DC.B    'BLT',0
000026B2= 42 48 49 00             2209  MBHI        DC.B    'BHI',0
000026B6= 42 48 49 00             2210  MBRA        DC.B    'BHI',0
000026BA= 4E 4F 50 00             2211  MNOP        DC.B    'NOP',0
000026BE                          2212  
000026BE= 45 52 52 4F 52 3A ...   2213  MERROR      DC.B    'ERROR: Something broke',0
000026D5= 43 4F 4D 50 4C 45 ...   2214  MDONE       DC.B    'COMPLETE: IT DID NOT CRASH',0
000026F0= 2A 2A 50 52 45 53 ...   2215  MCONT       DC.B    '**PRESS ENTER TO CONTINUE**',0
0000270C                          2216  
0000270C                          2217  
0000270C                          2218  ********************************** MEMORY STORAGE **********************************************
0000270C                          2219  * Stores memory locations at the end of the program
0000270C                          2220  * How DS works: Give it a variable name.
0000270C                          2221  *   DS means Define Storage. Give it a size of how big you want the storage to be (Byte, Word, Longword)
0000270C                          2222  *   Last is the number of storage you want. 
0000270C                          2223  *   Example: DS.W   1   This creates a 1 longword location to be used. Memory would look like: FF FF
0000270C                          2224  *            DS.B   3   This creates three byte-sized locations to be used. Memory would look like: FF FF FF
0000270C                          2225  *            
0000270C                          2226  
0000270C                          2227  dispcount   DS.B    1           Used to count display lines
0000270D                          2228  
0000270D                          2229  bit0        DS.B    1           SEE NOTE UP TOP
0000270E                          2230  bit1        DS.B    1           SEE NOTE UP TOP
0000270F                          2231  bit2        DS.B    1           SEE NOTE UP TOP
00002710                          2232  bit3        DS.B    1           SEE NOTE UP TOP
00002711                          2233  bit4        DS.B    1           SEE NOTE UP TOP
00002712                          2234  
00002712                          2235  
00002712                          2236      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDIMD              1384
ADDIMD0             13A8
ADDIMD1             13A8
ADDIMD3             13A8
ADDR1               7000
ADDR2               726C
BCC                 1B72
BCCBEQ              1BEE
BCCBHI              1C0C
BCCBLT              1C02
BCCBNE              1BF8
BCCBRA              1BE4
BCCDISP             1BB8
BCCLONG             1BA0
BCCNEXT             1BA8
BCCPRINT            1C16
BCCWORD             1B98
BIT0                270D
BIT1                270E
BIT2                270F
BIT3                2710
BIT4                2711
CLOSEBRA            260D
CODE                10E8
COMMA               2609
CONV                256A
CR                  D
DISPA               2615
DISPADDR1           1032
DISPADDR2           1034
DISPADDR3           1068
DISPADDR4           107E
DISPADDR5           1094
DISPADDR6           10AA
DISPADDREND         10B4
DISPADDRSTART       1026
DISPB               2617
DISPC               2619
DISPCOUNT           270C
DISPD               261B
DISPE               261D
DISPEA              2446
DISPEA3             246A
DISPEA4             2492
DISPEA5             24A8
DISPEALONG          2462
DISPEAWORD          245A
DISPF               261F
DISPNUM             1E
DIVSW               182A
DONE                25EE
ENDNEWLINE          2520
ENDNLINC            179C
ERROR               25DE
EXIT                25FA
HASH                2613
HEXA                259A
HEXB                25A4
HEXC                25AE
HEXD                25B8
HEXE                25C2
HEXF                25CC
IMD                 1C26
IMD2                1C40
IMD3                1C48
IMD4                1C54
IMDBYTE             1CC2
IMDEA               1CEA
IMDEA2              1D06
IMDEA3              1D1C
IMDLONG             1CE0
IMDPRINT            1C8E
IMDPRINTEND         1CBA
IMDPRINTORI         1CA6
IMDPRINTSUBI        1CB0
IMDWORD             1CD2
INVOP               24AE
INVOP1              24DE
INVOP2              24E0
INVOP3              24FE
INVOP4              2514
INVOPCODE           24AC
LF                  A
LSLR                1A0E
LSLRDESD            168C
LSLRSRCD            1664
MADD                2687
MAN                 262E
MAND                2682
MBEQ                26A6
MBHI                26B2
MBLT                26AE
MBNE                26AA
MBRA                26B6
MBYTE               2623
MCONT               26F0
MDATA               2672
MDN                 262C
MDONE               26D5
MERROR              26BE
MHEX                2621
MISC                1D20
MISCBIT2            1D4E
MISCBIT3            1D5A
MISCBYTE            1DC0
MISCEA              1DEE
MISCEA2             1E0A
MISCLONG            1DE2
MISCNOP             1D66
MISCNOT             1D76
MISCNOT2            1D7E
MISCNOT3            1D86
MISCNOT4            1D92
MISCPRINT           1E0E
MISCPRINTEND        1E3A
MISCPRINTNEG        1E30
MISCPRINTNOT        1E26
MISCWORD            1DD2
MLONG               2629
MLSL                2630
MLSR                2635
MMDIVSW             263F
MMNEGW              263A
MMOVEAL             266A
MMOVEAW             2662
MMOVEB              264D
MMOVEL              265B
MMOVEW              2654
MMUL                269C
MMULSW              2646
MNEG                26A2
MNOP                26BA
MNOT                2697
MORI                2692
MOVB                1304
MOVBDN1             15D8
MOVBDN2             1778
MOVEAL              12B0
MOVEAN1             13A8
MOVEAN2             16A8
MOVEAW              11D0
MOVEIAN1            141C
MOVEIAND1           1540
MOVEIANI1           14A8
MOVIAN2             16C4
MOVIAND2            1738
MOVIANI2            16F8
MOVL                1224
MOVW                1144
MSUB                2677
MSUBA               267C
MSUBI               268C
MULSW               17A0
MWORD               2626
NEG                 2611
NEGW                18B8
NEWADDR             1014
NEWLINE             2602
OPENBRA             260B
POS                 260F
PRINT               25D6
PRINTB              1A96
PRINTBYTE           1912
PRINTL              1AE6
PRINTLONG           19BA
PRINTLSL            1A66
PRINTLSLRCOUNT      1B0E
PRINTLSR            1B42
PRINTW              1ABE
PRINTWORD           1966
SPACE               2600
START               1000
SUB                 1E42
SUB1                1E74
SUB2                1E56
SUB3                1E5E
SUB4                1E68
SUBA                20A0
SUBACHECK           1EB0
SUBAN               220A
SUBAN2              2226
SUBANID             2242
SUBANIDNEG          22B6
SUBANIDPOS          2276
SUBDN               21D2
SUBDN2              21EE
SUBEA               22F6
SUBEAHEX            2354
SUBEAHEX1           23F4
SUBEAHEX2           23FC
SUBEAHEX3           2404
SUBEAHEX4           242C
SUBEAHEX5           2442
SUBEAID             23E4
SUBEAID2            2360
SUBERRORTEST1       2190
SUBERRORTEST11      21D0
SUBJMPA2            2138
SUBPRINT            213A
SUBPRINTADD         217E
SUBPRINTAND         216E
SUBPRINTEND         218E
SUBPRINTSUB         215E
SUBSIZE1            1F10
SUBSIZE11           1F36
SUBSIZE12           1F4C
SUBSIZE2            1F50
SUBSIZE21           1F76
SUBSIZE22           1F8C
SUBSIZE3            1F90
SUBSIZE31           1FB6
SUBSIZE32           1FCC
SUBSIZE4            1FD0
SUBSIZE41           1FFA
SUBSIZE42           2010
SUBSIZE5            2014
SUBSIZE51           203E
SUBSIZE52           2054
SUBSIZE6            2058
SUBSIZE61           2086
SUBSIZE62           209C
SUBSIZE7            20C4
SUBSIZE71           20E6
SUBSIZE72           20FC
SUBSIZE8            2100
SUBSIZE81           2120
SUBSIZE82           2134
TAB                 2605
